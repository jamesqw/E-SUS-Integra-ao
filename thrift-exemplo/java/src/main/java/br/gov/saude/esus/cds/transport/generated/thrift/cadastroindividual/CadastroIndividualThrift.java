/**
 * Autogenerated by Thrift Compiler (0.9.2)
 *
 * DO NOT EDIT UNLESS YOU ARE SURE THAT YOU KNOW WHAT YOU ARE DOING
 *  @generated
 */
package br.gov.saude.esus.cds.transport.generated.thrift.cadastroindividual;

import org.apache.thrift.scheme.IScheme;
import org.apache.thrift.scheme.SchemeFactory;
import org.apache.thrift.scheme.StandardScheme;

import org.apache.thrift.scheme.TupleScheme;
import org.apache.thrift.protocol.TTupleProtocol;
import org.apache.thrift.protocol.TProtocolException;
import org.apache.thrift.EncodingUtils;
import org.apache.thrift.TException;
import org.apache.thrift.async.AsyncMethodCallback;
import org.apache.thrift.server.AbstractNonblockingServer.*;
import java.util.List;
import java.util.ArrayList;
import java.util.Map;
import java.util.HashMap;
import java.util.EnumMap;
import java.util.Set;
import java.util.HashSet;
import java.util.EnumSet;
import java.util.Collections;
import java.util.BitSet;
import java.nio.ByteBuffer;
import java.util.Arrays;
import javax.annotation.Generated;
import org.slf4j.Logger;
import org.slf4j.LoggerFactory;

@SuppressWarnings({"cast", "rawtypes", "serial", "unchecked"})
@Generated(value = "Autogenerated by Thrift Compiler (0.9.2)", date = "2015-8-12")
public class CadastroIndividualThrift implements org.apache.thrift.TBase<CadastroIndividualThrift, CadastroIndividualThrift._Fields>, java.io.Serializable, Cloneable, Comparable<CadastroIndividualThrift> {
  private static final org.apache.thrift.protocol.TStruct STRUCT_DESC = new org.apache.thrift.protocol.TStruct("CadastroIndividualThrift");

  private static final org.apache.thrift.protocol.TField CONDICOES_DE_SAUDE_FIELD_DESC = new org.apache.thrift.protocol.TField("condicoesDeSaude", org.apache.thrift.protocol.TType.STRUCT, (short)1);
  private static final org.apache.thrift.protocol.TField DADOS_GERAIS_FIELD_DESC = new org.apache.thrift.protocol.TField("dadosGerais", org.apache.thrift.protocol.TType.STRUCT, (short)2);
  private static final org.apache.thrift.protocol.TField EM_SITUACAO_DE_RUA_FIELD_DESC = new org.apache.thrift.protocol.TField("emSituacaoDeRua", org.apache.thrift.protocol.TType.STRUCT, (short)3);
  private static final org.apache.thrift.protocol.TField FICHA_ATUALIZADA_FIELD_DESC = new org.apache.thrift.protocol.TField("fichaAtualizada", org.apache.thrift.protocol.TType.BOOL, (short)4);
  private static final org.apache.thrift.protocol.TField IDENTIFICACAO_USUARIO_CIDADAO_FIELD_DESC = new org.apache.thrift.protocol.TField("identificacaoUsuarioCidadao", org.apache.thrift.protocol.TType.STRUCT, (short)5);
  private static final org.apache.thrift.protocol.TField INFORMACOES_SOCIO_DEMOGRAFICAS_FIELD_DESC = new org.apache.thrift.protocol.TField("informacoesSocioDemograficas", org.apache.thrift.protocol.TType.STRUCT, (short)6);
  private static final org.apache.thrift.protocol.TField STATUS_TERMO_RECUSA_CADASTRO_INDIVIDUAL_ATENCAO_BASICA_FIELD_DESC = new org.apache.thrift.protocol.TField("statusTermoRecusaCadastroIndividualAtencaoBasica", org.apache.thrift.protocol.TType.BOOL, (short)7);
  private static final org.apache.thrift.protocol.TField TP_CDS_ORIGEM_FIELD_DESC = new org.apache.thrift.protocol.TField("tpCdsOrigem", org.apache.thrift.protocol.TType.I32, (short)8);
  private static final org.apache.thrift.protocol.TField UUID_FIELD_DESC = new org.apache.thrift.protocol.TField("uuid", org.apache.thrift.protocol.TType.STRING, (short)9);
  private static final org.apache.thrift.protocol.TField UUID_FICHA_ORIGINADORA_FIELD_DESC = new org.apache.thrift.protocol.TField("uuidFichaOriginadora", org.apache.thrift.protocol.TType.STRING, (short)10);
  private static final org.apache.thrift.protocol.TField UUID_CIDADAO_FIELD_DESC = new org.apache.thrift.protocol.TField("uuidCidadao", org.apache.thrift.protocol.TType.STRING, (short)11);

  private static final Map<Class<? extends IScheme>, SchemeFactory> schemes = new HashMap<Class<? extends IScheme>, SchemeFactory>();
  static {
    schemes.put(StandardScheme.class, new CadastroIndividualThriftStandardSchemeFactory());
    schemes.put(TupleScheme.class, new CadastroIndividualThriftTupleSchemeFactory());
  }

  private CondicoesDeSaudeThrift condicoesDeSaude; // optional
  private br.gov.saude.esus.cds.transport.generated.thrift.common.HeaderCdsCadastroThrift dadosGerais; // required
  private EmSituacaoDeRuaThrift emSituacaoDeRua; // optional
  private boolean fichaAtualizada; // optional
  private IdentificacaoUsuarioCidadaoThrift identificacaoUsuarioCidadao; // optional
  private InformacoesSocioDemograficasThrift informacoesSocioDemograficas; // optional
  private boolean statusTermoRecusaCadastroIndividualAtencaoBasica; // optional
  private int tpCdsOrigem; // optional
  private String uuid; // required
  private String uuidFichaOriginadora; // optional
  private String uuidCidadao; // optional

  /** The set of fields this struct contains, along with convenience methods for finding and manipulating them. */
  public enum _Fields implements org.apache.thrift.TFieldIdEnum {
    CONDICOES_DE_SAUDE((short)1, "condicoesDeSaude"),
    DADOS_GERAIS((short)2, "dadosGerais"),
    EM_SITUACAO_DE_RUA((short)3, "emSituacaoDeRua"),
    FICHA_ATUALIZADA((short)4, "fichaAtualizada"),
    IDENTIFICACAO_USUARIO_CIDADAO((short)5, "identificacaoUsuarioCidadao"),
    INFORMACOES_SOCIO_DEMOGRAFICAS((short)6, "informacoesSocioDemograficas"),
    STATUS_TERMO_RECUSA_CADASTRO_INDIVIDUAL_ATENCAO_BASICA((short)7, "statusTermoRecusaCadastroIndividualAtencaoBasica"),
    TP_CDS_ORIGEM((short)8, "tpCdsOrigem"),
    UUID((short)9, "uuid"),
    UUID_FICHA_ORIGINADORA((short)10, "uuidFichaOriginadora"),
    UUID_CIDADAO((short)11, "uuidCidadao");

    private static final Map<String, _Fields> byName = new HashMap<String, _Fields>();

    static {
      for (_Fields field : EnumSet.allOf(_Fields.class)) {
        byName.put(field.getFieldName(), field);
      }
    }

    /**
     * Find the _Fields constant that matches fieldId, or null if its not found.
     */
    public static _Fields findByThriftId(int fieldId) {
      switch(fieldId) {
        case 1: // CONDICOES_DE_SAUDE
          return CONDICOES_DE_SAUDE;
        case 2: // DADOS_GERAIS
          return DADOS_GERAIS;
        case 3: // EM_SITUACAO_DE_RUA
          return EM_SITUACAO_DE_RUA;
        case 4: // FICHA_ATUALIZADA
          return FICHA_ATUALIZADA;
        case 5: // IDENTIFICACAO_USUARIO_CIDADAO
          return IDENTIFICACAO_USUARIO_CIDADAO;
        case 6: // INFORMACOES_SOCIO_DEMOGRAFICAS
          return INFORMACOES_SOCIO_DEMOGRAFICAS;
        case 7: // STATUS_TERMO_RECUSA_CADASTRO_INDIVIDUAL_ATENCAO_BASICA
          return STATUS_TERMO_RECUSA_CADASTRO_INDIVIDUAL_ATENCAO_BASICA;
        case 8: // TP_CDS_ORIGEM
          return TP_CDS_ORIGEM;
        case 9: // UUID
          return UUID;
        case 10: // UUID_FICHA_ORIGINADORA
          return UUID_FICHA_ORIGINADORA;
        case 11: // UUID_CIDADAO
          return UUID_CIDADAO;
        default:
          return null;
      }
    }

    /**
     * Find the _Fields constant that matches fieldId, throwing an exception
     * if it is not found.
     */
    public static _Fields findByThriftIdOrThrow(int fieldId) {
      _Fields fields = findByThriftId(fieldId);
      if (fields == null) throw new IllegalArgumentException("Field " + fieldId + " doesn't exist!");
      return fields;
    }

    /**
     * Find the _Fields constant that matches name, or null if its not found.
     */
    public static _Fields findByName(String name) {
      return byName.get(name);
    }

    private final short _thriftId;
    private final String _fieldName;

    _Fields(short thriftId, String fieldName) {
      _thriftId = thriftId;
      _fieldName = fieldName;
    }

    public short getThriftFieldId() {
      return _thriftId;
    }

    public String getFieldName() {
      return _fieldName;
    }
  }

  // isset id assignments
  private static final int __FICHAATUALIZADA_ISSET_ID = 0;
  private static final int __STATUSTERMORECUSACADASTROINDIVIDUALATENCAOBASICA_ISSET_ID = 1;
  private static final int __TPCDSORIGEM_ISSET_ID = 2;
  private byte __isset_bitfield = 0;
  private static final _Fields optionals[] = {_Fields.CONDICOES_DE_SAUDE,_Fields.EM_SITUACAO_DE_RUA,_Fields.FICHA_ATUALIZADA,_Fields.IDENTIFICACAO_USUARIO_CIDADAO,_Fields.INFORMACOES_SOCIO_DEMOGRAFICAS,_Fields.STATUS_TERMO_RECUSA_CADASTRO_INDIVIDUAL_ATENCAO_BASICA,_Fields.TP_CDS_ORIGEM,_Fields.UUID_FICHA_ORIGINADORA,_Fields.UUID_CIDADAO};
  public static final Map<_Fields, org.apache.thrift.meta_data.FieldMetaData> metaDataMap;
  static {
    Map<_Fields, org.apache.thrift.meta_data.FieldMetaData> tmpMap = new EnumMap<_Fields, org.apache.thrift.meta_data.FieldMetaData>(_Fields.class);
    tmpMap.put(_Fields.CONDICOES_DE_SAUDE, new org.apache.thrift.meta_data.FieldMetaData("condicoesDeSaude", org.apache.thrift.TFieldRequirementType.OPTIONAL, 
        new org.apache.thrift.meta_data.StructMetaData(org.apache.thrift.protocol.TType.STRUCT, CondicoesDeSaudeThrift.class)));
    tmpMap.put(_Fields.DADOS_GERAIS, new org.apache.thrift.meta_data.FieldMetaData("dadosGerais", org.apache.thrift.TFieldRequirementType.REQUIRED, 
        new org.apache.thrift.meta_data.StructMetaData(org.apache.thrift.protocol.TType.STRUCT, br.gov.saude.esus.cds.transport.generated.thrift.common.HeaderCdsCadastroThrift.class)));
    tmpMap.put(_Fields.EM_SITUACAO_DE_RUA, new org.apache.thrift.meta_data.FieldMetaData("emSituacaoDeRua", org.apache.thrift.TFieldRequirementType.OPTIONAL, 
        new org.apache.thrift.meta_data.StructMetaData(org.apache.thrift.protocol.TType.STRUCT, EmSituacaoDeRuaThrift.class)));
    tmpMap.put(_Fields.FICHA_ATUALIZADA, new org.apache.thrift.meta_data.FieldMetaData("fichaAtualizada", org.apache.thrift.TFieldRequirementType.OPTIONAL, 
        new org.apache.thrift.meta_data.FieldValueMetaData(org.apache.thrift.protocol.TType.BOOL)));
    tmpMap.put(_Fields.IDENTIFICACAO_USUARIO_CIDADAO, new org.apache.thrift.meta_data.FieldMetaData("identificacaoUsuarioCidadao", org.apache.thrift.TFieldRequirementType.OPTIONAL, 
        new org.apache.thrift.meta_data.StructMetaData(org.apache.thrift.protocol.TType.STRUCT, IdentificacaoUsuarioCidadaoThrift.class)));
    tmpMap.put(_Fields.INFORMACOES_SOCIO_DEMOGRAFICAS, new org.apache.thrift.meta_data.FieldMetaData("informacoesSocioDemograficas", org.apache.thrift.TFieldRequirementType.OPTIONAL, 
        new org.apache.thrift.meta_data.StructMetaData(org.apache.thrift.protocol.TType.STRUCT, InformacoesSocioDemograficasThrift.class)));
    tmpMap.put(_Fields.STATUS_TERMO_RECUSA_CADASTRO_INDIVIDUAL_ATENCAO_BASICA, new org.apache.thrift.meta_data.FieldMetaData("statusTermoRecusaCadastroIndividualAtencaoBasica", org.apache.thrift.TFieldRequirementType.OPTIONAL, 
        new org.apache.thrift.meta_data.FieldValueMetaData(org.apache.thrift.protocol.TType.BOOL)));
    tmpMap.put(_Fields.TP_CDS_ORIGEM, new org.apache.thrift.meta_data.FieldMetaData("tpCdsOrigem", org.apache.thrift.TFieldRequirementType.OPTIONAL, 
        new org.apache.thrift.meta_data.FieldValueMetaData(org.apache.thrift.protocol.TType.I32)));
    tmpMap.put(_Fields.UUID, new org.apache.thrift.meta_data.FieldMetaData("uuid", org.apache.thrift.TFieldRequirementType.REQUIRED, 
        new org.apache.thrift.meta_data.FieldValueMetaData(org.apache.thrift.protocol.TType.STRING)));
    tmpMap.put(_Fields.UUID_FICHA_ORIGINADORA, new org.apache.thrift.meta_data.FieldMetaData("uuidFichaOriginadora", org.apache.thrift.TFieldRequirementType.OPTIONAL, 
        new org.apache.thrift.meta_data.FieldValueMetaData(org.apache.thrift.protocol.TType.STRING)));
    tmpMap.put(_Fields.UUID_CIDADAO, new org.apache.thrift.meta_data.FieldMetaData("uuidCidadao", org.apache.thrift.TFieldRequirementType.OPTIONAL, 
        new org.apache.thrift.meta_data.FieldValueMetaData(org.apache.thrift.protocol.TType.STRING)));
    metaDataMap = Collections.unmodifiableMap(tmpMap);
    org.apache.thrift.meta_data.FieldMetaData.addStructMetaDataMap(CadastroIndividualThrift.class, metaDataMap);
  }

  public CadastroIndividualThrift() {
  }

  public CadastroIndividualThrift(
    br.gov.saude.esus.cds.transport.generated.thrift.common.HeaderCdsCadastroThrift dadosGerais,
    String uuid)
  {
    this();
    this.dadosGerais = dadosGerais;
    this.uuid = uuid;
  }

  /**
   * Performs a deep copy on <i>other</i>.
   */
  public CadastroIndividualThrift(CadastroIndividualThrift other) {
    __isset_bitfield = other.__isset_bitfield;
    if (other.isSetCondicoesDeSaude()) {
      this.condicoesDeSaude = new CondicoesDeSaudeThrift(other.condicoesDeSaude);
    }
    if (other.isSetDadosGerais()) {
      this.dadosGerais = new br.gov.saude.esus.cds.transport.generated.thrift.common.HeaderCdsCadastroThrift(other.dadosGerais);
    }
    if (other.isSetEmSituacaoDeRua()) {
      this.emSituacaoDeRua = new EmSituacaoDeRuaThrift(other.emSituacaoDeRua);
    }
    this.fichaAtualizada = other.fichaAtualizada;
    if (other.isSetIdentificacaoUsuarioCidadao()) {
      this.identificacaoUsuarioCidadao = new IdentificacaoUsuarioCidadaoThrift(other.identificacaoUsuarioCidadao);
    }
    if (other.isSetInformacoesSocioDemograficas()) {
      this.informacoesSocioDemograficas = new InformacoesSocioDemograficasThrift(other.informacoesSocioDemograficas);
    }
    this.statusTermoRecusaCadastroIndividualAtencaoBasica = other.statusTermoRecusaCadastroIndividualAtencaoBasica;
    this.tpCdsOrigem = other.tpCdsOrigem;
    if (other.isSetUuid()) {
      this.uuid = other.uuid;
    }
    if (other.isSetUuidFichaOriginadora()) {
      this.uuidFichaOriginadora = other.uuidFichaOriginadora;
    }
    if (other.isSetUuidCidadao()) {
      this.uuidCidadao = other.uuidCidadao;
    }
  }

  public CadastroIndividualThrift deepCopy() {
    return new CadastroIndividualThrift(this);
  }

  @Override
  public void clear() {
    this.condicoesDeSaude = null;
    this.dadosGerais = null;
    this.emSituacaoDeRua = null;
    setFichaAtualizadaIsSet(false);
    this.fichaAtualizada = false;
    this.identificacaoUsuarioCidadao = null;
    this.informacoesSocioDemograficas = null;
    setStatusTermoRecusaCadastroIndividualAtencaoBasicaIsSet(false);
    this.statusTermoRecusaCadastroIndividualAtencaoBasica = false;
    setTpCdsOrigemIsSet(false);
    this.tpCdsOrigem = 0;
    this.uuid = null;
    this.uuidFichaOriginadora = null;
    this.uuidCidadao = null;
  }

  public CondicoesDeSaudeThrift getCondicoesDeSaude() {
    return this.condicoesDeSaude;
  }

  public void setCondicoesDeSaude(CondicoesDeSaudeThrift condicoesDeSaude) {
    this.condicoesDeSaude = condicoesDeSaude;
  }

  public void unsetCondicoesDeSaude() {
    this.condicoesDeSaude = null;
  }

  /** Returns true if field condicoesDeSaude is set (has been assigned a value) and false otherwise */
  public boolean isSetCondicoesDeSaude() {
    return this.condicoesDeSaude != null;
  }

  public void setCondicoesDeSaudeIsSet(boolean value) {
    if (!value) {
      this.condicoesDeSaude = null;
    }
  }

  public br.gov.saude.esus.cds.transport.generated.thrift.common.HeaderCdsCadastroThrift getDadosGerais() {
    return this.dadosGerais;
  }

  public void setDadosGerais(br.gov.saude.esus.cds.transport.generated.thrift.common.HeaderCdsCadastroThrift dadosGerais) {
    this.dadosGerais = dadosGerais;
  }

  public void unsetDadosGerais() {
    this.dadosGerais = null;
  }

  /** Returns true if field dadosGerais is set (has been assigned a value) and false otherwise */
  public boolean isSetDadosGerais() {
    return this.dadosGerais != null;
  }

  public void setDadosGeraisIsSet(boolean value) {
    if (!value) {
      this.dadosGerais = null;
    }
  }

  public EmSituacaoDeRuaThrift getEmSituacaoDeRua() {
    return this.emSituacaoDeRua;
  }

  public void setEmSituacaoDeRua(EmSituacaoDeRuaThrift emSituacaoDeRua) {
    this.emSituacaoDeRua = emSituacaoDeRua;
  }

  public void unsetEmSituacaoDeRua() {
    this.emSituacaoDeRua = null;
  }

  /** Returns true if field emSituacaoDeRua is set (has been assigned a value) and false otherwise */
  public boolean isSetEmSituacaoDeRua() {
    return this.emSituacaoDeRua != null;
  }

  public void setEmSituacaoDeRuaIsSet(boolean value) {
    if (!value) {
      this.emSituacaoDeRua = null;
    }
  }

  public boolean isFichaAtualizada() {
    return this.fichaAtualizada;
  }

  public void setFichaAtualizada(boolean fichaAtualizada) {
    this.fichaAtualizada = fichaAtualizada;
    setFichaAtualizadaIsSet(true);
  }

  public void unsetFichaAtualizada() {
    __isset_bitfield = EncodingUtils.clearBit(__isset_bitfield, __FICHAATUALIZADA_ISSET_ID);
  }

  /** Returns true if field fichaAtualizada is set (has been assigned a value) and false otherwise */
  public boolean isSetFichaAtualizada() {
    return EncodingUtils.testBit(__isset_bitfield, __FICHAATUALIZADA_ISSET_ID);
  }

  public void setFichaAtualizadaIsSet(boolean value) {
    __isset_bitfield = EncodingUtils.setBit(__isset_bitfield, __FICHAATUALIZADA_ISSET_ID, value);
  }

  public IdentificacaoUsuarioCidadaoThrift getIdentificacaoUsuarioCidadao() {
    return this.identificacaoUsuarioCidadao;
  }

  public void setIdentificacaoUsuarioCidadao(IdentificacaoUsuarioCidadaoThrift identificacaoUsuarioCidadao) {
    this.identificacaoUsuarioCidadao = identificacaoUsuarioCidadao;
  }

  public void unsetIdentificacaoUsuarioCidadao() {
    this.identificacaoUsuarioCidadao = null;
  }

  /** Returns true if field identificacaoUsuarioCidadao is set (has been assigned a value) and false otherwise */
  public boolean isSetIdentificacaoUsuarioCidadao() {
    return this.identificacaoUsuarioCidadao != null;
  }

  public void setIdentificacaoUsuarioCidadaoIsSet(boolean value) {
    if (!value) {
      this.identificacaoUsuarioCidadao = null;
    }
  }

  public InformacoesSocioDemograficasThrift getInformacoesSocioDemograficas() {
    return this.informacoesSocioDemograficas;
  }

  public void setInformacoesSocioDemograficas(InformacoesSocioDemograficasThrift informacoesSocioDemograficas) {
    this.informacoesSocioDemograficas = informacoesSocioDemograficas;
  }

  public void unsetInformacoesSocioDemograficas() {
    this.informacoesSocioDemograficas = null;
  }

  /** Returns true if field informacoesSocioDemograficas is set (has been assigned a value) and false otherwise */
  public boolean isSetInformacoesSocioDemograficas() {
    return this.informacoesSocioDemograficas != null;
  }

  public void setInformacoesSocioDemograficasIsSet(boolean value) {
    if (!value) {
      this.informacoesSocioDemograficas = null;
    }
  }

  public boolean isStatusTermoRecusaCadastroIndividualAtencaoBasica() {
    return this.statusTermoRecusaCadastroIndividualAtencaoBasica;
  }

  public void setStatusTermoRecusaCadastroIndividualAtencaoBasica(boolean statusTermoRecusaCadastroIndividualAtencaoBasica) {
    this.statusTermoRecusaCadastroIndividualAtencaoBasica = statusTermoRecusaCadastroIndividualAtencaoBasica;
    setStatusTermoRecusaCadastroIndividualAtencaoBasicaIsSet(true);
  }

  public void unsetStatusTermoRecusaCadastroIndividualAtencaoBasica() {
    __isset_bitfield = EncodingUtils.clearBit(__isset_bitfield, __STATUSTERMORECUSACADASTROINDIVIDUALATENCAOBASICA_ISSET_ID);
  }

  /** Returns true if field statusTermoRecusaCadastroIndividualAtencaoBasica is set (has been assigned a value) and false otherwise */
  public boolean isSetStatusTermoRecusaCadastroIndividualAtencaoBasica() {
    return EncodingUtils.testBit(__isset_bitfield, __STATUSTERMORECUSACADASTROINDIVIDUALATENCAOBASICA_ISSET_ID);
  }

  public void setStatusTermoRecusaCadastroIndividualAtencaoBasicaIsSet(boolean value) {
    __isset_bitfield = EncodingUtils.setBit(__isset_bitfield, __STATUSTERMORECUSACADASTROINDIVIDUALATENCAOBASICA_ISSET_ID, value);
  }

  public int getTpCdsOrigem() {
    return this.tpCdsOrigem;
  }

  public void setTpCdsOrigem(int tpCdsOrigem) {
    this.tpCdsOrigem = tpCdsOrigem;
    setTpCdsOrigemIsSet(true);
  }

  public void unsetTpCdsOrigem() {
    __isset_bitfield = EncodingUtils.clearBit(__isset_bitfield, __TPCDSORIGEM_ISSET_ID);
  }

  /** Returns true if field tpCdsOrigem is set (has been assigned a value) and false otherwise */
  public boolean isSetTpCdsOrigem() {
    return EncodingUtils.testBit(__isset_bitfield, __TPCDSORIGEM_ISSET_ID);
  }

  public void setTpCdsOrigemIsSet(boolean value) {
    __isset_bitfield = EncodingUtils.setBit(__isset_bitfield, __TPCDSORIGEM_ISSET_ID, value);
  }

  public String getUuid() {
    return this.uuid;
  }

  public void setUuid(String uuid) {
    this.uuid = uuid;
  }

  public void unsetUuid() {
    this.uuid = null;
  }

  /** Returns true if field uuid is set (has been assigned a value) and false otherwise */
  public boolean isSetUuid() {
    return this.uuid != null;
  }

  public void setUuidIsSet(boolean value) {
    if (!value) {
      this.uuid = null;
    }
  }

  public String getUuidFichaOriginadora() {
    return this.uuidFichaOriginadora;
  }

  public void setUuidFichaOriginadora(String uuidFichaOriginadora) {
    this.uuidFichaOriginadora = uuidFichaOriginadora;
  }

  public void unsetUuidFichaOriginadora() {
    this.uuidFichaOriginadora = null;
  }

  /** Returns true if field uuidFichaOriginadora is set (has been assigned a value) and false otherwise */
  public boolean isSetUuidFichaOriginadora() {
    return this.uuidFichaOriginadora != null;
  }

  public void setUuidFichaOriginadoraIsSet(boolean value) {
    if (!value) {
      this.uuidFichaOriginadora = null;
    }
  }

  public String getUuidCidadao() {
    return this.uuidCidadao;
  }

  public void setUuidCidadao(String uuidCidadao) {
    this.uuidCidadao = uuidCidadao;
  }

  public void unsetUuidCidadao() {
    this.uuidCidadao = null;
  }

  /** Returns true if field uuidCidadao is set (has been assigned a value) and false otherwise */
  public boolean isSetUuidCidadao() {
    return this.uuidCidadao != null;
  }

  public void setUuidCidadaoIsSet(boolean value) {
    if (!value) {
      this.uuidCidadao = null;
    }
  }

  public void setFieldValue(_Fields field, Object value) {
    switch (field) {
    case CONDICOES_DE_SAUDE:
      if (value == null) {
        unsetCondicoesDeSaude();
      } else {
        setCondicoesDeSaude((CondicoesDeSaudeThrift)value);
      }
      break;

    case DADOS_GERAIS:
      if (value == null) {
        unsetDadosGerais();
      } else {
        setDadosGerais((br.gov.saude.esus.cds.transport.generated.thrift.common.HeaderCdsCadastroThrift)value);
      }
      break;

    case EM_SITUACAO_DE_RUA:
      if (value == null) {
        unsetEmSituacaoDeRua();
      } else {
        setEmSituacaoDeRua((EmSituacaoDeRuaThrift)value);
      }
      break;

    case FICHA_ATUALIZADA:
      if (value == null) {
        unsetFichaAtualizada();
      } else {
        setFichaAtualizada((Boolean)value);
      }
      break;

    case IDENTIFICACAO_USUARIO_CIDADAO:
      if (value == null) {
        unsetIdentificacaoUsuarioCidadao();
      } else {
        setIdentificacaoUsuarioCidadao((IdentificacaoUsuarioCidadaoThrift)value);
      }
      break;

    case INFORMACOES_SOCIO_DEMOGRAFICAS:
      if (value == null) {
        unsetInformacoesSocioDemograficas();
      } else {
        setInformacoesSocioDemograficas((InformacoesSocioDemograficasThrift)value);
      }
      break;

    case STATUS_TERMO_RECUSA_CADASTRO_INDIVIDUAL_ATENCAO_BASICA:
      if (value == null) {
        unsetStatusTermoRecusaCadastroIndividualAtencaoBasica();
      } else {
        setStatusTermoRecusaCadastroIndividualAtencaoBasica((Boolean)value);
      }
      break;

    case TP_CDS_ORIGEM:
      if (value == null) {
        unsetTpCdsOrigem();
      } else {
        setTpCdsOrigem((Integer)value);
      }
      break;

    case UUID:
      if (value == null) {
        unsetUuid();
      } else {
        setUuid((String)value);
      }
      break;

    case UUID_FICHA_ORIGINADORA:
      if (value == null) {
        unsetUuidFichaOriginadora();
      } else {
        setUuidFichaOriginadora((String)value);
      }
      break;

    case UUID_CIDADAO:
      if (value == null) {
        unsetUuidCidadao();
      } else {
        setUuidCidadao((String)value);
      }
      break;

    }
  }

  public Object getFieldValue(_Fields field) {
    switch (field) {
    case CONDICOES_DE_SAUDE:
      return getCondicoesDeSaude();

    case DADOS_GERAIS:
      return getDadosGerais();

    case EM_SITUACAO_DE_RUA:
      return getEmSituacaoDeRua();

    case FICHA_ATUALIZADA:
      return Boolean.valueOf(isFichaAtualizada());

    case IDENTIFICACAO_USUARIO_CIDADAO:
      return getIdentificacaoUsuarioCidadao();

    case INFORMACOES_SOCIO_DEMOGRAFICAS:
      return getInformacoesSocioDemograficas();

    case STATUS_TERMO_RECUSA_CADASTRO_INDIVIDUAL_ATENCAO_BASICA:
      return Boolean.valueOf(isStatusTermoRecusaCadastroIndividualAtencaoBasica());

    case TP_CDS_ORIGEM:
      return Integer.valueOf(getTpCdsOrigem());

    case UUID:
      return getUuid();

    case UUID_FICHA_ORIGINADORA:
      return getUuidFichaOriginadora();

    case UUID_CIDADAO:
      return getUuidCidadao();

    }
    throw new IllegalStateException();
  }

  /** Returns true if field corresponding to fieldID is set (has been assigned a value) and false otherwise */
  public boolean isSet(_Fields field) {
    if (field == null) {
      throw new IllegalArgumentException();
    }

    switch (field) {
    case CONDICOES_DE_SAUDE:
      return isSetCondicoesDeSaude();
    case DADOS_GERAIS:
      return isSetDadosGerais();
    case EM_SITUACAO_DE_RUA:
      return isSetEmSituacaoDeRua();
    case FICHA_ATUALIZADA:
      return isSetFichaAtualizada();
    case IDENTIFICACAO_USUARIO_CIDADAO:
      return isSetIdentificacaoUsuarioCidadao();
    case INFORMACOES_SOCIO_DEMOGRAFICAS:
      return isSetInformacoesSocioDemograficas();
    case STATUS_TERMO_RECUSA_CADASTRO_INDIVIDUAL_ATENCAO_BASICA:
      return isSetStatusTermoRecusaCadastroIndividualAtencaoBasica();
    case TP_CDS_ORIGEM:
      return isSetTpCdsOrigem();
    case UUID:
      return isSetUuid();
    case UUID_FICHA_ORIGINADORA:
      return isSetUuidFichaOriginadora();
    case UUID_CIDADAO:
      return isSetUuidCidadao();
    }
    throw new IllegalStateException();
  }

  @Override
  public boolean equals(Object that) {
    if (that == null)
      return false;
    if (that instanceof CadastroIndividualThrift)
      return this.equals((CadastroIndividualThrift)that);
    return false;
  }

  public boolean equals(CadastroIndividualThrift that) {
    if (that == null)
      return false;

    boolean this_present_condicoesDeSaude = true && this.isSetCondicoesDeSaude();
    boolean that_present_condicoesDeSaude = true && that.isSetCondicoesDeSaude();
    if (this_present_condicoesDeSaude || that_present_condicoesDeSaude) {
      if (!(this_present_condicoesDeSaude && that_present_condicoesDeSaude))
        return false;
      if (!this.condicoesDeSaude.equals(that.condicoesDeSaude))
        return false;
    }

    boolean this_present_dadosGerais = true && this.isSetDadosGerais();
    boolean that_present_dadosGerais = true && that.isSetDadosGerais();
    if (this_present_dadosGerais || that_present_dadosGerais) {
      if (!(this_present_dadosGerais && that_present_dadosGerais))
        return false;
      if (!this.dadosGerais.equals(that.dadosGerais))
        return false;
    }

    boolean this_present_emSituacaoDeRua = true && this.isSetEmSituacaoDeRua();
    boolean that_present_emSituacaoDeRua = true && that.isSetEmSituacaoDeRua();
    if (this_present_emSituacaoDeRua || that_present_emSituacaoDeRua) {
      if (!(this_present_emSituacaoDeRua && that_present_emSituacaoDeRua))
        return false;
      if (!this.emSituacaoDeRua.equals(that.emSituacaoDeRua))
        return false;
    }

    boolean this_present_fichaAtualizada = true && this.isSetFichaAtualizada();
    boolean that_present_fichaAtualizada = true && that.isSetFichaAtualizada();
    if (this_present_fichaAtualizada || that_present_fichaAtualizada) {
      if (!(this_present_fichaAtualizada && that_present_fichaAtualizada))
        return false;
      if (this.fichaAtualizada != that.fichaAtualizada)
        return false;
    }

    boolean this_present_identificacaoUsuarioCidadao = true && this.isSetIdentificacaoUsuarioCidadao();
    boolean that_present_identificacaoUsuarioCidadao = true && that.isSetIdentificacaoUsuarioCidadao();
    if (this_present_identificacaoUsuarioCidadao || that_present_identificacaoUsuarioCidadao) {
      if (!(this_present_identificacaoUsuarioCidadao && that_present_identificacaoUsuarioCidadao))
        return false;
      if (!this.identificacaoUsuarioCidadao.equals(that.identificacaoUsuarioCidadao))
        return false;
    }

    boolean this_present_informacoesSocioDemograficas = true && this.isSetInformacoesSocioDemograficas();
    boolean that_present_informacoesSocioDemograficas = true && that.isSetInformacoesSocioDemograficas();
    if (this_present_informacoesSocioDemograficas || that_present_informacoesSocioDemograficas) {
      if (!(this_present_informacoesSocioDemograficas && that_present_informacoesSocioDemograficas))
        return false;
      if (!this.informacoesSocioDemograficas.equals(that.informacoesSocioDemograficas))
        return false;
    }

    boolean this_present_statusTermoRecusaCadastroIndividualAtencaoBasica = true && this.isSetStatusTermoRecusaCadastroIndividualAtencaoBasica();
    boolean that_present_statusTermoRecusaCadastroIndividualAtencaoBasica = true && that.isSetStatusTermoRecusaCadastroIndividualAtencaoBasica();
    if (this_present_statusTermoRecusaCadastroIndividualAtencaoBasica || that_present_statusTermoRecusaCadastroIndividualAtencaoBasica) {
      if (!(this_present_statusTermoRecusaCadastroIndividualAtencaoBasica && that_present_statusTermoRecusaCadastroIndividualAtencaoBasica))
        return false;
      if (this.statusTermoRecusaCadastroIndividualAtencaoBasica != that.statusTermoRecusaCadastroIndividualAtencaoBasica)
        return false;
    }

    boolean this_present_tpCdsOrigem = true && this.isSetTpCdsOrigem();
    boolean that_present_tpCdsOrigem = true && that.isSetTpCdsOrigem();
    if (this_present_tpCdsOrigem || that_present_tpCdsOrigem) {
      if (!(this_present_tpCdsOrigem && that_present_tpCdsOrigem))
        return false;
      if (this.tpCdsOrigem != that.tpCdsOrigem)
        return false;
    }

    boolean this_present_uuid = true && this.isSetUuid();
    boolean that_present_uuid = true && that.isSetUuid();
    if (this_present_uuid || that_present_uuid) {
      if (!(this_present_uuid && that_present_uuid))
        return false;
      if (!this.uuid.equals(that.uuid))
        return false;
    }

    boolean this_present_uuidFichaOriginadora = true && this.isSetUuidFichaOriginadora();
    boolean that_present_uuidFichaOriginadora = true && that.isSetUuidFichaOriginadora();
    if (this_present_uuidFichaOriginadora || that_present_uuidFichaOriginadora) {
      if (!(this_present_uuidFichaOriginadora && that_present_uuidFichaOriginadora))
        return false;
      if (!this.uuidFichaOriginadora.equals(that.uuidFichaOriginadora))
        return false;
    }

    boolean this_present_uuidCidadao = true && this.isSetUuidCidadao();
    boolean that_present_uuidCidadao = true && that.isSetUuidCidadao();
    if (this_present_uuidCidadao || that_present_uuidCidadao) {
      if (!(this_present_uuidCidadao && that_present_uuidCidadao))
        return false;
      if (!this.uuidCidadao.equals(that.uuidCidadao))
        return false;
    }

    return true;
  }

  @Override
  public int hashCode() {
    List<Object> list = new ArrayList<Object>();

    boolean present_condicoesDeSaude = true && (isSetCondicoesDeSaude());
    list.add(present_condicoesDeSaude);
    if (present_condicoesDeSaude)
      list.add(condicoesDeSaude);

    boolean present_dadosGerais = true && (isSetDadosGerais());
    list.add(present_dadosGerais);
    if (present_dadosGerais)
      list.add(dadosGerais);

    boolean present_emSituacaoDeRua = true && (isSetEmSituacaoDeRua());
    list.add(present_emSituacaoDeRua);
    if (present_emSituacaoDeRua)
      list.add(emSituacaoDeRua);

    boolean present_fichaAtualizada = true && (isSetFichaAtualizada());
    list.add(present_fichaAtualizada);
    if (present_fichaAtualizada)
      list.add(fichaAtualizada);

    boolean present_identificacaoUsuarioCidadao = true && (isSetIdentificacaoUsuarioCidadao());
    list.add(present_identificacaoUsuarioCidadao);
    if (present_identificacaoUsuarioCidadao)
      list.add(identificacaoUsuarioCidadao);

    boolean present_informacoesSocioDemograficas = true && (isSetInformacoesSocioDemograficas());
    list.add(present_informacoesSocioDemograficas);
    if (present_informacoesSocioDemograficas)
      list.add(informacoesSocioDemograficas);

    boolean present_statusTermoRecusaCadastroIndividualAtencaoBasica = true && (isSetStatusTermoRecusaCadastroIndividualAtencaoBasica());
    list.add(present_statusTermoRecusaCadastroIndividualAtencaoBasica);
    if (present_statusTermoRecusaCadastroIndividualAtencaoBasica)
      list.add(statusTermoRecusaCadastroIndividualAtencaoBasica);

    boolean present_tpCdsOrigem = true && (isSetTpCdsOrigem());
    list.add(present_tpCdsOrigem);
    if (present_tpCdsOrigem)
      list.add(tpCdsOrigem);

    boolean present_uuid = true && (isSetUuid());
    list.add(present_uuid);
    if (present_uuid)
      list.add(uuid);

    boolean present_uuidFichaOriginadora = true && (isSetUuidFichaOriginadora());
    list.add(present_uuidFichaOriginadora);
    if (present_uuidFichaOriginadora)
      list.add(uuidFichaOriginadora);

    boolean present_uuidCidadao = true && (isSetUuidCidadao());
    list.add(present_uuidCidadao);
    if (present_uuidCidadao)
      list.add(uuidCidadao);

    return list.hashCode();
  }

  @Override
  public int compareTo(CadastroIndividualThrift other) {
    if (!getClass().equals(other.getClass())) {
      return getClass().getName().compareTo(other.getClass().getName());
    }

    int lastComparison = 0;

    lastComparison = Boolean.valueOf(isSetCondicoesDeSaude()).compareTo(other.isSetCondicoesDeSaude());
    if (lastComparison != 0) {
      return lastComparison;
    }
    if (isSetCondicoesDeSaude()) {
      lastComparison = org.apache.thrift.TBaseHelper.compareTo(this.condicoesDeSaude, other.condicoesDeSaude);
      if (lastComparison != 0) {
        return lastComparison;
      }
    }
    lastComparison = Boolean.valueOf(isSetDadosGerais()).compareTo(other.isSetDadosGerais());
    if (lastComparison != 0) {
      return lastComparison;
    }
    if (isSetDadosGerais()) {
      lastComparison = org.apache.thrift.TBaseHelper.compareTo(this.dadosGerais, other.dadosGerais);
      if (lastComparison != 0) {
        return lastComparison;
      }
    }
    lastComparison = Boolean.valueOf(isSetEmSituacaoDeRua()).compareTo(other.isSetEmSituacaoDeRua());
    if (lastComparison != 0) {
      return lastComparison;
    }
    if (isSetEmSituacaoDeRua()) {
      lastComparison = org.apache.thrift.TBaseHelper.compareTo(this.emSituacaoDeRua, other.emSituacaoDeRua);
      if (lastComparison != 0) {
        return lastComparison;
      }
    }
    lastComparison = Boolean.valueOf(isSetFichaAtualizada()).compareTo(other.isSetFichaAtualizada());
    if (lastComparison != 0) {
      return lastComparison;
    }
    if (isSetFichaAtualizada()) {
      lastComparison = org.apache.thrift.TBaseHelper.compareTo(this.fichaAtualizada, other.fichaAtualizada);
      if (lastComparison != 0) {
        return lastComparison;
      }
    }
    lastComparison = Boolean.valueOf(isSetIdentificacaoUsuarioCidadao()).compareTo(other.isSetIdentificacaoUsuarioCidadao());
    if (lastComparison != 0) {
      return lastComparison;
    }
    if (isSetIdentificacaoUsuarioCidadao()) {
      lastComparison = org.apache.thrift.TBaseHelper.compareTo(this.identificacaoUsuarioCidadao, other.identificacaoUsuarioCidadao);
      if (lastComparison != 0) {
        return lastComparison;
      }
    }
    lastComparison = Boolean.valueOf(isSetInformacoesSocioDemograficas()).compareTo(other.isSetInformacoesSocioDemograficas());
    if (lastComparison != 0) {
      return lastComparison;
    }
    if (isSetInformacoesSocioDemograficas()) {
      lastComparison = org.apache.thrift.TBaseHelper.compareTo(this.informacoesSocioDemograficas, other.informacoesSocioDemograficas);
      if (lastComparison != 0) {
        return lastComparison;
      }
    }
    lastComparison = Boolean.valueOf(isSetStatusTermoRecusaCadastroIndividualAtencaoBasica()).compareTo(other.isSetStatusTermoRecusaCadastroIndividualAtencaoBasica());
    if (lastComparison != 0) {
      return lastComparison;
    }
    if (isSetStatusTermoRecusaCadastroIndividualAtencaoBasica()) {
      lastComparison = org.apache.thrift.TBaseHelper.compareTo(this.statusTermoRecusaCadastroIndividualAtencaoBasica, other.statusTermoRecusaCadastroIndividualAtencaoBasica);
      if (lastComparison != 0) {
        return lastComparison;
      }
    }
    lastComparison = Boolean.valueOf(isSetTpCdsOrigem()).compareTo(other.isSetTpCdsOrigem());
    if (lastComparison != 0) {
      return lastComparison;
    }
    if (isSetTpCdsOrigem()) {
      lastComparison = org.apache.thrift.TBaseHelper.compareTo(this.tpCdsOrigem, other.tpCdsOrigem);
      if (lastComparison != 0) {
        return lastComparison;
      }
    }
    lastComparison = Boolean.valueOf(isSetUuid()).compareTo(other.isSetUuid());
    if (lastComparison != 0) {
      return lastComparison;
    }
    if (isSetUuid()) {
      lastComparison = org.apache.thrift.TBaseHelper.compareTo(this.uuid, other.uuid);
      if (lastComparison != 0) {
        return lastComparison;
      }
    }
    lastComparison = Boolean.valueOf(isSetUuidFichaOriginadora()).compareTo(other.isSetUuidFichaOriginadora());
    if (lastComparison != 0) {
      return lastComparison;
    }
    if (isSetUuidFichaOriginadora()) {
      lastComparison = org.apache.thrift.TBaseHelper.compareTo(this.uuidFichaOriginadora, other.uuidFichaOriginadora);
      if (lastComparison != 0) {
        return lastComparison;
      }
    }
    lastComparison = Boolean.valueOf(isSetUuidCidadao()).compareTo(other.isSetUuidCidadao());
    if (lastComparison != 0) {
      return lastComparison;
    }
    if (isSetUuidCidadao()) {
      lastComparison = org.apache.thrift.TBaseHelper.compareTo(this.uuidCidadao, other.uuidCidadao);
      if (lastComparison != 0) {
        return lastComparison;
      }
    }
    return 0;
  }

  public _Fields fieldForId(int fieldId) {
    return _Fields.findByThriftId(fieldId);
  }

  public void read(org.apache.thrift.protocol.TProtocol iprot) throws org.apache.thrift.TException {
    schemes.get(iprot.getScheme()).getScheme().read(iprot, this);
  }

  public void write(org.apache.thrift.protocol.TProtocol oprot) throws org.apache.thrift.TException {
    schemes.get(oprot.getScheme()).getScheme().write(oprot, this);
  }

  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder("CadastroIndividualThrift(");
    boolean first = true;

    if (isSetCondicoesDeSaude()) {
      sb.append("condicoesDeSaude:");
      if (this.condicoesDeSaude == null) {
        sb.append("null");
      } else {
        sb.append(this.condicoesDeSaude);
      }
      first = false;
    }
    if (!first) sb.append(", ");
    sb.append("dadosGerais:");
    if (this.dadosGerais == null) {
      sb.append("null");
    } else {
      sb.append(this.dadosGerais);
    }
    first = false;
    if (isSetEmSituacaoDeRua()) {
      if (!first) sb.append(", ");
      sb.append("emSituacaoDeRua:");
      if (this.emSituacaoDeRua == null) {
        sb.append("null");
      } else {
        sb.append(this.emSituacaoDeRua);
      }
      first = false;
    }
    if (isSetFichaAtualizada()) {
      if (!first) sb.append(", ");
      sb.append("fichaAtualizada:");
      sb.append(this.fichaAtualizada);
      first = false;
    }
    if (isSetIdentificacaoUsuarioCidadao()) {
      if (!first) sb.append(", ");
      sb.append("identificacaoUsuarioCidadao:");
      if (this.identificacaoUsuarioCidadao == null) {
        sb.append("null");
      } else {
        sb.append(this.identificacaoUsuarioCidadao);
      }
      first = false;
    }
    if (isSetInformacoesSocioDemograficas()) {
      if (!first) sb.append(", ");
      sb.append("informacoesSocioDemograficas:");
      if (this.informacoesSocioDemograficas == null) {
        sb.append("null");
      } else {
        sb.append(this.informacoesSocioDemograficas);
      }
      first = false;
    }
    if (isSetStatusTermoRecusaCadastroIndividualAtencaoBasica()) {
      if (!first) sb.append(", ");
      sb.append("statusTermoRecusaCadastroIndividualAtencaoBasica:");
      sb.append(this.statusTermoRecusaCadastroIndividualAtencaoBasica);
      first = false;
    }
    if (isSetTpCdsOrigem()) {
      if (!first) sb.append(", ");
      sb.append("tpCdsOrigem:");
      sb.append(this.tpCdsOrigem);
      first = false;
    }
    if (!first) sb.append(", ");
    sb.append("uuid:");
    if (this.uuid == null) {
      sb.append("null");
    } else {
      sb.append(this.uuid);
    }
    first = false;
    if (isSetUuidFichaOriginadora()) {
      if (!first) sb.append(", ");
      sb.append("uuidFichaOriginadora:");
      if (this.uuidFichaOriginadora == null) {
        sb.append("null");
      } else {
        sb.append(this.uuidFichaOriginadora);
      }
      first = false;
    }
    if (isSetUuidCidadao()) {
      if (!first) sb.append(", ");
      sb.append("uuidCidadao:");
      if (this.uuidCidadao == null) {
        sb.append("null");
      } else {
        sb.append(this.uuidCidadao);
      }
      first = false;
    }
    sb.append(")");
    return sb.toString();
  }

  public void validate() throws org.apache.thrift.TException {
    // check for required fields
    if (!isSetDadosGerais()) {
      throw new org.apache.thrift.protocol.TProtocolException("Required field 'dadosGerais' is unset! Struct:" + toString());
    }

    if (!isSetUuid()) {
      throw new org.apache.thrift.protocol.TProtocolException("Required field 'uuid' is unset! Struct:" + toString());
    }

    // check for sub-struct validity
    if (condicoesDeSaude != null) {
      condicoesDeSaude.validate();
    }
    if (dadosGerais != null) {
      dadosGerais.validate();
    }
    if (emSituacaoDeRua != null) {
      emSituacaoDeRua.validate();
    }
    if (identificacaoUsuarioCidadao != null) {
      identificacaoUsuarioCidadao.validate();
    }
    if (informacoesSocioDemograficas != null) {
      informacoesSocioDemograficas.validate();
    }
  }

  private void writeObject(java.io.ObjectOutputStream out) throws java.io.IOException {
    try {
      write(new org.apache.thrift.protocol.TCompactProtocol(new org.apache.thrift.transport.TIOStreamTransport(out)));
    } catch (org.apache.thrift.TException te) {
      throw new java.io.IOException(te);
    }
  }

  private void readObject(java.io.ObjectInputStream in) throws java.io.IOException, ClassNotFoundException {
    try {
      // it doesn't seem like you should have to do this, but java serialization is wacky, and doesn't call the default constructor.
      __isset_bitfield = 0;
      read(new org.apache.thrift.protocol.TCompactProtocol(new org.apache.thrift.transport.TIOStreamTransport(in)));
    } catch (org.apache.thrift.TException te) {
      throw new java.io.IOException(te);
    }
  }

  private static class CadastroIndividualThriftStandardSchemeFactory implements SchemeFactory {
    public CadastroIndividualThriftStandardScheme getScheme() {
      return new CadastroIndividualThriftStandardScheme();
    }
  }

  private static class CadastroIndividualThriftStandardScheme extends StandardScheme<CadastroIndividualThrift> {

    public void read(org.apache.thrift.protocol.TProtocol iprot, CadastroIndividualThrift struct) throws org.apache.thrift.TException {
      org.apache.thrift.protocol.TField schemeField;
      iprot.readStructBegin();
      while (true)
      {
        schemeField = iprot.readFieldBegin();
        if (schemeField.type == org.apache.thrift.protocol.TType.STOP) { 
          break;
        }
        switch (schemeField.id) {
          case 1: // CONDICOES_DE_SAUDE
            if (schemeField.type == org.apache.thrift.protocol.TType.STRUCT) {
              struct.condicoesDeSaude = new CondicoesDeSaudeThrift();
              struct.condicoesDeSaude.read(iprot);
              struct.setCondicoesDeSaudeIsSet(true);
            } else { 
              org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
            }
            break;
          case 2: // DADOS_GERAIS
            if (schemeField.type == org.apache.thrift.protocol.TType.STRUCT) {
              struct.dadosGerais = new br.gov.saude.esus.cds.transport.generated.thrift.common.HeaderCdsCadastroThrift();
              struct.dadosGerais.read(iprot);
              struct.setDadosGeraisIsSet(true);
            } else { 
              org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
            }
            break;
          case 3: // EM_SITUACAO_DE_RUA
            if (schemeField.type == org.apache.thrift.protocol.TType.STRUCT) {
              struct.emSituacaoDeRua = new EmSituacaoDeRuaThrift();
              struct.emSituacaoDeRua.read(iprot);
              struct.setEmSituacaoDeRuaIsSet(true);
            } else { 
              org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
            }
            break;
          case 4: // FICHA_ATUALIZADA
            if (schemeField.type == org.apache.thrift.protocol.TType.BOOL) {
              struct.fichaAtualizada = iprot.readBool();
              struct.setFichaAtualizadaIsSet(true);
            } else { 
              org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
            }
            break;
          case 5: // IDENTIFICACAO_USUARIO_CIDADAO
            if (schemeField.type == org.apache.thrift.protocol.TType.STRUCT) {
              struct.identificacaoUsuarioCidadao = new IdentificacaoUsuarioCidadaoThrift();
              struct.identificacaoUsuarioCidadao.read(iprot);
              struct.setIdentificacaoUsuarioCidadaoIsSet(true);
            } else { 
              org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
            }
            break;
          case 6: // INFORMACOES_SOCIO_DEMOGRAFICAS
            if (schemeField.type == org.apache.thrift.protocol.TType.STRUCT) {
              struct.informacoesSocioDemograficas = new InformacoesSocioDemograficasThrift();
              struct.informacoesSocioDemograficas.read(iprot);
              struct.setInformacoesSocioDemograficasIsSet(true);
            } else { 
              org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
            }
            break;
          case 7: // STATUS_TERMO_RECUSA_CADASTRO_INDIVIDUAL_ATENCAO_BASICA
            if (schemeField.type == org.apache.thrift.protocol.TType.BOOL) {
              struct.statusTermoRecusaCadastroIndividualAtencaoBasica = iprot.readBool();
              struct.setStatusTermoRecusaCadastroIndividualAtencaoBasicaIsSet(true);
            } else { 
              org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
            }
            break;
          case 8: // TP_CDS_ORIGEM
            if (schemeField.type == org.apache.thrift.protocol.TType.I32) {
              struct.tpCdsOrigem = iprot.readI32();
              struct.setTpCdsOrigemIsSet(true);
            } else { 
              org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
            }
            break;
          case 9: // UUID
            if (schemeField.type == org.apache.thrift.protocol.TType.STRING) {
              struct.uuid = iprot.readString();
              struct.setUuidIsSet(true);
            } else { 
              org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
            }
            break;
          case 10: // UUID_FICHA_ORIGINADORA
            if (schemeField.type == org.apache.thrift.protocol.TType.STRING) {
              struct.uuidFichaOriginadora = iprot.readString();
              struct.setUuidFichaOriginadoraIsSet(true);
            } else { 
              org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
            }
            break;
          case 11: // UUID_CIDADAO
            if (schemeField.type == org.apache.thrift.protocol.TType.STRING) {
              struct.uuidCidadao = iprot.readString();
              struct.setUuidCidadaoIsSet(true);
            } else { 
              org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
            }
            break;
          default:
            org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
        }
        iprot.readFieldEnd();
      }
      iprot.readStructEnd();
      struct.validate();
    }

    public void write(org.apache.thrift.protocol.TProtocol oprot, CadastroIndividualThrift struct) throws org.apache.thrift.TException {
      struct.validate();

      oprot.writeStructBegin(STRUCT_DESC);
      if (struct.condicoesDeSaude != null) {
        if (struct.isSetCondicoesDeSaude()) {
          oprot.writeFieldBegin(CONDICOES_DE_SAUDE_FIELD_DESC);
          struct.condicoesDeSaude.write(oprot);
          oprot.writeFieldEnd();
        }
      }
      if (struct.dadosGerais != null) {
        oprot.writeFieldBegin(DADOS_GERAIS_FIELD_DESC);
        struct.dadosGerais.write(oprot);
        oprot.writeFieldEnd();
      }
      if (struct.emSituacaoDeRua != null) {
        if (struct.isSetEmSituacaoDeRua()) {
          oprot.writeFieldBegin(EM_SITUACAO_DE_RUA_FIELD_DESC);
          struct.emSituacaoDeRua.write(oprot);
          oprot.writeFieldEnd();
        }
      }
      if (struct.isSetFichaAtualizada()) {
        oprot.writeFieldBegin(FICHA_ATUALIZADA_FIELD_DESC);
        oprot.writeBool(struct.fichaAtualizada);
        oprot.writeFieldEnd();
      }
      if (struct.identificacaoUsuarioCidadao != null) {
        if (struct.isSetIdentificacaoUsuarioCidadao()) {
          oprot.writeFieldBegin(IDENTIFICACAO_USUARIO_CIDADAO_FIELD_DESC);
          struct.identificacaoUsuarioCidadao.write(oprot);
          oprot.writeFieldEnd();
        }
      }
      if (struct.informacoesSocioDemograficas != null) {
        if (struct.isSetInformacoesSocioDemograficas()) {
          oprot.writeFieldBegin(INFORMACOES_SOCIO_DEMOGRAFICAS_FIELD_DESC);
          struct.informacoesSocioDemograficas.write(oprot);
          oprot.writeFieldEnd();
        }
      }
      if (struct.isSetStatusTermoRecusaCadastroIndividualAtencaoBasica()) {
        oprot.writeFieldBegin(STATUS_TERMO_RECUSA_CADASTRO_INDIVIDUAL_ATENCAO_BASICA_FIELD_DESC);
        oprot.writeBool(struct.statusTermoRecusaCadastroIndividualAtencaoBasica);
        oprot.writeFieldEnd();
      }
      if (struct.isSetTpCdsOrigem()) {
        oprot.writeFieldBegin(TP_CDS_ORIGEM_FIELD_DESC);
        oprot.writeI32(struct.tpCdsOrigem);
        oprot.writeFieldEnd();
      }
      if (struct.uuid != null) {
        oprot.writeFieldBegin(UUID_FIELD_DESC);
        oprot.writeString(struct.uuid);
        oprot.writeFieldEnd();
      }
      if (struct.uuidFichaOriginadora != null) {
        if (struct.isSetUuidFichaOriginadora()) {
          oprot.writeFieldBegin(UUID_FICHA_ORIGINADORA_FIELD_DESC);
          oprot.writeString(struct.uuidFichaOriginadora);
          oprot.writeFieldEnd();
        }
      }
      if (struct.uuidCidadao != null) {
        if (struct.isSetUuidCidadao()) {
          oprot.writeFieldBegin(UUID_CIDADAO_FIELD_DESC);
          oprot.writeString(struct.uuidCidadao);
          oprot.writeFieldEnd();
        }
      }
      oprot.writeFieldStop();
      oprot.writeStructEnd();
    }

  }

  private static class CadastroIndividualThriftTupleSchemeFactory implements SchemeFactory {
    public CadastroIndividualThriftTupleScheme getScheme() {
      return new CadastroIndividualThriftTupleScheme();
    }
  }

  private static class CadastroIndividualThriftTupleScheme extends TupleScheme<CadastroIndividualThrift> {

    @Override
    public void write(org.apache.thrift.protocol.TProtocol prot, CadastroIndividualThrift struct) throws org.apache.thrift.TException {
      TTupleProtocol oprot = (TTupleProtocol) prot;
      struct.dadosGerais.write(oprot);
      oprot.writeString(struct.uuid);
      BitSet optionals = new BitSet();
      if (struct.isSetCondicoesDeSaude()) {
        optionals.set(0);
      }
      if (struct.isSetEmSituacaoDeRua()) {
        optionals.set(1);
      }
      if (struct.isSetFichaAtualizada()) {
        optionals.set(2);
      }
      if (struct.isSetIdentificacaoUsuarioCidadao()) {
        optionals.set(3);
      }
      if (struct.isSetInformacoesSocioDemograficas()) {
        optionals.set(4);
      }
      if (struct.isSetStatusTermoRecusaCadastroIndividualAtencaoBasica()) {
        optionals.set(5);
      }
      if (struct.isSetTpCdsOrigem()) {
        optionals.set(6);
      }
      if (struct.isSetUuidFichaOriginadora()) {
        optionals.set(7);
      }
      if (struct.isSetUuidCidadao()) {
        optionals.set(8);
      }
      oprot.writeBitSet(optionals, 9);
      if (struct.isSetCondicoesDeSaude()) {
        struct.condicoesDeSaude.write(oprot);
      }
      if (struct.isSetEmSituacaoDeRua()) {
        struct.emSituacaoDeRua.write(oprot);
      }
      if (struct.isSetFichaAtualizada()) {
        oprot.writeBool(struct.fichaAtualizada);
      }
      if (struct.isSetIdentificacaoUsuarioCidadao()) {
        struct.identificacaoUsuarioCidadao.write(oprot);
      }
      if (struct.isSetInformacoesSocioDemograficas()) {
        struct.informacoesSocioDemograficas.write(oprot);
      }
      if (struct.isSetStatusTermoRecusaCadastroIndividualAtencaoBasica()) {
        oprot.writeBool(struct.statusTermoRecusaCadastroIndividualAtencaoBasica);
      }
      if (struct.isSetTpCdsOrigem()) {
        oprot.writeI32(struct.tpCdsOrigem);
      }
      if (struct.isSetUuidFichaOriginadora()) {
        oprot.writeString(struct.uuidFichaOriginadora);
      }
      if (struct.isSetUuidCidadao()) {
        oprot.writeString(struct.uuidCidadao);
      }
    }

    @Override
    public void read(org.apache.thrift.protocol.TProtocol prot, CadastroIndividualThrift struct) throws org.apache.thrift.TException {
      TTupleProtocol iprot = (TTupleProtocol) prot;
      struct.dadosGerais = new br.gov.saude.esus.cds.transport.generated.thrift.common.HeaderCdsCadastroThrift();
      struct.dadosGerais.read(iprot);
      struct.setDadosGeraisIsSet(true);
      struct.uuid = iprot.readString();
      struct.setUuidIsSet(true);
      BitSet incoming = iprot.readBitSet(9);
      if (incoming.get(0)) {
        struct.condicoesDeSaude = new CondicoesDeSaudeThrift();
        struct.condicoesDeSaude.read(iprot);
        struct.setCondicoesDeSaudeIsSet(true);
      }
      if (incoming.get(1)) {
        struct.emSituacaoDeRua = new EmSituacaoDeRuaThrift();
        struct.emSituacaoDeRua.read(iprot);
        struct.setEmSituacaoDeRuaIsSet(true);
      }
      if (incoming.get(2)) {
        struct.fichaAtualizada = iprot.readBool();
        struct.setFichaAtualizadaIsSet(true);
      }
      if (incoming.get(3)) {
        struct.identificacaoUsuarioCidadao = new IdentificacaoUsuarioCidadaoThrift();
        struct.identificacaoUsuarioCidadao.read(iprot);
        struct.setIdentificacaoUsuarioCidadaoIsSet(true);
      }
      if (incoming.get(4)) {
        struct.informacoesSocioDemograficas = new InformacoesSocioDemograficasThrift();
        struct.informacoesSocioDemograficas.read(iprot);
        struct.setInformacoesSocioDemograficasIsSet(true);
      }
      if (incoming.get(5)) {
        struct.statusTermoRecusaCadastroIndividualAtencaoBasica = iprot.readBool();
        struct.setStatusTermoRecusaCadastroIndividualAtencaoBasicaIsSet(true);
      }
      if (incoming.get(6)) {
        struct.tpCdsOrigem = iprot.readI32();
        struct.setTpCdsOrigemIsSet(true);
      }
      if (incoming.get(7)) {
        struct.uuidFichaOriginadora = iprot.readString();
        struct.setUuidFichaOriginadoraIsSet(true);
      }
      if (incoming.get(8)) {
        struct.uuidCidadao = iprot.readString();
        struct.setUuidCidadaoIsSet(true);
      }
    }
  }

}

