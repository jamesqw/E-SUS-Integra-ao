/**
 * Autogenerated by Thrift Compiler (0.9.2)
 *
 * DO NOT EDIT UNLESS YOU ARE SURE THAT YOU KNOW WHAT YOU ARE DOING
 *  @generated
 */
package br.gov.saude.esus.cds.transport.generated.thrift.common;

import org.apache.thrift.scheme.IScheme;
import org.apache.thrift.scheme.SchemeFactory;
import org.apache.thrift.scheme.StandardScheme;

import org.apache.thrift.scheme.TupleScheme;
import org.apache.thrift.protocol.TTupleProtocol;
import org.apache.thrift.protocol.TProtocolException;
import org.apache.thrift.EncodingUtils;
import org.apache.thrift.TException;
import org.apache.thrift.async.AsyncMethodCallback;
import org.apache.thrift.server.AbstractNonblockingServer.*;
import java.util.List;
import java.util.ArrayList;
import java.util.Map;
import java.util.HashMap;
import java.util.EnumMap;
import java.util.Set;
import java.util.HashSet;
import java.util.EnumSet;
import java.util.Collections;
import java.util.BitSet;
import java.nio.ByteBuffer;
import java.util.Arrays;
import javax.annotation.Generated;
import org.slf4j.Logger;
import org.slf4j.LoggerFactory;

@SuppressWarnings({"cast", "rawtypes", "serial", "unchecked"})
@Generated(value = "Autogenerated by Thrift Compiler (0.9.2)", date = "2015-8-12")
public class VariasLotacoesHeaderThrift implements org.apache.thrift.TBase<VariasLotacoesHeaderThrift, VariasLotacoesHeaderThrift._Fields>, java.io.Serializable, Cloneable, Comparable<VariasLotacoesHeaderThrift> {
  private static final org.apache.thrift.protocol.TStruct STRUCT_DESC = new org.apache.thrift.protocol.TStruct("VariasLotacoesHeaderThrift");

  private static final org.apache.thrift.protocol.TField LOTACAO_FORM_FIELD_DESC = new org.apache.thrift.protocol.TField("lotacaoForm", org.apache.thrift.protocol.TType.STRUCT, (short)1);
  private static final org.apache.thrift.protocol.TField PROFISSIONAL_CNS1_FIELD_DESC = new org.apache.thrift.protocol.TField("profissionalCNS1", org.apache.thrift.protocol.TType.STRING, (short)2);
  private static final org.apache.thrift.protocol.TField CBO_CODIGO_2002_1_FIELD_DESC = new org.apache.thrift.protocol.TField("cboCodigo_2002_1", org.apache.thrift.protocol.TType.STRING, (short)3);
  private static final org.apache.thrift.protocol.TField PROFISSIONAL_CNS2_FIELD_DESC = new org.apache.thrift.protocol.TField("profissionalCNS2", org.apache.thrift.protocol.TType.STRING, (short)4);
  private static final org.apache.thrift.protocol.TField CBO_CODIGO_2002_2_FIELD_DESC = new org.apache.thrift.protocol.TField("cboCodigo_2002_2", org.apache.thrift.protocol.TType.STRING, (short)5);

  private static final Map<Class<? extends IScheme>, SchemeFactory> schemes = new HashMap<Class<? extends IScheme>, SchemeFactory>();
  static {
    schemes.put(StandardScheme.class, new VariasLotacoesHeaderThriftStandardSchemeFactory());
    schemes.put(TupleScheme.class, new VariasLotacoesHeaderThriftTupleSchemeFactory());
  }

  private UnicaLotacaoHeaderThrift lotacaoForm; // required
  private String profissionalCNS1; // optional
  private String cboCodigo_2002_1; // optional
  private String profissionalCNS2; // optional
  private String cboCodigo_2002_2; // optional

  /** The set of fields this struct contains, along with convenience methods for finding and manipulating them. */
  public enum _Fields implements org.apache.thrift.TFieldIdEnum {
    LOTACAO_FORM((short)1, "lotacaoForm"),
    PROFISSIONAL_CNS1((short)2, "profissionalCNS1"),
    CBO_CODIGO_2002_1((short)3, "cboCodigo_2002_1"),
    PROFISSIONAL_CNS2((short)4, "profissionalCNS2"),
    CBO_CODIGO_2002_2((short)5, "cboCodigo_2002_2");

    private static final Map<String, _Fields> byName = new HashMap<String, _Fields>();

    static {
      for (_Fields field : EnumSet.allOf(_Fields.class)) {
        byName.put(field.getFieldName(), field);
      }
    }

    /**
     * Find the _Fields constant that matches fieldId, or null if its not found.
     */
    public static _Fields findByThriftId(int fieldId) {
      switch(fieldId) {
        case 1: // LOTACAO_FORM
          return LOTACAO_FORM;
        case 2: // PROFISSIONAL_CNS1
          return PROFISSIONAL_CNS1;
        case 3: // CBO_CODIGO_2002_1
          return CBO_CODIGO_2002_1;
        case 4: // PROFISSIONAL_CNS2
          return PROFISSIONAL_CNS2;
        case 5: // CBO_CODIGO_2002_2
          return CBO_CODIGO_2002_2;
        default:
          return null;
      }
    }

    /**
     * Find the _Fields constant that matches fieldId, throwing an exception
     * if it is not found.
     */
    public static _Fields findByThriftIdOrThrow(int fieldId) {
      _Fields fields = findByThriftId(fieldId);
      if (fields == null) throw new IllegalArgumentException("Field " + fieldId + " doesn't exist!");
      return fields;
    }

    /**
     * Find the _Fields constant that matches name, or null if its not found.
     */
    public static _Fields findByName(String name) {
      return byName.get(name);
    }

    private final short _thriftId;
    private final String _fieldName;

    _Fields(short thriftId, String fieldName) {
      _thriftId = thriftId;
      _fieldName = fieldName;
    }

    public short getThriftFieldId() {
      return _thriftId;
    }

    public String getFieldName() {
      return _fieldName;
    }
  }

  // isset id assignments
  private static final _Fields optionals[] = {_Fields.PROFISSIONAL_CNS1,_Fields.CBO_CODIGO_2002_1,_Fields.PROFISSIONAL_CNS2,_Fields.CBO_CODIGO_2002_2};
  public static final Map<_Fields, org.apache.thrift.meta_data.FieldMetaData> metaDataMap;
  static {
    Map<_Fields, org.apache.thrift.meta_data.FieldMetaData> tmpMap = new EnumMap<_Fields, org.apache.thrift.meta_data.FieldMetaData>(_Fields.class);
    tmpMap.put(_Fields.LOTACAO_FORM, new org.apache.thrift.meta_data.FieldMetaData("lotacaoForm", org.apache.thrift.TFieldRequirementType.REQUIRED, 
        new org.apache.thrift.meta_data.StructMetaData(org.apache.thrift.protocol.TType.STRUCT, UnicaLotacaoHeaderThrift.class)));
    tmpMap.put(_Fields.PROFISSIONAL_CNS1, new org.apache.thrift.meta_data.FieldMetaData("profissionalCNS1", org.apache.thrift.TFieldRequirementType.OPTIONAL, 
        new org.apache.thrift.meta_data.FieldValueMetaData(org.apache.thrift.protocol.TType.STRING)));
    tmpMap.put(_Fields.CBO_CODIGO_2002_1, new org.apache.thrift.meta_data.FieldMetaData("cboCodigo_2002_1", org.apache.thrift.TFieldRequirementType.OPTIONAL, 
        new org.apache.thrift.meta_data.FieldValueMetaData(org.apache.thrift.protocol.TType.STRING)));
    tmpMap.put(_Fields.PROFISSIONAL_CNS2, new org.apache.thrift.meta_data.FieldMetaData("profissionalCNS2", org.apache.thrift.TFieldRequirementType.OPTIONAL, 
        new org.apache.thrift.meta_data.FieldValueMetaData(org.apache.thrift.protocol.TType.STRING)));
    tmpMap.put(_Fields.CBO_CODIGO_2002_2, new org.apache.thrift.meta_data.FieldMetaData("cboCodigo_2002_2", org.apache.thrift.TFieldRequirementType.OPTIONAL, 
        new org.apache.thrift.meta_data.FieldValueMetaData(org.apache.thrift.protocol.TType.STRING)));
    metaDataMap = Collections.unmodifiableMap(tmpMap);
    org.apache.thrift.meta_data.FieldMetaData.addStructMetaDataMap(VariasLotacoesHeaderThrift.class, metaDataMap);
  }

  public VariasLotacoesHeaderThrift() {
  }

  public VariasLotacoesHeaderThrift(
    UnicaLotacaoHeaderThrift lotacaoForm)
  {
    this();
    this.lotacaoForm = lotacaoForm;
  }

  /**
   * Performs a deep copy on <i>other</i>.
   */
  public VariasLotacoesHeaderThrift(VariasLotacoesHeaderThrift other) {
    if (other.isSetLotacaoForm()) {
      this.lotacaoForm = new UnicaLotacaoHeaderThrift(other.lotacaoForm);
    }
    if (other.isSetProfissionalCNS1()) {
      this.profissionalCNS1 = other.profissionalCNS1;
    }
    if (other.isSetCboCodigo_2002_1()) {
      this.cboCodigo_2002_1 = other.cboCodigo_2002_1;
    }
    if (other.isSetProfissionalCNS2()) {
      this.profissionalCNS2 = other.profissionalCNS2;
    }
    if (other.isSetCboCodigo_2002_2()) {
      this.cboCodigo_2002_2 = other.cboCodigo_2002_2;
    }
  }

  public VariasLotacoesHeaderThrift deepCopy() {
    return new VariasLotacoesHeaderThrift(this);
  }

  @Override
  public void clear() {
    this.lotacaoForm = null;
    this.profissionalCNS1 = null;
    this.cboCodigo_2002_1 = null;
    this.profissionalCNS2 = null;
    this.cboCodigo_2002_2 = null;
  }

  public UnicaLotacaoHeaderThrift getLotacaoForm() {
    return this.lotacaoForm;
  }

  public void setLotacaoForm(UnicaLotacaoHeaderThrift lotacaoForm) {
    this.lotacaoForm = lotacaoForm;
  }

  public void unsetLotacaoForm() {
    this.lotacaoForm = null;
  }

  /** Returns true if field lotacaoForm is set (has been assigned a value) and false otherwise */
  public boolean isSetLotacaoForm() {
    return this.lotacaoForm != null;
  }

  public void setLotacaoFormIsSet(boolean value) {
    if (!value) {
      this.lotacaoForm = null;
    }
  }

  public String getProfissionalCNS1() {
    return this.profissionalCNS1;
  }

  public void setProfissionalCNS1(String profissionalCNS1) {
    this.profissionalCNS1 = profissionalCNS1;
  }

  public void unsetProfissionalCNS1() {
    this.profissionalCNS1 = null;
  }

  /** Returns true if field profissionalCNS1 is set (has been assigned a value) and false otherwise */
  public boolean isSetProfissionalCNS1() {
    return this.profissionalCNS1 != null;
  }

  public void setProfissionalCNS1IsSet(boolean value) {
    if (!value) {
      this.profissionalCNS1 = null;
    }
  }

  public String getCboCodigo_2002_1() {
    return this.cboCodigo_2002_1;
  }

  public void setCboCodigo_2002_1(String cboCodigo_2002_1) {
    this.cboCodigo_2002_1 = cboCodigo_2002_1;
  }

  public void unsetCboCodigo_2002_1() {
    this.cboCodigo_2002_1 = null;
  }

  /** Returns true if field cboCodigo_2002_1 is set (has been assigned a value) and false otherwise */
  public boolean isSetCboCodigo_2002_1() {
    return this.cboCodigo_2002_1 != null;
  }

  public void setCboCodigo_2002_1IsSet(boolean value) {
    if (!value) {
      this.cboCodigo_2002_1 = null;
    }
  }

  public String getProfissionalCNS2() {
    return this.profissionalCNS2;
  }

  public void setProfissionalCNS2(String profissionalCNS2) {
    this.profissionalCNS2 = profissionalCNS2;
  }

  public void unsetProfissionalCNS2() {
    this.profissionalCNS2 = null;
  }

  /** Returns true if field profissionalCNS2 is set (has been assigned a value) and false otherwise */
  public boolean isSetProfissionalCNS2() {
    return this.profissionalCNS2 != null;
  }

  public void setProfissionalCNS2IsSet(boolean value) {
    if (!value) {
      this.profissionalCNS2 = null;
    }
  }

  public String getCboCodigo_2002_2() {
    return this.cboCodigo_2002_2;
  }

  public void setCboCodigo_2002_2(String cboCodigo_2002_2) {
    this.cboCodigo_2002_2 = cboCodigo_2002_2;
  }

  public void unsetCboCodigo_2002_2() {
    this.cboCodigo_2002_2 = null;
  }

  /** Returns true if field cboCodigo_2002_2 is set (has been assigned a value) and false otherwise */
  public boolean isSetCboCodigo_2002_2() {
    return this.cboCodigo_2002_2 != null;
  }

  public void setCboCodigo_2002_2IsSet(boolean value) {
    if (!value) {
      this.cboCodigo_2002_2 = null;
    }
  }

  public void setFieldValue(_Fields field, Object value) {
    switch (field) {
    case LOTACAO_FORM:
      if (value == null) {
        unsetLotacaoForm();
      } else {
        setLotacaoForm((UnicaLotacaoHeaderThrift)value);
      }
      break;

    case PROFISSIONAL_CNS1:
      if (value == null) {
        unsetProfissionalCNS1();
      } else {
        setProfissionalCNS1((String)value);
      }
      break;

    case CBO_CODIGO_2002_1:
      if (value == null) {
        unsetCboCodigo_2002_1();
      } else {
        setCboCodigo_2002_1((String)value);
      }
      break;

    case PROFISSIONAL_CNS2:
      if (value == null) {
        unsetProfissionalCNS2();
      } else {
        setProfissionalCNS2((String)value);
      }
      break;

    case CBO_CODIGO_2002_2:
      if (value == null) {
        unsetCboCodigo_2002_2();
      } else {
        setCboCodigo_2002_2((String)value);
      }
      break;

    }
  }

  public Object getFieldValue(_Fields field) {
    switch (field) {
    case LOTACAO_FORM:
      return getLotacaoForm();

    case PROFISSIONAL_CNS1:
      return getProfissionalCNS1();

    case CBO_CODIGO_2002_1:
      return getCboCodigo_2002_1();

    case PROFISSIONAL_CNS2:
      return getProfissionalCNS2();

    case CBO_CODIGO_2002_2:
      return getCboCodigo_2002_2();

    }
    throw new IllegalStateException();
  }

  /** Returns true if field corresponding to fieldID is set (has been assigned a value) and false otherwise */
  public boolean isSet(_Fields field) {
    if (field == null) {
      throw new IllegalArgumentException();
    }

    switch (field) {
    case LOTACAO_FORM:
      return isSetLotacaoForm();
    case PROFISSIONAL_CNS1:
      return isSetProfissionalCNS1();
    case CBO_CODIGO_2002_1:
      return isSetCboCodigo_2002_1();
    case PROFISSIONAL_CNS2:
      return isSetProfissionalCNS2();
    case CBO_CODIGO_2002_2:
      return isSetCboCodigo_2002_2();
    }
    throw new IllegalStateException();
  }

  @Override
  public boolean equals(Object that) {
    if (that == null)
      return false;
    if (that instanceof VariasLotacoesHeaderThrift)
      return this.equals((VariasLotacoesHeaderThrift)that);
    return false;
  }

  public boolean equals(VariasLotacoesHeaderThrift that) {
    if (that == null)
      return false;

    boolean this_present_lotacaoForm = true && this.isSetLotacaoForm();
    boolean that_present_lotacaoForm = true && that.isSetLotacaoForm();
    if (this_present_lotacaoForm || that_present_lotacaoForm) {
      if (!(this_present_lotacaoForm && that_present_lotacaoForm))
        return false;
      if (!this.lotacaoForm.equals(that.lotacaoForm))
        return false;
    }

    boolean this_present_profissionalCNS1 = true && this.isSetProfissionalCNS1();
    boolean that_present_profissionalCNS1 = true && that.isSetProfissionalCNS1();
    if (this_present_profissionalCNS1 || that_present_profissionalCNS1) {
      if (!(this_present_profissionalCNS1 && that_present_profissionalCNS1))
        return false;
      if (!this.profissionalCNS1.equals(that.profissionalCNS1))
        return false;
    }

    boolean this_present_cboCodigo_2002_1 = true && this.isSetCboCodigo_2002_1();
    boolean that_present_cboCodigo_2002_1 = true && that.isSetCboCodigo_2002_1();
    if (this_present_cboCodigo_2002_1 || that_present_cboCodigo_2002_1) {
      if (!(this_present_cboCodigo_2002_1 && that_present_cboCodigo_2002_1))
        return false;
      if (!this.cboCodigo_2002_1.equals(that.cboCodigo_2002_1))
        return false;
    }

    boolean this_present_profissionalCNS2 = true && this.isSetProfissionalCNS2();
    boolean that_present_profissionalCNS2 = true && that.isSetProfissionalCNS2();
    if (this_present_profissionalCNS2 || that_present_profissionalCNS2) {
      if (!(this_present_profissionalCNS2 && that_present_profissionalCNS2))
        return false;
      if (!this.profissionalCNS2.equals(that.profissionalCNS2))
        return false;
    }

    boolean this_present_cboCodigo_2002_2 = true && this.isSetCboCodigo_2002_2();
    boolean that_present_cboCodigo_2002_2 = true && that.isSetCboCodigo_2002_2();
    if (this_present_cboCodigo_2002_2 || that_present_cboCodigo_2002_2) {
      if (!(this_present_cboCodigo_2002_2 && that_present_cboCodigo_2002_2))
        return false;
      if (!this.cboCodigo_2002_2.equals(that.cboCodigo_2002_2))
        return false;
    }

    return true;
  }

  @Override
  public int hashCode() {
    List<Object> list = new ArrayList<Object>();

    boolean present_lotacaoForm = true && (isSetLotacaoForm());
    list.add(present_lotacaoForm);
    if (present_lotacaoForm)
      list.add(lotacaoForm);

    boolean present_profissionalCNS1 = true && (isSetProfissionalCNS1());
    list.add(present_profissionalCNS1);
    if (present_profissionalCNS1)
      list.add(profissionalCNS1);

    boolean present_cboCodigo_2002_1 = true && (isSetCboCodigo_2002_1());
    list.add(present_cboCodigo_2002_1);
    if (present_cboCodigo_2002_1)
      list.add(cboCodigo_2002_1);

    boolean present_profissionalCNS2 = true && (isSetProfissionalCNS2());
    list.add(present_profissionalCNS2);
    if (present_profissionalCNS2)
      list.add(profissionalCNS2);

    boolean present_cboCodigo_2002_2 = true && (isSetCboCodigo_2002_2());
    list.add(present_cboCodigo_2002_2);
    if (present_cboCodigo_2002_2)
      list.add(cboCodigo_2002_2);

    return list.hashCode();
  }

  @Override
  public int compareTo(VariasLotacoesHeaderThrift other) {
    if (!getClass().equals(other.getClass())) {
      return getClass().getName().compareTo(other.getClass().getName());
    }

    int lastComparison = 0;

    lastComparison = Boolean.valueOf(isSetLotacaoForm()).compareTo(other.isSetLotacaoForm());
    if (lastComparison != 0) {
      return lastComparison;
    }
    if (isSetLotacaoForm()) {
      lastComparison = org.apache.thrift.TBaseHelper.compareTo(this.lotacaoForm, other.lotacaoForm);
      if (lastComparison != 0) {
        return lastComparison;
      }
    }
    lastComparison = Boolean.valueOf(isSetProfissionalCNS1()).compareTo(other.isSetProfissionalCNS1());
    if (lastComparison != 0) {
      return lastComparison;
    }
    if (isSetProfissionalCNS1()) {
      lastComparison = org.apache.thrift.TBaseHelper.compareTo(this.profissionalCNS1, other.profissionalCNS1);
      if (lastComparison != 0) {
        return lastComparison;
      }
    }
    lastComparison = Boolean.valueOf(isSetCboCodigo_2002_1()).compareTo(other.isSetCboCodigo_2002_1());
    if (lastComparison != 0) {
      return lastComparison;
    }
    if (isSetCboCodigo_2002_1()) {
      lastComparison = org.apache.thrift.TBaseHelper.compareTo(this.cboCodigo_2002_1, other.cboCodigo_2002_1);
      if (lastComparison != 0) {
        return lastComparison;
      }
    }
    lastComparison = Boolean.valueOf(isSetProfissionalCNS2()).compareTo(other.isSetProfissionalCNS2());
    if (lastComparison != 0) {
      return lastComparison;
    }
    if (isSetProfissionalCNS2()) {
      lastComparison = org.apache.thrift.TBaseHelper.compareTo(this.profissionalCNS2, other.profissionalCNS2);
      if (lastComparison != 0) {
        return lastComparison;
      }
    }
    lastComparison = Boolean.valueOf(isSetCboCodigo_2002_2()).compareTo(other.isSetCboCodigo_2002_2());
    if (lastComparison != 0) {
      return lastComparison;
    }
    if (isSetCboCodigo_2002_2()) {
      lastComparison = org.apache.thrift.TBaseHelper.compareTo(this.cboCodigo_2002_2, other.cboCodigo_2002_2);
      if (lastComparison != 0) {
        return lastComparison;
      }
    }
    return 0;
  }

  public _Fields fieldForId(int fieldId) {
    return _Fields.findByThriftId(fieldId);
  }

  public void read(org.apache.thrift.protocol.TProtocol iprot) throws org.apache.thrift.TException {
    schemes.get(iprot.getScheme()).getScheme().read(iprot, this);
  }

  public void write(org.apache.thrift.protocol.TProtocol oprot) throws org.apache.thrift.TException {
    schemes.get(oprot.getScheme()).getScheme().write(oprot, this);
  }

  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder("VariasLotacoesHeaderThrift(");
    boolean first = true;

    sb.append("lotacaoForm:");
    if (this.lotacaoForm == null) {
      sb.append("null");
    } else {
      sb.append(this.lotacaoForm);
    }
    first = false;
    if (isSetProfissionalCNS1()) {
      if (!first) sb.append(", ");
      sb.append("profissionalCNS1:");
      if (this.profissionalCNS1 == null) {
        sb.append("null");
      } else {
        sb.append(this.profissionalCNS1);
      }
      first = false;
    }
    if (isSetCboCodigo_2002_1()) {
      if (!first) sb.append(", ");
      sb.append("cboCodigo_2002_1:");
      if (this.cboCodigo_2002_1 == null) {
        sb.append("null");
      } else {
        sb.append(this.cboCodigo_2002_1);
      }
      first = false;
    }
    if (isSetProfissionalCNS2()) {
      if (!first) sb.append(", ");
      sb.append("profissionalCNS2:");
      if (this.profissionalCNS2 == null) {
        sb.append("null");
      } else {
        sb.append(this.profissionalCNS2);
      }
      first = false;
    }
    if (isSetCboCodigo_2002_2()) {
      if (!first) sb.append(", ");
      sb.append("cboCodigo_2002_2:");
      if (this.cboCodigo_2002_2 == null) {
        sb.append("null");
      } else {
        sb.append(this.cboCodigo_2002_2);
      }
      first = false;
    }
    sb.append(")");
    return sb.toString();
  }

  public void validate() throws org.apache.thrift.TException {
    // check for required fields
    if (!isSetLotacaoForm()) {
      throw new org.apache.thrift.protocol.TProtocolException("Required field 'lotacaoForm' is unset! Struct:" + toString());
    }

    // check for sub-struct validity
    if (lotacaoForm != null) {
      lotacaoForm.validate();
    }
  }

  private void writeObject(java.io.ObjectOutputStream out) throws java.io.IOException {
    try {
      write(new org.apache.thrift.protocol.TCompactProtocol(new org.apache.thrift.transport.TIOStreamTransport(out)));
    } catch (org.apache.thrift.TException te) {
      throw new java.io.IOException(te);
    }
  }

  private void readObject(java.io.ObjectInputStream in) throws java.io.IOException, ClassNotFoundException {
    try {
      read(new org.apache.thrift.protocol.TCompactProtocol(new org.apache.thrift.transport.TIOStreamTransport(in)));
    } catch (org.apache.thrift.TException te) {
      throw new java.io.IOException(te);
    }
  }

  private static class VariasLotacoesHeaderThriftStandardSchemeFactory implements SchemeFactory {
    public VariasLotacoesHeaderThriftStandardScheme getScheme() {
      return new VariasLotacoesHeaderThriftStandardScheme();
    }
  }

  private static class VariasLotacoesHeaderThriftStandardScheme extends StandardScheme<VariasLotacoesHeaderThrift> {

    public void read(org.apache.thrift.protocol.TProtocol iprot, VariasLotacoesHeaderThrift struct) throws org.apache.thrift.TException {
      org.apache.thrift.protocol.TField schemeField;
      iprot.readStructBegin();
      while (true)
      {
        schemeField = iprot.readFieldBegin();
        if (schemeField.type == org.apache.thrift.protocol.TType.STOP) { 
          break;
        }
        switch (schemeField.id) {
          case 1: // LOTACAO_FORM
            if (schemeField.type == org.apache.thrift.protocol.TType.STRUCT) {
              struct.lotacaoForm = new UnicaLotacaoHeaderThrift();
              struct.lotacaoForm.read(iprot);
              struct.setLotacaoFormIsSet(true);
            } else { 
              org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
            }
            break;
          case 2: // PROFISSIONAL_CNS1
            if (schemeField.type == org.apache.thrift.protocol.TType.STRING) {
              struct.profissionalCNS1 = iprot.readString();
              struct.setProfissionalCNS1IsSet(true);
            } else { 
              org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
            }
            break;
          case 3: // CBO_CODIGO_2002_1
            if (schemeField.type == org.apache.thrift.protocol.TType.STRING) {
              struct.cboCodigo_2002_1 = iprot.readString();
              struct.setCboCodigo_2002_1IsSet(true);
            } else { 
              org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
            }
            break;
          case 4: // PROFISSIONAL_CNS2
            if (schemeField.type == org.apache.thrift.protocol.TType.STRING) {
              struct.profissionalCNS2 = iprot.readString();
              struct.setProfissionalCNS2IsSet(true);
            } else { 
              org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
            }
            break;
          case 5: // CBO_CODIGO_2002_2
            if (schemeField.type == org.apache.thrift.protocol.TType.STRING) {
              struct.cboCodigo_2002_2 = iprot.readString();
              struct.setCboCodigo_2002_2IsSet(true);
            } else { 
              org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
            }
            break;
          default:
            org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
        }
        iprot.readFieldEnd();
      }
      iprot.readStructEnd();
      struct.validate();
    }

    public void write(org.apache.thrift.protocol.TProtocol oprot, VariasLotacoesHeaderThrift struct) throws org.apache.thrift.TException {
      struct.validate();

      oprot.writeStructBegin(STRUCT_DESC);
      if (struct.lotacaoForm != null) {
        oprot.writeFieldBegin(LOTACAO_FORM_FIELD_DESC);
        struct.lotacaoForm.write(oprot);
        oprot.writeFieldEnd();
      }
      if (struct.profissionalCNS1 != null) {
        if (struct.isSetProfissionalCNS1()) {
          oprot.writeFieldBegin(PROFISSIONAL_CNS1_FIELD_DESC);
          oprot.writeString(struct.profissionalCNS1);
          oprot.writeFieldEnd();
        }
      }
      if (struct.cboCodigo_2002_1 != null) {
        if (struct.isSetCboCodigo_2002_1()) {
          oprot.writeFieldBegin(CBO_CODIGO_2002_1_FIELD_DESC);
          oprot.writeString(struct.cboCodigo_2002_1);
          oprot.writeFieldEnd();
        }
      }
      if (struct.profissionalCNS2 != null) {
        if (struct.isSetProfissionalCNS2()) {
          oprot.writeFieldBegin(PROFISSIONAL_CNS2_FIELD_DESC);
          oprot.writeString(struct.profissionalCNS2);
          oprot.writeFieldEnd();
        }
      }
      if (struct.cboCodigo_2002_2 != null) {
        if (struct.isSetCboCodigo_2002_2()) {
          oprot.writeFieldBegin(CBO_CODIGO_2002_2_FIELD_DESC);
          oprot.writeString(struct.cboCodigo_2002_2);
          oprot.writeFieldEnd();
        }
      }
      oprot.writeFieldStop();
      oprot.writeStructEnd();
    }

  }

  private static class VariasLotacoesHeaderThriftTupleSchemeFactory implements SchemeFactory {
    public VariasLotacoesHeaderThriftTupleScheme getScheme() {
      return new VariasLotacoesHeaderThriftTupleScheme();
    }
  }

  private static class VariasLotacoesHeaderThriftTupleScheme extends TupleScheme<VariasLotacoesHeaderThrift> {

    @Override
    public void write(org.apache.thrift.protocol.TProtocol prot, VariasLotacoesHeaderThrift struct) throws org.apache.thrift.TException {
      TTupleProtocol oprot = (TTupleProtocol) prot;
      struct.lotacaoForm.write(oprot);
      BitSet optionals = new BitSet();
      if (struct.isSetProfissionalCNS1()) {
        optionals.set(0);
      }
      if (struct.isSetCboCodigo_2002_1()) {
        optionals.set(1);
      }
      if (struct.isSetProfissionalCNS2()) {
        optionals.set(2);
      }
      if (struct.isSetCboCodigo_2002_2()) {
        optionals.set(3);
      }
      oprot.writeBitSet(optionals, 4);
      if (struct.isSetProfissionalCNS1()) {
        oprot.writeString(struct.profissionalCNS1);
      }
      if (struct.isSetCboCodigo_2002_1()) {
        oprot.writeString(struct.cboCodigo_2002_1);
      }
      if (struct.isSetProfissionalCNS2()) {
        oprot.writeString(struct.profissionalCNS2);
      }
      if (struct.isSetCboCodigo_2002_2()) {
        oprot.writeString(struct.cboCodigo_2002_2);
      }
    }

    @Override
    public void read(org.apache.thrift.protocol.TProtocol prot, VariasLotacoesHeaderThrift struct) throws org.apache.thrift.TException {
      TTupleProtocol iprot = (TTupleProtocol) prot;
      struct.lotacaoForm = new UnicaLotacaoHeaderThrift();
      struct.lotacaoForm.read(iprot);
      struct.setLotacaoFormIsSet(true);
      BitSet incoming = iprot.readBitSet(4);
      if (incoming.get(0)) {
        struct.profissionalCNS1 = iprot.readString();
        struct.setProfissionalCNS1IsSet(true);
      }
      if (incoming.get(1)) {
        struct.cboCodigo_2002_1 = iprot.readString();
        struct.setCboCodigo_2002_1IsSet(true);
      }
      if (incoming.get(2)) {
        struct.profissionalCNS2 = iprot.readString();
        struct.setProfissionalCNS2IsSet(true);
      }
      if (incoming.get(3)) {
        struct.cboCodigo_2002_2 = iprot.readString();
        struct.setCboCodigo_2002_2IsSet(true);
      }
    }
  }

}

