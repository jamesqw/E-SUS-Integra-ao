/**
 * Autogenerated by Thrift Compiler (0.9.2)
 *
 * DO NOT EDIT UNLESS YOU ARE SURE THAT YOU KNOW WHAT YOU ARE DOING
 *  @generated
 */
package br.gov.saude.esus.transport.common.generated.thrift;

import org.apache.thrift.scheme.IScheme;
import org.apache.thrift.scheme.SchemeFactory;
import org.apache.thrift.scheme.StandardScheme;

import org.apache.thrift.scheme.TupleScheme;
import org.apache.thrift.protocol.TTupleProtocol;
import org.apache.thrift.protocol.TProtocolException;
import org.apache.thrift.EncodingUtils;
import org.apache.thrift.TException;
import org.apache.thrift.async.AsyncMethodCallback;
import org.apache.thrift.server.AbstractNonblockingServer.*;
import java.util.List;
import java.util.ArrayList;
import java.util.Map;
import java.util.HashMap;
import java.util.EnumMap;
import java.util.Set;
import java.util.HashSet;
import java.util.EnumSet;
import java.util.Collections;
import java.util.BitSet;
import java.nio.ByteBuffer;
import java.util.Arrays;
import javax.annotation.Generated;
import org.slf4j.Logger;
import org.slf4j.LoggerFactory;

@SuppressWarnings({"cast", "rawtypes", "serial", "unchecked"})
/**
 * Dados para identificar a instalacao que cadastrou/gerou os dados e/ou enviou<br />
 * Obs. Se for Admin ou 'schedule' não terá Unidade de Saude
 */
@Generated(value = "Autogenerated by Thrift Compiler (0.9.2)", date = "2015-6-16")
public class DadoInstalacaoThrift implements org.apache.thrift.TBase<DadoInstalacaoThrift, DadoInstalacaoThrift._Fields>, java.io.Serializable, Cloneable, Comparable<DadoInstalacaoThrift> {
  private static final org.apache.thrift.protocol.TStruct STRUCT_DESC = new org.apache.thrift.protocol.TStruct("DadoInstalacaoThrift");

  private static final org.apache.thrift.protocol.TField CONTRA_CHAVE_FIELD_DESC = new org.apache.thrift.protocol.TField("contraChave", org.apache.thrift.protocol.TType.STRING, (short)1);
  private static final org.apache.thrift.protocol.TField UUID_INSTALACAO_FIELD_DESC = new org.apache.thrift.protocol.TField("uuidInstalacao", org.apache.thrift.protocol.TType.STRING, (short)2);
  private static final org.apache.thrift.protocol.TField CPF_OU_CNPJ_FIELD_DESC = new org.apache.thrift.protocol.TField("cpfOuCnpj", org.apache.thrift.protocol.TType.STRING, (short)3);
  private static final org.apache.thrift.protocol.TField NOME_OU_RAZAO_SOCIAL_FIELD_DESC = new org.apache.thrift.protocol.TField("nomeOuRazaoSocial", org.apache.thrift.protocol.TType.STRING, (short)4);
  private static final org.apache.thrift.protocol.TField FONE_FIELD_DESC = new org.apache.thrift.protocol.TField("fone", org.apache.thrift.protocol.TType.STRING, (short)5);
  private static final org.apache.thrift.protocol.TField EMAIL_FIELD_DESC = new org.apache.thrift.protocol.TField("email", org.apache.thrift.protocol.TType.STRING, (short)6);

  private static final Map<Class<? extends IScheme>, SchemeFactory> schemes = new HashMap<Class<? extends IScheme>, SchemeFactory>();
  static {
    schemes.put(StandardScheme.class, new DadoInstalacaoThriftStandardSchemeFactory());
    schemes.put(TupleScheme.class, new DadoInstalacaoThriftTupleSchemeFactory());
  }

  private String contraChave; // required
  private String uuidInstalacao; // optional
  private String cpfOuCnpj; // required
  private String nomeOuRazaoSocial; // required
  private String fone; // optional
  private String email; // optional

  /** The set of fields this struct contains, along with convenience methods for finding and manipulating them. */
  public enum _Fields implements org.apache.thrift.TFieldIdEnum {
    /**
     * Identifica o software (pec/cds, cdsOff ou software de terceiros)
     */
    CONTRA_CHAVE((short)1, "contraChave"),
    /**
     * 
     */
    UUID_INSTALACAO((short)2, "uuidInstalacao"),
    /**
     * Cpf do responsável ou CNPJ da empresa responsável
     */
    CPF_OU_CNPJ((short)3, "cpfOuCnpj"),
    /**
     * Nome do responsável ou Razão Social da empresa responsável
     */
    NOME_OU_RAZAO_SOCIAL((short)4, "nomeOuRazaoSocial"),
    /**
     * Telefone da pessoa ou empresa responsável
     */
    FONE((short)5, "fone"),
    /**
     * Email da pessoa ou empresa responsável
     */
    EMAIL((short)6, "email");

    private static final Map<String, _Fields> byName = new HashMap<String, _Fields>();

    static {
      for (_Fields field : EnumSet.allOf(_Fields.class)) {
        byName.put(field.getFieldName(), field);
      }
    }

    /**
     * Find the _Fields constant that matches fieldId, or null if its not found.
     */
    public static _Fields findByThriftId(int fieldId) {
      switch(fieldId) {
        case 1: // CONTRA_CHAVE
          return CONTRA_CHAVE;
        case 2: // UUID_INSTALACAO
          return UUID_INSTALACAO;
        case 3: // CPF_OU_CNPJ
          return CPF_OU_CNPJ;
        case 4: // NOME_OU_RAZAO_SOCIAL
          return NOME_OU_RAZAO_SOCIAL;
        case 5: // FONE
          return FONE;
        case 6: // EMAIL
          return EMAIL;
        default:
          return null;
      }
    }

    /**
     * Find the _Fields constant that matches fieldId, throwing an exception
     * if it is not found.
     */
    public static _Fields findByThriftIdOrThrow(int fieldId) {
      _Fields fields = findByThriftId(fieldId);
      if (fields == null) throw new IllegalArgumentException("Field " + fieldId + " doesn't exist!");
      return fields;
    }

    /**
     * Find the _Fields constant that matches name, or null if its not found.
     */
    public static _Fields findByName(String name) {
      return byName.get(name);
    }

    private final short _thriftId;
    private final String _fieldName;

    _Fields(short thriftId, String fieldName) {
      _thriftId = thriftId;
      _fieldName = fieldName;
    }

    public short getThriftFieldId() {
      return _thriftId;
    }

    public String getFieldName() {
      return _fieldName;
    }
  }

  // isset id assignments
  private static final _Fields optionals[] = {_Fields.UUID_INSTALACAO,_Fields.FONE,_Fields.EMAIL};
  public static final Map<_Fields, org.apache.thrift.meta_data.FieldMetaData> metaDataMap;
  static {
    Map<_Fields, org.apache.thrift.meta_data.FieldMetaData> tmpMap = new EnumMap<_Fields, org.apache.thrift.meta_data.FieldMetaData>(_Fields.class);
    tmpMap.put(_Fields.CONTRA_CHAVE, new org.apache.thrift.meta_data.FieldMetaData("contraChave", org.apache.thrift.TFieldRequirementType.REQUIRED, 
        new org.apache.thrift.meta_data.FieldValueMetaData(org.apache.thrift.protocol.TType.STRING)));
    tmpMap.put(_Fields.UUID_INSTALACAO, new org.apache.thrift.meta_data.FieldMetaData("uuidInstalacao", org.apache.thrift.TFieldRequirementType.OPTIONAL, 
        new org.apache.thrift.meta_data.FieldValueMetaData(org.apache.thrift.protocol.TType.STRING)));
    tmpMap.put(_Fields.CPF_OU_CNPJ, new org.apache.thrift.meta_data.FieldMetaData("cpfOuCnpj", org.apache.thrift.TFieldRequirementType.REQUIRED, 
        new org.apache.thrift.meta_data.FieldValueMetaData(org.apache.thrift.protocol.TType.STRING)));
    tmpMap.put(_Fields.NOME_OU_RAZAO_SOCIAL, new org.apache.thrift.meta_data.FieldMetaData("nomeOuRazaoSocial", org.apache.thrift.TFieldRequirementType.REQUIRED, 
        new org.apache.thrift.meta_data.FieldValueMetaData(org.apache.thrift.protocol.TType.STRING)));
    tmpMap.put(_Fields.FONE, new org.apache.thrift.meta_data.FieldMetaData("fone", org.apache.thrift.TFieldRequirementType.OPTIONAL, 
        new org.apache.thrift.meta_data.FieldValueMetaData(org.apache.thrift.protocol.TType.STRING)));
    tmpMap.put(_Fields.EMAIL, new org.apache.thrift.meta_data.FieldMetaData("email", org.apache.thrift.TFieldRequirementType.OPTIONAL, 
        new org.apache.thrift.meta_data.FieldValueMetaData(org.apache.thrift.protocol.TType.STRING)));
    metaDataMap = Collections.unmodifiableMap(tmpMap);
    org.apache.thrift.meta_data.FieldMetaData.addStructMetaDataMap(DadoInstalacaoThrift.class, metaDataMap);
  }

  public DadoInstalacaoThrift() {
  }

  public DadoInstalacaoThrift(
    String contraChave,
    String cpfOuCnpj,
    String nomeOuRazaoSocial)
  {
    this();
    this.contraChave = contraChave;
    this.cpfOuCnpj = cpfOuCnpj;
    this.nomeOuRazaoSocial = nomeOuRazaoSocial;
  }

  /**
   * Performs a deep copy on <i>other</i>.
   */
  public DadoInstalacaoThrift(DadoInstalacaoThrift other) {
    if (other.isSetContraChave()) {
      this.contraChave = other.contraChave;
    }
    if (other.isSetUuidInstalacao()) {
      this.uuidInstalacao = other.uuidInstalacao;
    }
    if (other.isSetCpfOuCnpj()) {
      this.cpfOuCnpj = other.cpfOuCnpj;
    }
    if (other.isSetNomeOuRazaoSocial()) {
      this.nomeOuRazaoSocial = other.nomeOuRazaoSocial;
    }
    if (other.isSetFone()) {
      this.fone = other.fone;
    }
    if (other.isSetEmail()) {
      this.email = other.email;
    }
  }

  public DadoInstalacaoThrift deepCopy() {
    return new DadoInstalacaoThrift(this);
  }

  @Override
  public void clear() {
    this.contraChave = null;
    this.uuidInstalacao = null;
    this.cpfOuCnpj = null;
    this.nomeOuRazaoSocial = null;
    this.fone = null;
    this.email = null;
  }

  /**
   * Identifica o software (pec/cds, cdsOff ou software de terceiros)
   */
  public String getContraChave() {
    return this.contraChave;
  }

  /**
   * Identifica o software (pec/cds, cdsOff ou software de terceiros)
   */
  public void setContraChave(String contraChave) {
    this.contraChave = contraChave;
  }

  public void unsetContraChave() {
    this.contraChave = null;
  }

  /** Returns true if field contraChave is set (has been assigned a value) and false otherwise */
  public boolean isSetContraChave() {
    return this.contraChave != null;
  }

  public void setContraChaveIsSet(boolean value) {
    if (!value) {
      this.contraChave = null;
    }
  }

  /**
   * 
   */
  public String getUuidInstalacao() {
    return this.uuidInstalacao;
  }

  /**
   * 
   */
  public void setUuidInstalacao(String uuidInstalacao) {
    this.uuidInstalacao = uuidInstalacao;
  }

  public void unsetUuidInstalacao() {
    this.uuidInstalacao = null;
  }

  /** Returns true if field uuidInstalacao is set (has been assigned a value) and false otherwise */
  public boolean isSetUuidInstalacao() {
    return this.uuidInstalacao != null;
  }

  public void setUuidInstalacaoIsSet(boolean value) {
    if (!value) {
      this.uuidInstalacao = null;
    }
  }

  /**
   * Cpf do responsável ou CNPJ da empresa responsável
   */
  public String getCpfOuCnpj() {
    return this.cpfOuCnpj;
  }

  /**
   * Cpf do responsável ou CNPJ da empresa responsável
   */
  public void setCpfOuCnpj(String cpfOuCnpj) {
    this.cpfOuCnpj = cpfOuCnpj;
  }

  public void unsetCpfOuCnpj() {
    this.cpfOuCnpj = null;
  }

  /** Returns true if field cpfOuCnpj is set (has been assigned a value) and false otherwise */
  public boolean isSetCpfOuCnpj() {
    return this.cpfOuCnpj != null;
  }

  public void setCpfOuCnpjIsSet(boolean value) {
    if (!value) {
      this.cpfOuCnpj = null;
    }
  }

  /**
   * Nome do responsável ou Razão Social da empresa responsável
   */
  public String getNomeOuRazaoSocial() {
    return this.nomeOuRazaoSocial;
  }

  /**
   * Nome do responsável ou Razão Social da empresa responsável
   */
  public void setNomeOuRazaoSocial(String nomeOuRazaoSocial) {
    this.nomeOuRazaoSocial = nomeOuRazaoSocial;
  }

  public void unsetNomeOuRazaoSocial() {
    this.nomeOuRazaoSocial = null;
  }

  /** Returns true if field nomeOuRazaoSocial is set (has been assigned a value) and false otherwise */
  public boolean isSetNomeOuRazaoSocial() {
    return this.nomeOuRazaoSocial != null;
  }

  public void setNomeOuRazaoSocialIsSet(boolean value) {
    if (!value) {
      this.nomeOuRazaoSocial = null;
    }
  }

  /**
   * Telefone da pessoa ou empresa responsável
   */
  public String getFone() {
    return this.fone;
  }

  /**
   * Telefone da pessoa ou empresa responsável
   */
  public void setFone(String fone) {
    this.fone = fone;
  }

  public void unsetFone() {
    this.fone = null;
  }

  /** Returns true if field fone is set (has been assigned a value) and false otherwise */
  public boolean isSetFone() {
    return this.fone != null;
  }

  public void setFoneIsSet(boolean value) {
    if (!value) {
      this.fone = null;
    }
  }

  /**
   * Email da pessoa ou empresa responsável
   */
  public String getEmail() {
    return this.email;
  }

  /**
   * Email da pessoa ou empresa responsável
   */
  public void setEmail(String email) {
    this.email = email;
  }

  public void unsetEmail() {
    this.email = null;
  }

  /** Returns true if field email is set (has been assigned a value) and false otherwise */
  public boolean isSetEmail() {
    return this.email != null;
  }

  public void setEmailIsSet(boolean value) {
    if (!value) {
      this.email = null;
    }
  }

  public void setFieldValue(_Fields field, Object value) {
    switch (field) {
    case CONTRA_CHAVE:
      if (value == null) {
        unsetContraChave();
      } else {
        setContraChave((String)value);
      }
      break;

    case UUID_INSTALACAO:
      if (value == null) {
        unsetUuidInstalacao();
      } else {
        setUuidInstalacao((String)value);
      }
      break;

    case CPF_OU_CNPJ:
      if (value == null) {
        unsetCpfOuCnpj();
      } else {
        setCpfOuCnpj((String)value);
      }
      break;

    case NOME_OU_RAZAO_SOCIAL:
      if (value == null) {
        unsetNomeOuRazaoSocial();
      } else {
        setNomeOuRazaoSocial((String)value);
      }
      break;

    case FONE:
      if (value == null) {
        unsetFone();
      } else {
        setFone((String)value);
      }
      break;

    case EMAIL:
      if (value == null) {
        unsetEmail();
      } else {
        setEmail((String)value);
      }
      break;

    }
  }

  public Object getFieldValue(_Fields field) {
    switch (field) {
    case CONTRA_CHAVE:
      return getContraChave();

    case UUID_INSTALACAO:
      return getUuidInstalacao();

    case CPF_OU_CNPJ:
      return getCpfOuCnpj();

    case NOME_OU_RAZAO_SOCIAL:
      return getNomeOuRazaoSocial();

    case FONE:
      return getFone();

    case EMAIL:
      return getEmail();

    }
    throw new IllegalStateException();
  }

  /** Returns true if field corresponding to fieldID is set (has been assigned a value) and false otherwise */
  public boolean isSet(_Fields field) {
    if (field == null) {
      throw new IllegalArgumentException();
    }

    switch (field) {
    case CONTRA_CHAVE:
      return isSetContraChave();
    case UUID_INSTALACAO:
      return isSetUuidInstalacao();
    case CPF_OU_CNPJ:
      return isSetCpfOuCnpj();
    case NOME_OU_RAZAO_SOCIAL:
      return isSetNomeOuRazaoSocial();
    case FONE:
      return isSetFone();
    case EMAIL:
      return isSetEmail();
    }
    throw new IllegalStateException();
  }

  @Override
  public boolean equals(Object that) {
    if (that == null)
      return false;
    if (that instanceof DadoInstalacaoThrift)
      return this.equals((DadoInstalacaoThrift)that);
    return false;
  }

  public boolean equals(DadoInstalacaoThrift that) {
    if (that == null)
      return false;

    boolean this_present_contraChave = true && this.isSetContraChave();
    boolean that_present_contraChave = true && that.isSetContraChave();
    if (this_present_contraChave || that_present_contraChave) {
      if (!(this_present_contraChave && that_present_contraChave))
        return false;
      if (!this.contraChave.equals(that.contraChave))
        return false;
    }

    boolean this_present_uuidInstalacao = true && this.isSetUuidInstalacao();
    boolean that_present_uuidInstalacao = true && that.isSetUuidInstalacao();
    if (this_present_uuidInstalacao || that_present_uuidInstalacao) {
      if (!(this_present_uuidInstalacao && that_present_uuidInstalacao))
        return false;
      if (!this.uuidInstalacao.equals(that.uuidInstalacao))
        return false;
    }

    boolean this_present_cpfOuCnpj = true && this.isSetCpfOuCnpj();
    boolean that_present_cpfOuCnpj = true && that.isSetCpfOuCnpj();
    if (this_present_cpfOuCnpj || that_present_cpfOuCnpj) {
      if (!(this_present_cpfOuCnpj && that_present_cpfOuCnpj))
        return false;
      if (!this.cpfOuCnpj.equals(that.cpfOuCnpj))
        return false;
    }

    boolean this_present_nomeOuRazaoSocial = true && this.isSetNomeOuRazaoSocial();
    boolean that_present_nomeOuRazaoSocial = true && that.isSetNomeOuRazaoSocial();
    if (this_present_nomeOuRazaoSocial || that_present_nomeOuRazaoSocial) {
      if (!(this_present_nomeOuRazaoSocial && that_present_nomeOuRazaoSocial))
        return false;
      if (!this.nomeOuRazaoSocial.equals(that.nomeOuRazaoSocial))
        return false;
    }

    boolean this_present_fone = true && this.isSetFone();
    boolean that_present_fone = true && that.isSetFone();
    if (this_present_fone || that_present_fone) {
      if (!(this_present_fone && that_present_fone))
        return false;
      if (!this.fone.equals(that.fone))
        return false;
    }

    boolean this_present_email = true && this.isSetEmail();
    boolean that_present_email = true && that.isSetEmail();
    if (this_present_email || that_present_email) {
      if (!(this_present_email && that_present_email))
        return false;
      if (!this.email.equals(that.email))
        return false;
    }

    return true;
  }

  @Override
  public int hashCode() {
    List<Object> list = new ArrayList<Object>();

    boolean present_contraChave = true && (isSetContraChave());
    list.add(present_contraChave);
    if (present_contraChave)
      list.add(contraChave);

    boolean present_uuidInstalacao = true && (isSetUuidInstalacao());
    list.add(present_uuidInstalacao);
    if (present_uuidInstalacao)
      list.add(uuidInstalacao);

    boolean present_cpfOuCnpj = true && (isSetCpfOuCnpj());
    list.add(present_cpfOuCnpj);
    if (present_cpfOuCnpj)
      list.add(cpfOuCnpj);

    boolean present_nomeOuRazaoSocial = true && (isSetNomeOuRazaoSocial());
    list.add(present_nomeOuRazaoSocial);
    if (present_nomeOuRazaoSocial)
      list.add(nomeOuRazaoSocial);

    boolean present_fone = true && (isSetFone());
    list.add(present_fone);
    if (present_fone)
      list.add(fone);

    boolean present_email = true && (isSetEmail());
    list.add(present_email);
    if (present_email)
      list.add(email);

    return list.hashCode();
  }

  @Override
  public int compareTo(DadoInstalacaoThrift other) {
    if (!getClass().equals(other.getClass())) {
      return getClass().getName().compareTo(other.getClass().getName());
    }

    int lastComparison = 0;

    lastComparison = Boolean.valueOf(isSetContraChave()).compareTo(other.isSetContraChave());
    if (lastComparison != 0) {
      return lastComparison;
    }
    if (isSetContraChave()) {
      lastComparison = org.apache.thrift.TBaseHelper.compareTo(this.contraChave, other.contraChave);
      if (lastComparison != 0) {
        return lastComparison;
      }
    }
    lastComparison = Boolean.valueOf(isSetUuidInstalacao()).compareTo(other.isSetUuidInstalacao());
    if (lastComparison != 0) {
      return lastComparison;
    }
    if (isSetUuidInstalacao()) {
      lastComparison = org.apache.thrift.TBaseHelper.compareTo(this.uuidInstalacao, other.uuidInstalacao);
      if (lastComparison != 0) {
        return lastComparison;
      }
    }
    lastComparison = Boolean.valueOf(isSetCpfOuCnpj()).compareTo(other.isSetCpfOuCnpj());
    if (lastComparison != 0) {
      return lastComparison;
    }
    if (isSetCpfOuCnpj()) {
      lastComparison = org.apache.thrift.TBaseHelper.compareTo(this.cpfOuCnpj, other.cpfOuCnpj);
      if (lastComparison != 0) {
        return lastComparison;
      }
    }
    lastComparison = Boolean.valueOf(isSetNomeOuRazaoSocial()).compareTo(other.isSetNomeOuRazaoSocial());
    if (lastComparison != 0) {
      return lastComparison;
    }
    if (isSetNomeOuRazaoSocial()) {
      lastComparison = org.apache.thrift.TBaseHelper.compareTo(this.nomeOuRazaoSocial, other.nomeOuRazaoSocial);
      if (lastComparison != 0) {
        return lastComparison;
      }
    }
    lastComparison = Boolean.valueOf(isSetFone()).compareTo(other.isSetFone());
    if (lastComparison != 0) {
      return lastComparison;
    }
    if (isSetFone()) {
      lastComparison = org.apache.thrift.TBaseHelper.compareTo(this.fone, other.fone);
      if (lastComparison != 0) {
        return lastComparison;
      }
    }
    lastComparison = Boolean.valueOf(isSetEmail()).compareTo(other.isSetEmail());
    if (lastComparison != 0) {
      return lastComparison;
    }
    if (isSetEmail()) {
      lastComparison = org.apache.thrift.TBaseHelper.compareTo(this.email, other.email);
      if (lastComparison != 0) {
        return lastComparison;
      }
    }
    return 0;
  }

  public _Fields fieldForId(int fieldId) {
    return _Fields.findByThriftId(fieldId);
  }

  public void read(org.apache.thrift.protocol.TProtocol iprot) throws org.apache.thrift.TException {
    schemes.get(iprot.getScheme()).getScheme().read(iprot, this);
  }

  public void write(org.apache.thrift.protocol.TProtocol oprot) throws org.apache.thrift.TException {
    schemes.get(oprot.getScheme()).getScheme().write(oprot, this);
  }

  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder("DadoInstalacaoThrift(");
    boolean first = true;

    sb.append("contraChave:");
    if (this.contraChave == null) {
      sb.append("null");
    } else {
      sb.append(this.contraChave);
    }
    first = false;
    if (isSetUuidInstalacao()) {
      if (!first) sb.append(", ");
      sb.append("uuidInstalacao:");
      if (this.uuidInstalacao == null) {
        sb.append("null");
      } else {
        sb.append(this.uuidInstalacao);
      }
      first = false;
    }
    if (!first) sb.append(", ");
    sb.append("cpfOuCnpj:");
    if (this.cpfOuCnpj == null) {
      sb.append("null");
    } else {
      sb.append(this.cpfOuCnpj);
    }
    first = false;
    if (!first) sb.append(", ");
    sb.append("nomeOuRazaoSocial:");
    if (this.nomeOuRazaoSocial == null) {
      sb.append("null");
    } else {
      sb.append(this.nomeOuRazaoSocial);
    }
    first = false;
    if (isSetFone()) {
      if (!first) sb.append(", ");
      sb.append("fone:");
      if (this.fone == null) {
        sb.append("null");
      } else {
        sb.append(this.fone);
      }
      first = false;
    }
    if (isSetEmail()) {
      if (!first) sb.append(", ");
      sb.append("email:");
      if (this.email == null) {
        sb.append("null");
      } else {
        sb.append(this.email);
      }
      first = false;
    }
    sb.append(")");
    return sb.toString();
  }

  public void validate() throws org.apache.thrift.TException {
    // check for required fields
    if (!isSetContraChave()) {
      throw new org.apache.thrift.protocol.TProtocolException("Required field 'contraChave' is unset! Struct:" + toString());
    }

    if (!isSetCpfOuCnpj()) {
      throw new org.apache.thrift.protocol.TProtocolException("Required field 'cpfOuCnpj' is unset! Struct:" + toString());
    }

    if (!isSetNomeOuRazaoSocial()) {
      throw new org.apache.thrift.protocol.TProtocolException("Required field 'nomeOuRazaoSocial' is unset! Struct:" + toString());
    }

    // check for sub-struct validity
  }

  private void writeObject(java.io.ObjectOutputStream out) throws java.io.IOException {
    try {
      write(new org.apache.thrift.protocol.TCompactProtocol(new org.apache.thrift.transport.TIOStreamTransport(out)));
    } catch (org.apache.thrift.TException te) {
      throw new java.io.IOException(te);
    }
  }

  private void readObject(java.io.ObjectInputStream in) throws java.io.IOException, ClassNotFoundException {
    try {
      read(new org.apache.thrift.protocol.TCompactProtocol(new org.apache.thrift.transport.TIOStreamTransport(in)));
    } catch (org.apache.thrift.TException te) {
      throw new java.io.IOException(te);
    }
  }

  private static class DadoInstalacaoThriftStandardSchemeFactory implements SchemeFactory {
    public DadoInstalacaoThriftStandardScheme getScheme() {
      return new DadoInstalacaoThriftStandardScheme();
    }
  }

  private static class DadoInstalacaoThriftStandardScheme extends StandardScheme<DadoInstalacaoThrift> {

    public void read(org.apache.thrift.protocol.TProtocol iprot, DadoInstalacaoThrift struct) throws org.apache.thrift.TException {
      org.apache.thrift.protocol.TField schemeField;
      iprot.readStructBegin();
      while (true)
      {
        schemeField = iprot.readFieldBegin();
        if (schemeField.type == org.apache.thrift.protocol.TType.STOP) { 
          break;
        }
        switch (schemeField.id) {
          case 1: // CONTRA_CHAVE
            if (schemeField.type == org.apache.thrift.protocol.TType.STRING) {
              struct.contraChave = iprot.readString();
              struct.setContraChaveIsSet(true);
            } else { 
              org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
            }
            break;
          case 2: // UUID_INSTALACAO
            if (schemeField.type == org.apache.thrift.protocol.TType.STRING) {
              struct.uuidInstalacao = iprot.readString();
              struct.setUuidInstalacaoIsSet(true);
            } else { 
              org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
            }
            break;
          case 3: // CPF_OU_CNPJ
            if (schemeField.type == org.apache.thrift.protocol.TType.STRING) {
              struct.cpfOuCnpj = iprot.readString();
              struct.setCpfOuCnpjIsSet(true);
            } else { 
              org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
            }
            break;
          case 4: // NOME_OU_RAZAO_SOCIAL
            if (schemeField.type == org.apache.thrift.protocol.TType.STRING) {
              struct.nomeOuRazaoSocial = iprot.readString();
              struct.setNomeOuRazaoSocialIsSet(true);
            } else { 
              org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
            }
            break;
          case 5: // FONE
            if (schemeField.type == org.apache.thrift.protocol.TType.STRING) {
              struct.fone = iprot.readString();
              struct.setFoneIsSet(true);
            } else { 
              org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
            }
            break;
          case 6: // EMAIL
            if (schemeField.type == org.apache.thrift.protocol.TType.STRING) {
              struct.email = iprot.readString();
              struct.setEmailIsSet(true);
            } else { 
              org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
            }
            break;
          default:
            org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
        }
        iprot.readFieldEnd();
      }
      iprot.readStructEnd();
      struct.validate();
    }

    public void write(org.apache.thrift.protocol.TProtocol oprot, DadoInstalacaoThrift struct) throws org.apache.thrift.TException {
      struct.validate();

      oprot.writeStructBegin(STRUCT_DESC);
      if (struct.contraChave != null) {
        oprot.writeFieldBegin(CONTRA_CHAVE_FIELD_DESC);
        oprot.writeString(struct.contraChave);
        oprot.writeFieldEnd();
      }
      if (struct.uuidInstalacao != null) {
        if (struct.isSetUuidInstalacao()) {
          oprot.writeFieldBegin(UUID_INSTALACAO_FIELD_DESC);
          oprot.writeString(struct.uuidInstalacao);
          oprot.writeFieldEnd();
        }
      }
      if (struct.cpfOuCnpj != null) {
        oprot.writeFieldBegin(CPF_OU_CNPJ_FIELD_DESC);
        oprot.writeString(struct.cpfOuCnpj);
        oprot.writeFieldEnd();
      }
      if (struct.nomeOuRazaoSocial != null) {
        oprot.writeFieldBegin(NOME_OU_RAZAO_SOCIAL_FIELD_DESC);
        oprot.writeString(struct.nomeOuRazaoSocial);
        oprot.writeFieldEnd();
      }
      if (struct.fone != null) {
        if (struct.isSetFone()) {
          oprot.writeFieldBegin(FONE_FIELD_DESC);
          oprot.writeString(struct.fone);
          oprot.writeFieldEnd();
        }
      }
      if (struct.email != null) {
        if (struct.isSetEmail()) {
          oprot.writeFieldBegin(EMAIL_FIELD_DESC);
          oprot.writeString(struct.email);
          oprot.writeFieldEnd();
        }
      }
      oprot.writeFieldStop();
      oprot.writeStructEnd();
    }

  }

  private static class DadoInstalacaoThriftTupleSchemeFactory implements SchemeFactory {
    public DadoInstalacaoThriftTupleScheme getScheme() {
      return new DadoInstalacaoThriftTupleScheme();
    }
  }

  private static class DadoInstalacaoThriftTupleScheme extends TupleScheme<DadoInstalacaoThrift> {

    @Override
    public void write(org.apache.thrift.protocol.TProtocol prot, DadoInstalacaoThrift struct) throws org.apache.thrift.TException {
      TTupleProtocol oprot = (TTupleProtocol) prot;
      oprot.writeString(struct.contraChave);
      oprot.writeString(struct.cpfOuCnpj);
      oprot.writeString(struct.nomeOuRazaoSocial);
      BitSet optionals = new BitSet();
      if (struct.isSetUuidInstalacao()) {
        optionals.set(0);
      }
      if (struct.isSetFone()) {
        optionals.set(1);
      }
      if (struct.isSetEmail()) {
        optionals.set(2);
      }
      oprot.writeBitSet(optionals, 3);
      if (struct.isSetUuidInstalacao()) {
        oprot.writeString(struct.uuidInstalacao);
      }
      if (struct.isSetFone()) {
        oprot.writeString(struct.fone);
      }
      if (struct.isSetEmail()) {
        oprot.writeString(struct.email);
      }
    }

    @Override
    public void read(org.apache.thrift.protocol.TProtocol prot, DadoInstalacaoThrift struct) throws org.apache.thrift.TException {
      TTupleProtocol iprot = (TTupleProtocol) prot;
      struct.contraChave = iprot.readString();
      struct.setContraChaveIsSet(true);
      struct.cpfOuCnpj = iprot.readString();
      struct.setCpfOuCnpjIsSet(true);
      struct.nomeOuRazaoSocial = iprot.readString();
      struct.setNomeOuRazaoSocialIsSet(true);
      BitSet incoming = iprot.readBitSet(3);
      if (incoming.get(0)) {
        struct.uuidInstalacao = iprot.readString();
        struct.setUuidInstalacaoIsSet(true);
      }
      if (incoming.get(1)) {
        struct.fone = iprot.readString();
        struct.setFoneIsSet(true);
      }
      if (incoming.get(2)) {
        struct.email = iprot.readString();
        struct.setEmailIsSet(true);
      }
    }
  }

}

