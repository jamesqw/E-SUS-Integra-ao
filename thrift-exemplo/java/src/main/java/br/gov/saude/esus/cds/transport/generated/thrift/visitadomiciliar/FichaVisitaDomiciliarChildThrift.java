/**
 * Autogenerated by Thrift Compiler (0.9.2)
 *
 * DO NOT EDIT UNLESS YOU ARE SURE THAT YOU KNOW WHAT YOU ARE DOING
 *  @generated
 */
package br.gov.saude.esus.cds.transport.generated.thrift.visitadomiciliar;

import org.apache.thrift.scheme.IScheme;
import org.apache.thrift.scheme.SchemeFactory;
import org.apache.thrift.scheme.StandardScheme;

import org.apache.thrift.scheme.TupleScheme;
import org.apache.thrift.protocol.TTupleProtocol;
import org.apache.thrift.protocol.TProtocolException;
import org.apache.thrift.EncodingUtils;
import org.apache.thrift.TException;
import org.apache.thrift.async.AsyncMethodCallback;
import org.apache.thrift.server.AbstractNonblockingServer.*;
import java.util.List;
import java.util.ArrayList;
import java.util.Map;
import java.util.HashMap;
import java.util.EnumMap;
import java.util.Set;
import java.util.HashSet;
import java.util.EnumSet;
import java.util.Collections;
import java.util.BitSet;
import java.nio.ByteBuffer;
import java.util.Arrays;
import javax.annotation.Generated;
import org.slf4j.Logger;
import org.slf4j.LoggerFactory;

@SuppressWarnings({"cast", "rawtypes", "serial", "unchecked"})
@Generated(value = "Autogenerated by Thrift Compiler (0.9.2)", date = "2015-8-12")
public class FichaVisitaDomiciliarChildThrift implements org.apache.thrift.TBase<FichaVisitaDomiciliarChildThrift, FichaVisitaDomiciliarChildThrift._Fields>, java.io.Serializable, Cloneable, Comparable<FichaVisitaDomiciliarChildThrift> {
  private static final org.apache.thrift.protocol.TStruct STRUCT_DESC = new org.apache.thrift.protocol.TStruct("FichaVisitaDomiciliarChildThrift");

  private static final org.apache.thrift.protocol.TField TURNO_FIELD_DESC = new org.apache.thrift.protocol.TField("turno", org.apache.thrift.protocol.TType.I64, (short)1);
  private static final org.apache.thrift.protocol.TField NUM_PRONTUARIO_FIELD_DESC = new org.apache.thrift.protocol.TField("numProntuario", org.apache.thrift.protocol.TType.STRING, (short)2);
  private static final org.apache.thrift.protocol.TField NUM_CARTAO_SUS_FIELD_DESC = new org.apache.thrift.protocol.TField("numCartaoSus", org.apache.thrift.protocol.TType.STRING, (short)3);
  private static final org.apache.thrift.protocol.TField DT_NASCIMENTO_FIELD_DESC = new org.apache.thrift.protocol.TField("dtNascimento", org.apache.thrift.protocol.TType.I64, (short)4);
  private static final org.apache.thrift.protocol.TField SEXO_FIELD_DESC = new org.apache.thrift.protocol.TField("sexo", org.apache.thrift.protocol.TType.I64, (short)5);
  private static final org.apache.thrift.protocol.TField STATUS_VISITA_COMPARTILHADA_OUTRO_PROFISSIONAL_FIELD_DESC = new org.apache.thrift.protocol.TField("statusVisitaCompartilhadaOutroProfissional", org.apache.thrift.protocol.TType.BOOL, (short)6);
  private static final org.apache.thrift.protocol.TField MOTIVOS_VISITA_FIELD_DESC = new org.apache.thrift.protocol.TField("motivosVisita", org.apache.thrift.protocol.TType.LIST, (short)7);
  private static final org.apache.thrift.protocol.TField DESFECHO_FIELD_DESC = new org.apache.thrift.protocol.TField("desfecho", org.apache.thrift.protocol.TType.I64, (short)8);

  private static final Map<Class<? extends IScheme>, SchemeFactory> schemes = new HashMap<Class<? extends IScheme>, SchemeFactory>();
  static {
    schemes.put(StandardScheme.class, new FichaVisitaDomiciliarChildThriftStandardSchemeFactory());
    schemes.put(TupleScheme.class, new FichaVisitaDomiciliarChildThriftTupleSchemeFactory());
  }

  private long turno; // optional
  private String numProntuario; // optional
  private String numCartaoSus; // optional
  private long dtNascimento; // optional
  private long sexo; // optional
  private boolean statusVisitaCompartilhadaOutroProfissional; // optional
  private List<Long> motivosVisita; // optional
  private long desfecho; // optional

  /** The set of fields this struct contains, along with convenience methods for finding and manipulating them. */
  public enum _Fields implements org.apache.thrift.TFieldIdEnum {
    TURNO((short)1, "turno"),
    NUM_PRONTUARIO((short)2, "numProntuario"),
    NUM_CARTAO_SUS((short)3, "numCartaoSus"),
    DT_NASCIMENTO((short)4, "dtNascimento"),
    SEXO((short)5, "sexo"),
    STATUS_VISITA_COMPARTILHADA_OUTRO_PROFISSIONAL((short)6, "statusVisitaCompartilhadaOutroProfissional"),
    MOTIVOS_VISITA((short)7, "motivosVisita"),
    DESFECHO((short)8, "desfecho");

    private static final Map<String, _Fields> byName = new HashMap<String, _Fields>();

    static {
      for (_Fields field : EnumSet.allOf(_Fields.class)) {
        byName.put(field.getFieldName(), field);
      }
    }

    /**
     * Find the _Fields constant that matches fieldId, or null if its not found.
     */
    public static _Fields findByThriftId(int fieldId) {
      switch(fieldId) {
        case 1: // TURNO
          return TURNO;
        case 2: // NUM_PRONTUARIO
          return NUM_PRONTUARIO;
        case 3: // NUM_CARTAO_SUS
          return NUM_CARTAO_SUS;
        case 4: // DT_NASCIMENTO
          return DT_NASCIMENTO;
        case 5: // SEXO
          return SEXO;
        case 6: // STATUS_VISITA_COMPARTILHADA_OUTRO_PROFISSIONAL
          return STATUS_VISITA_COMPARTILHADA_OUTRO_PROFISSIONAL;
        case 7: // MOTIVOS_VISITA
          return MOTIVOS_VISITA;
        case 8: // DESFECHO
          return DESFECHO;
        default:
          return null;
      }
    }

    /**
     * Find the _Fields constant that matches fieldId, throwing an exception
     * if it is not found.
     */
    public static _Fields findByThriftIdOrThrow(int fieldId) {
      _Fields fields = findByThriftId(fieldId);
      if (fields == null) throw new IllegalArgumentException("Field " + fieldId + " doesn't exist!");
      return fields;
    }

    /**
     * Find the _Fields constant that matches name, or null if its not found.
     */
    public static _Fields findByName(String name) {
      return byName.get(name);
    }

    private final short _thriftId;
    private final String _fieldName;

    _Fields(short thriftId, String fieldName) {
      _thriftId = thriftId;
      _fieldName = fieldName;
    }

    public short getThriftFieldId() {
      return _thriftId;
    }

    public String getFieldName() {
      return _fieldName;
    }
  }

  // isset id assignments
  private static final int __TURNO_ISSET_ID = 0;
  private static final int __DTNASCIMENTO_ISSET_ID = 1;
  private static final int __SEXO_ISSET_ID = 2;
  private static final int __STATUSVISITACOMPARTILHADAOUTROPROFISSIONAL_ISSET_ID = 3;
  private static final int __DESFECHO_ISSET_ID = 4;
  private byte __isset_bitfield = 0;
  private static final _Fields optionals[] = {_Fields.TURNO,_Fields.NUM_PRONTUARIO,_Fields.NUM_CARTAO_SUS,_Fields.DT_NASCIMENTO,_Fields.SEXO,_Fields.STATUS_VISITA_COMPARTILHADA_OUTRO_PROFISSIONAL,_Fields.MOTIVOS_VISITA,_Fields.DESFECHO};
  public static final Map<_Fields, org.apache.thrift.meta_data.FieldMetaData> metaDataMap;
  static {
    Map<_Fields, org.apache.thrift.meta_data.FieldMetaData> tmpMap = new EnumMap<_Fields, org.apache.thrift.meta_data.FieldMetaData>(_Fields.class);
    tmpMap.put(_Fields.TURNO, new org.apache.thrift.meta_data.FieldMetaData("turno", org.apache.thrift.TFieldRequirementType.OPTIONAL, 
        new org.apache.thrift.meta_data.FieldValueMetaData(org.apache.thrift.protocol.TType.I64)));
    tmpMap.put(_Fields.NUM_PRONTUARIO, new org.apache.thrift.meta_data.FieldMetaData("numProntuario", org.apache.thrift.TFieldRequirementType.OPTIONAL, 
        new org.apache.thrift.meta_data.FieldValueMetaData(org.apache.thrift.protocol.TType.STRING)));
    tmpMap.put(_Fields.NUM_CARTAO_SUS, new org.apache.thrift.meta_data.FieldMetaData("numCartaoSus", org.apache.thrift.TFieldRequirementType.OPTIONAL, 
        new org.apache.thrift.meta_data.FieldValueMetaData(org.apache.thrift.protocol.TType.STRING)));
    tmpMap.put(_Fields.DT_NASCIMENTO, new org.apache.thrift.meta_data.FieldMetaData("dtNascimento", org.apache.thrift.TFieldRequirementType.OPTIONAL, 
        new org.apache.thrift.meta_data.FieldValueMetaData(org.apache.thrift.protocol.TType.I64)));
    tmpMap.put(_Fields.SEXO, new org.apache.thrift.meta_data.FieldMetaData("sexo", org.apache.thrift.TFieldRequirementType.OPTIONAL, 
        new org.apache.thrift.meta_data.FieldValueMetaData(org.apache.thrift.protocol.TType.I64)));
    tmpMap.put(_Fields.STATUS_VISITA_COMPARTILHADA_OUTRO_PROFISSIONAL, new org.apache.thrift.meta_data.FieldMetaData("statusVisitaCompartilhadaOutroProfissional", org.apache.thrift.TFieldRequirementType.OPTIONAL, 
        new org.apache.thrift.meta_data.FieldValueMetaData(org.apache.thrift.protocol.TType.BOOL)));
    tmpMap.put(_Fields.MOTIVOS_VISITA, new org.apache.thrift.meta_data.FieldMetaData("motivosVisita", org.apache.thrift.TFieldRequirementType.OPTIONAL, 
        new org.apache.thrift.meta_data.ListMetaData(org.apache.thrift.protocol.TType.LIST, 
            new org.apache.thrift.meta_data.FieldValueMetaData(org.apache.thrift.protocol.TType.I64))));
    tmpMap.put(_Fields.DESFECHO, new org.apache.thrift.meta_data.FieldMetaData("desfecho", org.apache.thrift.TFieldRequirementType.OPTIONAL, 
        new org.apache.thrift.meta_data.FieldValueMetaData(org.apache.thrift.protocol.TType.I64)));
    metaDataMap = Collections.unmodifiableMap(tmpMap);
    org.apache.thrift.meta_data.FieldMetaData.addStructMetaDataMap(FichaVisitaDomiciliarChildThrift.class, metaDataMap);
  }

  public FichaVisitaDomiciliarChildThrift() {
  }

  /**
   * Performs a deep copy on <i>other</i>.
   */
  public FichaVisitaDomiciliarChildThrift(FichaVisitaDomiciliarChildThrift other) {
    __isset_bitfield = other.__isset_bitfield;
    this.turno = other.turno;
    if (other.isSetNumProntuario()) {
      this.numProntuario = other.numProntuario;
    }
    if (other.isSetNumCartaoSus()) {
      this.numCartaoSus = other.numCartaoSus;
    }
    this.dtNascimento = other.dtNascimento;
    this.sexo = other.sexo;
    this.statusVisitaCompartilhadaOutroProfissional = other.statusVisitaCompartilhadaOutroProfissional;
    if (other.isSetMotivosVisita()) {
      List<Long> __this__motivosVisita = new ArrayList<Long>(other.motivosVisita);
      this.motivosVisita = __this__motivosVisita;
    }
    this.desfecho = other.desfecho;
  }

  public FichaVisitaDomiciliarChildThrift deepCopy() {
    return new FichaVisitaDomiciliarChildThrift(this);
  }

  @Override
  public void clear() {
    setTurnoIsSet(false);
    this.turno = 0;
    this.numProntuario = null;
    this.numCartaoSus = null;
    setDtNascimentoIsSet(false);
    this.dtNascimento = 0;
    setSexoIsSet(false);
    this.sexo = 0;
    setStatusVisitaCompartilhadaOutroProfissionalIsSet(false);
    this.statusVisitaCompartilhadaOutroProfissional = false;
    this.motivosVisita = null;
    setDesfechoIsSet(false);
    this.desfecho = 0;
  }

  public long getTurno() {
    return this.turno;
  }

  public void setTurno(long turno) {
    this.turno = turno;
    setTurnoIsSet(true);
  }

  public void unsetTurno() {
    __isset_bitfield = EncodingUtils.clearBit(__isset_bitfield, __TURNO_ISSET_ID);
  }

  /** Returns true if field turno is set (has been assigned a value) and false otherwise */
  public boolean isSetTurno() {
    return EncodingUtils.testBit(__isset_bitfield, __TURNO_ISSET_ID);
  }

  public void setTurnoIsSet(boolean value) {
    __isset_bitfield = EncodingUtils.setBit(__isset_bitfield, __TURNO_ISSET_ID, value);
  }

  public String getNumProntuario() {
    return this.numProntuario;
  }

  public void setNumProntuario(String numProntuario) {
    this.numProntuario = numProntuario;
  }

  public void unsetNumProntuario() {
    this.numProntuario = null;
  }

  /** Returns true if field numProntuario is set (has been assigned a value) and false otherwise */
  public boolean isSetNumProntuario() {
    return this.numProntuario != null;
  }

  public void setNumProntuarioIsSet(boolean value) {
    if (!value) {
      this.numProntuario = null;
    }
  }

  public String getNumCartaoSus() {
    return this.numCartaoSus;
  }

  public void setNumCartaoSus(String numCartaoSus) {
    this.numCartaoSus = numCartaoSus;
  }

  public void unsetNumCartaoSus() {
    this.numCartaoSus = null;
  }

  /** Returns true if field numCartaoSus is set (has been assigned a value) and false otherwise */
  public boolean isSetNumCartaoSus() {
    return this.numCartaoSus != null;
  }

  public void setNumCartaoSusIsSet(boolean value) {
    if (!value) {
      this.numCartaoSus = null;
    }
  }

  public long getDtNascimento() {
    return this.dtNascimento;
  }

  public void setDtNascimento(long dtNascimento) {
    this.dtNascimento = dtNascimento;
    setDtNascimentoIsSet(true);
  }

  public void unsetDtNascimento() {
    __isset_bitfield = EncodingUtils.clearBit(__isset_bitfield, __DTNASCIMENTO_ISSET_ID);
  }

  /** Returns true if field dtNascimento is set (has been assigned a value) and false otherwise */
  public boolean isSetDtNascimento() {
    return EncodingUtils.testBit(__isset_bitfield, __DTNASCIMENTO_ISSET_ID);
  }

  public void setDtNascimentoIsSet(boolean value) {
    __isset_bitfield = EncodingUtils.setBit(__isset_bitfield, __DTNASCIMENTO_ISSET_ID, value);
  }

  public long getSexo() {
    return this.sexo;
  }

  public void setSexo(long sexo) {
    this.sexo = sexo;
    setSexoIsSet(true);
  }

  public void unsetSexo() {
    __isset_bitfield = EncodingUtils.clearBit(__isset_bitfield, __SEXO_ISSET_ID);
  }

  /** Returns true if field sexo is set (has been assigned a value) and false otherwise */
  public boolean isSetSexo() {
    return EncodingUtils.testBit(__isset_bitfield, __SEXO_ISSET_ID);
  }

  public void setSexoIsSet(boolean value) {
    __isset_bitfield = EncodingUtils.setBit(__isset_bitfield, __SEXO_ISSET_ID, value);
  }

  public boolean isStatusVisitaCompartilhadaOutroProfissional() {
    return this.statusVisitaCompartilhadaOutroProfissional;
  }

  public void setStatusVisitaCompartilhadaOutroProfissional(boolean statusVisitaCompartilhadaOutroProfissional) {
    this.statusVisitaCompartilhadaOutroProfissional = statusVisitaCompartilhadaOutroProfissional;
    setStatusVisitaCompartilhadaOutroProfissionalIsSet(true);
  }

  public void unsetStatusVisitaCompartilhadaOutroProfissional() {
    __isset_bitfield = EncodingUtils.clearBit(__isset_bitfield, __STATUSVISITACOMPARTILHADAOUTROPROFISSIONAL_ISSET_ID);
  }

  /** Returns true if field statusVisitaCompartilhadaOutroProfissional is set (has been assigned a value) and false otherwise */
  public boolean isSetStatusVisitaCompartilhadaOutroProfissional() {
    return EncodingUtils.testBit(__isset_bitfield, __STATUSVISITACOMPARTILHADAOUTROPROFISSIONAL_ISSET_ID);
  }

  public void setStatusVisitaCompartilhadaOutroProfissionalIsSet(boolean value) {
    __isset_bitfield = EncodingUtils.setBit(__isset_bitfield, __STATUSVISITACOMPARTILHADAOUTROPROFISSIONAL_ISSET_ID, value);
  }

  public int getMotivosVisitaSize() {
    return (this.motivosVisita == null) ? 0 : this.motivosVisita.size();
  }

  public java.util.Iterator<Long> getMotivosVisitaIterator() {
    return (this.motivosVisita == null) ? null : this.motivosVisita.iterator();
  }

  public void addToMotivosVisita(long elem) {
    if (this.motivosVisita == null) {
      this.motivosVisita = new ArrayList<Long>();
    }
    this.motivosVisita.add(elem);
  }

  public List<Long> getMotivosVisita() {
    return this.motivosVisita;
  }

  public void setMotivosVisita(List<Long> motivosVisita) {
    this.motivosVisita = motivosVisita;
  }

  public void unsetMotivosVisita() {
    this.motivosVisita = null;
  }

  /** Returns true if field motivosVisita is set (has been assigned a value) and false otherwise */
  public boolean isSetMotivosVisita() {
    return this.motivosVisita != null;
  }

  public void setMotivosVisitaIsSet(boolean value) {
    if (!value) {
      this.motivosVisita = null;
    }
  }

  public long getDesfecho() {
    return this.desfecho;
  }

  public void setDesfecho(long desfecho) {
    this.desfecho = desfecho;
    setDesfechoIsSet(true);
  }

  public void unsetDesfecho() {
    __isset_bitfield = EncodingUtils.clearBit(__isset_bitfield, __DESFECHO_ISSET_ID);
  }

  /** Returns true if field desfecho is set (has been assigned a value) and false otherwise */
  public boolean isSetDesfecho() {
    return EncodingUtils.testBit(__isset_bitfield, __DESFECHO_ISSET_ID);
  }

  public void setDesfechoIsSet(boolean value) {
    __isset_bitfield = EncodingUtils.setBit(__isset_bitfield, __DESFECHO_ISSET_ID, value);
  }

  public void setFieldValue(_Fields field, Object value) {
    switch (field) {
    case TURNO:
      if (value == null) {
        unsetTurno();
      } else {
        setTurno((Long)value);
      }
      break;

    case NUM_PRONTUARIO:
      if (value == null) {
        unsetNumProntuario();
      } else {
        setNumProntuario((String)value);
      }
      break;

    case NUM_CARTAO_SUS:
      if (value == null) {
        unsetNumCartaoSus();
      } else {
        setNumCartaoSus((String)value);
      }
      break;

    case DT_NASCIMENTO:
      if (value == null) {
        unsetDtNascimento();
      } else {
        setDtNascimento((Long)value);
      }
      break;

    case SEXO:
      if (value == null) {
        unsetSexo();
      } else {
        setSexo((Long)value);
      }
      break;

    case STATUS_VISITA_COMPARTILHADA_OUTRO_PROFISSIONAL:
      if (value == null) {
        unsetStatusVisitaCompartilhadaOutroProfissional();
      } else {
        setStatusVisitaCompartilhadaOutroProfissional((Boolean)value);
      }
      break;

    case MOTIVOS_VISITA:
      if (value == null) {
        unsetMotivosVisita();
      } else {
        setMotivosVisita((List<Long>)value);
      }
      break;

    case DESFECHO:
      if (value == null) {
        unsetDesfecho();
      } else {
        setDesfecho((Long)value);
      }
      break;

    }
  }

  public Object getFieldValue(_Fields field) {
    switch (field) {
    case TURNO:
      return Long.valueOf(getTurno());

    case NUM_PRONTUARIO:
      return getNumProntuario();

    case NUM_CARTAO_SUS:
      return getNumCartaoSus();

    case DT_NASCIMENTO:
      return Long.valueOf(getDtNascimento());

    case SEXO:
      return Long.valueOf(getSexo());

    case STATUS_VISITA_COMPARTILHADA_OUTRO_PROFISSIONAL:
      return Boolean.valueOf(isStatusVisitaCompartilhadaOutroProfissional());

    case MOTIVOS_VISITA:
      return getMotivosVisita();

    case DESFECHO:
      return Long.valueOf(getDesfecho());

    }
    throw new IllegalStateException();
  }

  /** Returns true if field corresponding to fieldID is set (has been assigned a value) and false otherwise */
  public boolean isSet(_Fields field) {
    if (field == null) {
      throw new IllegalArgumentException();
    }

    switch (field) {
    case TURNO:
      return isSetTurno();
    case NUM_PRONTUARIO:
      return isSetNumProntuario();
    case NUM_CARTAO_SUS:
      return isSetNumCartaoSus();
    case DT_NASCIMENTO:
      return isSetDtNascimento();
    case SEXO:
      return isSetSexo();
    case STATUS_VISITA_COMPARTILHADA_OUTRO_PROFISSIONAL:
      return isSetStatusVisitaCompartilhadaOutroProfissional();
    case MOTIVOS_VISITA:
      return isSetMotivosVisita();
    case DESFECHO:
      return isSetDesfecho();
    }
    throw new IllegalStateException();
  }

  @Override
  public boolean equals(Object that) {
    if (that == null)
      return false;
    if (that instanceof FichaVisitaDomiciliarChildThrift)
      return this.equals((FichaVisitaDomiciliarChildThrift)that);
    return false;
  }

  public boolean equals(FichaVisitaDomiciliarChildThrift that) {
    if (that == null)
      return false;

    boolean this_present_turno = true && this.isSetTurno();
    boolean that_present_turno = true && that.isSetTurno();
    if (this_present_turno || that_present_turno) {
      if (!(this_present_turno && that_present_turno))
        return false;
      if (this.turno != that.turno)
        return false;
    }

    boolean this_present_numProntuario = true && this.isSetNumProntuario();
    boolean that_present_numProntuario = true && that.isSetNumProntuario();
    if (this_present_numProntuario || that_present_numProntuario) {
      if (!(this_present_numProntuario && that_present_numProntuario))
        return false;
      if (!this.numProntuario.equals(that.numProntuario))
        return false;
    }

    boolean this_present_numCartaoSus = true && this.isSetNumCartaoSus();
    boolean that_present_numCartaoSus = true && that.isSetNumCartaoSus();
    if (this_present_numCartaoSus || that_present_numCartaoSus) {
      if (!(this_present_numCartaoSus && that_present_numCartaoSus))
        return false;
      if (!this.numCartaoSus.equals(that.numCartaoSus))
        return false;
    }

    boolean this_present_dtNascimento = true && this.isSetDtNascimento();
    boolean that_present_dtNascimento = true && that.isSetDtNascimento();
    if (this_present_dtNascimento || that_present_dtNascimento) {
      if (!(this_present_dtNascimento && that_present_dtNascimento))
        return false;
      if (this.dtNascimento != that.dtNascimento)
        return false;
    }

    boolean this_present_sexo = true && this.isSetSexo();
    boolean that_present_sexo = true && that.isSetSexo();
    if (this_present_sexo || that_present_sexo) {
      if (!(this_present_sexo && that_present_sexo))
        return false;
      if (this.sexo != that.sexo)
        return false;
    }

    boolean this_present_statusVisitaCompartilhadaOutroProfissional = true && this.isSetStatusVisitaCompartilhadaOutroProfissional();
    boolean that_present_statusVisitaCompartilhadaOutroProfissional = true && that.isSetStatusVisitaCompartilhadaOutroProfissional();
    if (this_present_statusVisitaCompartilhadaOutroProfissional || that_present_statusVisitaCompartilhadaOutroProfissional) {
      if (!(this_present_statusVisitaCompartilhadaOutroProfissional && that_present_statusVisitaCompartilhadaOutroProfissional))
        return false;
      if (this.statusVisitaCompartilhadaOutroProfissional != that.statusVisitaCompartilhadaOutroProfissional)
        return false;
    }

    boolean this_present_motivosVisita = true && this.isSetMotivosVisita();
    boolean that_present_motivosVisita = true && that.isSetMotivosVisita();
    if (this_present_motivosVisita || that_present_motivosVisita) {
      if (!(this_present_motivosVisita && that_present_motivosVisita))
        return false;
      if (!this.motivosVisita.equals(that.motivosVisita))
        return false;
    }

    boolean this_present_desfecho = true && this.isSetDesfecho();
    boolean that_present_desfecho = true && that.isSetDesfecho();
    if (this_present_desfecho || that_present_desfecho) {
      if (!(this_present_desfecho && that_present_desfecho))
        return false;
      if (this.desfecho != that.desfecho)
        return false;
    }

    return true;
  }

  @Override
  public int hashCode() {
    List<Object> list = new ArrayList<Object>();

    boolean present_turno = true && (isSetTurno());
    list.add(present_turno);
    if (present_turno)
      list.add(turno);

    boolean present_numProntuario = true && (isSetNumProntuario());
    list.add(present_numProntuario);
    if (present_numProntuario)
      list.add(numProntuario);

    boolean present_numCartaoSus = true && (isSetNumCartaoSus());
    list.add(present_numCartaoSus);
    if (present_numCartaoSus)
      list.add(numCartaoSus);

    boolean present_dtNascimento = true && (isSetDtNascimento());
    list.add(present_dtNascimento);
    if (present_dtNascimento)
      list.add(dtNascimento);

    boolean present_sexo = true && (isSetSexo());
    list.add(present_sexo);
    if (present_sexo)
      list.add(sexo);

    boolean present_statusVisitaCompartilhadaOutroProfissional = true && (isSetStatusVisitaCompartilhadaOutroProfissional());
    list.add(present_statusVisitaCompartilhadaOutroProfissional);
    if (present_statusVisitaCompartilhadaOutroProfissional)
      list.add(statusVisitaCompartilhadaOutroProfissional);

    boolean present_motivosVisita = true && (isSetMotivosVisita());
    list.add(present_motivosVisita);
    if (present_motivosVisita)
      list.add(motivosVisita);

    boolean present_desfecho = true && (isSetDesfecho());
    list.add(present_desfecho);
    if (present_desfecho)
      list.add(desfecho);

    return list.hashCode();
  }

  @Override
  public int compareTo(FichaVisitaDomiciliarChildThrift other) {
    if (!getClass().equals(other.getClass())) {
      return getClass().getName().compareTo(other.getClass().getName());
    }

    int lastComparison = 0;

    lastComparison = Boolean.valueOf(isSetTurno()).compareTo(other.isSetTurno());
    if (lastComparison != 0) {
      return lastComparison;
    }
    if (isSetTurno()) {
      lastComparison = org.apache.thrift.TBaseHelper.compareTo(this.turno, other.turno);
      if (lastComparison != 0) {
        return lastComparison;
      }
    }
    lastComparison = Boolean.valueOf(isSetNumProntuario()).compareTo(other.isSetNumProntuario());
    if (lastComparison != 0) {
      return lastComparison;
    }
    if (isSetNumProntuario()) {
      lastComparison = org.apache.thrift.TBaseHelper.compareTo(this.numProntuario, other.numProntuario);
      if (lastComparison != 0) {
        return lastComparison;
      }
    }
    lastComparison = Boolean.valueOf(isSetNumCartaoSus()).compareTo(other.isSetNumCartaoSus());
    if (lastComparison != 0) {
      return lastComparison;
    }
    if (isSetNumCartaoSus()) {
      lastComparison = org.apache.thrift.TBaseHelper.compareTo(this.numCartaoSus, other.numCartaoSus);
      if (lastComparison != 0) {
        return lastComparison;
      }
    }
    lastComparison = Boolean.valueOf(isSetDtNascimento()).compareTo(other.isSetDtNascimento());
    if (lastComparison != 0) {
      return lastComparison;
    }
    if (isSetDtNascimento()) {
      lastComparison = org.apache.thrift.TBaseHelper.compareTo(this.dtNascimento, other.dtNascimento);
      if (lastComparison != 0) {
        return lastComparison;
      }
    }
    lastComparison = Boolean.valueOf(isSetSexo()).compareTo(other.isSetSexo());
    if (lastComparison != 0) {
      return lastComparison;
    }
    if (isSetSexo()) {
      lastComparison = org.apache.thrift.TBaseHelper.compareTo(this.sexo, other.sexo);
      if (lastComparison != 0) {
        return lastComparison;
      }
    }
    lastComparison = Boolean.valueOf(isSetStatusVisitaCompartilhadaOutroProfissional()).compareTo(other.isSetStatusVisitaCompartilhadaOutroProfissional());
    if (lastComparison != 0) {
      return lastComparison;
    }
    if (isSetStatusVisitaCompartilhadaOutroProfissional()) {
      lastComparison = org.apache.thrift.TBaseHelper.compareTo(this.statusVisitaCompartilhadaOutroProfissional, other.statusVisitaCompartilhadaOutroProfissional);
      if (lastComparison != 0) {
        return lastComparison;
      }
    }
    lastComparison = Boolean.valueOf(isSetMotivosVisita()).compareTo(other.isSetMotivosVisita());
    if (lastComparison != 0) {
      return lastComparison;
    }
    if (isSetMotivosVisita()) {
      lastComparison = org.apache.thrift.TBaseHelper.compareTo(this.motivosVisita, other.motivosVisita);
      if (lastComparison != 0) {
        return lastComparison;
      }
    }
    lastComparison = Boolean.valueOf(isSetDesfecho()).compareTo(other.isSetDesfecho());
    if (lastComparison != 0) {
      return lastComparison;
    }
    if (isSetDesfecho()) {
      lastComparison = org.apache.thrift.TBaseHelper.compareTo(this.desfecho, other.desfecho);
      if (lastComparison != 0) {
        return lastComparison;
      }
    }
    return 0;
  }

  public _Fields fieldForId(int fieldId) {
    return _Fields.findByThriftId(fieldId);
  }

  public void read(org.apache.thrift.protocol.TProtocol iprot) throws org.apache.thrift.TException {
    schemes.get(iprot.getScheme()).getScheme().read(iprot, this);
  }

  public void write(org.apache.thrift.protocol.TProtocol oprot) throws org.apache.thrift.TException {
    schemes.get(oprot.getScheme()).getScheme().write(oprot, this);
  }

  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder("FichaVisitaDomiciliarChildThrift(");
    boolean first = true;

    if (isSetTurno()) {
      sb.append("turno:");
      sb.append(this.turno);
      first = false;
    }
    if (isSetNumProntuario()) {
      if (!first) sb.append(", ");
      sb.append("numProntuario:");
      if (this.numProntuario == null) {
        sb.append("null");
      } else {
        sb.append(this.numProntuario);
      }
      first = false;
    }
    if (isSetNumCartaoSus()) {
      if (!first) sb.append(", ");
      sb.append("numCartaoSus:");
      if (this.numCartaoSus == null) {
        sb.append("null");
      } else {
        sb.append(this.numCartaoSus);
      }
      first = false;
    }
    if (isSetDtNascimento()) {
      if (!first) sb.append(", ");
      sb.append("dtNascimento:");
      sb.append(this.dtNascimento);
      first = false;
    }
    if (isSetSexo()) {
      if (!first) sb.append(", ");
      sb.append("sexo:");
      sb.append(this.sexo);
      first = false;
    }
    if (isSetStatusVisitaCompartilhadaOutroProfissional()) {
      if (!first) sb.append(", ");
      sb.append("statusVisitaCompartilhadaOutroProfissional:");
      sb.append(this.statusVisitaCompartilhadaOutroProfissional);
      first = false;
    }
    if (isSetMotivosVisita()) {
      if (!first) sb.append(", ");
      sb.append("motivosVisita:");
      if (this.motivosVisita == null) {
        sb.append("null");
      } else {
        sb.append(this.motivosVisita);
      }
      first = false;
    }
    if (isSetDesfecho()) {
      if (!first) sb.append(", ");
      sb.append("desfecho:");
      sb.append(this.desfecho);
      first = false;
    }
    sb.append(")");
    return sb.toString();
  }

  public void validate() throws org.apache.thrift.TException {
    // check for required fields
    // check for sub-struct validity
  }

  private void writeObject(java.io.ObjectOutputStream out) throws java.io.IOException {
    try {
      write(new org.apache.thrift.protocol.TCompactProtocol(new org.apache.thrift.transport.TIOStreamTransport(out)));
    } catch (org.apache.thrift.TException te) {
      throw new java.io.IOException(te);
    }
  }

  private void readObject(java.io.ObjectInputStream in) throws java.io.IOException, ClassNotFoundException {
    try {
      // it doesn't seem like you should have to do this, but java serialization is wacky, and doesn't call the default constructor.
      __isset_bitfield = 0;
      read(new org.apache.thrift.protocol.TCompactProtocol(new org.apache.thrift.transport.TIOStreamTransport(in)));
    } catch (org.apache.thrift.TException te) {
      throw new java.io.IOException(te);
    }
  }

  private static class FichaVisitaDomiciliarChildThriftStandardSchemeFactory implements SchemeFactory {
    public FichaVisitaDomiciliarChildThriftStandardScheme getScheme() {
      return new FichaVisitaDomiciliarChildThriftStandardScheme();
    }
  }

  private static class FichaVisitaDomiciliarChildThriftStandardScheme extends StandardScheme<FichaVisitaDomiciliarChildThrift> {

    public void read(org.apache.thrift.protocol.TProtocol iprot, FichaVisitaDomiciliarChildThrift struct) throws org.apache.thrift.TException {
      org.apache.thrift.protocol.TField schemeField;
      iprot.readStructBegin();
      while (true)
      {
        schemeField = iprot.readFieldBegin();
        if (schemeField.type == org.apache.thrift.protocol.TType.STOP) { 
          break;
        }
        switch (schemeField.id) {
          case 1: // TURNO
            if (schemeField.type == org.apache.thrift.protocol.TType.I64) {
              struct.turno = iprot.readI64();
              struct.setTurnoIsSet(true);
            } else { 
              org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
            }
            break;
          case 2: // NUM_PRONTUARIO
            if (schemeField.type == org.apache.thrift.protocol.TType.STRING) {
              struct.numProntuario = iprot.readString();
              struct.setNumProntuarioIsSet(true);
            } else { 
              org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
            }
            break;
          case 3: // NUM_CARTAO_SUS
            if (schemeField.type == org.apache.thrift.protocol.TType.STRING) {
              struct.numCartaoSus = iprot.readString();
              struct.setNumCartaoSusIsSet(true);
            } else { 
              org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
            }
            break;
          case 4: // DT_NASCIMENTO
            if (schemeField.type == org.apache.thrift.protocol.TType.I64) {
              struct.dtNascimento = iprot.readI64();
              struct.setDtNascimentoIsSet(true);
            } else { 
              org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
            }
            break;
          case 5: // SEXO
            if (schemeField.type == org.apache.thrift.protocol.TType.I64) {
              struct.sexo = iprot.readI64();
              struct.setSexoIsSet(true);
            } else { 
              org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
            }
            break;
          case 6: // STATUS_VISITA_COMPARTILHADA_OUTRO_PROFISSIONAL
            if (schemeField.type == org.apache.thrift.protocol.TType.BOOL) {
              struct.statusVisitaCompartilhadaOutroProfissional = iprot.readBool();
              struct.setStatusVisitaCompartilhadaOutroProfissionalIsSet(true);
            } else { 
              org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
            }
            break;
          case 7: // MOTIVOS_VISITA
            if (schemeField.type == org.apache.thrift.protocol.TType.LIST) {
              {
                org.apache.thrift.protocol.TList _list0 = iprot.readListBegin();
                struct.motivosVisita = new ArrayList<Long>(_list0.size);
                long _elem1;
                for (int _i2 = 0; _i2 < _list0.size; ++_i2)
                {
                  _elem1 = iprot.readI64();
                  struct.motivosVisita.add(_elem1);
                }
                iprot.readListEnd();
              }
              struct.setMotivosVisitaIsSet(true);
            } else { 
              org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
            }
            break;
          case 8: // DESFECHO
            if (schemeField.type == org.apache.thrift.protocol.TType.I64) {
              struct.desfecho = iprot.readI64();
              struct.setDesfechoIsSet(true);
            } else { 
              org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
            }
            break;
          default:
            org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
        }
        iprot.readFieldEnd();
      }
      iprot.readStructEnd();
      struct.validate();
    }

    public void write(org.apache.thrift.protocol.TProtocol oprot, FichaVisitaDomiciliarChildThrift struct) throws org.apache.thrift.TException {
      struct.validate();

      oprot.writeStructBegin(STRUCT_DESC);
      if (struct.isSetTurno()) {
        oprot.writeFieldBegin(TURNO_FIELD_DESC);
        oprot.writeI64(struct.turno);
        oprot.writeFieldEnd();
      }
      if (struct.numProntuario != null) {
        if (struct.isSetNumProntuario()) {
          oprot.writeFieldBegin(NUM_PRONTUARIO_FIELD_DESC);
          oprot.writeString(struct.numProntuario);
          oprot.writeFieldEnd();
        }
      }
      if (struct.numCartaoSus != null) {
        if (struct.isSetNumCartaoSus()) {
          oprot.writeFieldBegin(NUM_CARTAO_SUS_FIELD_DESC);
          oprot.writeString(struct.numCartaoSus);
          oprot.writeFieldEnd();
        }
      }
      if (struct.isSetDtNascimento()) {
        oprot.writeFieldBegin(DT_NASCIMENTO_FIELD_DESC);
        oprot.writeI64(struct.dtNascimento);
        oprot.writeFieldEnd();
      }
      if (struct.isSetSexo()) {
        oprot.writeFieldBegin(SEXO_FIELD_DESC);
        oprot.writeI64(struct.sexo);
        oprot.writeFieldEnd();
      }
      if (struct.isSetStatusVisitaCompartilhadaOutroProfissional()) {
        oprot.writeFieldBegin(STATUS_VISITA_COMPARTILHADA_OUTRO_PROFISSIONAL_FIELD_DESC);
        oprot.writeBool(struct.statusVisitaCompartilhadaOutroProfissional);
        oprot.writeFieldEnd();
      }
      if (struct.motivosVisita != null) {
        if (struct.isSetMotivosVisita()) {
          oprot.writeFieldBegin(MOTIVOS_VISITA_FIELD_DESC);
          {
            oprot.writeListBegin(new org.apache.thrift.protocol.TList(org.apache.thrift.protocol.TType.I64, struct.motivosVisita.size()));
            for (long _iter3 : struct.motivosVisita)
            {
              oprot.writeI64(_iter3);
            }
            oprot.writeListEnd();
          }
          oprot.writeFieldEnd();
        }
      }
      if (struct.isSetDesfecho()) {
        oprot.writeFieldBegin(DESFECHO_FIELD_DESC);
        oprot.writeI64(struct.desfecho);
        oprot.writeFieldEnd();
      }
      oprot.writeFieldStop();
      oprot.writeStructEnd();
    }

  }

  private static class FichaVisitaDomiciliarChildThriftTupleSchemeFactory implements SchemeFactory {
    public FichaVisitaDomiciliarChildThriftTupleScheme getScheme() {
      return new FichaVisitaDomiciliarChildThriftTupleScheme();
    }
  }

  private static class FichaVisitaDomiciliarChildThriftTupleScheme extends TupleScheme<FichaVisitaDomiciliarChildThrift> {

    @Override
    public void write(org.apache.thrift.protocol.TProtocol prot, FichaVisitaDomiciliarChildThrift struct) throws org.apache.thrift.TException {
      TTupleProtocol oprot = (TTupleProtocol) prot;
      BitSet optionals = new BitSet();
      if (struct.isSetTurno()) {
        optionals.set(0);
      }
      if (struct.isSetNumProntuario()) {
        optionals.set(1);
      }
      if (struct.isSetNumCartaoSus()) {
        optionals.set(2);
      }
      if (struct.isSetDtNascimento()) {
        optionals.set(3);
      }
      if (struct.isSetSexo()) {
        optionals.set(4);
      }
      if (struct.isSetStatusVisitaCompartilhadaOutroProfissional()) {
        optionals.set(5);
      }
      if (struct.isSetMotivosVisita()) {
        optionals.set(6);
      }
      if (struct.isSetDesfecho()) {
        optionals.set(7);
      }
      oprot.writeBitSet(optionals, 8);
      if (struct.isSetTurno()) {
        oprot.writeI64(struct.turno);
      }
      if (struct.isSetNumProntuario()) {
        oprot.writeString(struct.numProntuario);
      }
      if (struct.isSetNumCartaoSus()) {
        oprot.writeString(struct.numCartaoSus);
      }
      if (struct.isSetDtNascimento()) {
        oprot.writeI64(struct.dtNascimento);
      }
      if (struct.isSetSexo()) {
        oprot.writeI64(struct.sexo);
      }
      if (struct.isSetStatusVisitaCompartilhadaOutroProfissional()) {
        oprot.writeBool(struct.statusVisitaCompartilhadaOutroProfissional);
      }
      if (struct.isSetMotivosVisita()) {
        {
          oprot.writeI32(struct.motivosVisita.size());
          for (long _iter4 : struct.motivosVisita)
          {
            oprot.writeI64(_iter4);
          }
        }
      }
      if (struct.isSetDesfecho()) {
        oprot.writeI64(struct.desfecho);
      }
    }

    @Override
    public void read(org.apache.thrift.protocol.TProtocol prot, FichaVisitaDomiciliarChildThrift struct) throws org.apache.thrift.TException {
      TTupleProtocol iprot = (TTupleProtocol) prot;
      BitSet incoming = iprot.readBitSet(8);
      if (incoming.get(0)) {
        struct.turno = iprot.readI64();
        struct.setTurnoIsSet(true);
      }
      if (incoming.get(1)) {
        struct.numProntuario = iprot.readString();
        struct.setNumProntuarioIsSet(true);
      }
      if (incoming.get(2)) {
        struct.numCartaoSus = iprot.readString();
        struct.setNumCartaoSusIsSet(true);
      }
      if (incoming.get(3)) {
        struct.dtNascimento = iprot.readI64();
        struct.setDtNascimentoIsSet(true);
      }
      if (incoming.get(4)) {
        struct.sexo = iprot.readI64();
        struct.setSexoIsSet(true);
      }
      if (incoming.get(5)) {
        struct.statusVisitaCompartilhadaOutroProfissional = iprot.readBool();
        struct.setStatusVisitaCompartilhadaOutroProfissionalIsSet(true);
      }
      if (incoming.get(6)) {
        {
          org.apache.thrift.protocol.TList _list5 = new org.apache.thrift.protocol.TList(org.apache.thrift.protocol.TType.I64, iprot.readI32());
          struct.motivosVisita = new ArrayList<Long>(_list5.size);
          long _elem6;
          for (int _i7 = 0; _i7 < _list5.size; ++_i7)
          {
            _elem6 = iprot.readI64();
            struct.motivosVisita.add(_elem6);
          }
        }
        struct.setMotivosVisitaIsSet(true);
      }
      if (incoming.get(7)) {
        struct.desfecho = iprot.readI64();
        struct.setDesfechoIsSet(true);
      }
    }
  }

}

