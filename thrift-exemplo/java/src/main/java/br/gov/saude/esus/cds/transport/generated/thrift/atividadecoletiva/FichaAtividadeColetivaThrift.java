/**
 * Autogenerated by Thrift Compiler (0.9.2)
 *
 * DO NOT EDIT UNLESS YOU ARE SURE THAT YOU KNOW WHAT YOU ARE DOING
 *  @generated
 */
package br.gov.saude.esus.cds.transport.generated.thrift.atividadecoletiva;

import org.apache.thrift.scheme.IScheme;
import org.apache.thrift.scheme.SchemeFactory;
import org.apache.thrift.scheme.StandardScheme;

import org.apache.thrift.scheme.TupleScheme;
import org.apache.thrift.protocol.TTupleProtocol;
import org.apache.thrift.protocol.TProtocolException;
import org.apache.thrift.EncodingUtils;
import org.apache.thrift.TException;
import org.apache.thrift.async.AsyncMethodCallback;
import org.apache.thrift.server.AbstractNonblockingServer.*;
import java.util.List;
import java.util.ArrayList;
import java.util.Map;
import java.util.HashMap;
import java.util.EnumMap;
import java.util.Set;
import java.util.HashSet;
import java.util.EnumSet;
import java.util.Collections;
import java.util.BitSet;
import java.nio.ByteBuffer;
import java.util.Arrays;
import javax.annotation.Generated;
import org.slf4j.Logger;
import org.slf4j.LoggerFactory;

@SuppressWarnings({"cast", "rawtypes", "serial", "unchecked"})
@Generated(value = "Autogenerated by Thrift Compiler (0.9.2)", date = "2015-8-12")
public class FichaAtividadeColetivaThrift implements org.apache.thrift.TBase<FichaAtividadeColetivaThrift, FichaAtividadeColetivaThrift._Fields>, java.io.Serializable, Cloneable, Comparable<FichaAtividadeColetivaThrift> {
  private static final org.apache.thrift.protocol.TStruct STRUCT_DESC = new org.apache.thrift.protocol.TStruct("FichaAtividadeColetivaThrift");

  private static final org.apache.thrift.protocol.TField UUID_FICHA_FIELD_DESC = new org.apache.thrift.protocol.TField("uuidFicha", org.apache.thrift.protocol.TType.STRING, (short)1);
  private static final org.apache.thrift.protocol.TField DT_ATIVIDADE_COLETIVA_FIELD_DESC = new org.apache.thrift.protocol.TField("dtAtividadeColetiva", org.apache.thrift.protocol.TType.I64, (short)2);
  private static final org.apache.thrift.protocol.TField NUM_PARTICIPANTES_PROGRAMADOS_FIELD_DESC = new org.apache.thrift.protocol.TField("numParticipantesProgramados", org.apache.thrift.protocol.TType.I32, (short)3);
  private static final org.apache.thrift.protocol.TField LOCAL_ATIVIDADE_FIELD_DESC = new org.apache.thrift.protocol.TField("localAtividade", org.apache.thrift.protocol.TType.STRING, (short)4);
  private static final org.apache.thrift.protocol.TField HORA_INICIO_FIELD_DESC = new org.apache.thrift.protocol.TField("horaInicio", org.apache.thrift.protocol.TType.I64, (short)5);
  private static final org.apache.thrift.protocol.TField HORA_FIM_FIELD_DESC = new org.apache.thrift.protocol.TField("horaFim", org.apache.thrift.protocol.TType.I64, (short)6);
  private static final org.apache.thrift.protocol.TField INEP_FIELD_DESC = new org.apache.thrift.protocol.TField("inep", org.apache.thrift.protocol.TType.I64, (short)7);
  private static final org.apache.thrift.protocol.TField RESPONSAVEL_CNS_FIELD_DESC = new org.apache.thrift.protocol.TField("responsavelCns", org.apache.thrift.protocol.TType.STRING, (short)8);
  private static final org.apache.thrift.protocol.TField RESPONSAVEL_CNES_UNIDADE_FIELD_DESC = new org.apache.thrift.protocol.TField("responsavelCnesUnidade", org.apache.thrift.protocol.TType.STRING, (short)9);
  private static final org.apache.thrift.protocol.TField RESPONSAVEL_NUM_INE_FIELD_DESC = new org.apache.thrift.protocol.TField("responsavelNumIne", org.apache.thrift.protocol.TType.STRING, (short)10);
  private static final org.apache.thrift.protocol.TField NUM_PARTICIPANTES_FIELD_DESC = new org.apache.thrift.protocol.TField("numParticipantes", org.apache.thrift.protocol.TType.I32, (short)11);
  private static final org.apache.thrift.protocol.TField NUM_AVALIACOES_ALTERADAS_FIELD_DESC = new org.apache.thrift.protocol.TField("numAvaliacoesAlteradas", org.apache.thrift.protocol.TType.I32, (short)12);
  private static final org.apache.thrift.protocol.TField PROFISSIONAIS_FIELD_DESC = new org.apache.thrift.protocol.TField("profissionais", org.apache.thrift.protocol.TType.LIST, (short)13);
  private static final org.apache.thrift.protocol.TField ATIVIDADE_TIPO_FIELD_DESC = new org.apache.thrift.protocol.TField("atividadeTipo", org.apache.thrift.protocol.TType.I64, (short)14);
  private static final org.apache.thrift.protocol.TField TEMAS_PARA_REUNIAO_FIELD_DESC = new org.apache.thrift.protocol.TField("temasParaReuniao", org.apache.thrift.protocol.TType.LIST, (short)15);
  private static final org.apache.thrift.protocol.TField PUBLICO_ALVO_FIELD_DESC = new org.apache.thrift.protocol.TField("publicoAlvo", org.apache.thrift.protocol.TType.LIST, (short)16);
  private static final org.apache.thrift.protocol.TField PRATICAS_TEMAS_PARA_SAUDE_FIELD_DESC = new org.apache.thrift.protocol.TField("praticasTemasParaSaude", org.apache.thrift.protocol.TType.LIST, (short)17);
  private static final org.apache.thrift.protocol.TField PARTICIPANTES_FIELD_DESC = new org.apache.thrift.protocol.TField("participantes", org.apache.thrift.protocol.TType.LIST, (short)18);
  private static final org.apache.thrift.protocol.TField TB_CDS_ORIGEM_FIELD_DESC = new org.apache.thrift.protocol.TField("tbCdsOrigem", org.apache.thrift.protocol.TType.I32, (short)19);
  private static final org.apache.thrift.protocol.TField CODIGO_IBGE_MUNICIPIO_FIELD_DESC = new org.apache.thrift.protocol.TField("codigoIbgeMunicipio", org.apache.thrift.protocol.TType.STRING, (short)20);

  private static final Map<Class<? extends IScheme>, SchemeFactory> schemes = new HashMap<Class<? extends IScheme>, SchemeFactory>();
  static {
    schemes.put(StandardScheme.class, new FichaAtividadeColetivaThriftStandardSchemeFactory());
    schemes.put(TupleScheme.class, new FichaAtividadeColetivaThriftTupleSchemeFactory());
  }

  private String uuidFicha; // required
  private long dtAtividadeColetiva; // optional
  private int numParticipantesProgramados; // optional
  private String localAtividade; // optional
  private long horaInicio; // optional
  private long horaFim; // optional
  private long inep; // optional
  private String responsavelCns; // optional
  private String responsavelCnesUnidade; // required
  private String responsavelNumIne; // optional
  private int numParticipantes; // optional
  private int numAvaliacoesAlteradas; // optional
  private List<ProfissionalCboRowItemThrift> profissionais; // optional
  private long atividadeTipo; // optional
  private List<Long> temasParaReuniao; // optional
  private List<Long> publicoAlvo; // optional
  private List<Long> praticasTemasParaSaude; // optional
  private List<ParticipanteRowItemThrift> participantes; // optional
  private int tbCdsOrigem; // optional
  private String codigoIbgeMunicipio; // optional

  /** The set of fields this struct contains, along with convenience methods for finding and manipulating them. */
  public enum _Fields implements org.apache.thrift.TFieldIdEnum {
    UUID_FICHA((short)1, "uuidFicha"),
    DT_ATIVIDADE_COLETIVA((short)2, "dtAtividadeColetiva"),
    NUM_PARTICIPANTES_PROGRAMADOS((short)3, "numParticipantesProgramados"),
    LOCAL_ATIVIDADE((short)4, "localAtividade"),
    HORA_INICIO((short)5, "horaInicio"),
    HORA_FIM((short)6, "horaFim"),
    INEP((short)7, "inep"),
    RESPONSAVEL_CNS((short)8, "responsavelCns"),
    RESPONSAVEL_CNES_UNIDADE((short)9, "responsavelCnesUnidade"),
    RESPONSAVEL_NUM_INE((short)10, "responsavelNumIne"),
    NUM_PARTICIPANTES((short)11, "numParticipantes"),
    NUM_AVALIACOES_ALTERADAS((short)12, "numAvaliacoesAlteradas"),
    PROFISSIONAIS((short)13, "profissionais"),
    ATIVIDADE_TIPO((short)14, "atividadeTipo"),
    TEMAS_PARA_REUNIAO((short)15, "temasParaReuniao"),
    PUBLICO_ALVO((short)16, "publicoAlvo"),
    PRATICAS_TEMAS_PARA_SAUDE((short)17, "praticasTemasParaSaude"),
    PARTICIPANTES((short)18, "participantes"),
    TB_CDS_ORIGEM((short)19, "tbCdsOrigem"),
    CODIGO_IBGE_MUNICIPIO((short)20, "codigoIbgeMunicipio");

    private static final Map<String, _Fields> byName = new HashMap<String, _Fields>();

    static {
      for (_Fields field : EnumSet.allOf(_Fields.class)) {
        byName.put(field.getFieldName(), field);
      }
    }

    /**
     * Find the _Fields constant that matches fieldId, or null if its not found.
     */
    public static _Fields findByThriftId(int fieldId) {
      switch(fieldId) {
        case 1: // UUID_FICHA
          return UUID_FICHA;
        case 2: // DT_ATIVIDADE_COLETIVA
          return DT_ATIVIDADE_COLETIVA;
        case 3: // NUM_PARTICIPANTES_PROGRAMADOS
          return NUM_PARTICIPANTES_PROGRAMADOS;
        case 4: // LOCAL_ATIVIDADE
          return LOCAL_ATIVIDADE;
        case 5: // HORA_INICIO
          return HORA_INICIO;
        case 6: // HORA_FIM
          return HORA_FIM;
        case 7: // INEP
          return INEP;
        case 8: // RESPONSAVEL_CNS
          return RESPONSAVEL_CNS;
        case 9: // RESPONSAVEL_CNES_UNIDADE
          return RESPONSAVEL_CNES_UNIDADE;
        case 10: // RESPONSAVEL_NUM_INE
          return RESPONSAVEL_NUM_INE;
        case 11: // NUM_PARTICIPANTES
          return NUM_PARTICIPANTES;
        case 12: // NUM_AVALIACOES_ALTERADAS
          return NUM_AVALIACOES_ALTERADAS;
        case 13: // PROFISSIONAIS
          return PROFISSIONAIS;
        case 14: // ATIVIDADE_TIPO
          return ATIVIDADE_TIPO;
        case 15: // TEMAS_PARA_REUNIAO
          return TEMAS_PARA_REUNIAO;
        case 16: // PUBLICO_ALVO
          return PUBLICO_ALVO;
        case 17: // PRATICAS_TEMAS_PARA_SAUDE
          return PRATICAS_TEMAS_PARA_SAUDE;
        case 18: // PARTICIPANTES
          return PARTICIPANTES;
        case 19: // TB_CDS_ORIGEM
          return TB_CDS_ORIGEM;
        case 20: // CODIGO_IBGE_MUNICIPIO
          return CODIGO_IBGE_MUNICIPIO;
        default:
          return null;
      }
    }

    /**
     * Find the _Fields constant that matches fieldId, throwing an exception
     * if it is not found.
     */
    public static _Fields findByThriftIdOrThrow(int fieldId) {
      _Fields fields = findByThriftId(fieldId);
      if (fields == null) throw new IllegalArgumentException("Field " + fieldId + " doesn't exist!");
      return fields;
    }

    /**
     * Find the _Fields constant that matches name, or null if its not found.
     */
    public static _Fields findByName(String name) {
      return byName.get(name);
    }

    private final short _thriftId;
    private final String _fieldName;

    _Fields(short thriftId, String fieldName) {
      _thriftId = thriftId;
      _fieldName = fieldName;
    }

    public short getThriftFieldId() {
      return _thriftId;
    }

    public String getFieldName() {
      return _fieldName;
    }
  }

  // isset id assignments
  private static final int __DTATIVIDADECOLETIVA_ISSET_ID = 0;
  private static final int __NUMPARTICIPANTESPROGRAMADOS_ISSET_ID = 1;
  private static final int __HORAINICIO_ISSET_ID = 2;
  private static final int __HORAFIM_ISSET_ID = 3;
  private static final int __INEP_ISSET_ID = 4;
  private static final int __NUMPARTICIPANTES_ISSET_ID = 5;
  private static final int __NUMAVALIACOESALTERADAS_ISSET_ID = 6;
  private static final int __ATIVIDADETIPO_ISSET_ID = 7;
  private static final int __TBCDSORIGEM_ISSET_ID = 8;
  private short __isset_bitfield = 0;
  private static final _Fields optionals[] = {_Fields.DT_ATIVIDADE_COLETIVA,_Fields.NUM_PARTICIPANTES_PROGRAMADOS,_Fields.LOCAL_ATIVIDADE,_Fields.HORA_INICIO,_Fields.HORA_FIM,_Fields.INEP,_Fields.RESPONSAVEL_CNS,_Fields.RESPONSAVEL_NUM_INE,_Fields.NUM_PARTICIPANTES,_Fields.NUM_AVALIACOES_ALTERADAS,_Fields.PROFISSIONAIS,_Fields.ATIVIDADE_TIPO,_Fields.TEMAS_PARA_REUNIAO,_Fields.PUBLICO_ALVO,_Fields.PRATICAS_TEMAS_PARA_SAUDE,_Fields.PARTICIPANTES,_Fields.TB_CDS_ORIGEM,_Fields.CODIGO_IBGE_MUNICIPIO};
  public static final Map<_Fields, org.apache.thrift.meta_data.FieldMetaData> metaDataMap;
  static {
    Map<_Fields, org.apache.thrift.meta_data.FieldMetaData> tmpMap = new EnumMap<_Fields, org.apache.thrift.meta_data.FieldMetaData>(_Fields.class);
    tmpMap.put(_Fields.UUID_FICHA, new org.apache.thrift.meta_data.FieldMetaData("uuidFicha", org.apache.thrift.TFieldRequirementType.REQUIRED, 
        new org.apache.thrift.meta_data.FieldValueMetaData(org.apache.thrift.protocol.TType.STRING)));
    tmpMap.put(_Fields.DT_ATIVIDADE_COLETIVA, new org.apache.thrift.meta_data.FieldMetaData("dtAtividadeColetiva", org.apache.thrift.TFieldRequirementType.OPTIONAL, 
        new org.apache.thrift.meta_data.FieldValueMetaData(org.apache.thrift.protocol.TType.I64)));
    tmpMap.put(_Fields.NUM_PARTICIPANTES_PROGRAMADOS, new org.apache.thrift.meta_data.FieldMetaData("numParticipantesProgramados", org.apache.thrift.TFieldRequirementType.OPTIONAL, 
        new org.apache.thrift.meta_data.FieldValueMetaData(org.apache.thrift.protocol.TType.I32)));
    tmpMap.put(_Fields.LOCAL_ATIVIDADE, new org.apache.thrift.meta_data.FieldMetaData("localAtividade", org.apache.thrift.TFieldRequirementType.OPTIONAL, 
        new org.apache.thrift.meta_data.FieldValueMetaData(org.apache.thrift.protocol.TType.STRING)));
    tmpMap.put(_Fields.HORA_INICIO, new org.apache.thrift.meta_data.FieldMetaData("horaInicio", org.apache.thrift.TFieldRequirementType.OPTIONAL, 
        new org.apache.thrift.meta_data.FieldValueMetaData(org.apache.thrift.protocol.TType.I64)));
    tmpMap.put(_Fields.HORA_FIM, new org.apache.thrift.meta_data.FieldMetaData("horaFim", org.apache.thrift.TFieldRequirementType.OPTIONAL, 
        new org.apache.thrift.meta_data.FieldValueMetaData(org.apache.thrift.protocol.TType.I64)));
    tmpMap.put(_Fields.INEP, new org.apache.thrift.meta_data.FieldMetaData("inep", org.apache.thrift.TFieldRequirementType.OPTIONAL, 
        new org.apache.thrift.meta_data.FieldValueMetaData(org.apache.thrift.protocol.TType.I64)));
    tmpMap.put(_Fields.RESPONSAVEL_CNS, new org.apache.thrift.meta_data.FieldMetaData("responsavelCns", org.apache.thrift.TFieldRequirementType.OPTIONAL, 
        new org.apache.thrift.meta_data.FieldValueMetaData(org.apache.thrift.protocol.TType.STRING)));
    tmpMap.put(_Fields.RESPONSAVEL_CNES_UNIDADE, new org.apache.thrift.meta_data.FieldMetaData("responsavelCnesUnidade", org.apache.thrift.TFieldRequirementType.REQUIRED, 
        new org.apache.thrift.meta_data.FieldValueMetaData(org.apache.thrift.protocol.TType.STRING)));
    tmpMap.put(_Fields.RESPONSAVEL_NUM_INE, new org.apache.thrift.meta_data.FieldMetaData("responsavelNumIne", org.apache.thrift.TFieldRequirementType.OPTIONAL, 
        new org.apache.thrift.meta_data.FieldValueMetaData(org.apache.thrift.protocol.TType.STRING)));
    tmpMap.put(_Fields.NUM_PARTICIPANTES, new org.apache.thrift.meta_data.FieldMetaData("numParticipantes", org.apache.thrift.TFieldRequirementType.OPTIONAL, 
        new org.apache.thrift.meta_data.FieldValueMetaData(org.apache.thrift.protocol.TType.I32)));
    tmpMap.put(_Fields.NUM_AVALIACOES_ALTERADAS, new org.apache.thrift.meta_data.FieldMetaData("numAvaliacoesAlteradas", org.apache.thrift.TFieldRequirementType.OPTIONAL, 
        new org.apache.thrift.meta_data.FieldValueMetaData(org.apache.thrift.protocol.TType.I32)));
    tmpMap.put(_Fields.PROFISSIONAIS, new org.apache.thrift.meta_data.FieldMetaData("profissionais", org.apache.thrift.TFieldRequirementType.OPTIONAL, 
        new org.apache.thrift.meta_data.ListMetaData(org.apache.thrift.protocol.TType.LIST, 
            new org.apache.thrift.meta_data.StructMetaData(org.apache.thrift.protocol.TType.STRUCT, ProfissionalCboRowItemThrift.class))));
    tmpMap.put(_Fields.ATIVIDADE_TIPO, new org.apache.thrift.meta_data.FieldMetaData("atividadeTipo", org.apache.thrift.TFieldRequirementType.OPTIONAL, 
        new org.apache.thrift.meta_data.FieldValueMetaData(org.apache.thrift.protocol.TType.I64)));
    tmpMap.put(_Fields.TEMAS_PARA_REUNIAO, new org.apache.thrift.meta_data.FieldMetaData("temasParaReuniao", org.apache.thrift.TFieldRequirementType.OPTIONAL, 
        new org.apache.thrift.meta_data.ListMetaData(org.apache.thrift.protocol.TType.LIST, 
            new org.apache.thrift.meta_data.FieldValueMetaData(org.apache.thrift.protocol.TType.I64))));
    tmpMap.put(_Fields.PUBLICO_ALVO, new org.apache.thrift.meta_data.FieldMetaData("publicoAlvo", org.apache.thrift.TFieldRequirementType.OPTIONAL, 
        new org.apache.thrift.meta_data.ListMetaData(org.apache.thrift.protocol.TType.LIST, 
            new org.apache.thrift.meta_data.FieldValueMetaData(org.apache.thrift.protocol.TType.I64))));
    tmpMap.put(_Fields.PRATICAS_TEMAS_PARA_SAUDE, new org.apache.thrift.meta_data.FieldMetaData("praticasTemasParaSaude", org.apache.thrift.TFieldRequirementType.OPTIONAL, 
        new org.apache.thrift.meta_data.ListMetaData(org.apache.thrift.protocol.TType.LIST, 
            new org.apache.thrift.meta_data.FieldValueMetaData(org.apache.thrift.protocol.TType.I64))));
    tmpMap.put(_Fields.PARTICIPANTES, new org.apache.thrift.meta_data.FieldMetaData("participantes", org.apache.thrift.TFieldRequirementType.OPTIONAL, 
        new org.apache.thrift.meta_data.ListMetaData(org.apache.thrift.protocol.TType.LIST, 
            new org.apache.thrift.meta_data.StructMetaData(org.apache.thrift.protocol.TType.STRUCT, ParticipanteRowItemThrift.class))));
    tmpMap.put(_Fields.TB_CDS_ORIGEM, new org.apache.thrift.meta_data.FieldMetaData("tbCdsOrigem", org.apache.thrift.TFieldRequirementType.OPTIONAL, 
        new org.apache.thrift.meta_data.FieldValueMetaData(org.apache.thrift.protocol.TType.I32)));
    tmpMap.put(_Fields.CODIGO_IBGE_MUNICIPIO, new org.apache.thrift.meta_data.FieldMetaData("codigoIbgeMunicipio", org.apache.thrift.TFieldRequirementType.OPTIONAL, 
        new org.apache.thrift.meta_data.FieldValueMetaData(org.apache.thrift.protocol.TType.STRING)));
    metaDataMap = Collections.unmodifiableMap(tmpMap);
    org.apache.thrift.meta_data.FieldMetaData.addStructMetaDataMap(FichaAtividadeColetivaThrift.class, metaDataMap);
  }

  public FichaAtividadeColetivaThrift() {
  }

  public FichaAtividadeColetivaThrift(
    String uuidFicha,
    String responsavelCnesUnidade)
  {
    this();
    this.uuidFicha = uuidFicha;
    this.responsavelCnesUnidade = responsavelCnesUnidade;
  }

  /**
   * Performs a deep copy on <i>other</i>.
   */
  public FichaAtividadeColetivaThrift(FichaAtividadeColetivaThrift other) {
    __isset_bitfield = other.__isset_bitfield;
    if (other.isSetUuidFicha()) {
      this.uuidFicha = other.uuidFicha;
    }
    this.dtAtividadeColetiva = other.dtAtividadeColetiva;
    this.numParticipantesProgramados = other.numParticipantesProgramados;
    if (other.isSetLocalAtividade()) {
      this.localAtividade = other.localAtividade;
    }
    this.horaInicio = other.horaInicio;
    this.horaFim = other.horaFim;
    this.inep = other.inep;
    if (other.isSetResponsavelCns()) {
      this.responsavelCns = other.responsavelCns;
    }
    if (other.isSetResponsavelCnesUnidade()) {
      this.responsavelCnesUnidade = other.responsavelCnesUnidade;
    }
    if (other.isSetResponsavelNumIne()) {
      this.responsavelNumIne = other.responsavelNumIne;
    }
    this.numParticipantes = other.numParticipantes;
    this.numAvaliacoesAlteradas = other.numAvaliacoesAlteradas;
    if (other.isSetProfissionais()) {
      List<ProfissionalCboRowItemThrift> __this__profissionais = new ArrayList<ProfissionalCboRowItemThrift>(other.profissionais.size());
      for (ProfissionalCboRowItemThrift other_element : other.profissionais) {
        __this__profissionais.add(new ProfissionalCboRowItemThrift(other_element));
      }
      this.profissionais = __this__profissionais;
    }
    this.atividadeTipo = other.atividadeTipo;
    if (other.isSetTemasParaReuniao()) {
      List<Long> __this__temasParaReuniao = new ArrayList<Long>(other.temasParaReuniao);
      this.temasParaReuniao = __this__temasParaReuniao;
    }
    if (other.isSetPublicoAlvo()) {
      List<Long> __this__publicoAlvo = new ArrayList<Long>(other.publicoAlvo);
      this.publicoAlvo = __this__publicoAlvo;
    }
    if (other.isSetPraticasTemasParaSaude()) {
      List<Long> __this__praticasTemasParaSaude = new ArrayList<Long>(other.praticasTemasParaSaude);
      this.praticasTemasParaSaude = __this__praticasTemasParaSaude;
    }
    if (other.isSetParticipantes()) {
      List<ParticipanteRowItemThrift> __this__participantes = new ArrayList<ParticipanteRowItemThrift>(other.participantes.size());
      for (ParticipanteRowItemThrift other_element : other.participantes) {
        __this__participantes.add(new ParticipanteRowItemThrift(other_element));
      }
      this.participantes = __this__participantes;
    }
    this.tbCdsOrigem = other.tbCdsOrigem;
    if (other.isSetCodigoIbgeMunicipio()) {
      this.codigoIbgeMunicipio = other.codigoIbgeMunicipio;
    }
  }

  public FichaAtividadeColetivaThrift deepCopy() {
    return new FichaAtividadeColetivaThrift(this);
  }

  @Override
  public void clear() {
    this.uuidFicha = null;
    setDtAtividadeColetivaIsSet(false);
    this.dtAtividadeColetiva = 0;
    setNumParticipantesProgramadosIsSet(false);
    this.numParticipantesProgramados = 0;
    this.localAtividade = null;
    setHoraInicioIsSet(false);
    this.horaInicio = 0;
    setHoraFimIsSet(false);
    this.horaFim = 0;
    setInepIsSet(false);
    this.inep = 0;
    this.responsavelCns = null;
    this.responsavelCnesUnidade = null;
    this.responsavelNumIne = null;
    setNumParticipantesIsSet(false);
    this.numParticipantes = 0;
    setNumAvaliacoesAlteradasIsSet(false);
    this.numAvaliacoesAlteradas = 0;
    this.profissionais = null;
    setAtividadeTipoIsSet(false);
    this.atividadeTipo = 0;
    this.temasParaReuniao = null;
    this.publicoAlvo = null;
    this.praticasTemasParaSaude = null;
    this.participantes = null;
    setTbCdsOrigemIsSet(false);
    this.tbCdsOrigem = 0;
    this.codigoIbgeMunicipio = null;
  }

  public String getUuidFicha() {
    return this.uuidFicha;
  }

  public void setUuidFicha(String uuidFicha) {
    this.uuidFicha = uuidFicha;
  }

  public void unsetUuidFicha() {
    this.uuidFicha = null;
  }

  /** Returns true if field uuidFicha is set (has been assigned a value) and false otherwise */
  public boolean isSetUuidFicha() {
    return this.uuidFicha != null;
  }

  public void setUuidFichaIsSet(boolean value) {
    if (!value) {
      this.uuidFicha = null;
    }
  }

  public long getDtAtividadeColetiva() {
    return this.dtAtividadeColetiva;
  }

  public void setDtAtividadeColetiva(long dtAtividadeColetiva) {
    this.dtAtividadeColetiva = dtAtividadeColetiva;
    setDtAtividadeColetivaIsSet(true);
  }

  public void unsetDtAtividadeColetiva() {
    __isset_bitfield = EncodingUtils.clearBit(__isset_bitfield, __DTATIVIDADECOLETIVA_ISSET_ID);
  }

  /** Returns true if field dtAtividadeColetiva is set (has been assigned a value) and false otherwise */
  public boolean isSetDtAtividadeColetiva() {
    return EncodingUtils.testBit(__isset_bitfield, __DTATIVIDADECOLETIVA_ISSET_ID);
  }

  public void setDtAtividadeColetivaIsSet(boolean value) {
    __isset_bitfield = EncodingUtils.setBit(__isset_bitfield, __DTATIVIDADECOLETIVA_ISSET_ID, value);
  }

  public int getNumParticipantesProgramados() {
    return this.numParticipantesProgramados;
  }

  public void setNumParticipantesProgramados(int numParticipantesProgramados) {
    this.numParticipantesProgramados = numParticipantesProgramados;
    setNumParticipantesProgramadosIsSet(true);
  }

  public void unsetNumParticipantesProgramados() {
    __isset_bitfield = EncodingUtils.clearBit(__isset_bitfield, __NUMPARTICIPANTESPROGRAMADOS_ISSET_ID);
  }

  /** Returns true if field numParticipantesProgramados is set (has been assigned a value) and false otherwise */
  public boolean isSetNumParticipantesProgramados() {
    return EncodingUtils.testBit(__isset_bitfield, __NUMPARTICIPANTESPROGRAMADOS_ISSET_ID);
  }

  public void setNumParticipantesProgramadosIsSet(boolean value) {
    __isset_bitfield = EncodingUtils.setBit(__isset_bitfield, __NUMPARTICIPANTESPROGRAMADOS_ISSET_ID, value);
  }

  public String getLocalAtividade() {
    return this.localAtividade;
  }

  public void setLocalAtividade(String localAtividade) {
    this.localAtividade = localAtividade;
  }

  public void unsetLocalAtividade() {
    this.localAtividade = null;
  }

  /** Returns true if field localAtividade is set (has been assigned a value) and false otherwise */
  public boolean isSetLocalAtividade() {
    return this.localAtividade != null;
  }

  public void setLocalAtividadeIsSet(boolean value) {
    if (!value) {
      this.localAtividade = null;
    }
  }

  public long getHoraInicio() {
    return this.horaInicio;
  }

  public void setHoraInicio(long horaInicio) {
    this.horaInicio = horaInicio;
    setHoraInicioIsSet(true);
  }

  public void unsetHoraInicio() {
    __isset_bitfield = EncodingUtils.clearBit(__isset_bitfield, __HORAINICIO_ISSET_ID);
  }

  /** Returns true if field horaInicio is set (has been assigned a value) and false otherwise */
  public boolean isSetHoraInicio() {
    return EncodingUtils.testBit(__isset_bitfield, __HORAINICIO_ISSET_ID);
  }

  public void setHoraInicioIsSet(boolean value) {
    __isset_bitfield = EncodingUtils.setBit(__isset_bitfield, __HORAINICIO_ISSET_ID, value);
  }

  public long getHoraFim() {
    return this.horaFim;
  }

  public void setHoraFim(long horaFim) {
    this.horaFim = horaFim;
    setHoraFimIsSet(true);
  }

  public void unsetHoraFim() {
    __isset_bitfield = EncodingUtils.clearBit(__isset_bitfield, __HORAFIM_ISSET_ID);
  }

  /** Returns true if field horaFim is set (has been assigned a value) and false otherwise */
  public boolean isSetHoraFim() {
    return EncodingUtils.testBit(__isset_bitfield, __HORAFIM_ISSET_ID);
  }

  public void setHoraFimIsSet(boolean value) {
    __isset_bitfield = EncodingUtils.setBit(__isset_bitfield, __HORAFIM_ISSET_ID, value);
  }

  public long getInep() {
    return this.inep;
  }

  public void setInep(long inep) {
    this.inep = inep;
    setInepIsSet(true);
  }

  public void unsetInep() {
    __isset_bitfield = EncodingUtils.clearBit(__isset_bitfield, __INEP_ISSET_ID);
  }

  /** Returns true if field inep is set (has been assigned a value) and false otherwise */
  public boolean isSetInep() {
    return EncodingUtils.testBit(__isset_bitfield, __INEP_ISSET_ID);
  }

  public void setInepIsSet(boolean value) {
    __isset_bitfield = EncodingUtils.setBit(__isset_bitfield, __INEP_ISSET_ID, value);
  }

  public String getResponsavelCns() {
    return this.responsavelCns;
  }

  public void setResponsavelCns(String responsavelCns) {
    this.responsavelCns = responsavelCns;
  }

  public void unsetResponsavelCns() {
    this.responsavelCns = null;
  }

  /** Returns true if field responsavelCns is set (has been assigned a value) and false otherwise */
  public boolean isSetResponsavelCns() {
    return this.responsavelCns != null;
  }

  public void setResponsavelCnsIsSet(boolean value) {
    if (!value) {
      this.responsavelCns = null;
    }
  }

  public String getResponsavelCnesUnidade() {
    return this.responsavelCnesUnidade;
  }

  public void setResponsavelCnesUnidade(String responsavelCnesUnidade) {
    this.responsavelCnesUnidade = responsavelCnesUnidade;
  }

  public void unsetResponsavelCnesUnidade() {
    this.responsavelCnesUnidade = null;
  }

  /** Returns true if field responsavelCnesUnidade is set (has been assigned a value) and false otherwise */
  public boolean isSetResponsavelCnesUnidade() {
    return this.responsavelCnesUnidade != null;
  }

  public void setResponsavelCnesUnidadeIsSet(boolean value) {
    if (!value) {
      this.responsavelCnesUnidade = null;
    }
  }

  public String getResponsavelNumIne() {
    return this.responsavelNumIne;
  }

  public void setResponsavelNumIne(String responsavelNumIne) {
    this.responsavelNumIne = responsavelNumIne;
  }

  public void unsetResponsavelNumIne() {
    this.responsavelNumIne = null;
  }

  /** Returns true if field responsavelNumIne is set (has been assigned a value) and false otherwise */
  public boolean isSetResponsavelNumIne() {
    return this.responsavelNumIne != null;
  }

  public void setResponsavelNumIneIsSet(boolean value) {
    if (!value) {
      this.responsavelNumIne = null;
    }
  }

  public int getNumParticipantes() {
    return this.numParticipantes;
  }

  public void setNumParticipantes(int numParticipantes) {
    this.numParticipantes = numParticipantes;
    setNumParticipantesIsSet(true);
  }

  public void unsetNumParticipantes() {
    __isset_bitfield = EncodingUtils.clearBit(__isset_bitfield, __NUMPARTICIPANTES_ISSET_ID);
  }

  /** Returns true if field numParticipantes is set (has been assigned a value) and false otherwise */
  public boolean isSetNumParticipantes() {
    return EncodingUtils.testBit(__isset_bitfield, __NUMPARTICIPANTES_ISSET_ID);
  }

  public void setNumParticipantesIsSet(boolean value) {
    __isset_bitfield = EncodingUtils.setBit(__isset_bitfield, __NUMPARTICIPANTES_ISSET_ID, value);
  }

  public int getNumAvaliacoesAlteradas() {
    return this.numAvaliacoesAlteradas;
  }

  public void setNumAvaliacoesAlteradas(int numAvaliacoesAlteradas) {
    this.numAvaliacoesAlteradas = numAvaliacoesAlteradas;
    setNumAvaliacoesAlteradasIsSet(true);
  }

  public void unsetNumAvaliacoesAlteradas() {
    __isset_bitfield = EncodingUtils.clearBit(__isset_bitfield, __NUMAVALIACOESALTERADAS_ISSET_ID);
  }

  /** Returns true if field numAvaliacoesAlteradas is set (has been assigned a value) and false otherwise */
  public boolean isSetNumAvaliacoesAlteradas() {
    return EncodingUtils.testBit(__isset_bitfield, __NUMAVALIACOESALTERADAS_ISSET_ID);
  }

  public void setNumAvaliacoesAlteradasIsSet(boolean value) {
    __isset_bitfield = EncodingUtils.setBit(__isset_bitfield, __NUMAVALIACOESALTERADAS_ISSET_ID, value);
  }

  public int getProfissionaisSize() {
    return (this.profissionais == null) ? 0 : this.profissionais.size();
  }

  public java.util.Iterator<ProfissionalCboRowItemThrift> getProfissionaisIterator() {
    return (this.profissionais == null) ? null : this.profissionais.iterator();
  }

  public void addToProfissionais(ProfissionalCboRowItemThrift elem) {
    if (this.profissionais == null) {
      this.profissionais = new ArrayList<ProfissionalCboRowItemThrift>();
    }
    this.profissionais.add(elem);
  }

  public List<ProfissionalCboRowItemThrift> getProfissionais() {
    return this.profissionais;
  }

  public void setProfissionais(List<ProfissionalCboRowItemThrift> profissionais) {
    this.profissionais = profissionais;
  }

  public void unsetProfissionais() {
    this.profissionais = null;
  }

  /** Returns true if field profissionais is set (has been assigned a value) and false otherwise */
  public boolean isSetProfissionais() {
    return this.profissionais != null;
  }

  public void setProfissionaisIsSet(boolean value) {
    if (!value) {
      this.profissionais = null;
    }
  }

  public long getAtividadeTipo() {
    return this.atividadeTipo;
  }

  public void setAtividadeTipo(long atividadeTipo) {
    this.atividadeTipo = atividadeTipo;
    setAtividadeTipoIsSet(true);
  }

  public void unsetAtividadeTipo() {
    __isset_bitfield = EncodingUtils.clearBit(__isset_bitfield, __ATIVIDADETIPO_ISSET_ID);
  }

  /** Returns true if field atividadeTipo is set (has been assigned a value) and false otherwise */
  public boolean isSetAtividadeTipo() {
    return EncodingUtils.testBit(__isset_bitfield, __ATIVIDADETIPO_ISSET_ID);
  }

  public void setAtividadeTipoIsSet(boolean value) {
    __isset_bitfield = EncodingUtils.setBit(__isset_bitfield, __ATIVIDADETIPO_ISSET_ID, value);
  }

  public int getTemasParaReuniaoSize() {
    return (this.temasParaReuniao == null) ? 0 : this.temasParaReuniao.size();
  }

  public java.util.Iterator<Long> getTemasParaReuniaoIterator() {
    return (this.temasParaReuniao == null) ? null : this.temasParaReuniao.iterator();
  }

  public void addToTemasParaReuniao(long elem) {
    if (this.temasParaReuniao == null) {
      this.temasParaReuniao = new ArrayList<Long>();
    }
    this.temasParaReuniao.add(elem);
  }

  public List<Long> getTemasParaReuniao() {
    return this.temasParaReuniao;
  }

  public void setTemasParaReuniao(List<Long> temasParaReuniao) {
    this.temasParaReuniao = temasParaReuniao;
  }

  public void unsetTemasParaReuniao() {
    this.temasParaReuniao = null;
  }

  /** Returns true if field temasParaReuniao is set (has been assigned a value) and false otherwise */
  public boolean isSetTemasParaReuniao() {
    return this.temasParaReuniao != null;
  }

  public void setTemasParaReuniaoIsSet(boolean value) {
    if (!value) {
      this.temasParaReuniao = null;
    }
  }

  public int getPublicoAlvoSize() {
    return (this.publicoAlvo == null) ? 0 : this.publicoAlvo.size();
  }

  public java.util.Iterator<Long> getPublicoAlvoIterator() {
    return (this.publicoAlvo == null) ? null : this.publicoAlvo.iterator();
  }

  public void addToPublicoAlvo(long elem) {
    if (this.publicoAlvo == null) {
      this.publicoAlvo = new ArrayList<Long>();
    }
    this.publicoAlvo.add(elem);
  }

  public List<Long> getPublicoAlvo() {
    return this.publicoAlvo;
  }

  public void setPublicoAlvo(List<Long> publicoAlvo) {
    this.publicoAlvo = publicoAlvo;
  }

  public void unsetPublicoAlvo() {
    this.publicoAlvo = null;
  }

  /** Returns true if field publicoAlvo is set (has been assigned a value) and false otherwise */
  public boolean isSetPublicoAlvo() {
    return this.publicoAlvo != null;
  }

  public void setPublicoAlvoIsSet(boolean value) {
    if (!value) {
      this.publicoAlvo = null;
    }
  }

  public int getPraticasTemasParaSaudeSize() {
    return (this.praticasTemasParaSaude == null) ? 0 : this.praticasTemasParaSaude.size();
  }

  public java.util.Iterator<Long> getPraticasTemasParaSaudeIterator() {
    return (this.praticasTemasParaSaude == null) ? null : this.praticasTemasParaSaude.iterator();
  }

  public void addToPraticasTemasParaSaude(long elem) {
    if (this.praticasTemasParaSaude == null) {
      this.praticasTemasParaSaude = new ArrayList<Long>();
    }
    this.praticasTemasParaSaude.add(elem);
  }

  public List<Long> getPraticasTemasParaSaude() {
    return this.praticasTemasParaSaude;
  }

  public void setPraticasTemasParaSaude(List<Long> praticasTemasParaSaude) {
    this.praticasTemasParaSaude = praticasTemasParaSaude;
  }

  public void unsetPraticasTemasParaSaude() {
    this.praticasTemasParaSaude = null;
  }

  /** Returns true if field praticasTemasParaSaude is set (has been assigned a value) and false otherwise */
  public boolean isSetPraticasTemasParaSaude() {
    return this.praticasTemasParaSaude != null;
  }

  public void setPraticasTemasParaSaudeIsSet(boolean value) {
    if (!value) {
      this.praticasTemasParaSaude = null;
    }
  }

  public int getParticipantesSize() {
    return (this.participantes == null) ? 0 : this.participantes.size();
  }

  public java.util.Iterator<ParticipanteRowItemThrift> getParticipantesIterator() {
    return (this.participantes == null) ? null : this.participantes.iterator();
  }

  public void addToParticipantes(ParticipanteRowItemThrift elem) {
    if (this.participantes == null) {
      this.participantes = new ArrayList<ParticipanteRowItemThrift>();
    }
    this.participantes.add(elem);
  }

  public List<ParticipanteRowItemThrift> getParticipantes() {
    return this.participantes;
  }

  public void setParticipantes(List<ParticipanteRowItemThrift> participantes) {
    this.participantes = participantes;
  }

  public void unsetParticipantes() {
    this.participantes = null;
  }

  /** Returns true if field participantes is set (has been assigned a value) and false otherwise */
  public boolean isSetParticipantes() {
    return this.participantes != null;
  }

  public void setParticipantesIsSet(boolean value) {
    if (!value) {
      this.participantes = null;
    }
  }

  public int getTbCdsOrigem() {
    return this.tbCdsOrigem;
  }

  public void setTbCdsOrigem(int tbCdsOrigem) {
    this.tbCdsOrigem = tbCdsOrigem;
    setTbCdsOrigemIsSet(true);
  }

  public void unsetTbCdsOrigem() {
    __isset_bitfield = EncodingUtils.clearBit(__isset_bitfield, __TBCDSORIGEM_ISSET_ID);
  }

  /** Returns true if field tbCdsOrigem is set (has been assigned a value) and false otherwise */
  public boolean isSetTbCdsOrigem() {
    return EncodingUtils.testBit(__isset_bitfield, __TBCDSORIGEM_ISSET_ID);
  }

  public void setTbCdsOrigemIsSet(boolean value) {
    __isset_bitfield = EncodingUtils.setBit(__isset_bitfield, __TBCDSORIGEM_ISSET_ID, value);
  }

  public String getCodigoIbgeMunicipio() {
    return this.codigoIbgeMunicipio;
  }

  public void setCodigoIbgeMunicipio(String codigoIbgeMunicipio) {
    this.codigoIbgeMunicipio = codigoIbgeMunicipio;
  }

  public void unsetCodigoIbgeMunicipio() {
    this.codigoIbgeMunicipio = null;
  }

  /** Returns true if field codigoIbgeMunicipio is set (has been assigned a value) and false otherwise */
  public boolean isSetCodigoIbgeMunicipio() {
    return this.codigoIbgeMunicipio != null;
  }

  public void setCodigoIbgeMunicipioIsSet(boolean value) {
    if (!value) {
      this.codigoIbgeMunicipio = null;
    }
  }

  public void setFieldValue(_Fields field, Object value) {
    switch (field) {
    case UUID_FICHA:
      if (value == null) {
        unsetUuidFicha();
      } else {
        setUuidFicha((String)value);
      }
      break;

    case DT_ATIVIDADE_COLETIVA:
      if (value == null) {
        unsetDtAtividadeColetiva();
      } else {
        setDtAtividadeColetiva((Long)value);
      }
      break;

    case NUM_PARTICIPANTES_PROGRAMADOS:
      if (value == null) {
        unsetNumParticipantesProgramados();
      } else {
        setNumParticipantesProgramados((Integer)value);
      }
      break;

    case LOCAL_ATIVIDADE:
      if (value == null) {
        unsetLocalAtividade();
      } else {
        setLocalAtividade((String)value);
      }
      break;

    case HORA_INICIO:
      if (value == null) {
        unsetHoraInicio();
      } else {
        setHoraInicio((Long)value);
      }
      break;

    case HORA_FIM:
      if (value == null) {
        unsetHoraFim();
      } else {
        setHoraFim((Long)value);
      }
      break;

    case INEP:
      if (value == null) {
        unsetInep();
      } else {
        setInep((Long)value);
      }
      break;

    case RESPONSAVEL_CNS:
      if (value == null) {
        unsetResponsavelCns();
      } else {
        setResponsavelCns((String)value);
      }
      break;

    case RESPONSAVEL_CNES_UNIDADE:
      if (value == null) {
        unsetResponsavelCnesUnidade();
      } else {
        setResponsavelCnesUnidade((String)value);
      }
      break;

    case RESPONSAVEL_NUM_INE:
      if (value == null) {
        unsetResponsavelNumIne();
      } else {
        setResponsavelNumIne((String)value);
      }
      break;

    case NUM_PARTICIPANTES:
      if (value == null) {
        unsetNumParticipantes();
      } else {
        setNumParticipantes((Integer)value);
      }
      break;

    case NUM_AVALIACOES_ALTERADAS:
      if (value == null) {
        unsetNumAvaliacoesAlteradas();
      } else {
        setNumAvaliacoesAlteradas((Integer)value);
      }
      break;

    case PROFISSIONAIS:
      if (value == null) {
        unsetProfissionais();
      } else {
        setProfissionais((List<ProfissionalCboRowItemThrift>)value);
      }
      break;

    case ATIVIDADE_TIPO:
      if (value == null) {
        unsetAtividadeTipo();
      } else {
        setAtividadeTipo((Long)value);
      }
      break;

    case TEMAS_PARA_REUNIAO:
      if (value == null) {
        unsetTemasParaReuniao();
      } else {
        setTemasParaReuniao((List<Long>)value);
      }
      break;

    case PUBLICO_ALVO:
      if (value == null) {
        unsetPublicoAlvo();
      } else {
        setPublicoAlvo((List<Long>)value);
      }
      break;

    case PRATICAS_TEMAS_PARA_SAUDE:
      if (value == null) {
        unsetPraticasTemasParaSaude();
      } else {
        setPraticasTemasParaSaude((List<Long>)value);
      }
      break;

    case PARTICIPANTES:
      if (value == null) {
        unsetParticipantes();
      } else {
        setParticipantes((List<ParticipanteRowItemThrift>)value);
      }
      break;

    case TB_CDS_ORIGEM:
      if (value == null) {
        unsetTbCdsOrigem();
      } else {
        setTbCdsOrigem((Integer)value);
      }
      break;

    case CODIGO_IBGE_MUNICIPIO:
      if (value == null) {
        unsetCodigoIbgeMunicipio();
      } else {
        setCodigoIbgeMunicipio((String)value);
      }
      break;

    }
  }

  public Object getFieldValue(_Fields field) {
    switch (field) {
    case UUID_FICHA:
      return getUuidFicha();

    case DT_ATIVIDADE_COLETIVA:
      return Long.valueOf(getDtAtividadeColetiva());

    case NUM_PARTICIPANTES_PROGRAMADOS:
      return Integer.valueOf(getNumParticipantesProgramados());

    case LOCAL_ATIVIDADE:
      return getLocalAtividade();

    case HORA_INICIO:
      return Long.valueOf(getHoraInicio());

    case HORA_FIM:
      return Long.valueOf(getHoraFim());

    case INEP:
      return Long.valueOf(getInep());

    case RESPONSAVEL_CNS:
      return getResponsavelCns();

    case RESPONSAVEL_CNES_UNIDADE:
      return getResponsavelCnesUnidade();

    case RESPONSAVEL_NUM_INE:
      return getResponsavelNumIne();

    case NUM_PARTICIPANTES:
      return Integer.valueOf(getNumParticipantes());

    case NUM_AVALIACOES_ALTERADAS:
      return Integer.valueOf(getNumAvaliacoesAlteradas());

    case PROFISSIONAIS:
      return getProfissionais();

    case ATIVIDADE_TIPO:
      return Long.valueOf(getAtividadeTipo());

    case TEMAS_PARA_REUNIAO:
      return getTemasParaReuniao();

    case PUBLICO_ALVO:
      return getPublicoAlvo();

    case PRATICAS_TEMAS_PARA_SAUDE:
      return getPraticasTemasParaSaude();

    case PARTICIPANTES:
      return getParticipantes();

    case TB_CDS_ORIGEM:
      return Integer.valueOf(getTbCdsOrigem());

    case CODIGO_IBGE_MUNICIPIO:
      return getCodigoIbgeMunicipio();

    }
    throw new IllegalStateException();
  }

  /** Returns true if field corresponding to fieldID is set (has been assigned a value) and false otherwise */
  public boolean isSet(_Fields field) {
    if (field == null) {
      throw new IllegalArgumentException();
    }

    switch (field) {
    case UUID_FICHA:
      return isSetUuidFicha();
    case DT_ATIVIDADE_COLETIVA:
      return isSetDtAtividadeColetiva();
    case NUM_PARTICIPANTES_PROGRAMADOS:
      return isSetNumParticipantesProgramados();
    case LOCAL_ATIVIDADE:
      return isSetLocalAtividade();
    case HORA_INICIO:
      return isSetHoraInicio();
    case HORA_FIM:
      return isSetHoraFim();
    case INEP:
      return isSetInep();
    case RESPONSAVEL_CNS:
      return isSetResponsavelCns();
    case RESPONSAVEL_CNES_UNIDADE:
      return isSetResponsavelCnesUnidade();
    case RESPONSAVEL_NUM_INE:
      return isSetResponsavelNumIne();
    case NUM_PARTICIPANTES:
      return isSetNumParticipantes();
    case NUM_AVALIACOES_ALTERADAS:
      return isSetNumAvaliacoesAlteradas();
    case PROFISSIONAIS:
      return isSetProfissionais();
    case ATIVIDADE_TIPO:
      return isSetAtividadeTipo();
    case TEMAS_PARA_REUNIAO:
      return isSetTemasParaReuniao();
    case PUBLICO_ALVO:
      return isSetPublicoAlvo();
    case PRATICAS_TEMAS_PARA_SAUDE:
      return isSetPraticasTemasParaSaude();
    case PARTICIPANTES:
      return isSetParticipantes();
    case TB_CDS_ORIGEM:
      return isSetTbCdsOrigem();
    case CODIGO_IBGE_MUNICIPIO:
      return isSetCodigoIbgeMunicipio();
    }
    throw new IllegalStateException();
  }

  @Override
  public boolean equals(Object that) {
    if (that == null)
      return false;
    if (that instanceof FichaAtividadeColetivaThrift)
      return this.equals((FichaAtividadeColetivaThrift)that);
    return false;
  }

  public boolean equals(FichaAtividadeColetivaThrift that) {
    if (that == null)
      return false;

    boolean this_present_uuidFicha = true && this.isSetUuidFicha();
    boolean that_present_uuidFicha = true && that.isSetUuidFicha();
    if (this_present_uuidFicha || that_present_uuidFicha) {
      if (!(this_present_uuidFicha && that_present_uuidFicha))
        return false;
      if (!this.uuidFicha.equals(that.uuidFicha))
        return false;
    }

    boolean this_present_dtAtividadeColetiva = true && this.isSetDtAtividadeColetiva();
    boolean that_present_dtAtividadeColetiva = true && that.isSetDtAtividadeColetiva();
    if (this_present_dtAtividadeColetiva || that_present_dtAtividadeColetiva) {
      if (!(this_present_dtAtividadeColetiva && that_present_dtAtividadeColetiva))
        return false;
      if (this.dtAtividadeColetiva != that.dtAtividadeColetiva)
        return false;
    }

    boolean this_present_numParticipantesProgramados = true && this.isSetNumParticipantesProgramados();
    boolean that_present_numParticipantesProgramados = true && that.isSetNumParticipantesProgramados();
    if (this_present_numParticipantesProgramados || that_present_numParticipantesProgramados) {
      if (!(this_present_numParticipantesProgramados && that_present_numParticipantesProgramados))
        return false;
      if (this.numParticipantesProgramados != that.numParticipantesProgramados)
        return false;
    }

    boolean this_present_localAtividade = true && this.isSetLocalAtividade();
    boolean that_present_localAtividade = true && that.isSetLocalAtividade();
    if (this_present_localAtividade || that_present_localAtividade) {
      if (!(this_present_localAtividade && that_present_localAtividade))
        return false;
      if (!this.localAtividade.equals(that.localAtividade))
        return false;
    }

    boolean this_present_horaInicio = true && this.isSetHoraInicio();
    boolean that_present_horaInicio = true && that.isSetHoraInicio();
    if (this_present_horaInicio || that_present_horaInicio) {
      if (!(this_present_horaInicio && that_present_horaInicio))
        return false;
      if (this.horaInicio != that.horaInicio)
        return false;
    }

    boolean this_present_horaFim = true && this.isSetHoraFim();
    boolean that_present_horaFim = true && that.isSetHoraFim();
    if (this_present_horaFim || that_present_horaFim) {
      if (!(this_present_horaFim && that_present_horaFim))
        return false;
      if (this.horaFim != that.horaFim)
        return false;
    }

    boolean this_present_inep = true && this.isSetInep();
    boolean that_present_inep = true && that.isSetInep();
    if (this_present_inep || that_present_inep) {
      if (!(this_present_inep && that_present_inep))
        return false;
      if (this.inep != that.inep)
        return false;
    }

    boolean this_present_responsavelCns = true && this.isSetResponsavelCns();
    boolean that_present_responsavelCns = true && that.isSetResponsavelCns();
    if (this_present_responsavelCns || that_present_responsavelCns) {
      if (!(this_present_responsavelCns && that_present_responsavelCns))
        return false;
      if (!this.responsavelCns.equals(that.responsavelCns))
        return false;
    }

    boolean this_present_responsavelCnesUnidade = true && this.isSetResponsavelCnesUnidade();
    boolean that_present_responsavelCnesUnidade = true && that.isSetResponsavelCnesUnidade();
    if (this_present_responsavelCnesUnidade || that_present_responsavelCnesUnidade) {
      if (!(this_present_responsavelCnesUnidade && that_present_responsavelCnesUnidade))
        return false;
      if (!this.responsavelCnesUnidade.equals(that.responsavelCnesUnidade))
        return false;
    }

    boolean this_present_responsavelNumIne = true && this.isSetResponsavelNumIne();
    boolean that_present_responsavelNumIne = true && that.isSetResponsavelNumIne();
    if (this_present_responsavelNumIne || that_present_responsavelNumIne) {
      if (!(this_present_responsavelNumIne && that_present_responsavelNumIne))
        return false;
      if (!this.responsavelNumIne.equals(that.responsavelNumIne))
        return false;
    }

    boolean this_present_numParticipantes = true && this.isSetNumParticipantes();
    boolean that_present_numParticipantes = true && that.isSetNumParticipantes();
    if (this_present_numParticipantes || that_present_numParticipantes) {
      if (!(this_present_numParticipantes && that_present_numParticipantes))
        return false;
      if (this.numParticipantes != that.numParticipantes)
        return false;
    }

    boolean this_present_numAvaliacoesAlteradas = true && this.isSetNumAvaliacoesAlteradas();
    boolean that_present_numAvaliacoesAlteradas = true && that.isSetNumAvaliacoesAlteradas();
    if (this_present_numAvaliacoesAlteradas || that_present_numAvaliacoesAlteradas) {
      if (!(this_present_numAvaliacoesAlteradas && that_present_numAvaliacoesAlteradas))
        return false;
      if (this.numAvaliacoesAlteradas != that.numAvaliacoesAlteradas)
        return false;
    }

    boolean this_present_profissionais = true && this.isSetProfissionais();
    boolean that_present_profissionais = true && that.isSetProfissionais();
    if (this_present_profissionais || that_present_profissionais) {
      if (!(this_present_profissionais && that_present_profissionais))
        return false;
      if (!this.profissionais.equals(that.profissionais))
        return false;
    }

    boolean this_present_atividadeTipo = true && this.isSetAtividadeTipo();
    boolean that_present_atividadeTipo = true && that.isSetAtividadeTipo();
    if (this_present_atividadeTipo || that_present_atividadeTipo) {
      if (!(this_present_atividadeTipo && that_present_atividadeTipo))
        return false;
      if (this.atividadeTipo != that.atividadeTipo)
        return false;
    }

    boolean this_present_temasParaReuniao = true && this.isSetTemasParaReuniao();
    boolean that_present_temasParaReuniao = true && that.isSetTemasParaReuniao();
    if (this_present_temasParaReuniao || that_present_temasParaReuniao) {
      if (!(this_present_temasParaReuniao && that_present_temasParaReuniao))
        return false;
      if (!this.temasParaReuniao.equals(that.temasParaReuniao))
        return false;
    }

    boolean this_present_publicoAlvo = true && this.isSetPublicoAlvo();
    boolean that_present_publicoAlvo = true && that.isSetPublicoAlvo();
    if (this_present_publicoAlvo || that_present_publicoAlvo) {
      if (!(this_present_publicoAlvo && that_present_publicoAlvo))
        return false;
      if (!this.publicoAlvo.equals(that.publicoAlvo))
        return false;
    }

    boolean this_present_praticasTemasParaSaude = true && this.isSetPraticasTemasParaSaude();
    boolean that_present_praticasTemasParaSaude = true && that.isSetPraticasTemasParaSaude();
    if (this_present_praticasTemasParaSaude || that_present_praticasTemasParaSaude) {
      if (!(this_present_praticasTemasParaSaude && that_present_praticasTemasParaSaude))
        return false;
      if (!this.praticasTemasParaSaude.equals(that.praticasTemasParaSaude))
        return false;
    }

    boolean this_present_participantes = true && this.isSetParticipantes();
    boolean that_present_participantes = true && that.isSetParticipantes();
    if (this_present_participantes || that_present_participantes) {
      if (!(this_present_participantes && that_present_participantes))
        return false;
      if (!this.participantes.equals(that.participantes))
        return false;
    }

    boolean this_present_tbCdsOrigem = true && this.isSetTbCdsOrigem();
    boolean that_present_tbCdsOrigem = true && that.isSetTbCdsOrigem();
    if (this_present_tbCdsOrigem || that_present_tbCdsOrigem) {
      if (!(this_present_tbCdsOrigem && that_present_tbCdsOrigem))
        return false;
      if (this.tbCdsOrigem != that.tbCdsOrigem)
        return false;
    }

    boolean this_present_codigoIbgeMunicipio = true && this.isSetCodigoIbgeMunicipio();
    boolean that_present_codigoIbgeMunicipio = true && that.isSetCodigoIbgeMunicipio();
    if (this_present_codigoIbgeMunicipio || that_present_codigoIbgeMunicipio) {
      if (!(this_present_codigoIbgeMunicipio && that_present_codigoIbgeMunicipio))
        return false;
      if (!this.codigoIbgeMunicipio.equals(that.codigoIbgeMunicipio))
        return false;
    }

    return true;
  }

  @Override
  public int hashCode() {
    List<Object> list = new ArrayList<Object>();

    boolean present_uuidFicha = true && (isSetUuidFicha());
    list.add(present_uuidFicha);
    if (present_uuidFicha)
      list.add(uuidFicha);

    boolean present_dtAtividadeColetiva = true && (isSetDtAtividadeColetiva());
    list.add(present_dtAtividadeColetiva);
    if (present_dtAtividadeColetiva)
      list.add(dtAtividadeColetiva);

    boolean present_numParticipantesProgramados = true && (isSetNumParticipantesProgramados());
    list.add(present_numParticipantesProgramados);
    if (present_numParticipantesProgramados)
      list.add(numParticipantesProgramados);

    boolean present_localAtividade = true && (isSetLocalAtividade());
    list.add(present_localAtividade);
    if (present_localAtividade)
      list.add(localAtividade);

    boolean present_horaInicio = true && (isSetHoraInicio());
    list.add(present_horaInicio);
    if (present_horaInicio)
      list.add(horaInicio);

    boolean present_horaFim = true && (isSetHoraFim());
    list.add(present_horaFim);
    if (present_horaFim)
      list.add(horaFim);

    boolean present_inep = true && (isSetInep());
    list.add(present_inep);
    if (present_inep)
      list.add(inep);

    boolean present_responsavelCns = true && (isSetResponsavelCns());
    list.add(present_responsavelCns);
    if (present_responsavelCns)
      list.add(responsavelCns);

    boolean present_responsavelCnesUnidade = true && (isSetResponsavelCnesUnidade());
    list.add(present_responsavelCnesUnidade);
    if (present_responsavelCnesUnidade)
      list.add(responsavelCnesUnidade);

    boolean present_responsavelNumIne = true && (isSetResponsavelNumIne());
    list.add(present_responsavelNumIne);
    if (present_responsavelNumIne)
      list.add(responsavelNumIne);

    boolean present_numParticipantes = true && (isSetNumParticipantes());
    list.add(present_numParticipantes);
    if (present_numParticipantes)
      list.add(numParticipantes);

    boolean present_numAvaliacoesAlteradas = true && (isSetNumAvaliacoesAlteradas());
    list.add(present_numAvaliacoesAlteradas);
    if (present_numAvaliacoesAlteradas)
      list.add(numAvaliacoesAlteradas);

    boolean present_profissionais = true && (isSetProfissionais());
    list.add(present_profissionais);
    if (present_profissionais)
      list.add(profissionais);

    boolean present_atividadeTipo = true && (isSetAtividadeTipo());
    list.add(present_atividadeTipo);
    if (present_atividadeTipo)
      list.add(atividadeTipo);

    boolean present_temasParaReuniao = true && (isSetTemasParaReuniao());
    list.add(present_temasParaReuniao);
    if (present_temasParaReuniao)
      list.add(temasParaReuniao);

    boolean present_publicoAlvo = true && (isSetPublicoAlvo());
    list.add(present_publicoAlvo);
    if (present_publicoAlvo)
      list.add(publicoAlvo);

    boolean present_praticasTemasParaSaude = true && (isSetPraticasTemasParaSaude());
    list.add(present_praticasTemasParaSaude);
    if (present_praticasTemasParaSaude)
      list.add(praticasTemasParaSaude);

    boolean present_participantes = true && (isSetParticipantes());
    list.add(present_participantes);
    if (present_participantes)
      list.add(participantes);

    boolean present_tbCdsOrigem = true && (isSetTbCdsOrigem());
    list.add(present_tbCdsOrigem);
    if (present_tbCdsOrigem)
      list.add(tbCdsOrigem);

    boolean present_codigoIbgeMunicipio = true && (isSetCodigoIbgeMunicipio());
    list.add(present_codigoIbgeMunicipio);
    if (present_codigoIbgeMunicipio)
      list.add(codigoIbgeMunicipio);

    return list.hashCode();
  }

  @Override
  public int compareTo(FichaAtividadeColetivaThrift other) {
    if (!getClass().equals(other.getClass())) {
      return getClass().getName().compareTo(other.getClass().getName());
    }

    int lastComparison = 0;

    lastComparison = Boolean.valueOf(isSetUuidFicha()).compareTo(other.isSetUuidFicha());
    if (lastComparison != 0) {
      return lastComparison;
    }
    if (isSetUuidFicha()) {
      lastComparison = org.apache.thrift.TBaseHelper.compareTo(this.uuidFicha, other.uuidFicha);
      if (lastComparison != 0) {
        return lastComparison;
      }
    }
    lastComparison = Boolean.valueOf(isSetDtAtividadeColetiva()).compareTo(other.isSetDtAtividadeColetiva());
    if (lastComparison != 0) {
      return lastComparison;
    }
    if (isSetDtAtividadeColetiva()) {
      lastComparison = org.apache.thrift.TBaseHelper.compareTo(this.dtAtividadeColetiva, other.dtAtividadeColetiva);
      if (lastComparison != 0) {
        return lastComparison;
      }
    }
    lastComparison = Boolean.valueOf(isSetNumParticipantesProgramados()).compareTo(other.isSetNumParticipantesProgramados());
    if (lastComparison != 0) {
      return lastComparison;
    }
    if (isSetNumParticipantesProgramados()) {
      lastComparison = org.apache.thrift.TBaseHelper.compareTo(this.numParticipantesProgramados, other.numParticipantesProgramados);
      if (lastComparison != 0) {
        return lastComparison;
      }
    }
    lastComparison = Boolean.valueOf(isSetLocalAtividade()).compareTo(other.isSetLocalAtividade());
    if (lastComparison != 0) {
      return lastComparison;
    }
    if (isSetLocalAtividade()) {
      lastComparison = org.apache.thrift.TBaseHelper.compareTo(this.localAtividade, other.localAtividade);
      if (lastComparison != 0) {
        return lastComparison;
      }
    }
    lastComparison = Boolean.valueOf(isSetHoraInicio()).compareTo(other.isSetHoraInicio());
    if (lastComparison != 0) {
      return lastComparison;
    }
    if (isSetHoraInicio()) {
      lastComparison = org.apache.thrift.TBaseHelper.compareTo(this.horaInicio, other.horaInicio);
      if (lastComparison != 0) {
        return lastComparison;
      }
    }
    lastComparison = Boolean.valueOf(isSetHoraFim()).compareTo(other.isSetHoraFim());
    if (lastComparison != 0) {
      return lastComparison;
    }
    if (isSetHoraFim()) {
      lastComparison = org.apache.thrift.TBaseHelper.compareTo(this.horaFim, other.horaFim);
      if (lastComparison != 0) {
        return lastComparison;
      }
    }
    lastComparison = Boolean.valueOf(isSetInep()).compareTo(other.isSetInep());
    if (lastComparison != 0) {
      return lastComparison;
    }
    if (isSetInep()) {
      lastComparison = org.apache.thrift.TBaseHelper.compareTo(this.inep, other.inep);
      if (lastComparison != 0) {
        return lastComparison;
      }
    }
    lastComparison = Boolean.valueOf(isSetResponsavelCns()).compareTo(other.isSetResponsavelCns());
    if (lastComparison != 0) {
      return lastComparison;
    }
    if (isSetResponsavelCns()) {
      lastComparison = org.apache.thrift.TBaseHelper.compareTo(this.responsavelCns, other.responsavelCns);
      if (lastComparison != 0) {
        return lastComparison;
      }
    }
    lastComparison = Boolean.valueOf(isSetResponsavelCnesUnidade()).compareTo(other.isSetResponsavelCnesUnidade());
    if (lastComparison != 0) {
      return lastComparison;
    }
    if (isSetResponsavelCnesUnidade()) {
      lastComparison = org.apache.thrift.TBaseHelper.compareTo(this.responsavelCnesUnidade, other.responsavelCnesUnidade);
      if (lastComparison != 0) {
        return lastComparison;
      }
    }
    lastComparison = Boolean.valueOf(isSetResponsavelNumIne()).compareTo(other.isSetResponsavelNumIne());
    if (lastComparison != 0) {
      return lastComparison;
    }
    if (isSetResponsavelNumIne()) {
      lastComparison = org.apache.thrift.TBaseHelper.compareTo(this.responsavelNumIne, other.responsavelNumIne);
      if (lastComparison != 0) {
        return lastComparison;
      }
    }
    lastComparison = Boolean.valueOf(isSetNumParticipantes()).compareTo(other.isSetNumParticipantes());
    if (lastComparison != 0) {
      return lastComparison;
    }
    if (isSetNumParticipantes()) {
      lastComparison = org.apache.thrift.TBaseHelper.compareTo(this.numParticipantes, other.numParticipantes);
      if (lastComparison != 0) {
        return lastComparison;
      }
    }
    lastComparison = Boolean.valueOf(isSetNumAvaliacoesAlteradas()).compareTo(other.isSetNumAvaliacoesAlteradas());
    if (lastComparison != 0) {
      return lastComparison;
    }
    if (isSetNumAvaliacoesAlteradas()) {
      lastComparison = org.apache.thrift.TBaseHelper.compareTo(this.numAvaliacoesAlteradas, other.numAvaliacoesAlteradas);
      if (lastComparison != 0) {
        return lastComparison;
      }
    }
    lastComparison = Boolean.valueOf(isSetProfissionais()).compareTo(other.isSetProfissionais());
    if (lastComparison != 0) {
      return lastComparison;
    }
    if (isSetProfissionais()) {
      lastComparison = org.apache.thrift.TBaseHelper.compareTo(this.profissionais, other.profissionais);
      if (lastComparison != 0) {
        return lastComparison;
      }
    }
    lastComparison = Boolean.valueOf(isSetAtividadeTipo()).compareTo(other.isSetAtividadeTipo());
    if (lastComparison != 0) {
      return lastComparison;
    }
    if (isSetAtividadeTipo()) {
      lastComparison = org.apache.thrift.TBaseHelper.compareTo(this.atividadeTipo, other.atividadeTipo);
      if (lastComparison != 0) {
        return lastComparison;
      }
    }
    lastComparison = Boolean.valueOf(isSetTemasParaReuniao()).compareTo(other.isSetTemasParaReuniao());
    if (lastComparison != 0) {
      return lastComparison;
    }
    if (isSetTemasParaReuniao()) {
      lastComparison = org.apache.thrift.TBaseHelper.compareTo(this.temasParaReuniao, other.temasParaReuniao);
      if (lastComparison != 0) {
        return lastComparison;
      }
    }
    lastComparison = Boolean.valueOf(isSetPublicoAlvo()).compareTo(other.isSetPublicoAlvo());
    if (lastComparison != 0) {
      return lastComparison;
    }
    if (isSetPublicoAlvo()) {
      lastComparison = org.apache.thrift.TBaseHelper.compareTo(this.publicoAlvo, other.publicoAlvo);
      if (lastComparison != 0) {
        return lastComparison;
      }
    }
    lastComparison = Boolean.valueOf(isSetPraticasTemasParaSaude()).compareTo(other.isSetPraticasTemasParaSaude());
    if (lastComparison != 0) {
      return lastComparison;
    }
    if (isSetPraticasTemasParaSaude()) {
      lastComparison = org.apache.thrift.TBaseHelper.compareTo(this.praticasTemasParaSaude, other.praticasTemasParaSaude);
      if (lastComparison != 0) {
        return lastComparison;
      }
    }
    lastComparison = Boolean.valueOf(isSetParticipantes()).compareTo(other.isSetParticipantes());
    if (lastComparison != 0) {
      return lastComparison;
    }
    if (isSetParticipantes()) {
      lastComparison = org.apache.thrift.TBaseHelper.compareTo(this.participantes, other.participantes);
      if (lastComparison != 0) {
        return lastComparison;
      }
    }
    lastComparison = Boolean.valueOf(isSetTbCdsOrigem()).compareTo(other.isSetTbCdsOrigem());
    if (lastComparison != 0) {
      return lastComparison;
    }
    if (isSetTbCdsOrigem()) {
      lastComparison = org.apache.thrift.TBaseHelper.compareTo(this.tbCdsOrigem, other.tbCdsOrigem);
      if (lastComparison != 0) {
        return lastComparison;
      }
    }
    lastComparison = Boolean.valueOf(isSetCodigoIbgeMunicipio()).compareTo(other.isSetCodigoIbgeMunicipio());
    if (lastComparison != 0) {
      return lastComparison;
    }
    if (isSetCodigoIbgeMunicipio()) {
      lastComparison = org.apache.thrift.TBaseHelper.compareTo(this.codigoIbgeMunicipio, other.codigoIbgeMunicipio);
      if (lastComparison != 0) {
        return lastComparison;
      }
    }
    return 0;
  }

  public _Fields fieldForId(int fieldId) {
    return _Fields.findByThriftId(fieldId);
  }

  public void read(org.apache.thrift.protocol.TProtocol iprot) throws org.apache.thrift.TException {
    schemes.get(iprot.getScheme()).getScheme().read(iprot, this);
  }

  public void write(org.apache.thrift.protocol.TProtocol oprot) throws org.apache.thrift.TException {
    schemes.get(oprot.getScheme()).getScheme().write(oprot, this);
  }

  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder("FichaAtividadeColetivaThrift(");
    boolean first = true;

    sb.append("uuidFicha:");
    if (this.uuidFicha == null) {
      sb.append("null");
    } else {
      sb.append(this.uuidFicha);
    }
    first = false;
    if (isSetDtAtividadeColetiva()) {
      if (!first) sb.append(", ");
      sb.append("dtAtividadeColetiva:");
      sb.append(this.dtAtividadeColetiva);
      first = false;
    }
    if (isSetNumParticipantesProgramados()) {
      if (!first) sb.append(", ");
      sb.append("numParticipantesProgramados:");
      sb.append(this.numParticipantesProgramados);
      first = false;
    }
    if (isSetLocalAtividade()) {
      if (!first) sb.append(", ");
      sb.append("localAtividade:");
      if (this.localAtividade == null) {
        sb.append("null");
      } else {
        sb.append(this.localAtividade);
      }
      first = false;
    }
    if (isSetHoraInicio()) {
      if (!first) sb.append(", ");
      sb.append("horaInicio:");
      sb.append(this.horaInicio);
      first = false;
    }
    if (isSetHoraFim()) {
      if (!first) sb.append(", ");
      sb.append("horaFim:");
      sb.append(this.horaFim);
      first = false;
    }
    if (isSetInep()) {
      if (!first) sb.append(", ");
      sb.append("inep:");
      sb.append(this.inep);
      first = false;
    }
    if (isSetResponsavelCns()) {
      if (!first) sb.append(", ");
      sb.append("responsavelCns:");
      if (this.responsavelCns == null) {
        sb.append("null");
      } else {
        sb.append(this.responsavelCns);
      }
      first = false;
    }
    if (!first) sb.append(", ");
    sb.append("responsavelCnesUnidade:");
    if (this.responsavelCnesUnidade == null) {
      sb.append("null");
    } else {
      sb.append(this.responsavelCnesUnidade);
    }
    first = false;
    if (isSetResponsavelNumIne()) {
      if (!first) sb.append(", ");
      sb.append("responsavelNumIne:");
      if (this.responsavelNumIne == null) {
        sb.append("null");
      } else {
        sb.append(this.responsavelNumIne);
      }
      first = false;
    }
    if (isSetNumParticipantes()) {
      if (!first) sb.append(", ");
      sb.append("numParticipantes:");
      sb.append(this.numParticipantes);
      first = false;
    }
    if (isSetNumAvaliacoesAlteradas()) {
      if (!first) sb.append(", ");
      sb.append("numAvaliacoesAlteradas:");
      sb.append(this.numAvaliacoesAlteradas);
      first = false;
    }
    if (isSetProfissionais()) {
      if (!first) sb.append(", ");
      sb.append("profissionais:");
      if (this.profissionais == null) {
        sb.append("null");
      } else {
        sb.append(this.profissionais);
      }
      first = false;
    }
    if (isSetAtividadeTipo()) {
      if (!first) sb.append(", ");
      sb.append("atividadeTipo:");
      sb.append(this.atividadeTipo);
      first = false;
    }
    if (isSetTemasParaReuniao()) {
      if (!first) sb.append(", ");
      sb.append("temasParaReuniao:");
      if (this.temasParaReuniao == null) {
        sb.append("null");
      } else {
        sb.append(this.temasParaReuniao);
      }
      first = false;
    }
    if (isSetPublicoAlvo()) {
      if (!first) sb.append(", ");
      sb.append("publicoAlvo:");
      if (this.publicoAlvo == null) {
        sb.append("null");
      } else {
        sb.append(this.publicoAlvo);
      }
      first = false;
    }
    if (isSetPraticasTemasParaSaude()) {
      if (!first) sb.append(", ");
      sb.append("praticasTemasParaSaude:");
      if (this.praticasTemasParaSaude == null) {
        sb.append("null");
      } else {
        sb.append(this.praticasTemasParaSaude);
      }
      first = false;
    }
    if (isSetParticipantes()) {
      if (!first) sb.append(", ");
      sb.append("participantes:");
      if (this.participantes == null) {
        sb.append("null");
      } else {
        sb.append(this.participantes);
      }
      first = false;
    }
    if (isSetTbCdsOrigem()) {
      if (!first) sb.append(", ");
      sb.append("tbCdsOrigem:");
      sb.append(this.tbCdsOrigem);
      first = false;
    }
    if (isSetCodigoIbgeMunicipio()) {
      if (!first) sb.append(", ");
      sb.append("codigoIbgeMunicipio:");
      if (this.codigoIbgeMunicipio == null) {
        sb.append("null");
      } else {
        sb.append(this.codigoIbgeMunicipio);
      }
      first = false;
    }
    sb.append(")");
    return sb.toString();
  }

  public void validate() throws org.apache.thrift.TException {
    // check for required fields
    if (!isSetUuidFicha()) {
      throw new org.apache.thrift.protocol.TProtocolException("Required field 'uuidFicha' is unset! Struct:" + toString());
    }

    if (!isSetResponsavelCnesUnidade()) {
      throw new org.apache.thrift.protocol.TProtocolException("Required field 'responsavelCnesUnidade' is unset! Struct:" + toString());
    }

    // check for sub-struct validity
  }

  private void writeObject(java.io.ObjectOutputStream out) throws java.io.IOException {
    try {
      write(new org.apache.thrift.protocol.TCompactProtocol(new org.apache.thrift.transport.TIOStreamTransport(out)));
    } catch (org.apache.thrift.TException te) {
      throw new java.io.IOException(te);
    }
  }

  private void readObject(java.io.ObjectInputStream in) throws java.io.IOException, ClassNotFoundException {
    try {
      // it doesn't seem like you should have to do this, but java serialization is wacky, and doesn't call the default constructor.
      __isset_bitfield = 0;
      read(new org.apache.thrift.protocol.TCompactProtocol(new org.apache.thrift.transport.TIOStreamTransport(in)));
    } catch (org.apache.thrift.TException te) {
      throw new java.io.IOException(te);
    }
  }

  private static class FichaAtividadeColetivaThriftStandardSchemeFactory implements SchemeFactory {
    public FichaAtividadeColetivaThriftStandardScheme getScheme() {
      return new FichaAtividadeColetivaThriftStandardScheme();
    }
  }

  private static class FichaAtividadeColetivaThriftStandardScheme extends StandardScheme<FichaAtividadeColetivaThrift> {

    public void read(org.apache.thrift.protocol.TProtocol iprot, FichaAtividadeColetivaThrift struct) throws org.apache.thrift.TException {
      org.apache.thrift.protocol.TField schemeField;
      iprot.readStructBegin();
      while (true)
      {
        schemeField = iprot.readFieldBegin();
        if (schemeField.type == org.apache.thrift.protocol.TType.STOP) { 
          break;
        }
        switch (schemeField.id) {
          case 1: // UUID_FICHA
            if (schemeField.type == org.apache.thrift.protocol.TType.STRING) {
              struct.uuidFicha = iprot.readString();
              struct.setUuidFichaIsSet(true);
            } else { 
              org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
            }
            break;
          case 2: // DT_ATIVIDADE_COLETIVA
            if (schemeField.type == org.apache.thrift.protocol.TType.I64) {
              struct.dtAtividadeColetiva = iprot.readI64();
              struct.setDtAtividadeColetivaIsSet(true);
            } else { 
              org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
            }
            break;
          case 3: // NUM_PARTICIPANTES_PROGRAMADOS
            if (schemeField.type == org.apache.thrift.protocol.TType.I32) {
              struct.numParticipantesProgramados = iprot.readI32();
              struct.setNumParticipantesProgramadosIsSet(true);
            } else { 
              org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
            }
            break;
          case 4: // LOCAL_ATIVIDADE
            if (schemeField.type == org.apache.thrift.protocol.TType.STRING) {
              struct.localAtividade = iprot.readString();
              struct.setLocalAtividadeIsSet(true);
            } else { 
              org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
            }
            break;
          case 5: // HORA_INICIO
            if (schemeField.type == org.apache.thrift.protocol.TType.I64) {
              struct.horaInicio = iprot.readI64();
              struct.setHoraInicioIsSet(true);
            } else { 
              org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
            }
            break;
          case 6: // HORA_FIM
            if (schemeField.type == org.apache.thrift.protocol.TType.I64) {
              struct.horaFim = iprot.readI64();
              struct.setHoraFimIsSet(true);
            } else { 
              org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
            }
            break;
          case 7: // INEP
            if (schemeField.type == org.apache.thrift.protocol.TType.I64) {
              struct.inep = iprot.readI64();
              struct.setInepIsSet(true);
            } else { 
              org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
            }
            break;
          case 8: // RESPONSAVEL_CNS
            if (schemeField.type == org.apache.thrift.protocol.TType.STRING) {
              struct.responsavelCns = iprot.readString();
              struct.setResponsavelCnsIsSet(true);
            } else { 
              org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
            }
            break;
          case 9: // RESPONSAVEL_CNES_UNIDADE
            if (schemeField.type == org.apache.thrift.protocol.TType.STRING) {
              struct.responsavelCnesUnidade = iprot.readString();
              struct.setResponsavelCnesUnidadeIsSet(true);
            } else { 
              org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
            }
            break;
          case 10: // RESPONSAVEL_NUM_INE
            if (schemeField.type == org.apache.thrift.protocol.TType.STRING) {
              struct.responsavelNumIne = iprot.readString();
              struct.setResponsavelNumIneIsSet(true);
            } else { 
              org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
            }
            break;
          case 11: // NUM_PARTICIPANTES
            if (schemeField.type == org.apache.thrift.protocol.TType.I32) {
              struct.numParticipantes = iprot.readI32();
              struct.setNumParticipantesIsSet(true);
            } else { 
              org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
            }
            break;
          case 12: // NUM_AVALIACOES_ALTERADAS
            if (schemeField.type == org.apache.thrift.protocol.TType.I32) {
              struct.numAvaliacoesAlteradas = iprot.readI32();
              struct.setNumAvaliacoesAlteradasIsSet(true);
            } else { 
              org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
            }
            break;
          case 13: // PROFISSIONAIS
            if (schemeField.type == org.apache.thrift.protocol.TType.LIST) {
              {
                org.apache.thrift.protocol.TList _list0 = iprot.readListBegin();
                struct.profissionais = new ArrayList<ProfissionalCboRowItemThrift>(_list0.size);
                ProfissionalCboRowItemThrift _elem1;
                for (int _i2 = 0; _i2 < _list0.size; ++_i2)
                {
                  _elem1 = new ProfissionalCboRowItemThrift();
                  _elem1.read(iprot);
                  struct.profissionais.add(_elem1);
                }
                iprot.readListEnd();
              }
              struct.setProfissionaisIsSet(true);
            } else { 
              org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
            }
            break;
          case 14: // ATIVIDADE_TIPO
            if (schemeField.type == org.apache.thrift.protocol.TType.I64) {
              struct.atividadeTipo = iprot.readI64();
              struct.setAtividadeTipoIsSet(true);
            } else { 
              org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
            }
            break;
          case 15: // TEMAS_PARA_REUNIAO
            if (schemeField.type == org.apache.thrift.protocol.TType.LIST) {
              {
                org.apache.thrift.protocol.TList _list3 = iprot.readListBegin();
                struct.temasParaReuniao = new ArrayList<Long>(_list3.size);
                long _elem4;
                for (int _i5 = 0; _i5 < _list3.size; ++_i5)
                {
                  _elem4 = iprot.readI64();
                  struct.temasParaReuniao.add(_elem4);
                }
                iprot.readListEnd();
              }
              struct.setTemasParaReuniaoIsSet(true);
            } else { 
              org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
            }
            break;
          case 16: // PUBLICO_ALVO
            if (schemeField.type == org.apache.thrift.protocol.TType.LIST) {
              {
                org.apache.thrift.protocol.TList _list6 = iprot.readListBegin();
                struct.publicoAlvo = new ArrayList<Long>(_list6.size);
                long _elem7;
                for (int _i8 = 0; _i8 < _list6.size; ++_i8)
                {
                  _elem7 = iprot.readI64();
                  struct.publicoAlvo.add(_elem7);
                }
                iprot.readListEnd();
              }
              struct.setPublicoAlvoIsSet(true);
            } else { 
              org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
            }
            break;
          case 17: // PRATICAS_TEMAS_PARA_SAUDE
            if (schemeField.type == org.apache.thrift.protocol.TType.LIST) {
              {
                org.apache.thrift.protocol.TList _list9 = iprot.readListBegin();
                struct.praticasTemasParaSaude = new ArrayList<Long>(_list9.size);
                long _elem10;
                for (int _i11 = 0; _i11 < _list9.size; ++_i11)
                {
                  _elem10 = iprot.readI64();
                  struct.praticasTemasParaSaude.add(_elem10);
                }
                iprot.readListEnd();
              }
              struct.setPraticasTemasParaSaudeIsSet(true);
            } else { 
              org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
            }
            break;
          case 18: // PARTICIPANTES
            if (schemeField.type == org.apache.thrift.protocol.TType.LIST) {
              {
                org.apache.thrift.protocol.TList _list12 = iprot.readListBegin();
                struct.participantes = new ArrayList<ParticipanteRowItemThrift>(_list12.size);
                ParticipanteRowItemThrift _elem13;
                for (int _i14 = 0; _i14 < _list12.size; ++_i14)
                {
                  _elem13 = new ParticipanteRowItemThrift();
                  _elem13.read(iprot);
                  struct.participantes.add(_elem13);
                }
                iprot.readListEnd();
              }
              struct.setParticipantesIsSet(true);
            } else { 
              org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
            }
            break;
          case 19: // TB_CDS_ORIGEM
            if (schemeField.type == org.apache.thrift.protocol.TType.I32) {
              struct.tbCdsOrigem = iprot.readI32();
              struct.setTbCdsOrigemIsSet(true);
            } else { 
              org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
            }
            break;
          case 20: // CODIGO_IBGE_MUNICIPIO
            if (schemeField.type == org.apache.thrift.protocol.TType.STRING) {
              struct.codigoIbgeMunicipio = iprot.readString();
              struct.setCodigoIbgeMunicipioIsSet(true);
            } else { 
              org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
            }
            break;
          default:
            org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
        }
        iprot.readFieldEnd();
      }
      iprot.readStructEnd();
      struct.validate();
    }

    public void write(org.apache.thrift.protocol.TProtocol oprot, FichaAtividadeColetivaThrift struct) throws org.apache.thrift.TException {
      struct.validate();

      oprot.writeStructBegin(STRUCT_DESC);
      if (struct.uuidFicha != null) {
        oprot.writeFieldBegin(UUID_FICHA_FIELD_DESC);
        oprot.writeString(struct.uuidFicha);
        oprot.writeFieldEnd();
      }
      if (struct.isSetDtAtividadeColetiva()) {
        oprot.writeFieldBegin(DT_ATIVIDADE_COLETIVA_FIELD_DESC);
        oprot.writeI64(struct.dtAtividadeColetiva);
        oprot.writeFieldEnd();
      }
      if (struct.isSetNumParticipantesProgramados()) {
        oprot.writeFieldBegin(NUM_PARTICIPANTES_PROGRAMADOS_FIELD_DESC);
        oprot.writeI32(struct.numParticipantesProgramados);
        oprot.writeFieldEnd();
      }
      if (struct.localAtividade != null) {
        if (struct.isSetLocalAtividade()) {
          oprot.writeFieldBegin(LOCAL_ATIVIDADE_FIELD_DESC);
          oprot.writeString(struct.localAtividade);
          oprot.writeFieldEnd();
        }
      }
      if (struct.isSetHoraInicio()) {
        oprot.writeFieldBegin(HORA_INICIO_FIELD_DESC);
        oprot.writeI64(struct.horaInicio);
        oprot.writeFieldEnd();
      }
      if (struct.isSetHoraFim()) {
        oprot.writeFieldBegin(HORA_FIM_FIELD_DESC);
        oprot.writeI64(struct.horaFim);
        oprot.writeFieldEnd();
      }
      if (struct.isSetInep()) {
        oprot.writeFieldBegin(INEP_FIELD_DESC);
        oprot.writeI64(struct.inep);
        oprot.writeFieldEnd();
      }
      if (struct.responsavelCns != null) {
        if (struct.isSetResponsavelCns()) {
          oprot.writeFieldBegin(RESPONSAVEL_CNS_FIELD_DESC);
          oprot.writeString(struct.responsavelCns);
          oprot.writeFieldEnd();
        }
      }
      if (struct.responsavelCnesUnidade != null) {
        oprot.writeFieldBegin(RESPONSAVEL_CNES_UNIDADE_FIELD_DESC);
        oprot.writeString(struct.responsavelCnesUnidade);
        oprot.writeFieldEnd();
      }
      if (struct.responsavelNumIne != null) {
        if (struct.isSetResponsavelNumIne()) {
          oprot.writeFieldBegin(RESPONSAVEL_NUM_INE_FIELD_DESC);
          oprot.writeString(struct.responsavelNumIne);
          oprot.writeFieldEnd();
        }
      }
      if (struct.isSetNumParticipantes()) {
        oprot.writeFieldBegin(NUM_PARTICIPANTES_FIELD_DESC);
        oprot.writeI32(struct.numParticipantes);
        oprot.writeFieldEnd();
      }
      if (struct.isSetNumAvaliacoesAlteradas()) {
        oprot.writeFieldBegin(NUM_AVALIACOES_ALTERADAS_FIELD_DESC);
        oprot.writeI32(struct.numAvaliacoesAlteradas);
        oprot.writeFieldEnd();
      }
      if (struct.profissionais != null) {
        if (struct.isSetProfissionais()) {
          oprot.writeFieldBegin(PROFISSIONAIS_FIELD_DESC);
          {
            oprot.writeListBegin(new org.apache.thrift.protocol.TList(org.apache.thrift.protocol.TType.STRUCT, struct.profissionais.size()));
            for (ProfissionalCboRowItemThrift _iter15 : struct.profissionais)
            {
              _iter15.write(oprot);
            }
            oprot.writeListEnd();
          }
          oprot.writeFieldEnd();
        }
      }
      if (struct.isSetAtividadeTipo()) {
        oprot.writeFieldBegin(ATIVIDADE_TIPO_FIELD_DESC);
        oprot.writeI64(struct.atividadeTipo);
        oprot.writeFieldEnd();
      }
      if (struct.temasParaReuniao != null) {
        if (struct.isSetTemasParaReuniao()) {
          oprot.writeFieldBegin(TEMAS_PARA_REUNIAO_FIELD_DESC);
          {
            oprot.writeListBegin(new org.apache.thrift.protocol.TList(org.apache.thrift.protocol.TType.I64, struct.temasParaReuniao.size()));
            for (long _iter16 : struct.temasParaReuniao)
            {
              oprot.writeI64(_iter16);
            }
            oprot.writeListEnd();
          }
          oprot.writeFieldEnd();
        }
      }
      if (struct.publicoAlvo != null) {
        if (struct.isSetPublicoAlvo()) {
          oprot.writeFieldBegin(PUBLICO_ALVO_FIELD_DESC);
          {
            oprot.writeListBegin(new org.apache.thrift.protocol.TList(org.apache.thrift.protocol.TType.I64, struct.publicoAlvo.size()));
            for (long _iter17 : struct.publicoAlvo)
            {
              oprot.writeI64(_iter17);
            }
            oprot.writeListEnd();
          }
          oprot.writeFieldEnd();
        }
      }
      if (struct.praticasTemasParaSaude != null) {
        if (struct.isSetPraticasTemasParaSaude()) {
          oprot.writeFieldBegin(PRATICAS_TEMAS_PARA_SAUDE_FIELD_DESC);
          {
            oprot.writeListBegin(new org.apache.thrift.protocol.TList(org.apache.thrift.protocol.TType.I64, struct.praticasTemasParaSaude.size()));
            for (long _iter18 : struct.praticasTemasParaSaude)
            {
              oprot.writeI64(_iter18);
            }
            oprot.writeListEnd();
          }
          oprot.writeFieldEnd();
        }
      }
      if (struct.participantes != null) {
        if (struct.isSetParticipantes()) {
          oprot.writeFieldBegin(PARTICIPANTES_FIELD_DESC);
          {
            oprot.writeListBegin(new org.apache.thrift.protocol.TList(org.apache.thrift.protocol.TType.STRUCT, struct.participantes.size()));
            for (ParticipanteRowItemThrift _iter19 : struct.participantes)
            {
              _iter19.write(oprot);
            }
            oprot.writeListEnd();
          }
          oprot.writeFieldEnd();
        }
      }
      if (struct.isSetTbCdsOrigem()) {
        oprot.writeFieldBegin(TB_CDS_ORIGEM_FIELD_DESC);
        oprot.writeI32(struct.tbCdsOrigem);
        oprot.writeFieldEnd();
      }
      if (struct.codigoIbgeMunicipio != null) {
        if (struct.isSetCodigoIbgeMunicipio()) {
          oprot.writeFieldBegin(CODIGO_IBGE_MUNICIPIO_FIELD_DESC);
          oprot.writeString(struct.codigoIbgeMunicipio);
          oprot.writeFieldEnd();
        }
      }
      oprot.writeFieldStop();
      oprot.writeStructEnd();
    }

  }

  private static class FichaAtividadeColetivaThriftTupleSchemeFactory implements SchemeFactory {
    public FichaAtividadeColetivaThriftTupleScheme getScheme() {
      return new FichaAtividadeColetivaThriftTupleScheme();
    }
  }

  private static class FichaAtividadeColetivaThriftTupleScheme extends TupleScheme<FichaAtividadeColetivaThrift> {

    @Override
    public void write(org.apache.thrift.protocol.TProtocol prot, FichaAtividadeColetivaThrift struct) throws org.apache.thrift.TException {
      TTupleProtocol oprot = (TTupleProtocol) prot;
      oprot.writeString(struct.uuidFicha);
      oprot.writeString(struct.responsavelCnesUnidade);
      BitSet optionals = new BitSet();
      if (struct.isSetDtAtividadeColetiva()) {
        optionals.set(0);
      }
      if (struct.isSetNumParticipantesProgramados()) {
        optionals.set(1);
      }
      if (struct.isSetLocalAtividade()) {
        optionals.set(2);
      }
      if (struct.isSetHoraInicio()) {
        optionals.set(3);
      }
      if (struct.isSetHoraFim()) {
        optionals.set(4);
      }
      if (struct.isSetInep()) {
        optionals.set(5);
      }
      if (struct.isSetResponsavelCns()) {
        optionals.set(6);
      }
      if (struct.isSetResponsavelNumIne()) {
        optionals.set(7);
      }
      if (struct.isSetNumParticipantes()) {
        optionals.set(8);
      }
      if (struct.isSetNumAvaliacoesAlteradas()) {
        optionals.set(9);
      }
      if (struct.isSetProfissionais()) {
        optionals.set(10);
      }
      if (struct.isSetAtividadeTipo()) {
        optionals.set(11);
      }
      if (struct.isSetTemasParaReuniao()) {
        optionals.set(12);
      }
      if (struct.isSetPublicoAlvo()) {
        optionals.set(13);
      }
      if (struct.isSetPraticasTemasParaSaude()) {
        optionals.set(14);
      }
      if (struct.isSetParticipantes()) {
        optionals.set(15);
      }
      if (struct.isSetTbCdsOrigem()) {
        optionals.set(16);
      }
      if (struct.isSetCodigoIbgeMunicipio()) {
        optionals.set(17);
      }
      oprot.writeBitSet(optionals, 18);
      if (struct.isSetDtAtividadeColetiva()) {
        oprot.writeI64(struct.dtAtividadeColetiva);
      }
      if (struct.isSetNumParticipantesProgramados()) {
        oprot.writeI32(struct.numParticipantesProgramados);
      }
      if (struct.isSetLocalAtividade()) {
        oprot.writeString(struct.localAtividade);
      }
      if (struct.isSetHoraInicio()) {
        oprot.writeI64(struct.horaInicio);
      }
      if (struct.isSetHoraFim()) {
        oprot.writeI64(struct.horaFim);
      }
      if (struct.isSetInep()) {
        oprot.writeI64(struct.inep);
      }
      if (struct.isSetResponsavelCns()) {
        oprot.writeString(struct.responsavelCns);
      }
      if (struct.isSetResponsavelNumIne()) {
        oprot.writeString(struct.responsavelNumIne);
      }
      if (struct.isSetNumParticipantes()) {
        oprot.writeI32(struct.numParticipantes);
      }
      if (struct.isSetNumAvaliacoesAlteradas()) {
        oprot.writeI32(struct.numAvaliacoesAlteradas);
      }
      if (struct.isSetProfissionais()) {
        {
          oprot.writeI32(struct.profissionais.size());
          for (ProfissionalCboRowItemThrift _iter20 : struct.profissionais)
          {
            _iter20.write(oprot);
          }
        }
      }
      if (struct.isSetAtividadeTipo()) {
        oprot.writeI64(struct.atividadeTipo);
      }
      if (struct.isSetTemasParaReuniao()) {
        {
          oprot.writeI32(struct.temasParaReuniao.size());
          for (long _iter21 : struct.temasParaReuniao)
          {
            oprot.writeI64(_iter21);
          }
        }
      }
      if (struct.isSetPublicoAlvo()) {
        {
          oprot.writeI32(struct.publicoAlvo.size());
          for (long _iter22 : struct.publicoAlvo)
          {
            oprot.writeI64(_iter22);
          }
        }
      }
      if (struct.isSetPraticasTemasParaSaude()) {
        {
          oprot.writeI32(struct.praticasTemasParaSaude.size());
          for (long _iter23 : struct.praticasTemasParaSaude)
          {
            oprot.writeI64(_iter23);
          }
        }
      }
      if (struct.isSetParticipantes()) {
        {
          oprot.writeI32(struct.participantes.size());
          for (ParticipanteRowItemThrift _iter24 : struct.participantes)
          {
            _iter24.write(oprot);
          }
        }
      }
      if (struct.isSetTbCdsOrigem()) {
        oprot.writeI32(struct.tbCdsOrigem);
      }
      if (struct.isSetCodigoIbgeMunicipio()) {
        oprot.writeString(struct.codigoIbgeMunicipio);
      }
    }

    @Override
    public void read(org.apache.thrift.protocol.TProtocol prot, FichaAtividadeColetivaThrift struct) throws org.apache.thrift.TException {
      TTupleProtocol iprot = (TTupleProtocol) prot;
      struct.uuidFicha = iprot.readString();
      struct.setUuidFichaIsSet(true);
      struct.responsavelCnesUnidade = iprot.readString();
      struct.setResponsavelCnesUnidadeIsSet(true);
      BitSet incoming = iprot.readBitSet(18);
      if (incoming.get(0)) {
        struct.dtAtividadeColetiva = iprot.readI64();
        struct.setDtAtividadeColetivaIsSet(true);
      }
      if (incoming.get(1)) {
        struct.numParticipantesProgramados = iprot.readI32();
        struct.setNumParticipantesProgramadosIsSet(true);
      }
      if (incoming.get(2)) {
        struct.localAtividade = iprot.readString();
        struct.setLocalAtividadeIsSet(true);
      }
      if (incoming.get(3)) {
        struct.horaInicio = iprot.readI64();
        struct.setHoraInicioIsSet(true);
      }
      if (incoming.get(4)) {
        struct.horaFim = iprot.readI64();
        struct.setHoraFimIsSet(true);
      }
      if (incoming.get(5)) {
        struct.inep = iprot.readI64();
        struct.setInepIsSet(true);
      }
      if (incoming.get(6)) {
        struct.responsavelCns = iprot.readString();
        struct.setResponsavelCnsIsSet(true);
      }
      if (incoming.get(7)) {
        struct.responsavelNumIne = iprot.readString();
        struct.setResponsavelNumIneIsSet(true);
      }
      if (incoming.get(8)) {
        struct.numParticipantes = iprot.readI32();
        struct.setNumParticipantesIsSet(true);
      }
      if (incoming.get(9)) {
        struct.numAvaliacoesAlteradas = iprot.readI32();
        struct.setNumAvaliacoesAlteradasIsSet(true);
      }
      if (incoming.get(10)) {
        {
          org.apache.thrift.protocol.TList _list25 = new org.apache.thrift.protocol.TList(org.apache.thrift.protocol.TType.STRUCT, iprot.readI32());
          struct.profissionais = new ArrayList<ProfissionalCboRowItemThrift>(_list25.size);
          ProfissionalCboRowItemThrift _elem26;
          for (int _i27 = 0; _i27 < _list25.size; ++_i27)
          {
            _elem26 = new ProfissionalCboRowItemThrift();
            _elem26.read(iprot);
            struct.profissionais.add(_elem26);
          }
        }
        struct.setProfissionaisIsSet(true);
      }
      if (incoming.get(11)) {
        struct.atividadeTipo = iprot.readI64();
        struct.setAtividadeTipoIsSet(true);
      }
      if (incoming.get(12)) {
        {
          org.apache.thrift.protocol.TList _list28 = new org.apache.thrift.protocol.TList(org.apache.thrift.protocol.TType.I64, iprot.readI32());
          struct.temasParaReuniao = new ArrayList<Long>(_list28.size);
          long _elem29;
          for (int _i30 = 0; _i30 < _list28.size; ++_i30)
          {
            _elem29 = iprot.readI64();
            struct.temasParaReuniao.add(_elem29);
          }
        }
        struct.setTemasParaReuniaoIsSet(true);
      }
      if (incoming.get(13)) {
        {
          org.apache.thrift.protocol.TList _list31 = new org.apache.thrift.protocol.TList(org.apache.thrift.protocol.TType.I64, iprot.readI32());
          struct.publicoAlvo = new ArrayList<Long>(_list31.size);
          long _elem32;
          for (int _i33 = 0; _i33 < _list31.size; ++_i33)
          {
            _elem32 = iprot.readI64();
            struct.publicoAlvo.add(_elem32);
          }
        }
        struct.setPublicoAlvoIsSet(true);
      }
      if (incoming.get(14)) {
        {
          org.apache.thrift.protocol.TList _list34 = new org.apache.thrift.protocol.TList(org.apache.thrift.protocol.TType.I64, iprot.readI32());
          struct.praticasTemasParaSaude = new ArrayList<Long>(_list34.size);
          long _elem35;
          for (int _i36 = 0; _i36 < _list34.size; ++_i36)
          {
            _elem35 = iprot.readI64();
            struct.praticasTemasParaSaude.add(_elem35);
          }
        }
        struct.setPraticasTemasParaSaudeIsSet(true);
      }
      if (incoming.get(15)) {
        {
          org.apache.thrift.protocol.TList _list37 = new org.apache.thrift.protocol.TList(org.apache.thrift.protocol.TType.STRUCT, iprot.readI32());
          struct.participantes = new ArrayList<ParticipanteRowItemThrift>(_list37.size);
          ParticipanteRowItemThrift _elem38;
          for (int _i39 = 0; _i39 < _list37.size; ++_i39)
          {
            _elem38 = new ParticipanteRowItemThrift();
            _elem38.read(iprot);
            struct.participantes.add(_elem38);
          }
        }
        struct.setParticipantesIsSet(true);
      }
      if (incoming.get(16)) {
        struct.tbCdsOrigem = iprot.readI32();
        struct.setTbCdsOrigemIsSet(true);
      }
      if (incoming.get(17)) {
        struct.codigoIbgeMunicipio = iprot.readString();
        struct.setCodigoIbgeMunicipioIsSet(true);
      }
    }
  }

}

