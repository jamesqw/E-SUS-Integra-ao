/**
 * Autogenerated by Thrift Compiler (0.9.2)
 *
 * DO NOT EDIT UNLESS YOU ARE SURE THAT YOU KNOW WHAT YOU ARE DOING
 *  @generated
 */
package br.gov.saude.esus.cds.transport.generated.thrift.cadastroindividual;

import org.apache.thrift.scheme.IScheme;
import org.apache.thrift.scheme.SchemeFactory;
import org.apache.thrift.scheme.StandardScheme;

import org.apache.thrift.scheme.TupleScheme;
import org.apache.thrift.protocol.TTupleProtocol;
import org.apache.thrift.protocol.TProtocolException;
import org.apache.thrift.EncodingUtils;
import org.apache.thrift.TException;
import org.apache.thrift.async.AsyncMethodCallback;
import org.apache.thrift.server.AbstractNonblockingServer.*;
import java.util.List;
import java.util.ArrayList;
import java.util.Map;
import java.util.HashMap;
import java.util.EnumMap;
import java.util.Set;
import java.util.HashSet;
import java.util.EnumSet;
import java.util.Collections;
import java.util.BitSet;
import java.nio.ByteBuffer;
import java.util.Arrays;
import javax.annotation.Generated;
import org.slf4j.Logger;
import org.slf4j.LoggerFactory;

@SuppressWarnings({"cast", "rawtypes", "serial", "unchecked"})
@Generated(value = "Autogenerated by Thrift Compiler (0.9.2)", date = "2015-8-12")
public class IdentificacaoUsuarioCidadaoThrift implements org.apache.thrift.TBase<IdentificacaoUsuarioCidadaoThrift, IdentificacaoUsuarioCidadaoThrift._Fields>, java.io.Serializable, Cloneable, Comparable<IdentificacaoUsuarioCidadaoThrift> {
  private static final org.apache.thrift.protocol.TStruct STRUCT_DESC = new org.apache.thrift.protocol.TStruct("IdentificacaoUsuarioCidadaoThrift");

  private static final org.apache.thrift.protocol.TField NOME_SOCIAL_CIDADAO_FIELD_DESC = new org.apache.thrift.protocol.TField("nomeSocialCidadao", org.apache.thrift.protocol.TType.STRING, (short)1);
  private static final org.apache.thrift.protocol.TField CODIGO_IBGE_MUNICIPIO_NASCIMENTO_FIELD_DESC = new org.apache.thrift.protocol.TField("codigoIbgeMunicipioNascimento", org.apache.thrift.protocol.TType.STRING, (short)2);
  private static final org.apache.thrift.protocol.TField DATA_NASCIMENTO_CIDADAO_FIELD_DESC = new org.apache.thrift.protocol.TField("dataNascimentoCidadao", org.apache.thrift.protocol.TType.I64, (short)3);
  private static final org.apache.thrift.protocol.TField DATA_NASCIMENTO_RESPONSAVEL_FIELD_DESC = new org.apache.thrift.protocol.TField("dataNascimentoResponsavel", org.apache.thrift.protocol.TType.I64, (short)4);
  private static final org.apache.thrift.protocol.TField DESCONHECE_NOME_MAE_FIELD_DESC = new org.apache.thrift.protocol.TField("desconheceNomeMae", org.apache.thrift.protocol.TType.BOOL, (short)5);
  private static final org.apache.thrift.protocol.TField EMAIL_CIDADAO_FIELD_DESC = new org.apache.thrift.protocol.TField("emailCidadao", org.apache.thrift.protocol.TType.STRING, (short)6);
  private static final org.apache.thrift.protocol.TField NACIONALIDADE_CIDADAO_FIELD_DESC = new org.apache.thrift.protocol.TField("nacionalidadeCidadao", org.apache.thrift.protocol.TType.I64, (short)7);
  private static final org.apache.thrift.protocol.TField NOME_CIDADAO_FIELD_DESC = new org.apache.thrift.protocol.TField("nomeCidadao", org.apache.thrift.protocol.TType.STRING, (short)8);
  private static final org.apache.thrift.protocol.TField NOME_MAE_CIDADAO_FIELD_DESC = new org.apache.thrift.protocol.TField("nomeMaeCidadao", org.apache.thrift.protocol.TType.STRING, (short)9);
  private static final org.apache.thrift.protocol.TField NUMERO_CARTAO_SUS_FIELD_DESC = new org.apache.thrift.protocol.TField("numeroCartaoSus", org.apache.thrift.protocol.TType.STRING, (short)10);
  private static final org.apache.thrift.protocol.TField NUMERO_CARTAO_SUS_RESPONSAVEL_FIELD_DESC = new org.apache.thrift.protocol.TField("numeroCartaoSusResponsavel", org.apache.thrift.protocol.TType.STRING, (short)11);
  private static final org.apache.thrift.protocol.TField NUMERO_CELULAR_CIDADAO_FIELD_DESC = new org.apache.thrift.protocol.TField("numeroCelularCidadao", org.apache.thrift.protocol.TType.STRING, (short)12);
  private static final org.apache.thrift.protocol.TField NUMERO_NIS_PIS_PASEP_FIELD_DESC = new org.apache.thrift.protocol.TField("numeroNisPisPasep", org.apache.thrift.protocol.TType.STRING, (short)13);
  private static final org.apache.thrift.protocol.TField PAIS_NASCIMENTO_FIELD_DESC = new org.apache.thrift.protocol.TField("paisNascimento", org.apache.thrift.protocol.TType.I64, (short)14);
  private static final org.apache.thrift.protocol.TField RACA_COR_CIDADAO_FIELD_DESC = new org.apache.thrift.protocol.TField("racaCorCidadao", org.apache.thrift.protocol.TType.I64, (short)15);
  private static final org.apache.thrift.protocol.TField SEXO_CIDADAO_FIELD_DESC = new org.apache.thrift.protocol.TField("sexoCidadao", org.apache.thrift.protocol.TType.I64, (short)16);
  private static final org.apache.thrift.protocol.TField STATUS_EH_RESPONSAVEL_FIELD_DESC = new org.apache.thrift.protocol.TField("statusEhResponsavel", org.apache.thrift.protocol.TType.BOOL, (short)17);

  private static final Map<Class<? extends IScheme>, SchemeFactory> schemes = new HashMap<Class<? extends IScheme>, SchemeFactory>();
  static {
    schemes.put(StandardScheme.class, new IdentificacaoUsuarioCidadaoThriftStandardSchemeFactory());
    schemes.put(TupleScheme.class, new IdentificacaoUsuarioCidadaoThriftTupleSchemeFactory());
  }

  private String nomeSocialCidadao; // optional
  private String codigoIbgeMunicipioNascimento; // optional
  private long dataNascimentoCidadao; // optional
  private long dataNascimentoResponsavel; // optional
  private boolean desconheceNomeMae; // optional
  private String emailCidadao; // optional
  private long nacionalidadeCidadao; // optional
  private String nomeCidadao; // optional
  private String nomeMaeCidadao; // optional
  private String numeroCartaoSus; // optional
  private String numeroCartaoSusResponsavel; // optional
  private String numeroCelularCidadao; // optional
  private String numeroNisPisPasep; // optional
  private long paisNascimento; // optional
  private long racaCorCidadao; // optional
  private long sexoCidadao; // optional
  private boolean statusEhResponsavel; // optional

  /** The set of fields this struct contains, along with convenience methods for finding and manipulating them. */
  public enum _Fields implements org.apache.thrift.TFieldIdEnum {
    NOME_SOCIAL_CIDADAO((short)1, "nomeSocialCidadao"),
    CODIGO_IBGE_MUNICIPIO_NASCIMENTO((short)2, "codigoIbgeMunicipioNascimento"),
    DATA_NASCIMENTO_CIDADAO((short)3, "dataNascimentoCidadao"),
    DATA_NASCIMENTO_RESPONSAVEL((short)4, "dataNascimentoResponsavel"),
    DESCONHECE_NOME_MAE((short)5, "desconheceNomeMae"),
    EMAIL_CIDADAO((short)6, "emailCidadao"),
    NACIONALIDADE_CIDADAO((short)7, "nacionalidadeCidadao"),
    NOME_CIDADAO((short)8, "nomeCidadao"),
    NOME_MAE_CIDADAO((short)9, "nomeMaeCidadao"),
    NUMERO_CARTAO_SUS((short)10, "numeroCartaoSus"),
    NUMERO_CARTAO_SUS_RESPONSAVEL((short)11, "numeroCartaoSusResponsavel"),
    NUMERO_CELULAR_CIDADAO((short)12, "numeroCelularCidadao"),
    NUMERO_NIS_PIS_PASEP((short)13, "numeroNisPisPasep"),
    PAIS_NASCIMENTO((short)14, "paisNascimento"),
    RACA_COR_CIDADAO((short)15, "racaCorCidadao"),
    SEXO_CIDADAO((short)16, "sexoCidadao"),
    STATUS_EH_RESPONSAVEL((short)17, "statusEhResponsavel");

    private static final Map<String, _Fields> byName = new HashMap<String, _Fields>();

    static {
      for (_Fields field : EnumSet.allOf(_Fields.class)) {
        byName.put(field.getFieldName(), field);
      }
    }

    /**
     * Find the _Fields constant that matches fieldId, or null if its not found.
     */
    public static _Fields findByThriftId(int fieldId) {
      switch(fieldId) {
        case 1: // NOME_SOCIAL_CIDADAO
          return NOME_SOCIAL_CIDADAO;
        case 2: // CODIGO_IBGE_MUNICIPIO_NASCIMENTO
          return CODIGO_IBGE_MUNICIPIO_NASCIMENTO;
        case 3: // DATA_NASCIMENTO_CIDADAO
          return DATA_NASCIMENTO_CIDADAO;
        case 4: // DATA_NASCIMENTO_RESPONSAVEL
          return DATA_NASCIMENTO_RESPONSAVEL;
        case 5: // DESCONHECE_NOME_MAE
          return DESCONHECE_NOME_MAE;
        case 6: // EMAIL_CIDADAO
          return EMAIL_CIDADAO;
        case 7: // NACIONALIDADE_CIDADAO
          return NACIONALIDADE_CIDADAO;
        case 8: // NOME_CIDADAO
          return NOME_CIDADAO;
        case 9: // NOME_MAE_CIDADAO
          return NOME_MAE_CIDADAO;
        case 10: // NUMERO_CARTAO_SUS
          return NUMERO_CARTAO_SUS;
        case 11: // NUMERO_CARTAO_SUS_RESPONSAVEL
          return NUMERO_CARTAO_SUS_RESPONSAVEL;
        case 12: // NUMERO_CELULAR_CIDADAO
          return NUMERO_CELULAR_CIDADAO;
        case 13: // NUMERO_NIS_PIS_PASEP
          return NUMERO_NIS_PIS_PASEP;
        case 14: // PAIS_NASCIMENTO
          return PAIS_NASCIMENTO;
        case 15: // RACA_COR_CIDADAO
          return RACA_COR_CIDADAO;
        case 16: // SEXO_CIDADAO
          return SEXO_CIDADAO;
        case 17: // STATUS_EH_RESPONSAVEL
          return STATUS_EH_RESPONSAVEL;
        default:
          return null;
      }
    }

    /**
     * Find the _Fields constant that matches fieldId, throwing an exception
     * if it is not found.
     */
    public static _Fields findByThriftIdOrThrow(int fieldId) {
      _Fields fields = findByThriftId(fieldId);
      if (fields == null) throw new IllegalArgumentException("Field " + fieldId + " doesn't exist!");
      return fields;
    }

    /**
     * Find the _Fields constant that matches name, or null if its not found.
     */
    public static _Fields findByName(String name) {
      return byName.get(name);
    }

    private final short _thriftId;
    private final String _fieldName;

    _Fields(short thriftId, String fieldName) {
      _thriftId = thriftId;
      _fieldName = fieldName;
    }

    public short getThriftFieldId() {
      return _thriftId;
    }

    public String getFieldName() {
      return _fieldName;
    }
  }

  // isset id assignments
  private static final int __DATANASCIMENTOCIDADAO_ISSET_ID = 0;
  private static final int __DATANASCIMENTORESPONSAVEL_ISSET_ID = 1;
  private static final int __DESCONHECENOMEMAE_ISSET_ID = 2;
  private static final int __NACIONALIDADECIDADAO_ISSET_ID = 3;
  private static final int __PAISNASCIMENTO_ISSET_ID = 4;
  private static final int __RACACORCIDADAO_ISSET_ID = 5;
  private static final int __SEXOCIDADAO_ISSET_ID = 6;
  private static final int __STATUSEHRESPONSAVEL_ISSET_ID = 7;
  private byte __isset_bitfield = 0;
  private static final _Fields optionals[] = {_Fields.NOME_SOCIAL_CIDADAO,_Fields.CODIGO_IBGE_MUNICIPIO_NASCIMENTO,_Fields.DATA_NASCIMENTO_CIDADAO,_Fields.DATA_NASCIMENTO_RESPONSAVEL,_Fields.DESCONHECE_NOME_MAE,_Fields.EMAIL_CIDADAO,_Fields.NACIONALIDADE_CIDADAO,_Fields.NOME_CIDADAO,_Fields.NOME_MAE_CIDADAO,_Fields.NUMERO_CARTAO_SUS,_Fields.NUMERO_CARTAO_SUS_RESPONSAVEL,_Fields.NUMERO_CELULAR_CIDADAO,_Fields.NUMERO_NIS_PIS_PASEP,_Fields.PAIS_NASCIMENTO,_Fields.RACA_COR_CIDADAO,_Fields.SEXO_CIDADAO,_Fields.STATUS_EH_RESPONSAVEL};
  public static final Map<_Fields, org.apache.thrift.meta_data.FieldMetaData> metaDataMap;
  static {
    Map<_Fields, org.apache.thrift.meta_data.FieldMetaData> tmpMap = new EnumMap<_Fields, org.apache.thrift.meta_data.FieldMetaData>(_Fields.class);
    tmpMap.put(_Fields.NOME_SOCIAL_CIDADAO, new org.apache.thrift.meta_data.FieldMetaData("nomeSocialCidadao", org.apache.thrift.TFieldRequirementType.OPTIONAL, 
        new org.apache.thrift.meta_data.FieldValueMetaData(org.apache.thrift.protocol.TType.STRING)));
    tmpMap.put(_Fields.CODIGO_IBGE_MUNICIPIO_NASCIMENTO, new org.apache.thrift.meta_data.FieldMetaData("codigoIbgeMunicipioNascimento", org.apache.thrift.TFieldRequirementType.OPTIONAL, 
        new org.apache.thrift.meta_data.FieldValueMetaData(org.apache.thrift.protocol.TType.STRING)));
    tmpMap.put(_Fields.DATA_NASCIMENTO_CIDADAO, new org.apache.thrift.meta_data.FieldMetaData("dataNascimentoCidadao", org.apache.thrift.TFieldRequirementType.OPTIONAL, 
        new org.apache.thrift.meta_data.FieldValueMetaData(org.apache.thrift.protocol.TType.I64)));
    tmpMap.put(_Fields.DATA_NASCIMENTO_RESPONSAVEL, new org.apache.thrift.meta_data.FieldMetaData("dataNascimentoResponsavel", org.apache.thrift.TFieldRequirementType.OPTIONAL, 
        new org.apache.thrift.meta_data.FieldValueMetaData(org.apache.thrift.protocol.TType.I64)));
    tmpMap.put(_Fields.DESCONHECE_NOME_MAE, new org.apache.thrift.meta_data.FieldMetaData("desconheceNomeMae", org.apache.thrift.TFieldRequirementType.OPTIONAL, 
        new org.apache.thrift.meta_data.FieldValueMetaData(org.apache.thrift.protocol.TType.BOOL)));
    tmpMap.put(_Fields.EMAIL_CIDADAO, new org.apache.thrift.meta_data.FieldMetaData("emailCidadao", org.apache.thrift.TFieldRequirementType.OPTIONAL, 
        new org.apache.thrift.meta_data.FieldValueMetaData(org.apache.thrift.protocol.TType.STRING)));
    tmpMap.put(_Fields.NACIONALIDADE_CIDADAO, new org.apache.thrift.meta_data.FieldMetaData("nacionalidadeCidadao", org.apache.thrift.TFieldRequirementType.OPTIONAL, 
        new org.apache.thrift.meta_data.FieldValueMetaData(org.apache.thrift.protocol.TType.I64)));
    tmpMap.put(_Fields.NOME_CIDADAO, new org.apache.thrift.meta_data.FieldMetaData("nomeCidadao", org.apache.thrift.TFieldRequirementType.OPTIONAL, 
        new org.apache.thrift.meta_data.FieldValueMetaData(org.apache.thrift.protocol.TType.STRING)));
    tmpMap.put(_Fields.NOME_MAE_CIDADAO, new org.apache.thrift.meta_data.FieldMetaData("nomeMaeCidadao", org.apache.thrift.TFieldRequirementType.OPTIONAL, 
        new org.apache.thrift.meta_data.FieldValueMetaData(org.apache.thrift.protocol.TType.STRING)));
    tmpMap.put(_Fields.NUMERO_CARTAO_SUS, new org.apache.thrift.meta_data.FieldMetaData("numeroCartaoSus", org.apache.thrift.TFieldRequirementType.OPTIONAL, 
        new org.apache.thrift.meta_data.FieldValueMetaData(org.apache.thrift.protocol.TType.STRING)));
    tmpMap.put(_Fields.NUMERO_CARTAO_SUS_RESPONSAVEL, new org.apache.thrift.meta_data.FieldMetaData("numeroCartaoSusResponsavel", org.apache.thrift.TFieldRequirementType.OPTIONAL, 
        new org.apache.thrift.meta_data.FieldValueMetaData(org.apache.thrift.protocol.TType.STRING)));
    tmpMap.put(_Fields.NUMERO_CELULAR_CIDADAO, new org.apache.thrift.meta_data.FieldMetaData("numeroCelularCidadao", org.apache.thrift.TFieldRequirementType.OPTIONAL, 
        new org.apache.thrift.meta_data.FieldValueMetaData(org.apache.thrift.protocol.TType.STRING)));
    tmpMap.put(_Fields.NUMERO_NIS_PIS_PASEP, new org.apache.thrift.meta_data.FieldMetaData("numeroNisPisPasep", org.apache.thrift.TFieldRequirementType.OPTIONAL, 
        new org.apache.thrift.meta_data.FieldValueMetaData(org.apache.thrift.protocol.TType.STRING)));
    tmpMap.put(_Fields.PAIS_NASCIMENTO, new org.apache.thrift.meta_data.FieldMetaData("paisNascimento", org.apache.thrift.TFieldRequirementType.OPTIONAL, 
        new org.apache.thrift.meta_data.FieldValueMetaData(org.apache.thrift.protocol.TType.I64)));
    tmpMap.put(_Fields.RACA_COR_CIDADAO, new org.apache.thrift.meta_data.FieldMetaData("racaCorCidadao", org.apache.thrift.TFieldRequirementType.OPTIONAL, 
        new org.apache.thrift.meta_data.FieldValueMetaData(org.apache.thrift.protocol.TType.I64)));
    tmpMap.put(_Fields.SEXO_CIDADAO, new org.apache.thrift.meta_data.FieldMetaData("sexoCidadao", org.apache.thrift.TFieldRequirementType.OPTIONAL, 
        new org.apache.thrift.meta_data.FieldValueMetaData(org.apache.thrift.protocol.TType.I64)));
    tmpMap.put(_Fields.STATUS_EH_RESPONSAVEL, new org.apache.thrift.meta_data.FieldMetaData("statusEhResponsavel", org.apache.thrift.TFieldRequirementType.OPTIONAL, 
        new org.apache.thrift.meta_data.FieldValueMetaData(org.apache.thrift.protocol.TType.BOOL)));
    metaDataMap = Collections.unmodifiableMap(tmpMap);
    org.apache.thrift.meta_data.FieldMetaData.addStructMetaDataMap(IdentificacaoUsuarioCidadaoThrift.class, metaDataMap);
  }

  public IdentificacaoUsuarioCidadaoThrift() {
  }

  /**
   * Performs a deep copy on <i>other</i>.
   */
  public IdentificacaoUsuarioCidadaoThrift(IdentificacaoUsuarioCidadaoThrift other) {
    __isset_bitfield = other.__isset_bitfield;
    if (other.isSetNomeSocialCidadao()) {
      this.nomeSocialCidadao = other.nomeSocialCidadao;
    }
    if (other.isSetCodigoIbgeMunicipioNascimento()) {
      this.codigoIbgeMunicipioNascimento = other.codigoIbgeMunicipioNascimento;
    }
    this.dataNascimentoCidadao = other.dataNascimentoCidadao;
    this.dataNascimentoResponsavel = other.dataNascimentoResponsavel;
    this.desconheceNomeMae = other.desconheceNomeMae;
    if (other.isSetEmailCidadao()) {
      this.emailCidadao = other.emailCidadao;
    }
    this.nacionalidadeCidadao = other.nacionalidadeCidadao;
    if (other.isSetNomeCidadao()) {
      this.nomeCidadao = other.nomeCidadao;
    }
    if (other.isSetNomeMaeCidadao()) {
      this.nomeMaeCidadao = other.nomeMaeCidadao;
    }
    if (other.isSetNumeroCartaoSus()) {
      this.numeroCartaoSus = other.numeroCartaoSus;
    }
    if (other.isSetNumeroCartaoSusResponsavel()) {
      this.numeroCartaoSusResponsavel = other.numeroCartaoSusResponsavel;
    }
    if (other.isSetNumeroCelularCidadao()) {
      this.numeroCelularCidadao = other.numeroCelularCidadao;
    }
    if (other.isSetNumeroNisPisPasep()) {
      this.numeroNisPisPasep = other.numeroNisPisPasep;
    }
    this.paisNascimento = other.paisNascimento;
    this.racaCorCidadao = other.racaCorCidadao;
    this.sexoCidadao = other.sexoCidadao;
    this.statusEhResponsavel = other.statusEhResponsavel;
  }

  public IdentificacaoUsuarioCidadaoThrift deepCopy() {
    return new IdentificacaoUsuarioCidadaoThrift(this);
  }

  @Override
  public void clear() {
    this.nomeSocialCidadao = null;
    this.codigoIbgeMunicipioNascimento = null;
    setDataNascimentoCidadaoIsSet(false);
    this.dataNascimentoCidadao = 0;
    setDataNascimentoResponsavelIsSet(false);
    this.dataNascimentoResponsavel = 0;
    setDesconheceNomeMaeIsSet(false);
    this.desconheceNomeMae = false;
    this.emailCidadao = null;
    setNacionalidadeCidadaoIsSet(false);
    this.nacionalidadeCidadao = 0;
    this.nomeCidadao = null;
    this.nomeMaeCidadao = null;
    this.numeroCartaoSus = null;
    this.numeroCartaoSusResponsavel = null;
    this.numeroCelularCidadao = null;
    this.numeroNisPisPasep = null;
    setPaisNascimentoIsSet(false);
    this.paisNascimento = 0;
    setRacaCorCidadaoIsSet(false);
    this.racaCorCidadao = 0;
    setSexoCidadaoIsSet(false);
    this.sexoCidadao = 0;
    setStatusEhResponsavelIsSet(false);
    this.statusEhResponsavel = false;
  }

  public String getNomeSocialCidadao() {
    return this.nomeSocialCidadao;
  }

  public void setNomeSocialCidadao(String nomeSocialCidadao) {
    this.nomeSocialCidadao = nomeSocialCidadao;
  }

  public void unsetNomeSocialCidadao() {
    this.nomeSocialCidadao = null;
  }

  /** Returns true if field nomeSocialCidadao is set (has been assigned a value) and false otherwise */
  public boolean isSetNomeSocialCidadao() {
    return this.nomeSocialCidadao != null;
  }

  public void setNomeSocialCidadaoIsSet(boolean value) {
    if (!value) {
      this.nomeSocialCidadao = null;
    }
  }

  public String getCodigoIbgeMunicipioNascimento() {
    return this.codigoIbgeMunicipioNascimento;
  }

  public void setCodigoIbgeMunicipioNascimento(String codigoIbgeMunicipioNascimento) {
    this.codigoIbgeMunicipioNascimento = codigoIbgeMunicipioNascimento;
  }

  public void unsetCodigoIbgeMunicipioNascimento() {
    this.codigoIbgeMunicipioNascimento = null;
  }

  /** Returns true if field codigoIbgeMunicipioNascimento is set (has been assigned a value) and false otherwise */
  public boolean isSetCodigoIbgeMunicipioNascimento() {
    return this.codigoIbgeMunicipioNascimento != null;
  }

  public void setCodigoIbgeMunicipioNascimentoIsSet(boolean value) {
    if (!value) {
      this.codigoIbgeMunicipioNascimento = null;
    }
  }

  public long getDataNascimentoCidadao() {
    return this.dataNascimentoCidadao;
  }

  public void setDataNascimentoCidadao(long dataNascimentoCidadao) {
    this.dataNascimentoCidadao = dataNascimentoCidadao;
    setDataNascimentoCidadaoIsSet(true);
  }

  public void unsetDataNascimentoCidadao() {
    __isset_bitfield = EncodingUtils.clearBit(__isset_bitfield, __DATANASCIMENTOCIDADAO_ISSET_ID);
  }

  /** Returns true if field dataNascimentoCidadao is set (has been assigned a value) and false otherwise */
  public boolean isSetDataNascimentoCidadao() {
    return EncodingUtils.testBit(__isset_bitfield, __DATANASCIMENTOCIDADAO_ISSET_ID);
  }

  public void setDataNascimentoCidadaoIsSet(boolean value) {
    __isset_bitfield = EncodingUtils.setBit(__isset_bitfield, __DATANASCIMENTOCIDADAO_ISSET_ID, value);
  }

  public long getDataNascimentoResponsavel() {
    return this.dataNascimentoResponsavel;
  }

  public void setDataNascimentoResponsavel(long dataNascimentoResponsavel) {
    this.dataNascimentoResponsavel = dataNascimentoResponsavel;
    setDataNascimentoResponsavelIsSet(true);
  }

  public void unsetDataNascimentoResponsavel() {
    __isset_bitfield = EncodingUtils.clearBit(__isset_bitfield, __DATANASCIMENTORESPONSAVEL_ISSET_ID);
  }

  /** Returns true if field dataNascimentoResponsavel is set (has been assigned a value) and false otherwise */
  public boolean isSetDataNascimentoResponsavel() {
    return EncodingUtils.testBit(__isset_bitfield, __DATANASCIMENTORESPONSAVEL_ISSET_ID);
  }

  public void setDataNascimentoResponsavelIsSet(boolean value) {
    __isset_bitfield = EncodingUtils.setBit(__isset_bitfield, __DATANASCIMENTORESPONSAVEL_ISSET_ID, value);
  }

  public boolean isDesconheceNomeMae() {
    return this.desconheceNomeMae;
  }

  public void setDesconheceNomeMae(boolean desconheceNomeMae) {
    this.desconheceNomeMae = desconheceNomeMae;
    setDesconheceNomeMaeIsSet(true);
  }

  public void unsetDesconheceNomeMae() {
    __isset_bitfield = EncodingUtils.clearBit(__isset_bitfield, __DESCONHECENOMEMAE_ISSET_ID);
  }

  /** Returns true if field desconheceNomeMae is set (has been assigned a value) and false otherwise */
  public boolean isSetDesconheceNomeMae() {
    return EncodingUtils.testBit(__isset_bitfield, __DESCONHECENOMEMAE_ISSET_ID);
  }

  public void setDesconheceNomeMaeIsSet(boolean value) {
    __isset_bitfield = EncodingUtils.setBit(__isset_bitfield, __DESCONHECENOMEMAE_ISSET_ID, value);
  }

  public String getEmailCidadao() {
    return this.emailCidadao;
  }

  public void setEmailCidadao(String emailCidadao) {
    this.emailCidadao = emailCidadao;
  }

  public void unsetEmailCidadao() {
    this.emailCidadao = null;
  }

  /** Returns true if field emailCidadao is set (has been assigned a value) and false otherwise */
  public boolean isSetEmailCidadao() {
    return this.emailCidadao != null;
  }

  public void setEmailCidadaoIsSet(boolean value) {
    if (!value) {
      this.emailCidadao = null;
    }
  }

  public long getNacionalidadeCidadao() {
    return this.nacionalidadeCidadao;
  }

  public void setNacionalidadeCidadao(long nacionalidadeCidadao) {
    this.nacionalidadeCidadao = nacionalidadeCidadao;
    setNacionalidadeCidadaoIsSet(true);
  }

  public void unsetNacionalidadeCidadao() {
    __isset_bitfield = EncodingUtils.clearBit(__isset_bitfield, __NACIONALIDADECIDADAO_ISSET_ID);
  }

  /** Returns true if field nacionalidadeCidadao is set (has been assigned a value) and false otherwise */
  public boolean isSetNacionalidadeCidadao() {
    return EncodingUtils.testBit(__isset_bitfield, __NACIONALIDADECIDADAO_ISSET_ID);
  }

  public void setNacionalidadeCidadaoIsSet(boolean value) {
    __isset_bitfield = EncodingUtils.setBit(__isset_bitfield, __NACIONALIDADECIDADAO_ISSET_ID, value);
  }

  public String getNomeCidadao() {
    return this.nomeCidadao;
  }

  public void setNomeCidadao(String nomeCidadao) {
    this.nomeCidadao = nomeCidadao;
  }

  public void unsetNomeCidadao() {
    this.nomeCidadao = null;
  }

  /** Returns true if field nomeCidadao is set (has been assigned a value) and false otherwise */
  public boolean isSetNomeCidadao() {
    return this.nomeCidadao != null;
  }

  public void setNomeCidadaoIsSet(boolean value) {
    if (!value) {
      this.nomeCidadao = null;
    }
  }

  public String getNomeMaeCidadao() {
    return this.nomeMaeCidadao;
  }

  public void setNomeMaeCidadao(String nomeMaeCidadao) {
    this.nomeMaeCidadao = nomeMaeCidadao;
  }

  public void unsetNomeMaeCidadao() {
    this.nomeMaeCidadao = null;
  }

  /** Returns true if field nomeMaeCidadao is set (has been assigned a value) and false otherwise */
  public boolean isSetNomeMaeCidadao() {
    return this.nomeMaeCidadao != null;
  }

  public void setNomeMaeCidadaoIsSet(boolean value) {
    if (!value) {
      this.nomeMaeCidadao = null;
    }
  }

  public String getNumeroCartaoSus() {
    return this.numeroCartaoSus;
  }

  public void setNumeroCartaoSus(String numeroCartaoSus) {
    this.numeroCartaoSus = numeroCartaoSus;
  }

  public void unsetNumeroCartaoSus() {
    this.numeroCartaoSus = null;
  }

  /** Returns true if field numeroCartaoSus is set (has been assigned a value) and false otherwise */
  public boolean isSetNumeroCartaoSus() {
    return this.numeroCartaoSus != null;
  }

  public void setNumeroCartaoSusIsSet(boolean value) {
    if (!value) {
      this.numeroCartaoSus = null;
    }
  }

  public String getNumeroCartaoSusResponsavel() {
    return this.numeroCartaoSusResponsavel;
  }

  public void setNumeroCartaoSusResponsavel(String numeroCartaoSusResponsavel) {
    this.numeroCartaoSusResponsavel = numeroCartaoSusResponsavel;
  }

  public void unsetNumeroCartaoSusResponsavel() {
    this.numeroCartaoSusResponsavel = null;
  }

  /** Returns true if field numeroCartaoSusResponsavel is set (has been assigned a value) and false otherwise */
  public boolean isSetNumeroCartaoSusResponsavel() {
    return this.numeroCartaoSusResponsavel != null;
  }

  public void setNumeroCartaoSusResponsavelIsSet(boolean value) {
    if (!value) {
      this.numeroCartaoSusResponsavel = null;
    }
  }

  public String getNumeroCelularCidadao() {
    return this.numeroCelularCidadao;
  }

  public void setNumeroCelularCidadao(String numeroCelularCidadao) {
    this.numeroCelularCidadao = numeroCelularCidadao;
  }

  public void unsetNumeroCelularCidadao() {
    this.numeroCelularCidadao = null;
  }

  /** Returns true if field numeroCelularCidadao is set (has been assigned a value) and false otherwise */
  public boolean isSetNumeroCelularCidadao() {
    return this.numeroCelularCidadao != null;
  }

  public void setNumeroCelularCidadaoIsSet(boolean value) {
    if (!value) {
      this.numeroCelularCidadao = null;
    }
  }

  public String getNumeroNisPisPasep() {
    return this.numeroNisPisPasep;
  }

  public void setNumeroNisPisPasep(String numeroNisPisPasep) {
    this.numeroNisPisPasep = numeroNisPisPasep;
  }

  public void unsetNumeroNisPisPasep() {
    this.numeroNisPisPasep = null;
  }

  /** Returns true if field numeroNisPisPasep is set (has been assigned a value) and false otherwise */
  public boolean isSetNumeroNisPisPasep() {
    return this.numeroNisPisPasep != null;
  }

  public void setNumeroNisPisPasepIsSet(boolean value) {
    if (!value) {
      this.numeroNisPisPasep = null;
    }
  }

  public long getPaisNascimento() {
    return this.paisNascimento;
  }

  public void setPaisNascimento(long paisNascimento) {
    this.paisNascimento = paisNascimento;
    setPaisNascimentoIsSet(true);
  }

  public void unsetPaisNascimento() {
    __isset_bitfield = EncodingUtils.clearBit(__isset_bitfield, __PAISNASCIMENTO_ISSET_ID);
  }

  /** Returns true if field paisNascimento is set (has been assigned a value) and false otherwise */
  public boolean isSetPaisNascimento() {
    return EncodingUtils.testBit(__isset_bitfield, __PAISNASCIMENTO_ISSET_ID);
  }

  public void setPaisNascimentoIsSet(boolean value) {
    __isset_bitfield = EncodingUtils.setBit(__isset_bitfield, __PAISNASCIMENTO_ISSET_ID, value);
  }

  public long getRacaCorCidadao() {
    return this.racaCorCidadao;
  }

  public void setRacaCorCidadao(long racaCorCidadao) {
    this.racaCorCidadao = racaCorCidadao;
    setRacaCorCidadaoIsSet(true);
  }

  public void unsetRacaCorCidadao() {
    __isset_bitfield = EncodingUtils.clearBit(__isset_bitfield, __RACACORCIDADAO_ISSET_ID);
  }

  /** Returns true if field racaCorCidadao is set (has been assigned a value) and false otherwise */
  public boolean isSetRacaCorCidadao() {
    return EncodingUtils.testBit(__isset_bitfield, __RACACORCIDADAO_ISSET_ID);
  }

  public void setRacaCorCidadaoIsSet(boolean value) {
    __isset_bitfield = EncodingUtils.setBit(__isset_bitfield, __RACACORCIDADAO_ISSET_ID, value);
  }

  public long getSexoCidadao() {
    return this.sexoCidadao;
  }

  public void setSexoCidadao(long sexoCidadao) {
    this.sexoCidadao = sexoCidadao;
    setSexoCidadaoIsSet(true);
  }

  public void unsetSexoCidadao() {
    __isset_bitfield = EncodingUtils.clearBit(__isset_bitfield, __SEXOCIDADAO_ISSET_ID);
  }

  /** Returns true if field sexoCidadao is set (has been assigned a value) and false otherwise */
  public boolean isSetSexoCidadao() {
    return EncodingUtils.testBit(__isset_bitfield, __SEXOCIDADAO_ISSET_ID);
  }

  public void setSexoCidadaoIsSet(boolean value) {
    __isset_bitfield = EncodingUtils.setBit(__isset_bitfield, __SEXOCIDADAO_ISSET_ID, value);
  }

  public boolean isStatusEhResponsavel() {
    return this.statusEhResponsavel;
  }

  public void setStatusEhResponsavel(boolean statusEhResponsavel) {
    this.statusEhResponsavel = statusEhResponsavel;
    setStatusEhResponsavelIsSet(true);
  }

  public void unsetStatusEhResponsavel() {
    __isset_bitfield = EncodingUtils.clearBit(__isset_bitfield, __STATUSEHRESPONSAVEL_ISSET_ID);
  }

  /** Returns true if field statusEhResponsavel is set (has been assigned a value) and false otherwise */
  public boolean isSetStatusEhResponsavel() {
    return EncodingUtils.testBit(__isset_bitfield, __STATUSEHRESPONSAVEL_ISSET_ID);
  }

  public void setStatusEhResponsavelIsSet(boolean value) {
    __isset_bitfield = EncodingUtils.setBit(__isset_bitfield, __STATUSEHRESPONSAVEL_ISSET_ID, value);
  }

  public void setFieldValue(_Fields field, Object value) {
    switch (field) {
    case NOME_SOCIAL_CIDADAO:
      if (value == null) {
        unsetNomeSocialCidadao();
      } else {
        setNomeSocialCidadao((String)value);
      }
      break;

    case CODIGO_IBGE_MUNICIPIO_NASCIMENTO:
      if (value == null) {
        unsetCodigoIbgeMunicipioNascimento();
      } else {
        setCodigoIbgeMunicipioNascimento((String)value);
      }
      break;

    case DATA_NASCIMENTO_CIDADAO:
      if (value == null) {
        unsetDataNascimentoCidadao();
      } else {
        setDataNascimentoCidadao((Long)value);
      }
      break;

    case DATA_NASCIMENTO_RESPONSAVEL:
      if (value == null) {
        unsetDataNascimentoResponsavel();
      } else {
        setDataNascimentoResponsavel((Long)value);
      }
      break;

    case DESCONHECE_NOME_MAE:
      if (value == null) {
        unsetDesconheceNomeMae();
      } else {
        setDesconheceNomeMae((Boolean)value);
      }
      break;

    case EMAIL_CIDADAO:
      if (value == null) {
        unsetEmailCidadao();
      } else {
        setEmailCidadao((String)value);
      }
      break;

    case NACIONALIDADE_CIDADAO:
      if (value == null) {
        unsetNacionalidadeCidadao();
      } else {
        setNacionalidadeCidadao((Long)value);
      }
      break;

    case NOME_CIDADAO:
      if (value == null) {
        unsetNomeCidadao();
      } else {
        setNomeCidadao((String)value);
      }
      break;

    case NOME_MAE_CIDADAO:
      if (value == null) {
        unsetNomeMaeCidadao();
      } else {
        setNomeMaeCidadao((String)value);
      }
      break;

    case NUMERO_CARTAO_SUS:
      if (value == null) {
        unsetNumeroCartaoSus();
      } else {
        setNumeroCartaoSus((String)value);
      }
      break;

    case NUMERO_CARTAO_SUS_RESPONSAVEL:
      if (value == null) {
        unsetNumeroCartaoSusResponsavel();
      } else {
        setNumeroCartaoSusResponsavel((String)value);
      }
      break;

    case NUMERO_CELULAR_CIDADAO:
      if (value == null) {
        unsetNumeroCelularCidadao();
      } else {
        setNumeroCelularCidadao((String)value);
      }
      break;

    case NUMERO_NIS_PIS_PASEP:
      if (value == null) {
        unsetNumeroNisPisPasep();
      } else {
        setNumeroNisPisPasep((String)value);
      }
      break;

    case PAIS_NASCIMENTO:
      if (value == null) {
        unsetPaisNascimento();
      } else {
        setPaisNascimento((Long)value);
      }
      break;

    case RACA_COR_CIDADAO:
      if (value == null) {
        unsetRacaCorCidadao();
      } else {
        setRacaCorCidadao((Long)value);
      }
      break;

    case SEXO_CIDADAO:
      if (value == null) {
        unsetSexoCidadao();
      } else {
        setSexoCidadao((Long)value);
      }
      break;

    case STATUS_EH_RESPONSAVEL:
      if (value == null) {
        unsetStatusEhResponsavel();
      } else {
        setStatusEhResponsavel((Boolean)value);
      }
      break;

    }
  }

  public Object getFieldValue(_Fields field) {
    switch (field) {
    case NOME_SOCIAL_CIDADAO:
      return getNomeSocialCidadao();

    case CODIGO_IBGE_MUNICIPIO_NASCIMENTO:
      return getCodigoIbgeMunicipioNascimento();

    case DATA_NASCIMENTO_CIDADAO:
      return Long.valueOf(getDataNascimentoCidadao());

    case DATA_NASCIMENTO_RESPONSAVEL:
      return Long.valueOf(getDataNascimentoResponsavel());

    case DESCONHECE_NOME_MAE:
      return Boolean.valueOf(isDesconheceNomeMae());

    case EMAIL_CIDADAO:
      return getEmailCidadao();

    case NACIONALIDADE_CIDADAO:
      return Long.valueOf(getNacionalidadeCidadao());

    case NOME_CIDADAO:
      return getNomeCidadao();

    case NOME_MAE_CIDADAO:
      return getNomeMaeCidadao();

    case NUMERO_CARTAO_SUS:
      return getNumeroCartaoSus();

    case NUMERO_CARTAO_SUS_RESPONSAVEL:
      return getNumeroCartaoSusResponsavel();

    case NUMERO_CELULAR_CIDADAO:
      return getNumeroCelularCidadao();

    case NUMERO_NIS_PIS_PASEP:
      return getNumeroNisPisPasep();

    case PAIS_NASCIMENTO:
      return Long.valueOf(getPaisNascimento());

    case RACA_COR_CIDADAO:
      return Long.valueOf(getRacaCorCidadao());

    case SEXO_CIDADAO:
      return Long.valueOf(getSexoCidadao());

    case STATUS_EH_RESPONSAVEL:
      return Boolean.valueOf(isStatusEhResponsavel());

    }
    throw new IllegalStateException();
  }

  /** Returns true if field corresponding to fieldID is set (has been assigned a value) and false otherwise */
  public boolean isSet(_Fields field) {
    if (field == null) {
      throw new IllegalArgumentException();
    }

    switch (field) {
    case NOME_SOCIAL_CIDADAO:
      return isSetNomeSocialCidadao();
    case CODIGO_IBGE_MUNICIPIO_NASCIMENTO:
      return isSetCodigoIbgeMunicipioNascimento();
    case DATA_NASCIMENTO_CIDADAO:
      return isSetDataNascimentoCidadao();
    case DATA_NASCIMENTO_RESPONSAVEL:
      return isSetDataNascimentoResponsavel();
    case DESCONHECE_NOME_MAE:
      return isSetDesconheceNomeMae();
    case EMAIL_CIDADAO:
      return isSetEmailCidadao();
    case NACIONALIDADE_CIDADAO:
      return isSetNacionalidadeCidadao();
    case NOME_CIDADAO:
      return isSetNomeCidadao();
    case NOME_MAE_CIDADAO:
      return isSetNomeMaeCidadao();
    case NUMERO_CARTAO_SUS:
      return isSetNumeroCartaoSus();
    case NUMERO_CARTAO_SUS_RESPONSAVEL:
      return isSetNumeroCartaoSusResponsavel();
    case NUMERO_CELULAR_CIDADAO:
      return isSetNumeroCelularCidadao();
    case NUMERO_NIS_PIS_PASEP:
      return isSetNumeroNisPisPasep();
    case PAIS_NASCIMENTO:
      return isSetPaisNascimento();
    case RACA_COR_CIDADAO:
      return isSetRacaCorCidadao();
    case SEXO_CIDADAO:
      return isSetSexoCidadao();
    case STATUS_EH_RESPONSAVEL:
      return isSetStatusEhResponsavel();
    }
    throw new IllegalStateException();
  }

  @Override
  public boolean equals(Object that) {
    if (that == null)
      return false;
    if (that instanceof IdentificacaoUsuarioCidadaoThrift)
      return this.equals((IdentificacaoUsuarioCidadaoThrift)that);
    return false;
  }

  public boolean equals(IdentificacaoUsuarioCidadaoThrift that) {
    if (that == null)
      return false;

    boolean this_present_nomeSocialCidadao = true && this.isSetNomeSocialCidadao();
    boolean that_present_nomeSocialCidadao = true && that.isSetNomeSocialCidadao();
    if (this_present_nomeSocialCidadao || that_present_nomeSocialCidadao) {
      if (!(this_present_nomeSocialCidadao && that_present_nomeSocialCidadao))
        return false;
      if (!this.nomeSocialCidadao.equals(that.nomeSocialCidadao))
        return false;
    }

    boolean this_present_codigoIbgeMunicipioNascimento = true && this.isSetCodigoIbgeMunicipioNascimento();
    boolean that_present_codigoIbgeMunicipioNascimento = true && that.isSetCodigoIbgeMunicipioNascimento();
    if (this_present_codigoIbgeMunicipioNascimento || that_present_codigoIbgeMunicipioNascimento) {
      if (!(this_present_codigoIbgeMunicipioNascimento && that_present_codigoIbgeMunicipioNascimento))
        return false;
      if (!this.codigoIbgeMunicipioNascimento.equals(that.codigoIbgeMunicipioNascimento))
        return false;
    }

    boolean this_present_dataNascimentoCidadao = true && this.isSetDataNascimentoCidadao();
    boolean that_present_dataNascimentoCidadao = true && that.isSetDataNascimentoCidadao();
    if (this_present_dataNascimentoCidadao || that_present_dataNascimentoCidadao) {
      if (!(this_present_dataNascimentoCidadao && that_present_dataNascimentoCidadao))
        return false;
      if (this.dataNascimentoCidadao != that.dataNascimentoCidadao)
        return false;
    }

    boolean this_present_dataNascimentoResponsavel = true && this.isSetDataNascimentoResponsavel();
    boolean that_present_dataNascimentoResponsavel = true && that.isSetDataNascimentoResponsavel();
    if (this_present_dataNascimentoResponsavel || that_present_dataNascimentoResponsavel) {
      if (!(this_present_dataNascimentoResponsavel && that_present_dataNascimentoResponsavel))
        return false;
      if (this.dataNascimentoResponsavel != that.dataNascimentoResponsavel)
        return false;
    }

    boolean this_present_desconheceNomeMae = true && this.isSetDesconheceNomeMae();
    boolean that_present_desconheceNomeMae = true && that.isSetDesconheceNomeMae();
    if (this_present_desconheceNomeMae || that_present_desconheceNomeMae) {
      if (!(this_present_desconheceNomeMae && that_present_desconheceNomeMae))
        return false;
      if (this.desconheceNomeMae != that.desconheceNomeMae)
        return false;
    }

    boolean this_present_emailCidadao = true && this.isSetEmailCidadao();
    boolean that_present_emailCidadao = true && that.isSetEmailCidadao();
    if (this_present_emailCidadao || that_present_emailCidadao) {
      if (!(this_present_emailCidadao && that_present_emailCidadao))
        return false;
      if (!this.emailCidadao.equals(that.emailCidadao))
        return false;
    }

    boolean this_present_nacionalidadeCidadao = true && this.isSetNacionalidadeCidadao();
    boolean that_present_nacionalidadeCidadao = true && that.isSetNacionalidadeCidadao();
    if (this_present_nacionalidadeCidadao || that_present_nacionalidadeCidadao) {
      if (!(this_present_nacionalidadeCidadao && that_present_nacionalidadeCidadao))
        return false;
      if (this.nacionalidadeCidadao != that.nacionalidadeCidadao)
        return false;
    }

    boolean this_present_nomeCidadao = true && this.isSetNomeCidadao();
    boolean that_present_nomeCidadao = true && that.isSetNomeCidadao();
    if (this_present_nomeCidadao || that_present_nomeCidadao) {
      if (!(this_present_nomeCidadao && that_present_nomeCidadao))
        return false;
      if (!this.nomeCidadao.equals(that.nomeCidadao))
        return false;
    }

    boolean this_present_nomeMaeCidadao = true && this.isSetNomeMaeCidadao();
    boolean that_present_nomeMaeCidadao = true && that.isSetNomeMaeCidadao();
    if (this_present_nomeMaeCidadao || that_present_nomeMaeCidadao) {
      if (!(this_present_nomeMaeCidadao && that_present_nomeMaeCidadao))
        return false;
      if (!this.nomeMaeCidadao.equals(that.nomeMaeCidadao))
        return false;
    }

    boolean this_present_numeroCartaoSus = true && this.isSetNumeroCartaoSus();
    boolean that_present_numeroCartaoSus = true && that.isSetNumeroCartaoSus();
    if (this_present_numeroCartaoSus || that_present_numeroCartaoSus) {
      if (!(this_present_numeroCartaoSus && that_present_numeroCartaoSus))
        return false;
      if (!this.numeroCartaoSus.equals(that.numeroCartaoSus))
        return false;
    }

    boolean this_present_numeroCartaoSusResponsavel = true && this.isSetNumeroCartaoSusResponsavel();
    boolean that_present_numeroCartaoSusResponsavel = true && that.isSetNumeroCartaoSusResponsavel();
    if (this_present_numeroCartaoSusResponsavel || that_present_numeroCartaoSusResponsavel) {
      if (!(this_present_numeroCartaoSusResponsavel && that_present_numeroCartaoSusResponsavel))
        return false;
      if (!this.numeroCartaoSusResponsavel.equals(that.numeroCartaoSusResponsavel))
        return false;
    }

    boolean this_present_numeroCelularCidadao = true && this.isSetNumeroCelularCidadao();
    boolean that_present_numeroCelularCidadao = true && that.isSetNumeroCelularCidadao();
    if (this_present_numeroCelularCidadao || that_present_numeroCelularCidadao) {
      if (!(this_present_numeroCelularCidadao && that_present_numeroCelularCidadao))
        return false;
      if (!this.numeroCelularCidadao.equals(that.numeroCelularCidadao))
        return false;
    }

    boolean this_present_numeroNisPisPasep = true && this.isSetNumeroNisPisPasep();
    boolean that_present_numeroNisPisPasep = true && that.isSetNumeroNisPisPasep();
    if (this_present_numeroNisPisPasep || that_present_numeroNisPisPasep) {
      if (!(this_present_numeroNisPisPasep && that_present_numeroNisPisPasep))
        return false;
      if (!this.numeroNisPisPasep.equals(that.numeroNisPisPasep))
        return false;
    }

    boolean this_present_paisNascimento = true && this.isSetPaisNascimento();
    boolean that_present_paisNascimento = true && that.isSetPaisNascimento();
    if (this_present_paisNascimento || that_present_paisNascimento) {
      if (!(this_present_paisNascimento && that_present_paisNascimento))
        return false;
      if (this.paisNascimento != that.paisNascimento)
        return false;
    }

    boolean this_present_racaCorCidadao = true && this.isSetRacaCorCidadao();
    boolean that_present_racaCorCidadao = true && that.isSetRacaCorCidadao();
    if (this_present_racaCorCidadao || that_present_racaCorCidadao) {
      if (!(this_present_racaCorCidadao && that_present_racaCorCidadao))
        return false;
      if (this.racaCorCidadao != that.racaCorCidadao)
        return false;
    }

    boolean this_present_sexoCidadao = true && this.isSetSexoCidadao();
    boolean that_present_sexoCidadao = true && that.isSetSexoCidadao();
    if (this_present_sexoCidadao || that_present_sexoCidadao) {
      if (!(this_present_sexoCidadao && that_present_sexoCidadao))
        return false;
      if (this.sexoCidadao != that.sexoCidadao)
        return false;
    }

    boolean this_present_statusEhResponsavel = true && this.isSetStatusEhResponsavel();
    boolean that_present_statusEhResponsavel = true && that.isSetStatusEhResponsavel();
    if (this_present_statusEhResponsavel || that_present_statusEhResponsavel) {
      if (!(this_present_statusEhResponsavel && that_present_statusEhResponsavel))
        return false;
      if (this.statusEhResponsavel != that.statusEhResponsavel)
        return false;
    }

    return true;
  }

  @Override
  public int hashCode() {
    List<Object> list = new ArrayList<Object>();

    boolean present_nomeSocialCidadao = true && (isSetNomeSocialCidadao());
    list.add(present_nomeSocialCidadao);
    if (present_nomeSocialCidadao)
      list.add(nomeSocialCidadao);

    boolean present_codigoIbgeMunicipioNascimento = true && (isSetCodigoIbgeMunicipioNascimento());
    list.add(present_codigoIbgeMunicipioNascimento);
    if (present_codigoIbgeMunicipioNascimento)
      list.add(codigoIbgeMunicipioNascimento);

    boolean present_dataNascimentoCidadao = true && (isSetDataNascimentoCidadao());
    list.add(present_dataNascimentoCidadao);
    if (present_dataNascimentoCidadao)
      list.add(dataNascimentoCidadao);

    boolean present_dataNascimentoResponsavel = true && (isSetDataNascimentoResponsavel());
    list.add(present_dataNascimentoResponsavel);
    if (present_dataNascimentoResponsavel)
      list.add(dataNascimentoResponsavel);

    boolean present_desconheceNomeMae = true && (isSetDesconheceNomeMae());
    list.add(present_desconheceNomeMae);
    if (present_desconheceNomeMae)
      list.add(desconheceNomeMae);

    boolean present_emailCidadao = true && (isSetEmailCidadao());
    list.add(present_emailCidadao);
    if (present_emailCidadao)
      list.add(emailCidadao);

    boolean present_nacionalidadeCidadao = true && (isSetNacionalidadeCidadao());
    list.add(present_nacionalidadeCidadao);
    if (present_nacionalidadeCidadao)
      list.add(nacionalidadeCidadao);

    boolean present_nomeCidadao = true && (isSetNomeCidadao());
    list.add(present_nomeCidadao);
    if (present_nomeCidadao)
      list.add(nomeCidadao);

    boolean present_nomeMaeCidadao = true && (isSetNomeMaeCidadao());
    list.add(present_nomeMaeCidadao);
    if (present_nomeMaeCidadao)
      list.add(nomeMaeCidadao);

    boolean present_numeroCartaoSus = true && (isSetNumeroCartaoSus());
    list.add(present_numeroCartaoSus);
    if (present_numeroCartaoSus)
      list.add(numeroCartaoSus);

    boolean present_numeroCartaoSusResponsavel = true && (isSetNumeroCartaoSusResponsavel());
    list.add(present_numeroCartaoSusResponsavel);
    if (present_numeroCartaoSusResponsavel)
      list.add(numeroCartaoSusResponsavel);

    boolean present_numeroCelularCidadao = true && (isSetNumeroCelularCidadao());
    list.add(present_numeroCelularCidadao);
    if (present_numeroCelularCidadao)
      list.add(numeroCelularCidadao);

    boolean present_numeroNisPisPasep = true && (isSetNumeroNisPisPasep());
    list.add(present_numeroNisPisPasep);
    if (present_numeroNisPisPasep)
      list.add(numeroNisPisPasep);

    boolean present_paisNascimento = true && (isSetPaisNascimento());
    list.add(present_paisNascimento);
    if (present_paisNascimento)
      list.add(paisNascimento);

    boolean present_racaCorCidadao = true && (isSetRacaCorCidadao());
    list.add(present_racaCorCidadao);
    if (present_racaCorCidadao)
      list.add(racaCorCidadao);

    boolean present_sexoCidadao = true && (isSetSexoCidadao());
    list.add(present_sexoCidadao);
    if (present_sexoCidadao)
      list.add(sexoCidadao);

    boolean present_statusEhResponsavel = true && (isSetStatusEhResponsavel());
    list.add(present_statusEhResponsavel);
    if (present_statusEhResponsavel)
      list.add(statusEhResponsavel);

    return list.hashCode();
  }

  @Override
  public int compareTo(IdentificacaoUsuarioCidadaoThrift other) {
    if (!getClass().equals(other.getClass())) {
      return getClass().getName().compareTo(other.getClass().getName());
    }

    int lastComparison = 0;

    lastComparison = Boolean.valueOf(isSetNomeSocialCidadao()).compareTo(other.isSetNomeSocialCidadao());
    if (lastComparison != 0) {
      return lastComparison;
    }
    if (isSetNomeSocialCidadao()) {
      lastComparison = org.apache.thrift.TBaseHelper.compareTo(this.nomeSocialCidadao, other.nomeSocialCidadao);
      if (lastComparison != 0) {
        return lastComparison;
      }
    }
    lastComparison = Boolean.valueOf(isSetCodigoIbgeMunicipioNascimento()).compareTo(other.isSetCodigoIbgeMunicipioNascimento());
    if (lastComparison != 0) {
      return lastComparison;
    }
    if (isSetCodigoIbgeMunicipioNascimento()) {
      lastComparison = org.apache.thrift.TBaseHelper.compareTo(this.codigoIbgeMunicipioNascimento, other.codigoIbgeMunicipioNascimento);
      if (lastComparison != 0) {
        return lastComparison;
      }
    }
    lastComparison = Boolean.valueOf(isSetDataNascimentoCidadao()).compareTo(other.isSetDataNascimentoCidadao());
    if (lastComparison != 0) {
      return lastComparison;
    }
    if (isSetDataNascimentoCidadao()) {
      lastComparison = org.apache.thrift.TBaseHelper.compareTo(this.dataNascimentoCidadao, other.dataNascimentoCidadao);
      if (lastComparison != 0) {
        return lastComparison;
      }
    }
    lastComparison = Boolean.valueOf(isSetDataNascimentoResponsavel()).compareTo(other.isSetDataNascimentoResponsavel());
    if (lastComparison != 0) {
      return lastComparison;
    }
    if (isSetDataNascimentoResponsavel()) {
      lastComparison = org.apache.thrift.TBaseHelper.compareTo(this.dataNascimentoResponsavel, other.dataNascimentoResponsavel);
      if (lastComparison != 0) {
        return lastComparison;
      }
    }
    lastComparison = Boolean.valueOf(isSetDesconheceNomeMae()).compareTo(other.isSetDesconheceNomeMae());
    if (lastComparison != 0) {
      return lastComparison;
    }
    if (isSetDesconheceNomeMae()) {
      lastComparison = org.apache.thrift.TBaseHelper.compareTo(this.desconheceNomeMae, other.desconheceNomeMae);
      if (lastComparison != 0) {
        return lastComparison;
      }
    }
    lastComparison = Boolean.valueOf(isSetEmailCidadao()).compareTo(other.isSetEmailCidadao());
    if (lastComparison != 0) {
      return lastComparison;
    }
    if (isSetEmailCidadao()) {
      lastComparison = org.apache.thrift.TBaseHelper.compareTo(this.emailCidadao, other.emailCidadao);
      if (lastComparison != 0) {
        return lastComparison;
      }
    }
    lastComparison = Boolean.valueOf(isSetNacionalidadeCidadao()).compareTo(other.isSetNacionalidadeCidadao());
    if (lastComparison != 0) {
      return lastComparison;
    }
    if (isSetNacionalidadeCidadao()) {
      lastComparison = org.apache.thrift.TBaseHelper.compareTo(this.nacionalidadeCidadao, other.nacionalidadeCidadao);
      if (lastComparison != 0) {
        return lastComparison;
      }
    }
    lastComparison = Boolean.valueOf(isSetNomeCidadao()).compareTo(other.isSetNomeCidadao());
    if (lastComparison != 0) {
      return lastComparison;
    }
    if (isSetNomeCidadao()) {
      lastComparison = org.apache.thrift.TBaseHelper.compareTo(this.nomeCidadao, other.nomeCidadao);
      if (lastComparison != 0) {
        return lastComparison;
      }
    }
    lastComparison = Boolean.valueOf(isSetNomeMaeCidadao()).compareTo(other.isSetNomeMaeCidadao());
    if (lastComparison != 0) {
      return lastComparison;
    }
    if (isSetNomeMaeCidadao()) {
      lastComparison = org.apache.thrift.TBaseHelper.compareTo(this.nomeMaeCidadao, other.nomeMaeCidadao);
      if (lastComparison != 0) {
        return lastComparison;
      }
    }
    lastComparison = Boolean.valueOf(isSetNumeroCartaoSus()).compareTo(other.isSetNumeroCartaoSus());
    if (lastComparison != 0) {
      return lastComparison;
    }
    if (isSetNumeroCartaoSus()) {
      lastComparison = org.apache.thrift.TBaseHelper.compareTo(this.numeroCartaoSus, other.numeroCartaoSus);
      if (lastComparison != 0) {
        return lastComparison;
      }
    }
    lastComparison = Boolean.valueOf(isSetNumeroCartaoSusResponsavel()).compareTo(other.isSetNumeroCartaoSusResponsavel());
    if (lastComparison != 0) {
      return lastComparison;
    }
    if (isSetNumeroCartaoSusResponsavel()) {
      lastComparison = org.apache.thrift.TBaseHelper.compareTo(this.numeroCartaoSusResponsavel, other.numeroCartaoSusResponsavel);
      if (lastComparison != 0) {
        return lastComparison;
      }
    }
    lastComparison = Boolean.valueOf(isSetNumeroCelularCidadao()).compareTo(other.isSetNumeroCelularCidadao());
    if (lastComparison != 0) {
      return lastComparison;
    }
    if (isSetNumeroCelularCidadao()) {
      lastComparison = org.apache.thrift.TBaseHelper.compareTo(this.numeroCelularCidadao, other.numeroCelularCidadao);
      if (lastComparison != 0) {
        return lastComparison;
      }
    }
    lastComparison = Boolean.valueOf(isSetNumeroNisPisPasep()).compareTo(other.isSetNumeroNisPisPasep());
    if (lastComparison != 0) {
      return lastComparison;
    }
    if (isSetNumeroNisPisPasep()) {
      lastComparison = org.apache.thrift.TBaseHelper.compareTo(this.numeroNisPisPasep, other.numeroNisPisPasep);
      if (lastComparison != 0) {
        return lastComparison;
      }
    }
    lastComparison = Boolean.valueOf(isSetPaisNascimento()).compareTo(other.isSetPaisNascimento());
    if (lastComparison != 0) {
      return lastComparison;
    }
    if (isSetPaisNascimento()) {
      lastComparison = org.apache.thrift.TBaseHelper.compareTo(this.paisNascimento, other.paisNascimento);
      if (lastComparison != 0) {
        return lastComparison;
      }
    }
    lastComparison = Boolean.valueOf(isSetRacaCorCidadao()).compareTo(other.isSetRacaCorCidadao());
    if (lastComparison != 0) {
      return lastComparison;
    }
    if (isSetRacaCorCidadao()) {
      lastComparison = org.apache.thrift.TBaseHelper.compareTo(this.racaCorCidadao, other.racaCorCidadao);
      if (lastComparison != 0) {
        return lastComparison;
      }
    }
    lastComparison = Boolean.valueOf(isSetSexoCidadao()).compareTo(other.isSetSexoCidadao());
    if (lastComparison != 0) {
      return lastComparison;
    }
    if (isSetSexoCidadao()) {
      lastComparison = org.apache.thrift.TBaseHelper.compareTo(this.sexoCidadao, other.sexoCidadao);
      if (lastComparison != 0) {
        return lastComparison;
      }
    }
    lastComparison = Boolean.valueOf(isSetStatusEhResponsavel()).compareTo(other.isSetStatusEhResponsavel());
    if (lastComparison != 0) {
      return lastComparison;
    }
    if (isSetStatusEhResponsavel()) {
      lastComparison = org.apache.thrift.TBaseHelper.compareTo(this.statusEhResponsavel, other.statusEhResponsavel);
      if (lastComparison != 0) {
        return lastComparison;
      }
    }
    return 0;
  }

  public _Fields fieldForId(int fieldId) {
    return _Fields.findByThriftId(fieldId);
  }

  public void read(org.apache.thrift.protocol.TProtocol iprot) throws org.apache.thrift.TException {
    schemes.get(iprot.getScheme()).getScheme().read(iprot, this);
  }

  public void write(org.apache.thrift.protocol.TProtocol oprot) throws org.apache.thrift.TException {
    schemes.get(oprot.getScheme()).getScheme().write(oprot, this);
  }

  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder("IdentificacaoUsuarioCidadaoThrift(");
    boolean first = true;

    if (isSetNomeSocialCidadao()) {
      sb.append("nomeSocialCidadao:");
      if (this.nomeSocialCidadao == null) {
        sb.append("null");
      } else {
        sb.append(this.nomeSocialCidadao);
      }
      first = false;
    }
    if (isSetCodigoIbgeMunicipioNascimento()) {
      if (!first) sb.append(", ");
      sb.append("codigoIbgeMunicipioNascimento:");
      if (this.codigoIbgeMunicipioNascimento == null) {
        sb.append("null");
      } else {
        sb.append(this.codigoIbgeMunicipioNascimento);
      }
      first = false;
    }
    if (isSetDataNascimentoCidadao()) {
      if (!first) sb.append(", ");
      sb.append("dataNascimentoCidadao:");
      sb.append(this.dataNascimentoCidadao);
      first = false;
    }
    if (isSetDataNascimentoResponsavel()) {
      if (!first) sb.append(", ");
      sb.append("dataNascimentoResponsavel:");
      sb.append(this.dataNascimentoResponsavel);
      first = false;
    }
    if (isSetDesconheceNomeMae()) {
      if (!first) sb.append(", ");
      sb.append("desconheceNomeMae:");
      sb.append(this.desconheceNomeMae);
      first = false;
    }
    if (isSetEmailCidadao()) {
      if (!first) sb.append(", ");
      sb.append("emailCidadao:");
      if (this.emailCidadao == null) {
        sb.append("null");
      } else {
        sb.append(this.emailCidadao);
      }
      first = false;
    }
    if (isSetNacionalidadeCidadao()) {
      if (!first) sb.append(", ");
      sb.append("nacionalidadeCidadao:");
      sb.append(this.nacionalidadeCidadao);
      first = false;
    }
    if (isSetNomeCidadao()) {
      if (!first) sb.append(", ");
      sb.append("nomeCidadao:");
      if (this.nomeCidadao == null) {
        sb.append("null");
      } else {
        sb.append(this.nomeCidadao);
      }
      first = false;
    }
    if (isSetNomeMaeCidadao()) {
      if (!first) sb.append(", ");
      sb.append("nomeMaeCidadao:");
      if (this.nomeMaeCidadao == null) {
        sb.append("null");
      } else {
        sb.append(this.nomeMaeCidadao);
      }
      first = false;
    }
    if (isSetNumeroCartaoSus()) {
      if (!first) sb.append(", ");
      sb.append("numeroCartaoSus:");
      if (this.numeroCartaoSus == null) {
        sb.append("null");
      } else {
        sb.append(this.numeroCartaoSus);
      }
      first = false;
    }
    if (isSetNumeroCartaoSusResponsavel()) {
      if (!first) sb.append(", ");
      sb.append("numeroCartaoSusResponsavel:");
      if (this.numeroCartaoSusResponsavel == null) {
        sb.append("null");
      } else {
        sb.append(this.numeroCartaoSusResponsavel);
      }
      first = false;
    }
    if (isSetNumeroCelularCidadao()) {
      if (!first) sb.append(", ");
      sb.append("numeroCelularCidadao:");
      if (this.numeroCelularCidadao == null) {
        sb.append("null");
      } else {
        sb.append(this.numeroCelularCidadao);
      }
      first = false;
    }
    if (isSetNumeroNisPisPasep()) {
      if (!first) sb.append(", ");
      sb.append("numeroNisPisPasep:");
      if (this.numeroNisPisPasep == null) {
        sb.append("null");
      } else {
        sb.append(this.numeroNisPisPasep);
      }
      first = false;
    }
    if (isSetPaisNascimento()) {
      if (!first) sb.append(", ");
      sb.append("paisNascimento:");
      sb.append(this.paisNascimento);
      first = false;
    }
    if (isSetRacaCorCidadao()) {
      if (!first) sb.append(", ");
      sb.append("racaCorCidadao:");
      sb.append(this.racaCorCidadao);
      first = false;
    }
    if (isSetSexoCidadao()) {
      if (!first) sb.append(", ");
      sb.append("sexoCidadao:");
      sb.append(this.sexoCidadao);
      first = false;
    }
    if (isSetStatusEhResponsavel()) {
      if (!first) sb.append(", ");
      sb.append("statusEhResponsavel:");
      sb.append(this.statusEhResponsavel);
      first = false;
    }
    sb.append(")");
    return sb.toString();
  }

  public void validate() throws org.apache.thrift.TException {
    // check for required fields
    // check for sub-struct validity
  }

  private void writeObject(java.io.ObjectOutputStream out) throws java.io.IOException {
    try {
      write(new org.apache.thrift.protocol.TCompactProtocol(new org.apache.thrift.transport.TIOStreamTransport(out)));
    } catch (org.apache.thrift.TException te) {
      throw new java.io.IOException(te);
    }
  }

  private void readObject(java.io.ObjectInputStream in) throws java.io.IOException, ClassNotFoundException {
    try {
      // it doesn't seem like you should have to do this, but java serialization is wacky, and doesn't call the default constructor.
      __isset_bitfield = 0;
      read(new org.apache.thrift.protocol.TCompactProtocol(new org.apache.thrift.transport.TIOStreamTransport(in)));
    } catch (org.apache.thrift.TException te) {
      throw new java.io.IOException(te);
    }
  }

  private static class IdentificacaoUsuarioCidadaoThriftStandardSchemeFactory implements SchemeFactory {
    public IdentificacaoUsuarioCidadaoThriftStandardScheme getScheme() {
      return new IdentificacaoUsuarioCidadaoThriftStandardScheme();
    }
  }

  private static class IdentificacaoUsuarioCidadaoThriftStandardScheme extends StandardScheme<IdentificacaoUsuarioCidadaoThrift> {

    public void read(org.apache.thrift.protocol.TProtocol iprot, IdentificacaoUsuarioCidadaoThrift struct) throws org.apache.thrift.TException {
      org.apache.thrift.protocol.TField schemeField;
      iprot.readStructBegin();
      while (true)
      {
        schemeField = iprot.readFieldBegin();
        if (schemeField.type == org.apache.thrift.protocol.TType.STOP) { 
          break;
        }
        switch (schemeField.id) {
          case 1: // NOME_SOCIAL_CIDADAO
            if (schemeField.type == org.apache.thrift.protocol.TType.STRING) {
              struct.nomeSocialCidadao = iprot.readString();
              struct.setNomeSocialCidadaoIsSet(true);
            } else { 
              org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
            }
            break;
          case 2: // CODIGO_IBGE_MUNICIPIO_NASCIMENTO
            if (schemeField.type == org.apache.thrift.protocol.TType.STRING) {
              struct.codigoIbgeMunicipioNascimento = iprot.readString();
              struct.setCodigoIbgeMunicipioNascimentoIsSet(true);
            } else { 
              org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
            }
            break;
          case 3: // DATA_NASCIMENTO_CIDADAO
            if (schemeField.type == org.apache.thrift.protocol.TType.I64) {
              struct.dataNascimentoCidadao = iprot.readI64();
              struct.setDataNascimentoCidadaoIsSet(true);
            } else { 
              org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
            }
            break;
          case 4: // DATA_NASCIMENTO_RESPONSAVEL
            if (schemeField.type == org.apache.thrift.protocol.TType.I64) {
              struct.dataNascimentoResponsavel = iprot.readI64();
              struct.setDataNascimentoResponsavelIsSet(true);
            } else { 
              org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
            }
            break;
          case 5: // DESCONHECE_NOME_MAE
            if (schemeField.type == org.apache.thrift.protocol.TType.BOOL) {
              struct.desconheceNomeMae = iprot.readBool();
              struct.setDesconheceNomeMaeIsSet(true);
            } else { 
              org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
            }
            break;
          case 6: // EMAIL_CIDADAO
            if (schemeField.type == org.apache.thrift.protocol.TType.STRING) {
              struct.emailCidadao = iprot.readString();
              struct.setEmailCidadaoIsSet(true);
            } else { 
              org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
            }
            break;
          case 7: // NACIONALIDADE_CIDADAO
            if (schemeField.type == org.apache.thrift.protocol.TType.I64) {
              struct.nacionalidadeCidadao = iprot.readI64();
              struct.setNacionalidadeCidadaoIsSet(true);
            } else { 
              org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
            }
            break;
          case 8: // NOME_CIDADAO
            if (schemeField.type == org.apache.thrift.protocol.TType.STRING) {
              struct.nomeCidadao = iprot.readString();
              struct.setNomeCidadaoIsSet(true);
            } else { 
              org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
            }
            break;
          case 9: // NOME_MAE_CIDADAO
            if (schemeField.type == org.apache.thrift.protocol.TType.STRING) {
              struct.nomeMaeCidadao = iprot.readString();
              struct.setNomeMaeCidadaoIsSet(true);
            } else { 
              org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
            }
            break;
          case 10: // NUMERO_CARTAO_SUS
            if (schemeField.type == org.apache.thrift.protocol.TType.STRING) {
              struct.numeroCartaoSus = iprot.readString();
              struct.setNumeroCartaoSusIsSet(true);
            } else { 
              org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
            }
            break;
          case 11: // NUMERO_CARTAO_SUS_RESPONSAVEL
            if (schemeField.type == org.apache.thrift.protocol.TType.STRING) {
              struct.numeroCartaoSusResponsavel = iprot.readString();
              struct.setNumeroCartaoSusResponsavelIsSet(true);
            } else { 
              org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
            }
            break;
          case 12: // NUMERO_CELULAR_CIDADAO
            if (schemeField.type == org.apache.thrift.protocol.TType.STRING) {
              struct.numeroCelularCidadao = iprot.readString();
              struct.setNumeroCelularCidadaoIsSet(true);
            } else { 
              org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
            }
            break;
          case 13: // NUMERO_NIS_PIS_PASEP
            if (schemeField.type == org.apache.thrift.protocol.TType.STRING) {
              struct.numeroNisPisPasep = iprot.readString();
              struct.setNumeroNisPisPasepIsSet(true);
            } else { 
              org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
            }
            break;
          case 14: // PAIS_NASCIMENTO
            if (schemeField.type == org.apache.thrift.protocol.TType.I64) {
              struct.paisNascimento = iprot.readI64();
              struct.setPaisNascimentoIsSet(true);
            } else { 
              org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
            }
            break;
          case 15: // RACA_COR_CIDADAO
            if (schemeField.type == org.apache.thrift.protocol.TType.I64) {
              struct.racaCorCidadao = iprot.readI64();
              struct.setRacaCorCidadaoIsSet(true);
            } else { 
              org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
            }
            break;
          case 16: // SEXO_CIDADAO
            if (schemeField.type == org.apache.thrift.protocol.TType.I64) {
              struct.sexoCidadao = iprot.readI64();
              struct.setSexoCidadaoIsSet(true);
            } else { 
              org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
            }
            break;
          case 17: // STATUS_EH_RESPONSAVEL
            if (schemeField.type == org.apache.thrift.protocol.TType.BOOL) {
              struct.statusEhResponsavel = iprot.readBool();
              struct.setStatusEhResponsavelIsSet(true);
            } else { 
              org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
            }
            break;
          default:
            org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
        }
        iprot.readFieldEnd();
      }
      iprot.readStructEnd();
      struct.validate();
    }

    public void write(org.apache.thrift.protocol.TProtocol oprot, IdentificacaoUsuarioCidadaoThrift struct) throws org.apache.thrift.TException {
      struct.validate();

      oprot.writeStructBegin(STRUCT_DESC);
      if (struct.nomeSocialCidadao != null) {
        if (struct.isSetNomeSocialCidadao()) {
          oprot.writeFieldBegin(NOME_SOCIAL_CIDADAO_FIELD_DESC);
          oprot.writeString(struct.nomeSocialCidadao);
          oprot.writeFieldEnd();
        }
      }
      if (struct.codigoIbgeMunicipioNascimento != null) {
        if (struct.isSetCodigoIbgeMunicipioNascimento()) {
          oprot.writeFieldBegin(CODIGO_IBGE_MUNICIPIO_NASCIMENTO_FIELD_DESC);
          oprot.writeString(struct.codigoIbgeMunicipioNascimento);
          oprot.writeFieldEnd();
        }
      }
      if (struct.isSetDataNascimentoCidadao()) {
        oprot.writeFieldBegin(DATA_NASCIMENTO_CIDADAO_FIELD_DESC);
        oprot.writeI64(struct.dataNascimentoCidadao);
        oprot.writeFieldEnd();
      }
      if (struct.isSetDataNascimentoResponsavel()) {
        oprot.writeFieldBegin(DATA_NASCIMENTO_RESPONSAVEL_FIELD_DESC);
        oprot.writeI64(struct.dataNascimentoResponsavel);
        oprot.writeFieldEnd();
      }
      if (struct.isSetDesconheceNomeMae()) {
        oprot.writeFieldBegin(DESCONHECE_NOME_MAE_FIELD_DESC);
        oprot.writeBool(struct.desconheceNomeMae);
        oprot.writeFieldEnd();
      }
      if (struct.emailCidadao != null) {
        if (struct.isSetEmailCidadao()) {
          oprot.writeFieldBegin(EMAIL_CIDADAO_FIELD_DESC);
          oprot.writeString(struct.emailCidadao);
          oprot.writeFieldEnd();
        }
      }
      if (struct.isSetNacionalidadeCidadao()) {
        oprot.writeFieldBegin(NACIONALIDADE_CIDADAO_FIELD_DESC);
        oprot.writeI64(struct.nacionalidadeCidadao);
        oprot.writeFieldEnd();
      }
      if (struct.nomeCidadao != null) {
        if (struct.isSetNomeCidadao()) {
          oprot.writeFieldBegin(NOME_CIDADAO_FIELD_DESC);
          oprot.writeString(struct.nomeCidadao);
          oprot.writeFieldEnd();
        }
      }
      if (struct.nomeMaeCidadao != null) {
        if (struct.isSetNomeMaeCidadao()) {
          oprot.writeFieldBegin(NOME_MAE_CIDADAO_FIELD_DESC);
          oprot.writeString(struct.nomeMaeCidadao);
          oprot.writeFieldEnd();
        }
      }
      if (struct.numeroCartaoSus != null) {
        if (struct.isSetNumeroCartaoSus()) {
          oprot.writeFieldBegin(NUMERO_CARTAO_SUS_FIELD_DESC);
          oprot.writeString(struct.numeroCartaoSus);
          oprot.writeFieldEnd();
        }
      }
      if (struct.numeroCartaoSusResponsavel != null) {
        if (struct.isSetNumeroCartaoSusResponsavel()) {
          oprot.writeFieldBegin(NUMERO_CARTAO_SUS_RESPONSAVEL_FIELD_DESC);
          oprot.writeString(struct.numeroCartaoSusResponsavel);
          oprot.writeFieldEnd();
        }
      }
      if (struct.numeroCelularCidadao != null) {
        if (struct.isSetNumeroCelularCidadao()) {
          oprot.writeFieldBegin(NUMERO_CELULAR_CIDADAO_FIELD_DESC);
          oprot.writeString(struct.numeroCelularCidadao);
          oprot.writeFieldEnd();
        }
      }
      if (struct.numeroNisPisPasep != null) {
        if (struct.isSetNumeroNisPisPasep()) {
          oprot.writeFieldBegin(NUMERO_NIS_PIS_PASEP_FIELD_DESC);
          oprot.writeString(struct.numeroNisPisPasep);
          oprot.writeFieldEnd();
        }
      }
      if (struct.isSetPaisNascimento()) {
        oprot.writeFieldBegin(PAIS_NASCIMENTO_FIELD_DESC);
        oprot.writeI64(struct.paisNascimento);
        oprot.writeFieldEnd();
      }
      if (struct.isSetRacaCorCidadao()) {
        oprot.writeFieldBegin(RACA_COR_CIDADAO_FIELD_DESC);
        oprot.writeI64(struct.racaCorCidadao);
        oprot.writeFieldEnd();
      }
      if (struct.isSetSexoCidadao()) {
        oprot.writeFieldBegin(SEXO_CIDADAO_FIELD_DESC);
        oprot.writeI64(struct.sexoCidadao);
        oprot.writeFieldEnd();
      }
      if (struct.isSetStatusEhResponsavel()) {
        oprot.writeFieldBegin(STATUS_EH_RESPONSAVEL_FIELD_DESC);
        oprot.writeBool(struct.statusEhResponsavel);
        oprot.writeFieldEnd();
      }
      oprot.writeFieldStop();
      oprot.writeStructEnd();
    }

  }

  private static class IdentificacaoUsuarioCidadaoThriftTupleSchemeFactory implements SchemeFactory {
    public IdentificacaoUsuarioCidadaoThriftTupleScheme getScheme() {
      return new IdentificacaoUsuarioCidadaoThriftTupleScheme();
    }
  }

  private static class IdentificacaoUsuarioCidadaoThriftTupleScheme extends TupleScheme<IdentificacaoUsuarioCidadaoThrift> {

    @Override
    public void write(org.apache.thrift.protocol.TProtocol prot, IdentificacaoUsuarioCidadaoThrift struct) throws org.apache.thrift.TException {
      TTupleProtocol oprot = (TTupleProtocol) prot;
      BitSet optionals = new BitSet();
      if (struct.isSetNomeSocialCidadao()) {
        optionals.set(0);
      }
      if (struct.isSetCodigoIbgeMunicipioNascimento()) {
        optionals.set(1);
      }
      if (struct.isSetDataNascimentoCidadao()) {
        optionals.set(2);
      }
      if (struct.isSetDataNascimentoResponsavel()) {
        optionals.set(3);
      }
      if (struct.isSetDesconheceNomeMae()) {
        optionals.set(4);
      }
      if (struct.isSetEmailCidadao()) {
        optionals.set(5);
      }
      if (struct.isSetNacionalidadeCidadao()) {
        optionals.set(6);
      }
      if (struct.isSetNomeCidadao()) {
        optionals.set(7);
      }
      if (struct.isSetNomeMaeCidadao()) {
        optionals.set(8);
      }
      if (struct.isSetNumeroCartaoSus()) {
        optionals.set(9);
      }
      if (struct.isSetNumeroCartaoSusResponsavel()) {
        optionals.set(10);
      }
      if (struct.isSetNumeroCelularCidadao()) {
        optionals.set(11);
      }
      if (struct.isSetNumeroNisPisPasep()) {
        optionals.set(12);
      }
      if (struct.isSetPaisNascimento()) {
        optionals.set(13);
      }
      if (struct.isSetRacaCorCidadao()) {
        optionals.set(14);
      }
      if (struct.isSetSexoCidadao()) {
        optionals.set(15);
      }
      if (struct.isSetStatusEhResponsavel()) {
        optionals.set(16);
      }
      oprot.writeBitSet(optionals, 17);
      if (struct.isSetNomeSocialCidadao()) {
        oprot.writeString(struct.nomeSocialCidadao);
      }
      if (struct.isSetCodigoIbgeMunicipioNascimento()) {
        oprot.writeString(struct.codigoIbgeMunicipioNascimento);
      }
      if (struct.isSetDataNascimentoCidadao()) {
        oprot.writeI64(struct.dataNascimentoCidadao);
      }
      if (struct.isSetDataNascimentoResponsavel()) {
        oprot.writeI64(struct.dataNascimentoResponsavel);
      }
      if (struct.isSetDesconheceNomeMae()) {
        oprot.writeBool(struct.desconheceNomeMae);
      }
      if (struct.isSetEmailCidadao()) {
        oprot.writeString(struct.emailCidadao);
      }
      if (struct.isSetNacionalidadeCidadao()) {
        oprot.writeI64(struct.nacionalidadeCidadao);
      }
      if (struct.isSetNomeCidadao()) {
        oprot.writeString(struct.nomeCidadao);
      }
      if (struct.isSetNomeMaeCidadao()) {
        oprot.writeString(struct.nomeMaeCidadao);
      }
      if (struct.isSetNumeroCartaoSus()) {
        oprot.writeString(struct.numeroCartaoSus);
      }
      if (struct.isSetNumeroCartaoSusResponsavel()) {
        oprot.writeString(struct.numeroCartaoSusResponsavel);
      }
      if (struct.isSetNumeroCelularCidadao()) {
        oprot.writeString(struct.numeroCelularCidadao);
      }
      if (struct.isSetNumeroNisPisPasep()) {
        oprot.writeString(struct.numeroNisPisPasep);
      }
      if (struct.isSetPaisNascimento()) {
        oprot.writeI64(struct.paisNascimento);
      }
      if (struct.isSetRacaCorCidadao()) {
        oprot.writeI64(struct.racaCorCidadao);
      }
      if (struct.isSetSexoCidadao()) {
        oprot.writeI64(struct.sexoCidadao);
      }
      if (struct.isSetStatusEhResponsavel()) {
        oprot.writeBool(struct.statusEhResponsavel);
      }
    }

    @Override
    public void read(org.apache.thrift.protocol.TProtocol prot, IdentificacaoUsuarioCidadaoThrift struct) throws org.apache.thrift.TException {
      TTupleProtocol iprot = (TTupleProtocol) prot;
      BitSet incoming = iprot.readBitSet(17);
      if (incoming.get(0)) {
        struct.nomeSocialCidadao = iprot.readString();
        struct.setNomeSocialCidadaoIsSet(true);
      }
      if (incoming.get(1)) {
        struct.codigoIbgeMunicipioNascimento = iprot.readString();
        struct.setCodigoIbgeMunicipioNascimentoIsSet(true);
      }
      if (incoming.get(2)) {
        struct.dataNascimentoCidadao = iprot.readI64();
        struct.setDataNascimentoCidadaoIsSet(true);
      }
      if (incoming.get(3)) {
        struct.dataNascimentoResponsavel = iprot.readI64();
        struct.setDataNascimentoResponsavelIsSet(true);
      }
      if (incoming.get(4)) {
        struct.desconheceNomeMae = iprot.readBool();
        struct.setDesconheceNomeMaeIsSet(true);
      }
      if (incoming.get(5)) {
        struct.emailCidadao = iprot.readString();
        struct.setEmailCidadaoIsSet(true);
      }
      if (incoming.get(6)) {
        struct.nacionalidadeCidadao = iprot.readI64();
        struct.setNacionalidadeCidadaoIsSet(true);
      }
      if (incoming.get(7)) {
        struct.nomeCidadao = iprot.readString();
        struct.setNomeCidadaoIsSet(true);
      }
      if (incoming.get(8)) {
        struct.nomeMaeCidadao = iprot.readString();
        struct.setNomeMaeCidadaoIsSet(true);
      }
      if (incoming.get(9)) {
        struct.numeroCartaoSus = iprot.readString();
        struct.setNumeroCartaoSusIsSet(true);
      }
      if (incoming.get(10)) {
        struct.numeroCartaoSusResponsavel = iprot.readString();
        struct.setNumeroCartaoSusResponsavelIsSet(true);
      }
      if (incoming.get(11)) {
        struct.numeroCelularCidadao = iprot.readString();
        struct.setNumeroCelularCidadaoIsSet(true);
      }
      if (incoming.get(12)) {
        struct.numeroNisPisPasep = iprot.readString();
        struct.setNumeroNisPisPasepIsSet(true);
      }
      if (incoming.get(13)) {
        struct.paisNascimento = iprot.readI64();
        struct.setPaisNascimentoIsSet(true);
      }
      if (incoming.get(14)) {
        struct.racaCorCidadao = iprot.readI64();
        struct.setRacaCorCidadaoIsSet(true);
      }
      if (incoming.get(15)) {
        struct.sexoCidadao = iprot.readI64();
        struct.setSexoCidadaoIsSet(true);
      }
      if (incoming.get(16)) {
        struct.statusEhResponsavel = iprot.readBool();
        struct.setStatusEhResponsavelIsSet(true);
      }
    }
  }

}

