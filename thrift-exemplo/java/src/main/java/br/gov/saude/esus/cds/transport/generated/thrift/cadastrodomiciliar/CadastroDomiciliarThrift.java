/**
 * Autogenerated by Thrift Compiler (0.9.2)
 *
 * DO NOT EDIT UNLESS YOU ARE SURE THAT YOU KNOW WHAT YOU ARE DOING
 *  @generated
 */
package br.gov.saude.esus.cds.transport.generated.thrift.cadastrodomiciliar;

import org.apache.thrift.scheme.IScheme;
import org.apache.thrift.scheme.SchemeFactory;
import org.apache.thrift.scheme.StandardScheme;

import org.apache.thrift.scheme.TupleScheme;
import org.apache.thrift.protocol.TTupleProtocol;
import org.apache.thrift.protocol.TProtocolException;
import org.apache.thrift.EncodingUtils;
import org.apache.thrift.TException;
import org.apache.thrift.async.AsyncMethodCallback;
import org.apache.thrift.server.AbstractNonblockingServer.*;
import java.util.List;
import java.util.ArrayList;
import java.util.Map;
import java.util.HashMap;
import java.util.EnumMap;
import java.util.Set;
import java.util.HashSet;
import java.util.EnumSet;
import java.util.Collections;
import java.util.BitSet;
import java.nio.ByteBuffer;
import java.util.Arrays;
import javax.annotation.Generated;
import org.slf4j.Logger;
import org.slf4j.LoggerFactory;

@SuppressWarnings({"cast", "rawtypes", "serial", "unchecked"})
@Generated(value = "Autogenerated by Thrift Compiler (0.9.2)", date = "2015-8-12")
public class CadastroDomiciliarThrift implements org.apache.thrift.TBase<CadastroDomiciliarThrift, CadastroDomiciliarThrift._Fields>, java.io.Serializable, Cloneable, Comparable<CadastroDomiciliarThrift> {
  private static final org.apache.thrift.protocol.TStruct STRUCT_DESC = new org.apache.thrift.protocol.TStruct("CadastroDomiciliarThrift");

  private static final org.apache.thrift.protocol.TField ANIMAIS_NO_DOMICILIO_FIELD_DESC = new org.apache.thrift.protocol.TField("animaisNoDomicilio", org.apache.thrift.protocol.TType.LIST, (short)1);
  private static final org.apache.thrift.protocol.TField CONDICAO_MORADIA_FIELD_DESC = new org.apache.thrift.protocol.TField("condicaoMoradia", org.apache.thrift.protocol.TType.STRUCT, (short)2);
  private static final org.apache.thrift.protocol.TField DADOS_GERAIS_FIELD_DESC = new org.apache.thrift.protocol.TField("dadosGerais", org.apache.thrift.protocol.TType.STRUCT, (short)3);
  private static final org.apache.thrift.protocol.TField ENDERECO_LOCAL_PERMANENCIA_FIELD_DESC = new org.apache.thrift.protocol.TField("enderecoLocalPermanencia", org.apache.thrift.protocol.TType.STRUCT, (short)4);
  private static final org.apache.thrift.protocol.TField FAMILIAS_FIELD_DESC = new org.apache.thrift.protocol.TField("familias", org.apache.thrift.protocol.TType.LIST, (short)5);
  private static final org.apache.thrift.protocol.TField FICHA_ATUALIZADA_FIELD_DESC = new org.apache.thrift.protocol.TField("fichaAtualizada", org.apache.thrift.protocol.TType.BOOL, (short)6);
  private static final org.apache.thrift.protocol.TField QUANTOS_ANIMAIS_NO_DOMICILIO_FIELD_DESC = new org.apache.thrift.protocol.TField("quantosAnimaisNoDomicilio", org.apache.thrift.protocol.TType.STRING, (short)7);
  private static final org.apache.thrift.protocol.TField ST_ANIMAIS_NO_DOMICILIO_FIELD_DESC = new org.apache.thrift.protocol.TField("stAnimaisNoDomicilio", org.apache.thrift.protocol.TType.BOOL, (short)8);
  private static final org.apache.thrift.protocol.TField STATUS_TERMO_RECUSA_CADASTRO_DOMICILIAR_ATENCAO_BASICA_FIELD_DESC = new org.apache.thrift.protocol.TField("statusTermoRecusaCadastroDomiciliarAtencaoBasica", org.apache.thrift.protocol.TType.BOOL, (short)9);
  private static final org.apache.thrift.protocol.TField TP_CDS_ORIGEM_FIELD_DESC = new org.apache.thrift.protocol.TField("tpCdsOrigem", org.apache.thrift.protocol.TType.I32, (short)10);
  private static final org.apache.thrift.protocol.TField UUID_FIELD_DESC = new org.apache.thrift.protocol.TField("uuid", org.apache.thrift.protocol.TType.STRING, (short)11);
  private static final org.apache.thrift.protocol.TField UUID_FICHA_ORIGINADORA_FIELD_DESC = new org.apache.thrift.protocol.TField("uuidFichaOriginadora", org.apache.thrift.protocol.TType.STRING, (short)12);

  private static final Map<Class<? extends IScheme>, SchemeFactory> schemes = new HashMap<Class<? extends IScheme>, SchemeFactory>();
  static {
    schemes.put(StandardScheme.class, new CadastroDomiciliarThriftStandardSchemeFactory());
    schemes.put(TupleScheme.class, new CadastroDomiciliarThriftTupleSchemeFactory());
  }

  private List<Long> animaisNoDomicilio; // optional
  private CondicaoMoradiaThrift condicaoMoradia; // optional
  private br.gov.saude.esus.cds.transport.generated.thrift.common.HeaderCdsCadastroThrift dadosGerais; // required
  private br.gov.saude.esus.cds.transport.generated.thrift.common.EnderecoLocalPermanenciaThrift enderecoLocalPermanencia; // optional
  private List<FamiliaRowThrift> familias; // optional
  private boolean fichaAtualizada; // optional
  private String quantosAnimaisNoDomicilio; // optional
  private boolean stAnimaisNoDomicilio; // optional
  private boolean statusTermoRecusaCadastroDomiciliarAtencaoBasica; // optional
  private int tpCdsOrigem; // optional
  private String uuid; // required
  private String uuidFichaOriginadora; // optional

  /** The set of fields this struct contains, along with convenience methods for finding and manipulating them. */
  public enum _Fields implements org.apache.thrift.TFieldIdEnum {
    ANIMAIS_NO_DOMICILIO((short)1, "animaisNoDomicilio"),
    CONDICAO_MORADIA((short)2, "condicaoMoradia"),
    DADOS_GERAIS((short)3, "dadosGerais"),
    ENDERECO_LOCAL_PERMANENCIA((short)4, "enderecoLocalPermanencia"),
    FAMILIAS((short)5, "familias"),
    FICHA_ATUALIZADA((short)6, "fichaAtualizada"),
    QUANTOS_ANIMAIS_NO_DOMICILIO((short)7, "quantosAnimaisNoDomicilio"),
    ST_ANIMAIS_NO_DOMICILIO((short)8, "stAnimaisNoDomicilio"),
    STATUS_TERMO_RECUSA_CADASTRO_DOMICILIAR_ATENCAO_BASICA((short)9, "statusTermoRecusaCadastroDomiciliarAtencaoBasica"),
    TP_CDS_ORIGEM((short)10, "tpCdsOrigem"),
    UUID((short)11, "uuid"),
    UUID_FICHA_ORIGINADORA((short)12, "uuidFichaOriginadora");

    private static final Map<String, _Fields> byName = new HashMap<String, _Fields>();

    static {
      for (_Fields field : EnumSet.allOf(_Fields.class)) {
        byName.put(field.getFieldName(), field);
      }
    }

    /**
     * Find the _Fields constant that matches fieldId, or null if its not found.
     */
    public static _Fields findByThriftId(int fieldId) {
      switch(fieldId) {
        case 1: // ANIMAIS_NO_DOMICILIO
          return ANIMAIS_NO_DOMICILIO;
        case 2: // CONDICAO_MORADIA
          return CONDICAO_MORADIA;
        case 3: // DADOS_GERAIS
          return DADOS_GERAIS;
        case 4: // ENDERECO_LOCAL_PERMANENCIA
          return ENDERECO_LOCAL_PERMANENCIA;
        case 5: // FAMILIAS
          return FAMILIAS;
        case 6: // FICHA_ATUALIZADA
          return FICHA_ATUALIZADA;
        case 7: // QUANTOS_ANIMAIS_NO_DOMICILIO
          return QUANTOS_ANIMAIS_NO_DOMICILIO;
        case 8: // ST_ANIMAIS_NO_DOMICILIO
          return ST_ANIMAIS_NO_DOMICILIO;
        case 9: // STATUS_TERMO_RECUSA_CADASTRO_DOMICILIAR_ATENCAO_BASICA
          return STATUS_TERMO_RECUSA_CADASTRO_DOMICILIAR_ATENCAO_BASICA;
        case 10: // TP_CDS_ORIGEM
          return TP_CDS_ORIGEM;
        case 11: // UUID
          return UUID;
        case 12: // UUID_FICHA_ORIGINADORA
          return UUID_FICHA_ORIGINADORA;
        default:
          return null;
      }
    }

    /**
     * Find the _Fields constant that matches fieldId, throwing an exception
     * if it is not found.
     */
    public static _Fields findByThriftIdOrThrow(int fieldId) {
      _Fields fields = findByThriftId(fieldId);
      if (fields == null) throw new IllegalArgumentException("Field " + fieldId + " doesn't exist!");
      return fields;
    }

    /**
     * Find the _Fields constant that matches name, or null if its not found.
     */
    public static _Fields findByName(String name) {
      return byName.get(name);
    }

    private final short _thriftId;
    private final String _fieldName;

    _Fields(short thriftId, String fieldName) {
      _thriftId = thriftId;
      _fieldName = fieldName;
    }

    public short getThriftFieldId() {
      return _thriftId;
    }

    public String getFieldName() {
      return _fieldName;
    }
  }

  // isset id assignments
  private static final int __FICHAATUALIZADA_ISSET_ID = 0;
  private static final int __STANIMAISNODOMICILIO_ISSET_ID = 1;
  private static final int __STATUSTERMORECUSACADASTRODOMICILIARATENCAOBASICA_ISSET_ID = 2;
  private static final int __TPCDSORIGEM_ISSET_ID = 3;
  private byte __isset_bitfield = 0;
  private static final _Fields optionals[] = {_Fields.ANIMAIS_NO_DOMICILIO,_Fields.CONDICAO_MORADIA,_Fields.ENDERECO_LOCAL_PERMANENCIA,_Fields.FAMILIAS,_Fields.FICHA_ATUALIZADA,_Fields.QUANTOS_ANIMAIS_NO_DOMICILIO,_Fields.ST_ANIMAIS_NO_DOMICILIO,_Fields.STATUS_TERMO_RECUSA_CADASTRO_DOMICILIAR_ATENCAO_BASICA,_Fields.TP_CDS_ORIGEM,_Fields.UUID_FICHA_ORIGINADORA};
  public static final Map<_Fields, org.apache.thrift.meta_data.FieldMetaData> metaDataMap;
  static {
    Map<_Fields, org.apache.thrift.meta_data.FieldMetaData> tmpMap = new EnumMap<_Fields, org.apache.thrift.meta_data.FieldMetaData>(_Fields.class);
    tmpMap.put(_Fields.ANIMAIS_NO_DOMICILIO, new org.apache.thrift.meta_data.FieldMetaData("animaisNoDomicilio", org.apache.thrift.TFieldRequirementType.OPTIONAL, 
        new org.apache.thrift.meta_data.ListMetaData(org.apache.thrift.protocol.TType.LIST, 
            new org.apache.thrift.meta_data.FieldValueMetaData(org.apache.thrift.protocol.TType.I64))));
    tmpMap.put(_Fields.CONDICAO_MORADIA, new org.apache.thrift.meta_data.FieldMetaData("condicaoMoradia", org.apache.thrift.TFieldRequirementType.OPTIONAL, 
        new org.apache.thrift.meta_data.StructMetaData(org.apache.thrift.protocol.TType.STRUCT, CondicaoMoradiaThrift.class)));
    tmpMap.put(_Fields.DADOS_GERAIS, new org.apache.thrift.meta_data.FieldMetaData("dadosGerais", org.apache.thrift.TFieldRequirementType.REQUIRED, 
        new org.apache.thrift.meta_data.StructMetaData(org.apache.thrift.protocol.TType.STRUCT, br.gov.saude.esus.cds.transport.generated.thrift.common.HeaderCdsCadastroThrift.class)));
    tmpMap.put(_Fields.ENDERECO_LOCAL_PERMANENCIA, new org.apache.thrift.meta_data.FieldMetaData("enderecoLocalPermanencia", org.apache.thrift.TFieldRequirementType.OPTIONAL, 
        new org.apache.thrift.meta_data.StructMetaData(org.apache.thrift.protocol.TType.STRUCT, br.gov.saude.esus.cds.transport.generated.thrift.common.EnderecoLocalPermanenciaThrift.class)));
    tmpMap.put(_Fields.FAMILIAS, new org.apache.thrift.meta_data.FieldMetaData("familias", org.apache.thrift.TFieldRequirementType.OPTIONAL, 
        new org.apache.thrift.meta_data.ListMetaData(org.apache.thrift.protocol.TType.LIST, 
            new org.apache.thrift.meta_data.StructMetaData(org.apache.thrift.protocol.TType.STRUCT, FamiliaRowThrift.class))));
    tmpMap.put(_Fields.FICHA_ATUALIZADA, new org.apache.thrift.meta_data.FieldMetaData("fichaAtualizada", org.apache.thrift.TFieldRequirementType.OPTIONAL, 
        new org.apache.thrift.meta_data.FieldValueMetaData(org.apache.thrift.protocol.TType.BOOL)));
    tmpMap.put(_Fields.QUANTOS_ANIMAIS_NO_DOMICILIO, new org.apache.thrift.meta_data.FieldMetaData("quantosAnimaisNoDomicilio", org.apache.thrift.TFieldRequirementType.OPTIONAL, 
        new org.apache.thrift.meta_data.FieldValueMetaData(org.apache.thrift.protocol.TType.STRING)));
    tmpMap.put(_Fields.ST_ANIMAIS_NO_DOMICILIO, new org.apache.thrift.meta_data.FieldMetaData("stAnimaisNoDomicilio", org.apache.thrift.TFieldRequirementType.OPTIONAL, 
        new org.apache.thrift.meta_data.FieldValueMetaData(org.apache.thrift.protocol.TType.BOOL)));
    tmpMap.put(_Fields.STATUS_TERMO_RECUSA_CADASTRO_DOMICILIAR_ATENCAO_BASICA, new org.apache.thrift.meta_data.FieldMetaData("statusTermoRecusaCadastroDomiciliarAtencaoBasica", org.apache.thrift.TFieldRequirementType.OPTIONAL, 
        new org.apache.thrift.meta_data.FieldValueMetaData(org.apache.thrift.protocol.TType.BOOL)));
    tmpMap.put(_Fields.TP_CDS_ORIGEM, new org.apache.thrift.meta_data.FieldMetaData("tpCdsOrigem", org.apache.thrift.TFieldRequirementType.OPTIONAL, 
        new org.apache.thrift.meta_data.FieldValueMetaData(org.apache.thrift.protocol.TType.I32)));
    tmpMap.put(_Fields.UUID, new org.apache.thrift.meta_data.FieldMetaData("uuid", org.apache.thrift.TFieldRequirementType.REQUIRED, 
        new org.apache.thrift.meta_data.FieldValueMetaData(org.apache.thrift.protocol.TType.STRING)));
    tmpMap.put(_Fields.UUID_FICHA_ORIGINADORA, new org.apache.thrift.meta_data.FieldMetaData("uuidFichaOriginadora", org.apache.thrift.TFieldRequirementType.OPTIONAL, 
        new org.apache.thrift.meta_data.FieldValueMetaData(org.apache.thrift.protocol.TType.STRING)));
    metaDataMap = Collections.unmodifiableMap(tmpMap);
    org.apache.thrift.meta_data.FieldMetaData.addStructMetaDataMap(CadastroDomiciliarThrift.class, metaDataMap);
  }

  public CadastroDomiciliarThrift() {
  }

  public CadastroDomiciliarThrift(
    br.gov.saude.esus.cds.transport.generated.thrift.common.HeaderCdsCadastroThrift dadosGerais,
    String uuid)
  {
    this();
    this.dadosGerais = dadosGerais;
    this.uuid = uuid;
  }

  /**
   * Performs a deep copy on <i>other</i>.
   */
  public CadastroDomiciliarThrift(CadastroDomiciliarThrift other) {
    __isset_bitfield = other.__isset_bitfield;
    if (other.isSetAnimaisNoDomicilio()) {
      List<Long> __this__animaisNoDomicilio = new ArrayList<Long>(other.animaisNoDomicilio);
      this.animaisNoDomicilio = __this__animaisNoDomicilio;
    }
    if (other.isSetCondicaoMoradia()) {
      this.condicaoMoradia = new CondicaoMoradiaThrift(other.condicaoMoradia);
    }
    if (other.isSetDadosGerais()) {
      this.dadosGerais = new br.gov.saude.esus.cds.transport.generated.thrift.common.HeaderCdsCadastroThrift(other.dadosGerais);
    }
    if (other.isSetEnderecoLocalPermanencia()) {
      this.enderecoLocalPermanencia = new br.gov.saude.esus.cds.transport.generated.thrift.common.EnderecoLocalPermanenciaThrift(other.enderecoLocalPermanencia);
    }
    if (other.isSetFamilias()) {
      List<FamiliaRowThrift> __this__familias = new ArrayList<FamiliaRowThrift>(other.familias.size());
      for (FamiliaRowThrift other_element : other.familias) {
        __this__familias.add(new FamiliaRowThrift(other_element));
      }
      this.familias = __this__familias;
    }
    this.fichaAtualizada = other.fichaAtualizada;
    if (other.isSetQuantosAnimaisNoDomicilio()) {
      this.quantosAnimaisNoDomicilio = other.quantosAnimaisNoDomicilio;
    }
    this.stAnimaisNoDomicilio = other.stAnimaisNoDomicilio;
    this.statusTermoRecusaCadastroDomiciliarAtencaoBasica = other.statusTermoRecusaCadastroDomiciliarAtencaoBasica;
    this.tpCdsOrigem = other.tpCdsOrigem;
    if (other.isSetUuid()) {
      this.uuid = other.uuid;
    }
    if (other.isSetUuidFichaOriginadora()) {
      this.uuidFichaOriginadora = other.uuidFichaOriginadora;
    }
  }

  public CadastroDomiciliarThrift deepCopy() {
    return new CadastroDomiciliarThrift(this);
  }

  @Override
  public void clear() {
    this.animaisNoDomicilio = null;
    this.condicaoMoradia = null;
    this.dadosGerais = null;
    this.enderecoLocalPermanencia = null;
    this.familias = null;
    setFichaAtualizadaIsSet(false);
    this.fichaAtualizada = false;
    this.quantosAnimaisNoDomicilio = null;
    setStAnimaisNoDomicilioIsSet(false);
    this.stAnimaisNoDomicilio = false;
    setStatusTermoRecusaCadastroDomiciliarAtencaoBasicaIsSet(false);
    this.statusTermoRecusaCadastroDomiciliarAtencaoBasica = false;
    setTpCdsOrigemIsSet(false);
    this.tpCdsOrigem = 0;
    this.uuid = null;
    this.uuidFichaOriginadora = null;
  }

  public int getAnimaisNoDomicilioSize() {
    return (this.animaisNoDomicilio == null) ? 0 : this.animaisNoDomicilio.size();
  }

  public java.util.Iterator<Long> getAnimaisNoDomicilioIterator() {
    return (this.animaisNoDomicilio == null) ? null : this.animaisNoDomicilio.iterator();
  }

  public void addToAnimaisNoDomicilio(long elem) {
    if (this.animaisNoDomicilio == null) {
      this.animaisNoDomicilio = new ArrayList<Long>();
    }
    this.animaisNoDomicilio.add(elem);
  }

  public List<Long> getAnimaisNoDomicilio() {
    return this.animaisNoDomicilio;
  }

  public void setAnimaisNoDomicilio(List<Long> animaisNoDomicilio) {
    this.animaisNoDomicilio = animaisNoDomicilio;
  }

  public void unsetAnimaisNoDomicilio() {
    this.animaisNoDomicilio = null;
  }

  /** Returns true if field animaisNoDomicilio is set (has been assigned a value) and false otherwise */
  public boolean isSetAnimaisNoDomicilio() {
    return this.animaisNoDomicilio != null;
  }

  public void setAnimaisNoDomicilioIsSet(boolean value) {
    if (!value) {
      this.animaisNoDomicilio = null;
    }
  }

  public CondicaoMoradiaThrift getCondicaoMoradia() {
    return this.condicaoMoradia;
  }

  public void setCondicaoMoradia(CondicaoMoradiaThrift condicaoMoradia) {
    this.condicaoMoradia = condicaoMoradia;
  }

  public void unsetCondicaoMoradia() {
    this.condicaoMoradia = null;
  }

  /** Returns true if field condicaoMoradia is set (has been assigned a value) and false otherwise */
  public boolean isSetCondicaoMoradia() {
    return this.condicaoMoradia != null;
  }

  public void setCondicaoMoradiaIsSet(boolean value) {
    if (!value) {
      this.condicaoMoradia = null;
    }
  }

  public br.gov.saude.esus.cds.transport.generated.thrift.common.HeaderCdsCadastroThrift getDadosGerais() {
    return this.dadosGerais;
  }

  public void setDadosGerais(br.gov.saude.esus.cds.transport.generated.thrift.common.HeaderCdsCadastroThrift dadosGerais) {
    this.dadosGerais = dadosGerais;
  }

  public void unsetDadosGerais() {
    this.dadosGerais = null;
  }

  /** Returns true if field dadosGerais is set (has been assigned a value) and false otherwise */
  public boolean isSetDadosGerais() {
    return this.dadosGerais != null;
  }

  public void setDadosGeraisIsSet(boolean value) {
    if (!value) {
      this.dadosGerais = null;
    }
  }

  public br.gov.saude.esus.cds.transport.generated.thrift.common.EnderecoLocalPermanenciaThrift getEnderecoLocalPermanencia() {
    return this.enderecoLocalPermanencia;
  }

  public void setEnderecoLocalPermanencia(br.gov.saude.esus.cds.transport.generated.thrift.common.EnderecoLocalPermanenciaThrift enderecoLocalPermanencia) {
    this.enderecoLocalPermanencia = enderecoLocalPermanencia;
  }

  public void unsetEnderecoLocalPermanencia() {
    this.enderecoLocalPermanencia = null;
  }

  /** Returns true if field enderecoLocalPermanencia is set (has been assigned a value) and false otherwise */
  public boolean isSetEnderecoLocalPermanencia() {
    return this.enderecoLocalPermanencia != null;
  }

  public void setEnderecoLocalPermanenciaIsSet(boolean value) {
    if (!value) {
      this.enderecoLocalPermanencia = null;
    }
  }

  public int getFamiliasSize() {
    return (this.familias == null) ? 0 : this.familias.size();
  }

  public java.util.Iterator<FamiliaRowThrift> getFamiliasIterator() {
    return (this.familias == null) ? null : this.familias.iterator();
  }

  public void addToFamilias(FamiliaRowThrift elem) {
    if (this.familias == null) {
      this.familias = new ArrayList<FamiliaRowThrift>();
    }
    this.familias.add(elem);
  }

  public List<FamiliaRowThrift> getFamilias() {
    return this.familias;
  }

  public void setFamilias(List<FamiliaRowThrift> familias) {
    this.familias = familias;
  }

  public void unsetFamilias() {
    this.familias = null;
  }

  /** Returns true if field familias is set (has been assigned a value) and false otherwise */
  public boolean isSetFamilias() {
    return this.familias != null;
  }

  public void setFamiliasIsSet(boolean value) {
    if (!value) {
      this.familias = null;
    }
  }

  public boolean isFichaAtualizada() {
    return this.fichaAtualizada;
  }

  public void setFichaAtualizada(boolean fichaAtualizada) {
    this.fichaAtualizada = fichaAtualizada;
    setFichaAtualizadaIsSet(true);
  }

  public void unsetFichaAtualizada() {
    __isset_bitfield = EncodingUtils.clearBit(__isset_bitfield, __FICHAATUALIZADA_ISSET_ID);
  }

  /** Returns true if field fichaAtualizada is set (has been assigned a value) and false otherwise */
  public boolean isSetFichaAtualizada() {
    return EncodingUtils.testBit(__isset_bitfield, __FICHAATUALIZADA_ISSET_ID);
  }

  public void setFichaAtualizadaIsSet(boolean value) {
    __isset_bitfield = EncodingUtils.setBit(__isset_bitfield, __FICHAATUALIZADA_ISSET_ID, value);
  }

  public String getQuantosAnimaisNoDomicilio() {
    return this.quantosAnimaisNoDomicilio;
  }

  public void setQuantosAnimaisNoDomicilio(String quantosAnimaisNoDomicilio) {
    this.quantosAnimaisNoDomicilio = quantosAnimaisNoDomicilio;
  }

  public void unsetQuantosAnimaisNoDomicilio() {
    this.quantosAnimaisNoDomicilio = null;
  }

  /** Returns true if field quantosAnimaisNoDomicilio is set (has been assigned a value) and false otherwise */
  public boolean isSetQuantosAnimaisNoDomicilio() {
    return this.quantosAnimaisNoDomicilio != null;
  }

  public void setQuantosAnimaisNoDomicilioIsSet(boolean value) {
    if (!value) {
      this.quantosAnimaisNoDomicilio = null;
    }
  }

  public boolean isStAnimaisNoDomicilio() {
    return this.stAnimaisNoDomicilio;
  }

  public void setStAnimaisNoDomicilio(boolean stAnimaisNoDomicilio) {
    this.stAnimaisNoDomicilio = stAnimaisNoDomicilio;
    setStAnimaisNoDomicilioIsSet(true);
  }

  public void unsetStAnimaisNoDomicilio() {
    __isset_bitfield = EncodingUtils.clearBit(__isset_bitfield, __STANIMAISNODOMICILIO_ISSET_ID);
  }

  /** Returns true if field stAnimaisNoDomicilio is set (has been assigned a value) and false otherwise */
  public boolean isSetStAnimaisNoDomicilio() {
    return EncodingUtils.testBit(__isset_bitfield, __STANIMAISNODOMICILIO_ISSET_ID);
  }

  public void setStAnimaisNoDomicilioIsSet(boolean value) {
    __isset_bitfield = EncodingUtils.setBit(__isset_bitfield, __STANIMAISNODOMICILIO_ISSET_ID, value);
  }

  public boolean isStatusTermoRecusaCadastroDomiciliarAtencaoBasica() {
    return this.statusTermoRecusaCadastroDomiciliarAtencaoBasica;
  }

  public void setStatusTermoRecusaCadastroDomiciliarAtencaoBasica(boolean statusTermoRecusaCadastroDomiciliarAtencaoBasica) {
    this.statusTermoRecusaCadastroDomiciliarAtencaoBasica = statusTermoRecusaCadastroDomiciliarAtencaoBasica;
    setStatusTermoRecusaCadastroDomiciliarAtencaoBasicaIsSet(true);
  }

  public void unsetStatusTermoRecusaCadastroDomiciliarAtencaoBasica() {
    __isset_bitfield = EncodingUtils.clearBit(__isset_bitfield, __STATUSTERMORECUSACADASTRODOMICILIARATENCAOBASICA_ISSET_ID);
  }

  /** Returns true if field statusTermoRecusaCadastroDomiciliarAtencaoBasica is set (has been assigned a value) and false otherwise */
  public boolean isSetStatusTermoRecusaCadastroDomiciliarAtencaoBasica() {
    return EncodingUtils.testBit(__isset_bitfield, __STATUSTERMORECUSACADASTRODOMICILIARATENCAOBASICA_ISSET_ID);
  }

  public void setStatusTermoRecusaCadastroDomiciliarAtencaoBasicaIsSet(boolean value) {
    __isset_bitfield = EncodingUtils.setBit(__isset_bitfield, __STATUSTERMORECUSACADASTRODOMICILIARATENCAOBASICA_ISSET_ID, value);
  }

  public int getTpCdsOrigem() {
    return this.tpCdsOrigem;
  }

  public void setTpCdsOrigem(int tpCdsOrigem) {
    this.tpCdsOrigem = tpCdsOrigem;
    setTpCdsOrigemIsSet(true);
  }

  public void unsetTpCdsOrigem() {
    __isset_bitfield = EncodingUtils.clearBit(__isset_bitfield, __TPCDSORIGEM_ISSET_ID);
  }

  /** Returns true if field tpCdsOrigem is set (has been assigned a value) and false otherwise */
  public boolean isSetTpCdsOrigem() {
    return EncodingUtils.testBit(__isset_bitfield, __TPCDSORIGEM_ISSET_ID);
  }

  public void setTpCdsOrigemIsSet(boolean value) {
    __isset_bitfield = EncodingUtils.setBit(__isset_bitfield, __TPCDSORIGEM_ISSET_ID, value);
  }

  public String getUuid() {
    return this.uuid;
  }

  public void setUuid(String uuid) {
    this.uuid = uuid;
  }

  public void unsetUuid() {
    this.uuid = null;
  }

  /** Returns true if field uuid is set (has been assigned a value) and false otherwise */
  public boolean isSetUuid() {
    return this.uuid != null;
  }

  public void setUuidIsSet(boolean value) {
    if (!value) {
      this.uuid = null;
    }
  }

  public String getUuidFichaOriginadora() {
    return this.uuidFichaOriginadora;
  }

  public void setUuidFichaOriginadora(String uuidFichaOriginadora) {
    this.uuidFichaOriginadora = uuidFichaOriginadora;
  }

  public void unsetUuidFichaOriginadora() {
    this.uuidFichaOriginadora = null;
  }

  /** Returns true if field uuidFichaOriginadora is set (has been assigned a value) and false otherwise */
  public boolean isSetUuidFichaOriginadora() {
    return this.uuidFichaOriginadora != null;
  }

  public void setUuidFichaOriginadoraIsSet(boolean value) {
    if (!value) {
      this.uuidFichaOriginadora = null;
    }
  }

  public void setFieldValue(_Fields field, Object value) {
    switch (field) {
    case ANIMAIS_NO_DOMICILIO:
      if (value == null) {
        unsetAnimaisNoDomicilio();
      } else {
        setAnimaisNoDomicilio((List<Long>)value);
      }
      break;

    case CONDICAO_MORADIA:
      if (value == null) {
        unsetCondicaoMoradia();
      } else {
        setCondicaoMoradia((CondicaoMoradiaThrift)value);
      }
      break;

    case DADOS_GERAIS:
      if (value == null) {
        unsetDadosGerais();
      } else {
        setDadosGerais((br.gov.saude.esus.cds.transport.generated.thrift.common.HeaderCdsCadastroThrift)value);
      }
      break;

    case ENDERECO_LOCAL_PERMANENCIA:
      if (value == null) {
        unsetEnderecoLocalPermanencia();
      } else {
        setEnderecoLocalPermanencia((br.gov.saude.esus.cds.transport.generated.thrift.common.EnderecoLocalPermanenciaThrift)value);
      }
      break;

    case FAMILIAS:
      if (value == null) {
        unsetFamilias();
      } else {
        setFamilias((List<FamiliaRowThrift>)value);
      }
      break;

    case FICHA_ATUALIZADA:
      if (value == null) {
        unsetFichaAtualizada();
      } else {
        setFichaAtualizada((Boolean)value);
      }
      break;

    case QUANTOS_ANIMAIS_NO_DOMICILIO:
      if (value == null) {
        unsetQuantosAnimaisNoDomicilio();
      } else {
        setQuantosAnimaisNoDomicilio((String)value);
      }
      break;

    case ST_ANIMAIS_NO_DOMICILIO:
      if (value == null) {
        unsetStAnimaisNoDomicilio();
      } else {
        setStAnimaisNoDomicilio((Boolean)value);
      }
      break;

    case STATUS_TERMO_RECUSA_CADASTRO_DOMICILIAR_ATENCAO_BASICA:
      if (value == null) {
        unsetStatusTermoRecusaCadastroDomiciliarAtencaoBasica();
      } else {
        setStatusTermoRecusaCadastroDomiciliarAtencaoBasica((Boolean)value);
      }
      break;

    case TP_CDS_ORIGEM:
      if (value == null) {
        unsetTpCdsOrigem();
      } else {
        setTpCdsOrigem((Integer)value);
      }
      break;

    case UUID:
      if (value == null) {
        unsetUuid();
      } else {
        setUuid((String)value);
      }
      break;

    case UUID_FICHA_ORIGINADORA:
      if (value == null) {
        unsetUuidFichaOriginadora();
      } else {
        setUuidFichaOriginadora((String)value);
      }
      break;

    }
  }

  public Object getFieldValue(_Fields field) {
    switch (field) {
    case ANIMAIS_NO_DOMICILIO:
      return getAnimaisNoDomicilio();

    case CONDICAO_MORADIA:
      return getCondicaoMoradia();

    case DADOS_GERAIS:
      return getDadosGerais();

    case ENDERECO_LOCAL_PERMANENCIA:
      return getEnderecoLocalPermanencia();

    case FAMILIAS:
      return getFamilias();

    case FICHA_ATUALIZADA:
      return Boolean.valueOf(isFichaAtualizada());

    case QUANTOS_ANIMAIS_NO_DOMICILIO:
      return getQuantosAnimaisNoDomicilio();

    case ST_ANIMAIS_NO_DOMICILIO:
      return Boolean.valueOf(isStAnimaisNoDomicilio());

    case STATUS_TERMO_RECUSA_CADASTRO_DOMICILIAR_ATENCAO_BASICA:
      return Boolean.valueOf(isStatusTermoRecusaCadastroDomiciliarAtencaoBasica());

    case TP_CDS_ORIGEM:
      return Integer.valueOf(getTpCdsOrigem());

    case UUID:
      return getUuid();

    case UUID_FICHA_ORIGINADORA:
      return getUuidFichaOriginadora();

    }
    throw new IllegalStateException();
  }

  /** Returns true if field corresponding to fieldID is set (has been assigned a value) and false otherwise */
  public boolean isSet(_Fields field) {
    if (field == null) {
      throw new IllegalArgumentException();
    }

    switch (field) {
    case ANIMAIS_NO_DOMICILIO:
      return isSetAnimaisNoDomicilio();
    case CONDICAO_MORADIA:
      return isSetCondicaoMoradia();
    case DADOS_GERAIS:
      return isSetDadosGerais();
    case ENDERECO_LOCAL_PERMANENCIA:
      return isSetEnderecoLocalPermanencia();
    case FAMILIAS:
      return isSetFamilias();
    case FICHA_ATUALIZADA:
      return isSetFichaAtualizada();
    case QUANTOS_ANIMAIS_NO_DOMICILIO:
      return isSetQuantosAnimaisNoDomicilio();
    case ST_ANIMAIS_NO_DOMICILIO:
      return isSetStAnimaisNoDomicilio();
    case STATUS_TERMO_RECUSA_CADASTRO_DOMICILIAR_ATENCAO_BASICA:
      return isSetStatusTermoRecusaCadastroDomiciliarAtencaoBasica();
    case TP_CDS_ORIGEM:
      return isSetTpCdsOrigem();
    case UUID:
      return isSetUuid();
    case UUID_FICHA_ORIGINADORA:
      return isSetUuidFichaOriginadora();
    }
    throw new IllegalStateException();
  }

  @Override
  public boolean equals(Object that) {
    if (that == null)
      return false;
    if (that instanceof CadastroDomiciliarThrift)
      return this.equals((CadastroDomiciliarThrift)that);
    return false;
  }

  public boolean equals(CadastroDomiciliarThrift that) {
    if (that == null)
      return false;

    boolean this_present_animaisNoDomicilio = true && this.isSetAnimaisNoDomicilio();
    boolean that_present_animaisNoDomicilio = true && that.isSetAnimaisNoDomicilio();
    if (this_present_animaisNoDomicilio || that_present_animaisNoDomicilio) {
      if (!(this_present_animaisNoDomicilio && that_present_animaisNoDomicilio))
        return false;
      if (!this.animaisNoDomicilio.equals(that.animaisNoDomicilio))
        return false;
    }

    boolean this_present_condicaoMoradia = true && this.isSetCondicaoMoradia();
    boolean that_present_condicaoMoradia = true && that.isSetCondicaoMoradia();
    if (this_present_condicaoMoradia || that_present_condicaoMoradia) {
      if (!(this_present_condicaoMoradia && that_present_condicaoMoradia))
        return false;
      if (!this.condicaoMoradia.equals(that.condicaoMoradia))
        return false;
    }

    boolean this_present_dadosGerais = true && this.isSetDadosGerais();
    boolean that_present_dadosGerais = true && that.isSetDadosGerais();
    if (this_present_dadosGerais || that_present_dadosGerais) {
      if (!(this_present_dadosGerais && that_present_dadosGerais))
        return false;
      if (!this.dadosGerais.equals(that.dadosGerais))
        return false;
    }

    boolean this_present_enderecoLocalPermanencia = true && this.isSetEnderecoLocalPermanencia();
    boolean that_present_enderecoLocalPermanencia = true && that.isSetEnderecoLocalPermanencia();
    if (this_present_enderecoLocalPermanencia || that_present_enderecoLocalPermanencia) {
      if (!(this_present_enderecoLocalPermanencia && that_present_enderecoLocalPermanencia))
        return false;
      if (!this.enderecoLocalPermanencia.equals(that.enderecoLocalPermanencia))
        return false;
    }

    boolean this_present_familias = true && this.isSetFamilias();
    boolean that_present_familias = true && that.isSetFamilias();
    if (this_present_familias || that_present_familias) {
      if (!(this_present_familias && that_present_familias))
        return false;
      if (!this.familias.equals(that.familias))
        return false;
    }

    boolean this_present_fichaAtualizada = true && this.isSetFichaAtualizada();
    boolean that_present_fichaAtualizada = true && that.isSetFichaAtualizada();
    if (this_present_fichaAtualizada || that_present_fichaAtualizada) {
      if (!(this_present_fichaAtualizada && that_present_fichaAtualizada))
        return false;
      if (this.fichaAtualizada != that.fichaAtualizada)
        return false;
    }

    boolean this_present_quantosAnimaisNoDomicilio = true && this.isSetQuantosAnimaisNoDomicilio();
    boolean that_present_quantosAnimaisNoDomicilio = true && that.isSetQuantosAnimaisNoDomicilio();
    if (this_present_quantosAnimaisNoDomicilio || that_present_quantosAnimaisNoDomicilio) {
      if (!(this_present_quantosAnimaisNoDomicilio && that_present_quantosAnimaisNoDomicilio))
        return false;
      if (!this.quantosAnimaisNoDomicilio.equals(that.quantosAnimaisNoDomicilio))
        return false;
    }

    boolean this_present_stAnimaisNoDomicilio = true && this.isSetStAnimaisNoDomicilio();
    boolean that_present_stAnimaisNoDomicilio = true && that.isSetStAnimaisNoDomicilio();
    if (this_present_stAnimaisNoDomicilio || that_present_stAnimaisNoDomicilio) {
      if (!(this_present_stAnimaisNoDomicilio && that_present_stAnimaisNoDomicilio))
        return false;
      if (this.stAnimaisNoDomicilio != that.stAnimaisNoDomicilio)
        return false;
    }

    boolean this_present_statusTermoRecusaCadastroDomiciliarAtencaoBasica = true && this.isSetStatusTermoRecusaCadastroDomiciliarAtencaoBasica();
    boolean that_present_statusTermoRecusaCadastroDomiciliarAtencaoBasica = true && that.isSetStatusTermoRecusaCadastroDomiciliarAtencaoBasica();
    if (this_present_statusTermoRecusaCadastroDomiciliarAtencaoBasica || that_present_statusTermoRecusaCadastroDomiciliarAtencaoBasica) {
      if (!(this_present_statusTermoRecusaCadastroDomiciliarAtencaoBasica && that_present_statusTermoRecusaCadastroDomiciliarAtencaoBasica))
        return false;
      if (this.statusTermoRecusaCadastroDomiciliarAtencaoBasica != that.statusTermoRecusaCadastroDomiciliarAtencaoBasica)
        return false;
    }

    boolean this_present_tpCdsOrigem = true && this.isSetTpCdsOrigem();
    boolean that_present_tpCdsOrigem = true && that.isSetTpCdsOrigem();
    if (this_present_tpCdsOrigem || that_present_tpCdsOrigem) {
      if (!(this_present_tpCdsOrigem && that_present_tpCdsOrigem))
        return false;
      if (this.tpCdsOrigem != that.tpCdsOrigem)
        return false;
    }

    boolean this_present_uuid = true && this.isSetUuid();
    boolean that_present_uuid = true && that.isSetUuid();
    if (this_present_uuid || that_present_uuid) {
      if (!(this_present_uuid && that_present_uuid))
        return false;
      if (!this.uuid.equals(that.uuid))
        return false;
    }

    boolean this_present_uuidFichaOriginadora = true && this.isSetUuidFichaOriginadora();
    boolean that_present_uuidFichaOriginadora = true && that.isSetUuidFichaOriginadora();
    if (this_present_uuidFichaOriginadora || that_present_uuidFichaOriginadora) {
      if (!(this_present_uuidFichaOriginadora && that_present_uuidFichaOriginadora))
        return false;
      if (!this.uuidFichaOriginadora.equals(that.uuidFichaOriginadora))
        return false;
    }

    return true;
  }

  @Override
  public int hashCode() {
    List<Object> list = new ArrayList<Object>();

    boolean present_animaisNoDomicilio = true && (isSetAnimaisNoDomicilio());
    list.add(present_animaisNoDomicilio);
    if (present_animaisNoDomicilio)
      list.add(animaisNoDomicilio);

    boolean present_condicaoMoradia = true && (isSetCondicaoMoradia());
    list.add(present_condicaoMoradia);
    if (present_condicaoMoradia)
      list.add(condicaoMoradia);

    boolean present_dadosGerais = true && (isSetDadosGerais());
    list.add(present_dadosGerais);
    if (present_dadosGerais)
      list.add(dadosGerais);

    boolean present_enderecoLocalPermanencia = true && (isSetEnderecoLocalPermanencia());
    list.add(present_enderecoLocalPermanencia);
    if (present_enderecoLocalPermanencia)
      list.add(enderecoLocalPermanencia);

    boolean present_familias = true && (isSetFamilias());
    list.add(present_familias);
    if (present_familias)
      list.add(familias);

    boolean present_fichaAtualizada = true && (isSetFichaAtualizada());
    list.add(present_fichaAtualizada);
    if (present_fichaAtualizada)
      list.add(fichaAtualizada);

    boolean present_quantosAnimaisNoDomicilio = true && (isSetQuantosAnimaisNoDomicilio());
    list.add(present_quantosAnimaisNoDomicilio);
    if (present_quantosAnimaisNoDomicilio)
      list.add(quantosAnimaisNoDomicilio);

    boolean present_stAnimaisNoDomicilio = true && (isSetStAnimaisNoDomicilio());
    list.add(present_stAnimaisNoDomicilio);
    if (present_stAnimaisNoDomicilio)
      list.add(stAnimaisNoDomicilio);

    boolean present_statusTermoRecusaCadastroDomiciliarAtencaoBasica = true && (isSetStatusTermoRecusaCadastroDomiciliarAtencaoBasica());
    list.add(present_statusTermoRecusaCadastroDomiciliarAtencaoBasica);
    if (present_statusTermoRecusaCadastroDomiciliarAtencaoBasica)
      list.add(statusTermoRecusaCadastroDomiciliarAtencaoBasica);

    boolean present_tpCdsOrigem = true && (isSetTpCdsOrigem());
    list.add(present_tpCdsOrigem);
    if (present_tpCdsOrigem)
      list.add(tpCdsOrigem);

    boolean present_uuid = true && (isSetUuid());
    list.add(present_uuid);
    if (present_uuid)
      list.add(uuid);

    boolean present_uuidFichaOriginadora = true && (isSetUuidFichaOriginadora());
    list.add(present_uuidFichaOriginadora);
    if (present_uuidFichaOriginadora)
      list.add(uuidFichaOriginadora);

    return list.hashCode();
  }

  @Override
  public int compareTo(CadastroDomiciliarThrift other) {
    if (!getClass().equals(other.getClass())) {
      return getClass().getName().compareTo(other.getClass().getName());
    }

    int lastComparison = 0;

    lastComparison = Boolean.valueOf(isSetAnimaisNoDomicilio()).compareTo(other.isSetAnimaisNoDomicilio());
    if (lastComparison != 0) {
      return lastComparison;
    }
    if (isSetAnimaisNoDomicilio()) {
      lastComparison = org.apache.thrift.TBaseHelper.compareTo(this.animaisNoDomicilio, other.animaisNoDomicilio);
      if (lastComparison != 0) {
        return lastComparison;
      }
    }
    lastComparison = Boolean.valueOf(isSetCondicaoMoradia()).compareTo(other.isSetCondicaoMoradia());
    if (lastComparison != 0) {
      return lastComparison;
    }
    if (isSetCondicaoMoradia()) {
      lastComparison = org.apache.thrift.TBaseHelper.compareTo(this.condicaoMoradia, other.condicaoMoradia);
      if (lastComparison != 0) {
        return lastComparison;
      }
    }
    lastComparison = Boolean.valueOf(isSetDadosGerais()).compareTo(other.isSetDadosGerais());
    if (lastComparison != 0) {
      return lastComparison;
    }
    if (isSetDadosGerais()) {
      lastComparison = org.apache.thrift.TBaseHelper.compareTo(this.dadosGerais, other.dadosGerais);
      if (lastComparison != 0) {
        return lastComparison;
      }
    }
    lastComparison = Boolean.valueOf(isSetEnderecoLocalPermanencia()).compareTo(other.isSetEnderecoLocalPermanencia());
    if (lastComparison != 0) {
      return lastComparison;
    }
    if (isSetEnderecoLocalPermanencia()) {
      lastComparison = org.apache.thrift.TBaseHelper.compareTo(this.enderecoLocalPermanencia, other.enderecoLocalPermanencia);
      if (lastComparison != 0) {
        return lastComparison;
      }
    }
    lastComparison = Boolean.valueOf(isSetFamilias()).compareTo(other.isSetFamilias());
    if (lastComparison != 0) {
      return lastComparison;
    }
    if (isSetFamilias()) {
      lastComparison = org.apache.thrift.TBaseHelper.compareTo(this.familias, other.familias);
      if (lastComparison != 0) {
        return lastComparison;
      }
    }
    lastComparison = Boolean.valueOf(isSetFichaAtualizada()).compareTo(other.isSetFichaAtualizada());
    if (lastComparison != 0) {
      return lastComparison;
    }
    if (isSetFichaAtualizada()) {
      lastComparison = org.apache.thrift.TBaseHelper.compareTo(this.fichaAtualizada, other.fichaAtualizada);
      if (lastComparison != 0) {
        return lastComparison;
      }
    }
    lastComparison = Boolean.valueOf(isSetQuantosAnimaisNoDomicilio()).compareTo(other.isSetQuantosAnimaisNoDomicilio());
    if (lastComparison != 0) {
      return lastComparison;
    }
    if (isSetQuantosAnimaisNoDomicilio()) {
      lastComparison = org.apache.thrift.TBaseHelper.compareTo(this.quantosAnimaisNoDomicilio, other.quantosAnimaisNoDomicilio);
      if (lastComparison != 0) {
        return lastComparison;
      }
    }
    lastComparison = Boolean.valueOf(isSetStAnimaisNoDomicilio()).compareTo(other.isSetStAnimaisNoDomicilio());
    if (lastComparison != 0) {
      return lastComparison;
    }
    if (isSetStAnimaisNoDomicilio()) {
      lastComparison = org.apache.thrift.TBaseHelper.compareTo(this.stAnimaisNoDomicilio, other.stAnimaisNoDomicilio);
      if (lastComparison != 0) {
        return lastComparison;
      }
    }
    lastComparison = Boolean.valueOf(isSetStatusTermoRecusaCadastroDomiciliarAtencaoBasica()).compareTo(other.isSetStatusTermoRecusaCadastroDomiciliarAtencaoBasica());
    if (lastComparison != 0) {
      return lastComparison;
    }
    if (isSetStatusTermoRecusaCadastroDomiciliarAtencaoBasica()) {
      lastComparison = org.apache.thrift.TBaseHelper.compareTo(this.statusTermoRecusaCadastroDomiciliarAtencaoBasica, other.statusTermoRecusaCadastroDomiciliarAtencaoBasica);
      if (lastComparison != 0) {
        return lastComparison;
      }
    }
    lastComparison = Boolean.valueOf(isSetTpCdsOrigem()).compareTo(other.isSetTpCdsOrigem());
    if (lastComparison != 0) {
      return lastComparison;
    }
    if (isSetTpCdsOrigem()) {
      lastComparison = org.apache.thrift.TBaseHelper.compareTo(this.tpCdsOrigem, other.tpCdsOrigem);
      if (lastComparison != 0) {
        return lastComparison;
      }
    }
    lastComparison = Boolean.valueOf(isSetUuid()).compareTo(other.isSetUuid());
    if (lastComparison != 0) {
      return lastComparison;
    }
    if (isSetUuid()) {
      lastComparison = org.apache.thrift.TBaseHelper.compareTo(this.uuid, other.uuid);
      if (lastComparison != 0) {
        return lastComparison;
      }
    }
    lastComparison = Boolean.valueOf(isSetUuidFichaOriginadora()).compareTo(other.isSetUuidFichaOriginadora());
    if (lastComparison != 0) {
      return lastComparison;
    }
    if (isSetUuidFichaOriginadora()) {
      lastComparison = org.apache.thrift.TBaseHelper.compareTo(this.uuidFichaOriginadora, other.uuidFichaOriginadora);
      if (lastComparison != 0) {
        return lastComparison;
      }
    }
    return 0;
  }

  public _Fields fieldForId(int fieldId) {
    return _Fields.findByThriftId(fieldId);
  }

  public void read(org.apache.thrift.protocol.TProtocol iprot) throws org.apache.thrift.TException {
    schemes.get(iprot.getScheme()).getScheme().read(iprot, this);
  }

  public void write(org.apache.thrift.protocol.TProtocol oprot) throws org.apache.thrift.TException {
    schemes.get(oprot.getScheme()).getScheme().write(oprot, this);
  }

  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder("CadastroDomiciliarThrift(");
    boolean first = true;

    if (isSetAnimaisNoDomicilio()) {
      sb.append("animaisNoDomicilio:");
      if (this.animaisNoDomicilio == null) {
        sb.append("null");
      } else {
        sb.append(this.animaisNoDomicilio);
      }
      first = false;
    }
    if (isSetCondicaoMoradia()) {
      if (!first) sb.append(", ");
      sb.append("condicaoMoradia:");
      if (this.condicaoMoradia == null) {
        sb.append("null");
      } else {
        sb.append(this.condicaoMoradia);
      }
      first = false;
    }
    if (!first) sb.append(", ");
    sb.append("dadosGerais:");
    if (this.dadosGerais == null) {
      sb.append("null");
    } else {
      sb.append(this.dadosGerais);
    }
    first = false;
    if (isSetEnderecoLocalPermanencia()) {
      if (!first) sb.append(", ");
      sb.append("enderecoLocalPermanencia:");
      if (this.enderecoLocalPermanencia == null) {
        sb.append("null");
      } else {
        sb.append(this.enderecoLocalPermanencia);
      }
      first = false;
    }
    if (isSetFamilias()) {
      if (!first) sb.append(", ");
      sb.append("familias:");
      if (this.familias == null) {
        sb.append("null");
      } else {
        sb.append(this.familias);
      }
      first = false;
    }
    if (isSetFichaAtualizada()) {
      if (!first) sb.append(", ");
      sb.append("fichaAtualizada:");
      sb.append(this.fichaAtualizada);
      first = false;
    }
    if (isSetQuantosAnimaisNoDomicilio()) {
      if (!first) sb.append(", ");
      sb.append("quantosAnimaisNoDomicilio:");
      if (this.quantosAnimaisNoDomicilio == null) {
        sb.append("null");
      } else {
        sb.append(this.quantosAnimaisNoDomicilio);
      }
      first = false;
    }
    if (isSetStAnimaisNoDomicilio()) {
      if (!first) sb.append(", ");
      sb.append("stAnimaisNoDomicilio:");
      sb.append(this.stAnimaisNoDomicilio);
      first = false;
    }
    if (isSetStatusTermoRecusaCadastroDomiciliarAtencaoBasica()) {
      if (!first) sb.append(", ");
      sb.append("statusTermoRecusaCadastroDomiciliarAtencaoBasica:");
      sb.append(this.statusTermoRecusaCadastroDomiciliarAtencaoBasica);
      first = false;
    }
    if (isSetTpCdsOrigem()) {
      if (!first) sb.append(", ");
      sb.append("tpCdsOrigem:");
      sb.append(this.tpCdsOrigem);
      first = false;
    }
    if (!first) sb.append(", ");
    sb.append("uuid:");
    if (this.uuid == null) {
      sb.append("null");
    } else {
      sb.append(this.uuid);
    }
    first = false;
    if (isSetUuidFichaOriginadora()) {
      if (!first) sb.append(", ");
      sb.append("uuidFichaOriginadora:");
      if (this.uuidFichaOriginadora == null) {
        sb.append("null");
      } else {
        sb.append(this.uuidFichaOriginadora);
      }
      first = false;
    }
    sb.append(")");
    return sb.toString();
  }

  public void validate() throws org.apache.thrift.TException {
    // check for required fields
    if (!isSetDadosGerais()) {
      throw new org.apache.thrift.protocol.TProtocolException("Required field 'dadosGerais' is unset! Struct:" + toString());
    }

    if (!isSetUuid()) {
      throw new org.apache.thrift.protocol.TProtocolException("Required field 'uuid' is unset! Struct:" + toString());
    }

    // check for sub-struct validity
    if (condicaoMoradia != null) {
      condicaoMoradia.validate();
    }
    if (dadosGerais != null) {
      dadosGerais.validate();
    }
    if (enderecoLocalPermanencia != null) {
      enderecoLocalPermanencia.validate();
    }
  }

  private void writeObject(java.io.ObjectOutputStream out) throws java.io.IOException {
    try {
      write(new org.apache.thrift.protocol.TCompactProtocol(new org.apache.thrift.transport.TIOStreamTransport(out)));
    } catch (org.apache.thrift.TException te) {
      throw new java.io.IOException(te);
    }
  }

  private void readObject(java.io.ObjectInputStream in) throws java.io.IOException, ClassNotFoundException {
    try {
      // it doesn't seem like you should have to do this, but java serialization is wacky, and doesn't call the default constructor.
      __isset_bitfield = 0;
      read(new org.apache.thrift.protocol.TCompactProtocol(new org.apache.thrift.transport.TIOStreamTransport(in)));
    } catch (org.apache.thrift.TException te) {
      throw new java.io.IOException(te);
    }
  }

  private static class CadastroDomiciliarThriftStandardSchemeFactory implements SchemeFactory {
    public CadastroDomiciliarThriftStandardScheme getScheme() {
      return new CadastroDomiciliarThriftStandardScheme();
    }
  }

  private static class CadastroDomiciliarThriftStandardScheme extends StandardScheme<CadastroDomiciliarThrift> {

    public void read(org.apache.thrift.protocol.TProtocol iprot, CadastroDomiciliarThrift struct) throws org.apache.thrift.TException {
      org.apache.thrift.protocol.TField schemeField;
      iprot.readStructBegin();
      while (true)
      {
        schemeField = iprot.readFieldBegin();
        if (schemeField.type == org.apache.thrift.protocol.TType.STOP) { 
          break;
        }
        switch (schemeField.id) {
          case 1: // ANIMAIS_NO_DOMICILIO
            if (schemeField.type == org.apache.thrift.protocol.TType.LIST) {
              {
                org.apache.thrift.protocol.TList _list0 = iprot.readListBegin();
                struct.animaisNoDomicilio = new ArrayList<Long>(_list0.size);
                long _elem1;
                for (int _i2 = 0; _i2 < _list0.size; ++_i2)
                {
                  _elem1 = iprot.readI64();
                  struct.animaisNoDomicilio.add(_elem1);
                }
                iprot.readListEnd();
              }
              struct.setAnimaisNoDomicilioIsSet(true);
            } else { 
              org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
            }
            break;
          case 2: // CONDICAO_MORADIA
            if (schemeField.type == org.apache.thrift.protocol.TType.STRUCT) {
              struct.condicaoMoradia = new CondicaoMoradiaThrift();
              struct.condicaoMoradia.read(iprot);
              struct.setCondicaoMoradiaIsSet(true);
            } else { 
              org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
            }
            break;
          case 3: // DADOS_GERAIS
            if (schemeField.type == org.apache.thrift.protocol.TType.STRUCT) {
              struct.dadosGerais = new br.gov.saude.esus.cds.transport.generated.thrift.common.HeaderCdsCadastroThrift();
              struct.dadosGerais.read(iprot);
              struct.setDadosGeraisIsSet(true);
            } else { 
              org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
            }
            break;
          case 4: // ENDERECO_LOCAL_PERMANENCIA
            if (schemeField.type == org.apache.thrift.protocol.TType.STRUCT) {
              struct.enderecoLocalPermanencia = new br.gov.saude.esus.cds.transport.generated.thrift.common.EnderecoLocalPermanenciaThrift();
              struct.enderecoLocalPermanencia.read(iprot);
              struct.setEnderecoLocalPermanenciaIsSet(true);
            } else { 
              org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
            }
            break;
          case 5: // FAMILIAS
            if (schemeField.type == org.apache.thrift.protocol.TType.LIST) {
              {
                org.apache.thrift.protocol.TList _list3 = iprot.readListBegin();
                struct.familias = new ArrayList<FamiliaRowThrift>(_list3.size);
                FamiliaRowThrift _elem4;
                for (int _i5 = 0; _i5 < _list3.size; ++_i5)
                {
                  _elem4 = new FamiliaRowThrift();
                  _elem4.read(iprot);
                  struct.familias.add(_elem4);
                }
                iprot.readListEnd();
              }
              struct.setFamiliasIsSet(true);
            } else { 
              org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
            }
            break;
          case 6: // FICHA_ATUALIZADA
            if (schemeField.type == org.apache.thrift.protocol.TType.BOOL) {
              struct.fichaAtualizada = iprot.readBool();
              struct.setFichaAtualizadaIsSet(true);
            } else { 
              org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
            }
            break;
          case 7: // QUANTOS_ANIMAIS_NO_DOMICILIO
            if (schemeField.type == org.apache.thrift.protocol.TType.STRING) {
              struct.quantosAnimaisNoDomicilio = iprot.readString();
              struct.setQuantosAnimaisNoDomicilioIsSet(true);
            } else { 
              org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
            }
            break;
          case 8: // ST_ANIMAIS_NO_DOMICILIO
            if (schemeField.type == org.apache.thrift.protocol.TType.BOOL) {
              struct.stAnimaisNoDomicilio = iprot.readBool();
              struct.setStAnimaisNoDomicilioIsSet(true);
            } else { 
              org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
            }
            break;
          case 9: // STATUS_TERMO_RECUSA_CADASTRO_DOMICILIAR_ATENCAO_BASICA
            if (schemeField.type == org.apache.thrift.protocol.TType.BOOL) {
              struct.statusTermoRecusaCadastroDomiciliarAtencaoBasica = iprot.readBool();
              struct.setStatusTermoRecusaCadastroDomiciliarAtencaoBasicaIsSet(true);
            } else { 
              org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
            }
            break;
          case 10: // TP_CDS_ORIGEM
            if (schemeField.type == org.apache.thrift.protocol.TType.I32) {
              struct.tpCdsOrigem = iprot.readI32();
              struct.setTpCdsOrigemIsSet(true);
            } else { 
              org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
            }
            break;
          case 11: // UUID
            if (schemeField.type == org.apache.thrift.protocol.TType.STRING) {
              struct.uuid = iprot.readString();
              struct.setUuidIsSet(true);
            } else { 
              org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
            }
            break;
          case 12: // UUID_FICHA_ORIGINADORA
            if (schemeField.type == org.apache.thrift.protocol.TType.STRING) {
              struct.uuidFichaOriginadora = iprot.readString();
              struct.setUuidFichaOriginadoraIsSet(true);
            } else { 
              org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
            }
            break;
          default:
            org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
        }
        iprot.readFieldEnd();
      }
      iprot.readStructEnd();
      struct.validate();
    }

    public void write(org.apache.thrift.protocol.TProtocol oprot, CadastroDomiciliarThrift struct) throws org.apache.thrift.TException {
      struct.validate();

      oprot.writeStructBegin(STRUCT_DESC);
      if (struct.animaisNoDomicilio != null) {
        if (struct.isSetAnimaisNoDomicilio()) {
          oprot.writeFieldBegin(ANIMAIS_NO_DOMICILIO_FIELD_DESC);
          {
            oprot.writeListBegin(new org.apache.thrift.protocol.TList(org.apache.thrift.protocol.TType.I64, struct.animaisNoDomicilio.size()));
            for (long _iter6 : struct.animaisNoDomicilio)
            {
              oprot.writeI64(_iter6);
            }
            oprot.writeListEnd();
          }
          oprot.writeFieldEnd();
        }
      }
      if (struct.condicaoMoradia != null) {
        if (struct.isSetCondicaoMoradia()) {
          oprot.writeFieldBegin(CONDICAO_MORADIA_FIELD_DESC);
          struct.condicaoMoradia.write(oprot);
          oprot.writeFieldEnd();
        }
      }
      if (struct.dadosGerais != null) {
        oprot.writeFieldBegin(DADOS_GERAIS_FIELD_DESC);
        struct.dadosGerais.write(oprot);
        oprot.writeFieldEnd();
      }
      if (struct.enderecoLocalPermanencia != null) {
        if (struct.isSetEnderecoLocalPermanencia()) {
          oprot.writeFieldBegin(ENDERECO_LOCAL_PERMANENCIA_FIELD_DESC);
          struct.enderecoLocalPermanencia.write(oprot);
          oprot.writeFieldEnd();
        }
      }
      if (struct.familias != null) {
        if (struct.isSetFamilias()) {
          oprot.writeFieldBegin(FAMILIAS_FIELD_DESC);
          {
            oprot.writeListBegin(new org.apache.thrift.protocol.TList(org.apache.thrift.protocol.TType.STRUCT, struct.familias.size()));
            for (FamiliaRowThrift _iter7 : struct.familias)
            {
              _iter7.write(oprot);
            }
            oprot.writeListEnd();
          }
          oprot.writeFieldEnd();
        }
      }
      if (struct.isSetFichaAtualizada()) {
        oprot.writeFieldBegin(FICHA_ATUALIZADA_FIELD_DESC);
        oprot.writeBool(struct.fichaAtualizada);
        oprot.writeFieldEnd();
      }
      if (struct.quantosAnimaisNoDomicilio != null) {
        if (struct.isSetQuantosAnimaisNoDomicilio()) {
          oprot.writeFieldBegin(QUANTOS_ANIMAIS_NO_DOMICILIO_FIELD_DESC);
          oprot.writeString(struct.quantosAnimaisNoDomicilio);
          oprot.writeFieldEnd();
        }
      }
      if (struct.isSetStAnimaisNoDomicilio()) {
        oprot.writeFieldBegin(ST_ANIMAIS_NO_DOMICILIO_FIELD_DESC);
        oprot.writeBool(struct.stAnimaisNoDomicilio);
        oprot.writeFieldEnd();
      }
      if (struct.isSetStatusTermoRecusaCadastroDomiciliarAtencaoBasica()) {
        oprot.writeFieldBegin(STATUS_TERMO_RECUSA_CADASTRO_DOMICILIAR_ATENCAO_BASICA_FIELD_DESC);
        oprot.writeBool(struct.statusTermoRecusaCadastroDomiciliarAtencaoBasica);
        oprot.writeFieldEnd();
      }
      if (struct.isSetTpCdsOrigem()) {
        oprot.writeFieldBegin(TP_CDS_ORIGEM_FIELD_DESC);
        oprot.writeI32(struct.tpCdsOrigem);
        oprot.writeFieldEnd();
      }
      if (struct.uuid != null) {
        oprot.writeFieldBegin(UUID_FIELD_DESC);
        oprot.writeString(struct.uuid);
        oprot.writeFieldEnd();
      }
      if (struct.uuidFichaOriginadora != null) {
        if (struct.isSetUuidFichaOriginadora()) {
          oprot.writeFieldBegin(UUID_FICHA_ORIGINADORA_FIELD_DESC);
          oprot.writeString(struct.uuidFichaOriginadora);
          oprot.writeFieldEnd();
        }
      }
      oprot.writeFieldStop();
      oprot.writeStructEnd();
    }

  }

  private static class CadastroDomiciliarThriftTupleSchemeFactory implements SchemeFactory {
    public CadastroDomiciliarThriftTupleScheme getScheme() {
      return new CadastroDomiciliarThriftTupleScheme();
    }
  }

  private static class CadastroDomiciliarThriftTupleScheme extends TupleScheme<CadastroDomiciliarThrift> {

    @Override
    public void write(org.apache.thrift.protocol.TProtocol prot, CadastroDomiciliarThrift struct) throws org.apache.thrift.TException {
      TTupleProtocol oprot = (TTupleProtocol) prot;
      struct.dadosGerais.write(oprot);
      oprot.writeString(struct.uuid);
      BitSet optionals = new BitSet();
      if (struct.isSetAnimaisNoDomicilio()) {
        optionals.set(0);
      }
      if (struct.isSetCondicaoMoradia()) {
        optionals.set(1);
      }
      if (struct.isSetEnderecoLocalPermanencia()) {
        optionals.set(2);
      }
      if (struct.isSetFamilias()) {
        optionals.set(3);
      }
      if (struct.isSetFichaAtualizada()) {
        optionals.set(4);
      }
      if (struct.isSetQuantosAnimaisNoDomicilio()) {
        optionals.set(5);
      }
      if (struct.isSetStAnimaisNoDomicilio()) {
        optionals.set(6);
      }
      if (struct.isSetStatusTermoRecusaCadastroDomiciliarAtencaoBasica()) {
        optionals.set(7);
      }
      if (struct.isSetTpCdsOrigem()) {
        optionals.set(8);
      }
      if (struct.isSetUuidFichaOriginadora()) {
        optionals.set(9);
      }
      oprot.writeBitSet(optionals, 10);
      if (struct.isSetAnimaisNoDomicilio()) {
        {
          oprot.writeI32(struct.animaisNoDomicilio.size());
          for (long _iter8 : struct.animaisNoDomicilio)
          {
            oprot.writeI64(_iter8);
          }
        }
      }
      if (struct.isSetCondicaoMoradia()) {
        struct.condicaoMoradia.write(oprot);
      }
      if (struct.isSetEnderecoLocalPermanencia()) {
        struct.enderecoLocalPermanencia.write(oprot);
      }
      if (struct.isSetFamilias()) {
        {
          oprot.writeI32(struct.familias.size());
          for (FamiliaRowThrift _iter9 : struct.familias)
          {
            _iter9.write(oprot);
          }
        }
      }
      if (struct.isSetFichaAtualizada()) {
        oprot.writeBool(struct.fichaAtualizada);
      }
      if (struct.isSetQuantosAnimaisNoDomicilio()) {
        oprot.writeString(struct.quantosAnimaisNoDomicilio);
      }
      if (struct.isSetStAnimaisNoDomicilio()) {
        oprot.writeBool(struct.stAnimaisNoDomicilio);
      }
      if (struct.isSetStatusTermoRecusaCadastroDomiciliarAtencaoBasica()) {
        oprot.writeBool(struct.statusTermoRecusaCadastroDomiciliarAtencaoBasica);
      }
      if (struct.isSetTpCdsOrigem()) {
        oprot.writeI32(struct.tpCdsOrigem);
      }
      if (struct.isSetUuidFichaOriginadora()) {
        oprot.writeString(struct.uuidFichaOriginadora);
      }
    }

    @Override
    public void read(org.apache.thrift.protocol.TProtocol prot, CadastroDomiciliarThrift struct) throws org.apache.thrift.TException {
      TTupleProtocol iprot = (TTupleProtocol) prot;
      struct.dadosGerais = new br.gov.saude.esus.cds.transport.generated.thrift.common.HeaderCdsCadastroThrift();
      struct.dadosGerais.read(iprot);
      struct.setDadosGeraisIsSet(true);
      struct.uuid = iprot.readString();
      struct.setUuidIsSet(true);
      BitSet incoming = iprot.readBitSet(10);
      if (incoming.get(0)) {
        {
          org.apache.thrift.protocol.TList _list10 = new org.apache.thrift.protocol.TList(org.apache.thrift.protocol.TType.I64, iprot.readI32());
          struct.animaisNoDomicilio = new ArrayList<Long>(_list10.size);
          long _elem11;
          for (int _i12 = 0; _i12 < _list10.size; ++_i12)
          {
            _elem11 = iprot.readI64();
            struct.animaisNoDomicilio.add(_elem11);
          }
        }
        struct.setAnimaisNoDomicilioIsSet(true);
      }
      if (incoming.get(1)) {
        struct.condicaoMoradia = new CondicaoMoradiaThrift();
        struct.condicaoMoradia.read(iprot);
        struct.setCondicaoMoradiaIsSet(true);
      }
      if (incoming.get(2)) {
        struct.enderecoLocalPermanencia = new br.gov.saude.esus.cds.transport.generated.thrift.common.EnderecoLocalPermanenciaThrift();
        struct.enderecoLocalPermanencia.read(iprot);
        struct.setEnderecoLocalPermanenciaIsSet(true);
      }
      if (incoming.get(3)) {
        {
          org.apache.thrift.protocol.TList _list13 = new org.apache.thrift.protocol.TList(org.apache.thrift.protocol.TType.STRUCT, iprot.readI32());
          struct.familias = new ArrayList<FamiliaRowThrift>(_list13.size);
          FamiliaRowThrift _elem14;
          for (int _i15 = 0; _i15 < _list13.size; ++_i15)
          {
            _elem14 = new FamiliaRowThrift();
            _elem14.read(iprot);
            struct.familias.add(_elem14);
          }
        }
        struct.setFamiliasIsSet(true);
      }
      if (incoming.get(4)) {
        struct.fichaAtualizada = iprot.readBool();
        struct.setFichaAtualizadaIsSet(true);
      }
      if (incoming.get(5)) {
        struct.quantosAnimaisNoDomicilio = iprot.readString();
        struct.setQuantosAnimaisNoDomicilioIsSet(true);
      }
      if (incoming.get(6)) {
        struct.stAnimaisNoDomicilio = iprot.readBool();
        struct.setStAnimaisNoDomicilioIsSet(true);
      }
      if (incoming.get(7)) {
        struct.statusTermoRecusaCadastroDomiciliarAtencaoBasica = iprot.readBool();
        struct.setStatusTermoRecusaCadastroDomiciliarAtencaoBasicaIsSet(true);
      }
      if (incoming.get(8)) {
        struct.tpCdsOrigem = iprot.readI32();
        struct.setTpCdsOrigemIsSet(true);
      }
      if (incoming.get(9)) {
        struct.uuidFichaOriginadora = iprot.readString();
        struct.setUuidFichaOriginadoraIsSet(true);
      }
    }
  }

}

