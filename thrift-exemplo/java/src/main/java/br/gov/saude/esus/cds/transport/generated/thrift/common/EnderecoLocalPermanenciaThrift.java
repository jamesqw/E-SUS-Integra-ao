/**
 * Autogenerated by Thrift Compiler (0.9.2)
 *
 * DO NOT EDIT UNLESS YOU ARE SURE THAT YOU KNOW WHAT YOU ARE DOING
 *  @generated
 */
package br.gov.saude.esus.cds.transport.generated.thrift.common;

import org.apache.thrift.scheme.IScheme;
import org.apache.thrift.scheme.SchemeFactory;
import org.apache.thrift.scheme.StandardScheme;

import org.apache.thrift.scheme.TupleScheme;
import org.apache.thrift.protocol.TTupleProtocol;
import org.apache.thrift.protocol.TProtocolException;
import org.apache.thrift.EncodingUtils;
import org.apache.thrift.TException;
import org.apache.thrift.async.AsyncMethodCallback;
import org.apache.thrift.server.AbstractNonblockingServer.*;
import java.util.List;
import java.util.ArrayList;
import java.util.Map;
import java.util.HashMap;
import java.util.EnumMap;
import java.util.Set;
import java.util.HashSet;
import java.util.EnumSet;
import java.util.Collections;
import java.util.BitSet;
import java.nio.ByteBuffer;
import java.util.Arrays;
import javax.annotation.Generated;
import org.slf4j.Logger;
import org.slf4j.LoggerFactory;

@SuppressWarnings({"cast", "rawtypes", "serial", "unchecked"})
@Generated(value = "Autogenerated by Thrift Compiler (0.9.2)", date = "2015-8-12")
public class EnderecoLocalPermanenciaThrift implements org.apache.thrift.TBase<EnderecoLocalPermanenciaThrift, EnderecoLocalPermanenciaThrift._Fields>, java.io.Serializable, Cloneable, Comparable<EnderecoLocalPermanenciaThrift> {
  private static final org.apache.thrift.protocol.TStruct STRUCT_DESC = new org.apache.thrift.protocol.TStruct("EnderecoLocalPermanenciaThrift");

  private static final org.apache.thrift.protocol.TField BAIRRO_FIELD_DESC = new org.apache.thrift.protocol.TField("bairro", org.apache.thrift.protocol.TType.STRING, (short)1);
  private static final org.apache.thrift.protocol.TField CEP_FIELD_DESC = new org.apache.thrift.protocol.TField("cep", org.apache.thrift.protocol.TType.STRING, (short)2);
  private static final org.apache.thrift.protocol.TField CODIGO_IBGE_MUNICIPIO_FIELD_DESC = new org.apache.thrift.protocol.TField("codigoIbgeMunicipio", org.apache.thrift.protocol.TType.STRING, (short)3);
  private static final org.apache.thrift.protocol.TField COMPLEMENTO_FIELD_DESC = new org.apache.thrift.protocol.TField("complemento", org.apache.thrift.protocol.TType.STRING, (short)4);
  private static final org.apache.thrift.protocol.TField NOME_LOGRADOURO_FIELD_DESC = new org.apache.thrift.protocol.TField("nomeLogradouro", org.apache.thrift.protocol.TType.STRING, (short)5);
  private static final org.apache.thrift.protocol.TField NUMERO_FIELD_DESC = new org.apache.thrift.protocol.TField("numero", org.apache.thrift.protocol.TType.STRING, (short)6);
  private static final org.apache.thrift.protocol.TField NUMERO_DNE_UF_FIELD_DESC = new org.apache.thrift.protocol.TField("numeroDneUf", org.apache.thrift.protocol.TType.STRING, (short)7);
  private static final org.apache.thrift.protocol.TField TEL_REFERENCIAL_FIELD_DESC = new org.apache.thrift.protocol.TField("telReferencial", org.apache.thrift.protocol.TType.STRING, (short)8);
  private static final org.apache.thrift.protocol.TField TEL_RESIDENCIAL_FIELD_DESC = new org.apache.thrift.protocol.TField("telResidencial", org.apache.thrift.protocol.TType.STRING, (short)9);
  private static final org.apache.thrift.protocol.TField TIPO_LOGRADOURO_NUMERO_DNE_FIELD_DESC = new org.apache.thrift.protocol.TField("tipoLogradouroNumeroDne", org.apache.thrift.protocol.TType.STRING, (short)10);
  private static final org.apache.thrift.protocol.TField ST_SEM_NUMERO_FIELD_DESC = new org.apache.thrift.protocol.TField("stSemNumero", org.apache.thrift.protocol.TType.BOOL, (short)11);

  private static final Map<Class<? extends IScheme>, SchemeFactory> schemes = new HashMap<Class<? extends IScheme>, SchemeFactory>();
  static {
    schemes.put(StandardScheme.class, new EnderecoLocalPermanenciaThriftStandardSchemeFactory());
    schemes.put(TupleScheme.class, new EnderecoLocalPermanenciaThriftTupleSchemeFactory());
  }

  private String bairro; // optional
  private String cep; // optional
  private String codigoIbgeMunicipio; // optional
  private String complemento; // optional
  private String nomeLogradouro; // optional
  private String numero; // optional
  private String numeroDneUf; // optional
  private String telReferencial; // optional
  private String telResidencial; // optional
  private String tipoLogradouroNumeroDne; // optional
  private boolean stSemNumero; // optional

  /** The set of fields this struct contains, along with convenience methods for finding and manipulating them. */
  public enum _Fields implements org.apache.thrift.TFieldIdEnum {
    BAIRRO((short)1, "bairro"),
    CEP((short)2, "cep"),
    CODIGO_IBGE_MUNICIPIO((short)3, "codigoIbgeMunicipio"),
    COMPLEMENTO((short)4, "complemento"),
    NOME_LOGRADOURO((short)5, "nomeLogradouro"),
    NUMERO((short)6, "numero"),
    NUMERO_DNE_UF((short)7, "numeroDneUf"),
    TEL_REFERENCIAL((short)8, "telReferencial"),
    TEL_RESIDENCIAL((short)9, "telResidencial"),
    TIPO_LOGRADOURO_NUMERO_DNE((short)10, "tipoLogradouroNumeroDne"),
    ST_SEM_NUMERO((short)11, "stSemNumero");

    private static final Map<String, _Fields> byName = new HashMap<String, _Fields>();

    static {
      for (_Fields field : EnumSet.allOf(_Fields.class)) {
        byName.put(field.getFieldName(), field);
      }
    }

    /**
     * Find the _Fields constant that matches fieldId, or null if its not found.
     */
    public static _Fields findByThriftId(int fieldId) {
      switch(fieldId) {
        case 1: // BAIRRO
          return BAIRRO;
        case 2: // CEP
          return CEP;
        case 3: // CODIGO_IBGE_MUNICIPIO
          return CODIGO_IBGE_MUNICIPIO;
        case 4: // COMPLEMENTO
          return COMPLEMENTO;
        case 5: // NOME_LOGRADOURO
          return NOME_LOGRADOURO;
        case 6: // NUMERO
          return NUMERO;
        case 7: // NUMERO_DNE_UF
          return NUMERO_DNE_UF;
        case 8: // TEL_REFERENCIAL
          return TEL_REFERENCIAL;
        case 9: // TEL_RESIDENCIAL
          return TEL_RESIDENCIAL;
        case 10: // TIPO_LOGRADOURO_NUMERO_DNE
          return TIPO_LOGRADOURO_NUMERO_DNE;
        case 11: // ST_SEM_NUMERO
          return ST_SEM_NUMERO;
        default:
          return null;
      }
    }

    /**
     * Find the _Fields constant that matches fieldId, throwing an exception
     * if it is not found.
     */
    public static _Fields findByThriftIdOrThrow(int fieldId) {
      _Fields fields = findByThriftId(fieldId);
      if (fields == null) throw new IllegalArgumentException("Field " + fieldId + " doesn't exist!");
      return fields;
    }

    /**
     * Find the _Fields constant that matches name, or null if its not found.
     */
    public static _Fields findByName(String name) {
      return byName.get(name);
    }

    private final short _thriftId;
    private final String _fieldName;

    _Fields(short thriftId, String fieldName) {
      _thriftId = thriftId;
      _fieldName = fieldName;
    }

    public short getThriftFieldId() {
      return _thriftId;
    }

    public String getFieldName() {
      return _fieldName;
    }
  }

  // isset id assignments
  private static final int __STSEMNUMERO_ISSET_ID = 0;
  private byte __isset_bitfield = 0;
  private static final _Fields optionals[] = {_Fields.BAIRRO,_Fields.CEP,_Fields.CODIGO_IBGE_MUNICIPIO,_Fields.COMPLEMENTO,_Fields.NOME_LOGRADOURO,_Fields.NUMERO,_Fields.NUMERO_DNE_UF,_Fields.TEL_REFERENCIAL,_Fields.TEL_RESIDENCIAL,_Fields.TIPO_LOGRADOURO_NUMERO_DNE,_Fields.ST_SEM_NUMERO};
  public static final Map<_Fields, org.apache.thrift.meta_data.FieldMetaData> metaDataMap;
  static {
    Map<_Fields, org.apache.thrift.meta_data.FieldMetaData> tmpMap = new EnumMap<_Fields, org.apache.thrift.meta_data.FieldMetaData>(_Fields.class);
    tmpMap.put(_Fields.BAIRRO, new org.apache.thrift.meta_data.FieldMetaData("bairro", org.apache.thrift.TFieldRequirementType.OPTIONAL, 
        new org.apache.thrift.meta_data.FieldValueMetaData(org.apache.thrift.protocol.TType.STRING)));
    tmpMap.put(_Fields.CEP, new org.apache.thrift.meta_data.FieldMetaData("cep", org.apache.thrift.TFieldRequirementType.OPTIONAL, 
        new org.apache.thrift.meta_data.FieldValueMetaData(org.apache.thrift.protocol.TType.STRING)));
    tmpMap.put(_Fields.CODIGO_IBGE_MUNICIPIO, new org.apache.thrift.meta_data.FieldMetaData("codigoIbgeMunicipio", org.apache.thrift.TFieldRequirementType.OPTIONAL, 
        new org.apache.thrift.meta_data.FieldValueMetaData(org.apache.thrift.protocol.TType.STRING)));
    tmpMap.put(_Fields.COMPLEMENTO, new org.apache.thrift.meta_data.FieldMetaData("complemento", org.apache.thrift.TFieldRequirementType.OPTIONAL, 
        new org.apache.thrift.meta_data.FieldValueMetaData(org.apache.thrift.protocol.TType.STRING)));
    tmpMap.put(_Fields.NOME_LOGRADOURO, new org.apache.thrift.meta_data.FieldMetaData("nomeLogradouro", org.apache.thrift.TFieldRequirementType.OPTIONAL, 
        new org.apache.thrift.meta_data.FieldValueMetaData(org.apache.thrift.protocol.TType.STRING)));
    tmpMap.put(_Fields.NUMERO, new org.apache.thrift.meta_data.FieldMetaData("numero", org.apache.thrift.TFieldRequirementType.OPTIONAL, 
        new org.apache.thrift.meta_data.FieldValueMetaData(org.apache.thrift.protocol.TType.STRING)));
    tmpMap.put(_Fields.NUMERO_DNE_UF, new org.apache.thrift.meta_data.FieldMetaData("numeroDneUf", org.apache.thrift.TFieldRequirementType.OPTIONAL, 
        new org.apache.thrift.meta_data.FieldValueMetaData(org.apache.thrift.protocol.TType.STRING)));
    tmpMap.put(_Fields.TEL_REFERENCIAL, new org.apache.thrift.meta_data.FieldMetaData("telReferencial", org.apache.thrift.TFieldRequirementType.OPTIONAL, 
        new org.apache.thrift.meta_data.FieldValueMetaData(org.apache.thrift.protocol.TType.STRING)));
    tmpMap.put(_Fields.TEL_RESIDENCIAL, new org.apache.thrift.meta_data.FieldMetaData("telResidencial", org.apache.thrift.TFieldRequirementType.OPTIONAL, 
        new org.apache.thrift.meta_data.FieldValueMetaData(org.apache.thrift.protocol.TType.STRING)));
    tmpMap.put(_Fields.TIPO_LOGRADOURO_NUMERO_DNE, new org.apache.thrift.meta_data.FieldMetaData("tipoLogradouroNumeroDne", org.apache.thrift.TFieldRequirementType.OPTIONAL, 
        new org.apache.thrift.meta_data.FieldValueMetaData(org.apache.thrift.protocol.TType.STRING)));
    tmpMap.put(_Fields.ST_SEM_NUMERO, new org.apache.thrift.meta_data.FieldMetaData("stSemNumero", org.apache.thrift.TFieldRequirementType.OPTIONAL, 
        new org.apache.thrift.meta_data.FieldValueMetaData(org.apache.thrift.protocol.TType.BOOL)));
    metaDataMap = Collections.unmodifiableMap(tmpMap);
    org.apache.thrift.meta_data.FieldMetaData.addStructMetaDataMap(EnderecoLocalPermanenciaThrift.class, metaDataMap);
  }

  public EnderecoLocalPermanenciaThrift() {
  }

  /**
   * Performs a deep copy on <i>other</i>.
   */
  public EnderecoLocalPermanenciaThrift(EnderecoLocalPermanenciaThrift other) {
    __isset_bitfield = other.__isset_bitfield;
    if (other.isSetBairro()) {
      this.bairro = other.bairro;
    }
    if (other.isSetCep()) {
      this.cep = other.cep;
    }
    if (other.isSetCodigoIbgeMunicipio()) {
      this.codigoIbgeMunicipio = other.codigoIbgeMunicipio;
    }
    if (other.isSetComplemento()) {
      this.complemento = other.complemento;
    }
    if (other.isSetNomeLogradouro()) {
      this.nomeLogradouro = other.nomeLogradouro;
    }
    if (other.isSetNumero()) {
      this.numero = other.numero;
    }
    if (other.isSetNumeroDneUf()) {
      this.numeroDneUf = other.numeroDneUf;
    }
    if (other.isSetTelReferencial()) {
      this.telReferencial = other.telReferencial;
    }
    if (other.isSetTelResidencial()) {
      this.telResidencial = other.telResidencial;
    }
    if (other.isSetTipoLogradouroNumeroDne()) {
      this.tipoLogradouroNumeroDne = other.tipoLogradouroNumeroDne;
    }
    this.stSemNumero = other.stSemNumero;
  }

  public EnderecoLocalPermanenciaThrift deepCopy() {
    return new EnderecoLocalPermanenciaThrift(this);
  }

  @Override
  public void clear() {
    this.bairro = null;
    this.cep = null;
    this.codigoIbgeMunicipio = null;
    this.complemento = null;
    this.nomeLogradouro = null;
    this.numero = null;
    this.numeroDneUf = null;
    this.telReferencial = null;
    this.telResidencial = null;
    this.tipoLogradouroNumeroDne = null;
    setStSemNumeroIsSet(false);
    this.stSemNumero = false;
  }

  public String getBairro() {
    return this.bairro;
  }

  public void setBairro(String bairro) {
    this.bairro = bairro;
  }

  public void unsetBairro() {
    this.bairro = null;
  }

  /** Returns true if field bairro is set (has been assigned a value) and false otherwise */
  public boolean isSetBairro() {
    return this.bairro != null;
  }

  public void setBairroIsSet(boolean value) {
    if (!value) {
      this.bairro = null;
    }
  }

  public String getCep() {
    return this.cep;
  }

  public void setCep(String cep) {
    this.cep = cep;
  }

  public void unsetCep() {
    this.cep = null;
  }

  /** Returns true if field cep is set (has been assigned a value) and false otherwise */
  public boolean isSetCep() {
    return this.cep != null;
  }

  public void setCepIsSet(boolean value) {
    if (!value) {
      this.cep = null;
    }
  }

  public String getCodigoIbgeMunicipio() {
    return this.codigoIbgeMunicipio;
  }

  public void setCodigoIbgeMunicipio(String codigoIbgeMunicipio) {
    this.codigoIbgeMunicipio = codigoIbgeMunicipio;
  }

  public void unsetCodigoIbgeMunicipio() {
    this.codigoIbgeMunicipio = null;
  }

  /** Returns true if field codigoIbgeMunicipio is set (has been assigned a value) and false otherwise */
  public boolean isSetCodigoIbgeMunicipio() {
    return this.codigoIbgeMunicipio != null;
  }

  public void setCodigoIbgeMunicipioIsSet(boolean value) {
    if (!value) {
      this.codigoIbgeMunicipio = null;
    }
  }

  public String getComplemento() {
    return this.complemento;
  }

  public void setComplemento(String complemento) {
    this.complemento = complemento;
  }

  public void unsetComplemento() {
    this.complemento = null;
  }

  /** Returns true if field complemento is set (has been assigned a value) and false otherwise */
  public boolean isSetComplemento() {
    return this.complemento != null;
  }

  public void setComplementoIsSet(boolean value) {
    if (!value) {
      this.complemento = null;
    }
  }

  public String getNomeLogradouro() {
    return this.nomeLogradouro;
  }

  public void setNomeLogradouro(String nomeLogradouro) {
    this.nomeLogradouro = nomeLogradouro;
  }

  public void unsetNomeLogradouro() {
    this.nomeLogradouro = null;
  }

  /** Returns true if field nomeLogradouro is set (has been assigned a value) and false otherwise */
  public boolean isSetNomeLogradouro() {
    return this.nomeLogradouro != null;
  }

  public void setNomeLogradouroIsSet(boolean value) {
    if (!value) {
      this.nomeLogradouro = null;
    }
  }

  public String getNumero() {
    return this.numero;
  }

  public void setNumero(String numero) {
    this.numero = numero;
  }

  public void unsetNumero() {
    this.numero = null;
  }

  /** Returns true if field numero is set (has been assigned a value) and false otherwise */
  public boolean isSetNumero() {
    return this.numero != null;
  }

  public void setNumeroIsSet(boolean value) {
    if (!value) {
      this.numero = null;
    }
  }

  public String getNumeroDneUf() {
    return this.numeroDneUf;
  }

  public void setNumeroDneUf(String numeroDneUf) {
    this.numeroDneUf = numeroDneUf;
  }

  public void unsetNumeroDneUf() {
    this.numeroDneUf = null;
  }

  /** Returns true if field numeroDneUf is set (has been assigned a value) and false otherwise */
  public boolean isSetNumeroDneUf() {
    return this.numeroDneUf != null;
  }

  public void setNumeroDneUfIsSet(boolean value) {
    if (!value) {
      this.numeroDneUf = null;
    }
  }

  public String getTelReferencial() {
    return this.telReferencial;
  }

  public void setTelReferencial(String telReferencial) {
    this.telReferencial = telReferencial;
  }

  public void unsetTelReferencial() {
    this.telReferencial = null;
  }

  /** Returns true if field telReferencial is set (has been assigned a value) and false otherwise */
  public boolean isSetTelReferencial() {
    return this.telReferencial != null;
  }

  public void setTelReferencialIsSet(boolean value) {
    if (!value) {
      this.telReferencial = null;
    }
  }

  public String getTelResidencial() {
    return this.telResidencial;
  }

  public void setTelResidencial(String telResidencial) {
    this.telResidencial = telResidencial;
  }

  public void unsetTelResidencial() {
    this.telResidencial = null;
  }

  /** Returns true if field telResidencial is set (has been assigned a value) and false otherwise */
  public boolean isSetTelResidencial() {
    return this.telResidencial != null;
  }

  public void setTelResidencialIsSet(boolean value) {
    if (!value) {
      this.telResidencial = null;
    }
  }

  public String getTipoLogradouroNumeroDne() {
    return this.tipoLogradouroNumeroDne;
  }

  public void setTipoLogradouroNumeroDne(String tipoLogradouroNumeroDne) {
    this.tipoLogradouroNumeroDne = tipoLogradouroNumeroDne;
  }

  public void unsetTipoLogradouroNumeroDne() {
    this.tipoLogradouroNumeroDne = null;
  }

  /** Returns true if field tipoLogradouroNumeroDne is set (has been assigned a value) and false otherwise */
  public boolean isSetTipoLogradouroNumeroDne() {
    return this.tipoLogradouroNumeroDne != null;
  }

  public void setTipoLogradouroNumeroDneIsSet(boolean value) {
    if (!value) {
      this.tipoLogradouroNumeroDne = null;
    }
  }

  public boolean isStSemNumero() {
    return this.stSemNumero;
  }

  public void setStSemNumero(boolean stSemNumero) {
    this.stSemNumero = stSemNumero;
    setStSemNumeroIsSet(true);
  }

  public void unsetStSemNumero() {
    __isset_bitfield = EncodingUtils.clearBit(__isset_bitfield, __STSEMNUMERO_ISSET_ID);
  }

  /** Returns true if field stSemNumero is set (has been assigned a value) and false otherwise */
  public boolean isSetStSemNumero() {
    return EncodingUtils.testBit(__isset_bitfield, __STSEMNUMERO_ISSET_ID);
  }

  public void setStSemNumeroIsSet(boolean value) {
    __isset_bitfield = EncodingUtils.setBit(__isset_bitfield, __STSEMNUMERO_ISSET_ID, value);
  }

  public void setFieldValue(_Fields field, Object value) {
    switch (field) {
    case BAIRRO:
      if (value == null) {
        unsetBairro();
      } else {
        setBairro((String)value);
      }
      break;

    case CEP:
      if (value == null) {
        unsetCep();
      } else {
        setCep((String)value);
      }
      break;

    case CODIGO_IBGE_MUNICIPIO:
      if (value == null) {
        unsetCodigoIbgeMunicipio();
      } else {
        setCodigoIbgeMunicipio((String)value);
      }
      break;

    case COMPLEMENTO:
      if (value == null) {
        unsetComplemento();
      } else {
        setComplemento((String)value);
      }
      break;

    case NOME_LOGRADOURO:
      if (value == null) {
        unsetNomeLogradouro();
      } else {
        setNomeLogradouro((String)value);
      }
      break;

    case NUMERO:
      if (value == null) {
        unsetNumero();
      } else {
        setNumero((String)value);
      }
      break;

    case NUMERO_DNE_UF:
      if (value == null) {
        unsetNumeroDneUf();
      } else {
        setNumeroDneUf((String)value);
      }
      break;

    case TEL_REFERENCIAL:
      if (value == null) {
        unsetTelReferencial();
      } else {
        setTelReferencial((String)value);
      }
      break;

    case TEL_RESIDENCIAL:
      if (value == null) {
        unsetTelResidencial();
      } else {
        setTelResidencial((String)value);
      }
      break;

    case TIPO_LOGRADOURO_NUMERO_DNE:
      if (value == null) {
        unsetTipoLogradouroNumeroDne();
      } else {
        setTipoLogradouroNumeroDne((String)value);
      }
      break;

    case ST_SEM_NUMERO:
      if (value == null) {
        unsetStSemNumero();
      } else {
        setStSemNumero((Boolean)value);
      }
      break;

    }
  }

  public Object getFieldValue(_Fields field) {
    switch (field) {
    case BAIRRO:
      return getBairro();

    case CEP:
      return getCep();

    case CODIGO_IBGE_MUNICIPIO:
      return getCodigoIbgeMunicipio();

    case COMPLEMENTO:
      return getComplemento();

    case NOME_LOGRADOURO:
      return getNomeLogradouro();

    case NUMERO:
      return getNumero();

    case NUMERO_DNE_UF:
      return getNumeroDneUf();

    case TEL_REFERENCIAL:
      return getTelReferencial();

    case TEL_RESIDENCIAL:
      return getTelResidencial();

    case TIPO_LOGRADOURO_NUMERO_DNE:
      return getTipoLogradouroNumeroDne();

    case ST_SEM_NUMERO:
      return Boolean.valueOf(isStSemNumero());

    }
    throw new IllegalStateException();
  }

  /** Returns true if field corresponding to fieldID is set (has been assigned a value) and false otherwise */
  public boolean isSet(_Fields field) {
    if (field == null) {
      throw new IllegalArgumentException();
    }

    switch (field) {
    case BAIRRO:
      return isSetBairro();
    case CEP:
      return isSetCep();
    case CODIGO_IBGE_MUNICIPIO:
      return isSetCodigoIbgeMunicipio();
    case COMPLEMENTO:
      return isSetComplemento();
    case NOME_LOGRADOURO:
      return isSetNomeLogradouro();
    case NUMERO:
      return isSetNumero();
    case NUMERO_DNE_UF:
      return isSetNumeroDneUf();
    case TEL_REFERENCIAL:
      return isSetTelReferencial();
    case TEL_RESIDENCIAL:
      return isSetTelResidencial();
    case TIPO_LOGRADOURO_NUMERO_DNE:
      return isSetTipoLogradouroNumeroDne();
    case ST_SEM_NUMERO:
      return isSetStSemNumero();
    }
    throw new IllegalStateException();
  }

  @Override
  public boolean equals(Object that) {
    if (that == null)
      return false;
    if (that instanceof EnderecoLocalPermanenciaThrift)
      return this.equals((EnderecoLocalPermanenciaThrift)that);
    return false;
  }

  public boolean equals(EnderecoLocalPermanenciaThrift that) {
    if (that == null)
      return false;

    boolean this_present_bairro = true && this.isSetBairro();
    boolean that_present_bairro = true && that.isSetBairro();
    if (this_present_bairro || that_present_bairro) {
      if (!(this_present_bairro && that_present_bairro))
        return false;
      if (!this.bairro.equals(that.bairro))
        return false;
    }

    boolean this_present_cep = true && this.isSetCep();
    boolean that_present_cep = true && that.isSetCep();
    if (this_present_cep || that_present_cep) {
      if (!(this_present_cep && that_present_cep))
        return false;
      if (!this.cep.equals(that.cep))
        return false;
    }

    boolean this_present_codigoIbgeMunicipio = true && this.isSetCodigoIbgeMunicipio();
    boolean that_present_codigoIbgeMunicipio = true && that.isSetCodigoIbgeMunicipio();
    if (this_present_codigoIbgeMunicipio || that_present_codigoIbgeMunicipio) {
      if (!(this_present_codigoIbgeMunicipio && that_present_codigoIbgeMunicipio))
        return false;
      if (!this.codigoIbgeMunicipio.equals(that.codigoIbgeMunicipio))
        return false;
    }

    boolean this_present_complemento = true && this.isSetComplemento();
    boolean that_present_complemento = true && that.isSetComplemento();
    if (this_present_complemento || that_present_complemento) {
      if (!(this_present_complemento && that_present_complemento))
        return false;
      if (!this.complemento.equals(that.complemento))
        return false;
    }

    boolean this_present_nomeLogradouro = true && this.isSetNomeLogradouro();
    boolean that_present_nomeLogradouro = true && that.isSetNomeLogradouro();
    if (this_present_nomeLogradouro || that_present_nomeLogradouro) {
      if (!(this_present_nomeLogradouro && that_present_nomeLogradouro))
        return false;
      if (!this.nomeLogradouro.equals(that.nomeLogradouro))
        return false;
    }

    boolean this_present_numero = true && this.isSetNumero();
    boolean that_present_numero = true && that.isSetNumero();
    if (this_present_numero || that_present_numero) {
      if (!(this_present_numero && that_present_numero))
        return false;
      if (!this.numero.equals(that.numero))
        return false;
    }

    boolean this_present_numeroDneUf = true && this.isSetNumeroDneUf();
    boolean that_present_numeroDneUf = true && that.isSetNumeroDneUf();
    if (this_present_numeroDneUf || that_present_numeroDneUf) {
      if (!(this_present_numeroDneUf && that_present_numeroDneUf))
        return false;
      if (!this.numeroDneUf.equals(that.numeroDneUf))
        return false;
    }

    boolean this_present_telReferencial = true && this.isSetTelReferencial();
    boolean that_present_telReferencial = true && that.isSetTelReferencial();
    if (this_present_telReferencial || that_present_telReferencial) {
      if (!(this_present_telReferencial && that_present_telReferencial))
        return false;
      if (!this.telReferencial.equals(that.telReferencial))
        return false;
    }

    boolean this_present_telResidencial = true && this.isSetTelResidencial();
    boolean that_present_telResidencial = true && that.isSetTelResidencial();
    if (this_present_telResidencial || that_present_telResidencial) {
      if (!(this_present_telResidencial && that_present_telResidencial))
        return false;
      if (!this.telResidencial.equals(that.telResidencial))
        return false;
    }

    boolean this_present_tipoLogradouroNumeroDne = true && this.isSetTipoLogradouroNumeroDne();
    boolean that_present_tipoLogradouroNumeroDne = true && that.isSetTipoLogradouroNumeroDne();
    if (this_present_tipoLogradouroNumeroDne || that_present_tipoLogradouroNumeroDne) {
      if (!(this_present_tipoLogradouroNumeroDne && that_present_tipoLogradouroNumeroDne))
        return false;
      if (!this.tipoLogradouroNumeroDne.equals(that.tipoLogradouroNumeroDne))
        return false;
    }

    boolean this_present_stSemNumero = true && this.isSetStSemNumero();
    boolean that_present_stSemNumero = true && that.isSetStSemNumero();
    if (this_present_stSemNumero || that_present_stSemNumero) {
      if (!(this_present_stSemNumero && that_present_stSemNumero))
        return false;
      if (this.stSemNumero != that.stSemNumero)
        return false;
    }

    return true;
  }

  @Override
  public int hashCode() {
    List<Object> list = new ArrayList<Object>();

    boolean present_bairro = true && (isSetBairro());
    list.add(present_bairro);
    if (present_bairro)
      list.add(bairro);

    boolean present_cep = true && (isSetCep());
    list.add(present_cep);
    if (present_cep)
      list.add(cep);

    boolean present_codigoIbgeMunicipio = true && (isSetCodigoIbgeMunicipio());
    list.add(present_codigoIbgeMunicipio);
    if (present_codigoIbgeMunicipio)
      list.add(codigoIbgeMunicipio);

    boolean present_complemento = true && (isSetComplemento());
    list.add(present_complemento);
    if (present_complemento)
      list.add(complemento);

    boolean present_nomeLogradouro = true && (isSetNomeLogradouro());
    list.add(present_nomeLogradouro);
    if (present_nomeLogradouro)
      list.add(nomeLogradouro);

    boolean present_numero = true && (isSetNumero());
    list.add(present_numero);
    if (present_numero)
      list.add(numero);

    boolean present_numeroDneUf = true && (isSetNumeroDneUf());
    list.add(present_numeroDneUf);
    if (present_numeroDneUf)
      list.add(numeroDneUf);

    boolean present_telReferencial = true && (isSetTelReferencial());
    list.add(present_telReferencial);
    if (present_telReferencial)
      list.add(telReferencial);

    boolean present_telResidencial = true && (isSetTelResidencial());
    list.add(present_telResidencial);
    if (present_telResidencial)
      list.add(telResidencial);

    boolean present_tipoLogradouroNumeroDne = true && (isSetTipoLogradouroNumeroDne());
    list.add(present_tipoLogradouroNumeroDne);
    if (present_tipoLogradouroNumeroDne)
      list.add(tipoLogradouroNumeroDne);

    boolean present_stSemNumero = true && (isSetStSemNumero());
    list.add(present_stSemNumero);
    if (present_stSemNumero)
      list.add(stSemNumero);

    return list.hashCode();
  }

  @Override
  public int compareTo(EnderecoLocalPermanenciaThrift other) {
    if (!getClass().equals(other.getClass())) {
      return getClass().getName().compareTo(other.getClass().getName());
    }

    int lastComparison = 0;

    lastComparison = Boolean.valueOf(isSetBairro()).compareTo(other.isSetBairro());
    if (lastComparison != 0) {
      return lastComparison;
    }
    if (isSetBairro()) {
      lastComparison = org.apache.thrift.TBaseHelper.compareTo(this.bairro, other.bairro);
      if (lastComparison != 0) {
        return lastComparison;
      }
    }
    lastComparison = Boolean.valueOf(isSetCep()).compareTo(other.isSetCep());
    if (lastComparison != 0) {
      return lastComparison;
    }
    if (isSetCep()) {
      lastComparison = org.apache.thrift.TBaseHelper.compareTo(this.cep, other.cep);
      if (lastComparison != 0) {
        return lastComparison;
      }
    }
    lastComparison = Boolean.valueOf(isSetCodigoIbgeMunicipio()).compareTo(other.isSetCodigoIbgeMunicipio());
    if (lastComparison != 0) {
      return lastComparison;
    }
    if (isSetCodigoIbgeMunicipio()) {
      lastComparison = org.apache.thrift.TBaseHelper.compareTo(this.codigoIbgeMunicipio, other.codigoIbgeMunicipio);
      if (lastComparison != 0) {
        return lastComparison;
      }
    }
    lastComparison = Boolean.valueOf(isSetComplemento()).compareTo(other.isSetComplemento());
    if (lastComparison != 0) {
      return lastComparison;
    }
    if (isSetComplemento()) {
      lastComparison = org.apache.thrift.TBaseHelper.compareTo(this.complemento, other.complemento);
      if (lastComparison != 0) {
        return lastComparison;
      }
    }
    lastComparison = Boolean.valueOf(isSetNomeLogradouro()).compareTo(other.isSetNomeLogradouro());
    if (lastComparison != 0) {
      return lastComparison;
    }
    if (isSetNomeLogradouro()) {
      lastComparison = org.apache.thrift.TBaseHelper.compareTo(this.nomeLogradouro, other.nomeLogradouro);
      if (lastComparison != 0) {
        return lastComparison;
      }
    }
    lastComparison = Boolean.valueOf(isSetNumero()).compareTo(other.isSetNumero());
    if (lastComparison != 0) {
      return lastComparison;
    }
    if (isSetNumero()) {
      lastComparison = org.apache.thrift.TBaseHelper.compareTo(this.numero, other.numero);
      if (lastComparison != 0) {
        return lastComparison;
      }
    }
    lastComparison = Boolean.valueOf(isSetNumeroDneUf()).compareTo(other.isSetNumeroDneUf());
    if (lastComparison != 0) {
      return lastComparison;
    }
    if (isSetNumeroDneUf()) {
      lastComparison = org.apache.thrift.TBaseHelper.compareTo(this.numeroDneUf, other.numeroDneUf);
      if (lastComparison != 0) {
        return lastComparison;
      }
    }
    lastComparison = Boolean.valueOf(isSetTelReferencial()).compareTo(other.isSetTelReferencial());
    if (lastComparison != 0) {
      return lastComparison;
    }
    if (isSetTelReferencial()) {
      lastComparison = org.apache.thrift.TBaseHelper.compareTo(this.telReferencial, other.telReferencial);
      if (lastComparison != 0) {
        return lastComparison;
      }
    }
    lastComparison = Boolean.valueOf(isSetTelResidencial()).compareTo(other.isSetTelResidencial());
    if (lastComparison != 0) {
      return lastComparison;
    }
    if (isSetTelResidencial()) {
      lastComparison = org.apache.thrift.TBaseHelper.compareTo(this.telResidencial, other.telResidencial);
      if (lastComparison != 0) {
        return lastComparison;
      }
    }
    lastComparison = Boolean.valueOf(isSetTipoLogradouroNumeroDne()).compareTo(other.isSetTipoLogradouroNumeroDne());
    if (lastComparison != 0) {
      return lastComparison;
    }
    if (isSetTipoLogradouroNumeroDne()) {
      lastComparison = org.apache.thrift.TBaseHelper.compareTo(this.tipoLogradouroNumeroDne, other.tipoLogradouroNumeroDne);
      if (lastComparison != 0) {
        return lastComparison;
      }
    }
    lastComparison = Boolean.valueOf(isSetStSemNumero()).compareTo(other.isSetStSemNumero());
    if (lastComparison != 0) {
      return lastComparison;
    }
    if (isSetStSemNumero()) {
      lastComparison = org.apache.thrift.TBaseHelper.compareTo(this.stSemNumero, other.stSemNumero);
      if (lastComparison != 0) {
        return lastComparison;
      }
    }
    return 0;
  }

  public _Fields fieldForId(int fieldId) {
    return _Fields.findByThriftId(fieldId);
  }

  public void read(org.apache.thrift.protocol.TProtocol iprot) throws org.apache.thrift.TException {
    schemes.get(iprot.getScheme()).getScheme().read(iprot, this);
  }

  public void write(org.apache.thrift.protocol.TProtocol oprot) throws org.apache.thrift.TException {
    schemes.get(oprot.getScheme()).getScheme().write(oprot, this);
  }

  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder("EnderecoLocalPermanenciaThrift(");
    boolean first = true;

    if (isSetBairro()) {
      sb.append("bairro:");
      if (this.bairro == null) {
        sb.append("null");
      } else {
        sb.append(this.bairro);
      }
      first = false;
    }
    if (isSetCep()) {
      if (!first) sb.append(", ");
      sb.append("cep:");
      if (this.cep == null) {
        sb.append("null");
      } else {
        sb.append(this.cep);
      }
      first = false;
    }
    if (isSetCodigoIbgeMunicipio()) {
      if (!first) sb.append(", ");
      sb.append("codigoIbgeMunicipio:");
      if (this.codigoIbgeMunicipio == null) {
        sb.append("null");
      } else {
        sb.append(this.codigoIbgeMunicipio);
      }
      first = false;
    }
    if (isSetComplemento()) {
      if (!first) sb.append(", ");
      sb.append("complemento:");
      if (this.complemento == null) {
        sb.append("null");
      } else {
        sb.append(this.complemento);
      }
      first = false;
    }
    if (isSetNomeLogradouro()) {
      if (!first) sb.append(", ");
      sb.append("nomeLogradouro:");
      if (this.nomeLogradouro == null) {
        sb.append("null");
      } else {
        sb.append(this.nomeLogradouro);
      }
      first = false;
    }
    if (isSetNumero()) {
      if (!first) sb.append(", ");
      sb.append("numero:");
      if (this.numero == null) {
        sb.append("null");
      } else {
        sb.append(this.numero);
      }
      first = false;
    }
    if (isSetNumeroDneUf()) {
      if (!first) sb.append(", ");
      sb.append("numeroDneUf:");
      if (this.numeroDneUf == null) {
        sb.append("null");
      } else {
        sb.append(this.numeroDneUf);
      }
      first = false;
    }
    if (isSetTelReferencial()) {
      if (!first) sb.append(", ");
      sb.append("telReferencial:");
      if (this.telReferencial == null) {
        sb.append("null");
      } else {
        sb.append(this.telReferencial);
      }
      first = false;
    }
    if (isSetTelResidencial()) {
      if (!first) sb.append(", ");
      sb.append("telResidencial:");
      if (this.telResidencial == null) {
        sb.append("null");
      } else {
        sb.append(this.telResidencial);
      }
      first = false;
    }
    if (isSetTipoLogradouroNumeroDne()) {
      if (!first) sb.append(", ");
      sb.append("tipoLogradouroNumeroDne:");
      if (this.tipoLogradouroNumeroDne == null) {
        sb.append("null");
      } else {
        sb.append(this.tipoLogradouroNumeroDne);
      }
      first = false;
    }
    if (isSetStSemNumero()) {
      if (!first) sb.append(", ");
      sb.append("stSemNumero:");
      sb.append(this.stSemNumero);
      first = false;
    }
    sb.append(")");
    return sb.toString();
  }

  public void validate() throws org.apache.thrift.TException {
    // check for required fields
    // check for sub-struct validity
  }

  private void writeObject(java.io.ObjectOutputStream out) throws java.io.IOException {
    try {
      write(new org.apache.thrift.protocol.TCompactProtocol(new org.apache.thrift.transport.TIOStreamTransport(out)));
    } catch (org.apache.thrift.TException te) {
      throw new java.io.IOException(te);
    }
  }

  private void readObject(java.io.ObjectInputStream in) throws java.io.IOException, ClassNotFoundException {
    try {
      // it doesn't seem like you should have to do this, but java serialization is wacky, and doesn't call the default constructor.
      __isset_bitfield = 0;
      read(new org.apache.thrift.protocol.TCompactProtocol(new org.apache.thrift.transport.TIOStreamTransport(in)));
    } catch (org.apache.thrift.TException te) {
      throw new java.io.IOException(te);
    }
  }

  private static class EnderecoLocalPermanenciaThriftStandardSchemeFactory implements SchemeFactory {
    public EnderecoLocalPermanenciaThriftStandardScheme getScheme() {
      return new EnderecoLocalPermanenciaThriftStandardScheme();
    }
  }

  private static class EnderecoLocalPermanenciaThriftStandardScheme extends StandardScheme<EnderecoLocalPermanenciaThrift> {

    public void read(org.apache.thrift.protocol.TProtocol iprot, EnderecoLocalPermanenciaThrift struct) throws org.apache.thrift.TException {
      org.apache.thrift.protocol.TField schemeField;
      iprot.readStructBegin();
      while (true)
      {
        schemeField = iprot.readFieldBegin();
        if (schemeField.type == org.apache.thrift.protocol.TType.STOP) { 
          break;
        }
        switch (schemeField.id) {
          case 1: // BAIRRO
            if (schemeField.type == org.apache.thrift.protocol.TType.STRING) {
              struct.bairro = iprot.readString();
              struct.setBairroIsSet(true);
            } else { 
              org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
            }
            break;
          case 2: // CEP
            if (schemeField.type == org.apache.thrift.protocol.TType.STRING) {
              struct.cep = iprot.readString();
              struct.setCepIsSet(true);
            } else { 
              org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
            }
            break;
          case 3: // CODIGO_IBGE_MUNICIPIO
            if (schemeField.type == org.apache.thrift.protocol.TType.STRING) {
              struct.codigoIbgeMunicipio = iprot.readString();
              struct.setCodigoIbgeMunicipioIsSet(true);
            } else { 
              org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
            }
            break;
          case 4: // COMPLEMENTO
            if (schemeField.type == org.apache.thrift.protocol.TType.STRING) {
              struct.complemento = iprot.readString();
              struct.setComplementoIsSet(true);
            } else { 
              org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
            }
            break;
          case 5: // NOME_LOGRADOURO
            if (schemeField.type == org.apache.thrift.protocol.TType.STRING) {
              struct.nomeLogradouro = iprot.readString();
              struct.setNomeLogradouroIsSet(true);
            } else { 
              org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
            }
            break;
          case 6: // NUMERO
            if (schemeField.type == org.apache.thrift.protocol.TType.STRING) {
              struct.numero = iprot.readString();
              struct.setNumeroIsSet(true);
            } else { 
              org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
            }
            break;
          case 7: // NUMERO_DNE_UF
            if (schemeField.type == org.apache.thrift.protocol.TType.STRING) {
              struct.numeroDneUf = iprot.readString();
              struct.setNumeroDneUfIsSet(true);
            } else { 
              org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
            }
            break;
          case 8: // TEL_REFERENCIAL
            if (schemeField.type == org.apache.thrift.protocol.TType.STRING) {
              struct.telReferencial = iprot.readString();
              struct.setTelReferencialIsSet(true);
            } else { 
              org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
            }
            break;
          case 9: // TEL_RESIDENCIAL
            if (schemeField.type == org.apache.thrift.protocol.TType.STRING) {
              struct.telResidencial = iprot.readString();
              struct.setTelResidencialIsSet(true);
            } else { 
              org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
            }
            break;
          case 10: // TIPO_LOGRADOURO_NUMERO_DNE
            if (schemeField.type == org.apache.thrift.protocol.TType.STRING) {
              struct.tipoLogradouroNumeroDne = iprot.readString();
              struct.setTipoLogradouroNumeroDneIsSet(true);
            } else { 
              org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
            }
            break;
          case 11: // ST_SEM_NUMERO
            if (schemeField.type == org.apache.thrift.protocol.TType.BOOL) {
              struct.stSemNumero = iprot.readBool();
              struct.setStSemNumeroIsSet(true);
            } else { 
              org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
            }
            break;
          default:
            org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
        }
        iprot.readFieldEnd();
      }
      iprot.readStructEnd();
      struct.validate();
    }

    public void write(org.apache.thrift.protocol.TProtocol oprot, EnderecoLocalPermanenciaThrift struct) throws org.apache.thrift.TException {
      struct.validate();

      oprot.writeStructBegin(STRUCT_DESC);
      if (struct.bairro != null) {
        if (struct.isSetBairro()) {
          oprot.writeFieldBegin(BAIRRO_FIELD_DESC);
          oprot.writeString(struct.bairro);
          oprot.writeFieldEnd();
        }
      }
      if (struct.cep != null) {
        if (struct.isSetCep()) {
          oprot.writeFieldBegin(CEP_FIELD_DESC);
          oprot.writeString(struct.cep);
          oprot.writeFieldEnd();
        }
      }
      if (struct.codigoIbgeMunicipio != null) {
        if (struct.isSetCodigoIbgeMunicipio()) {
          oprot.writeFieldBegin(CODIGO_IBGE_MUNICIPIO_FIELD_DESC);
          oprot.writeString(struct.codigoIbgeMunicipio);
          oprot.writeFieldEnd();
        }
      }
      if (struct.complemento != null) {
        if (struct.isSetComplemento()) {
          oprot.writeFieldBegin(COMPLEMENTO_FIELD_DESC);
          oprot.writeString(struct.complemento);
          oprot.writeFieldEnd();
        }
      }
      if (struct.nomeLogradouro != null) {
        if (struct.isSetNomeLogradouro()) {
          oprot.writeFieldBegin(NOME_LOGRADOURO_FIELD_DESC);
          oprot.writeString(struct.nomeLogradouro);
          oprot.writeFieldEnd();
        }
      }
      if (struct.numero != null) {
        if (struct.isSetNumero()) {
          oprot.writeFieldBegin(NUMERO_FIELD_DESC);
          oprot.writeString(struct.numero);
          oprot.writeFieldEnd();
        }
      }
      if (struct.numeroDneUf != null) {
        if (struct.isSetNumeroDneUf()) {
          oprot.writeFieldBegin(NUMERO_DNE_UF_FIELD_DESC);
          oprot.writeString(struct.numeroDneUf);
          oprot.writeFieldEnd();
        }
      }
      if (struct.telReferencial != null) {
        if (struct.isSetTelReferencial()) {
          oprot.writeFieldBegin(TEL_REFERENCIAL_FIELD_DESC);
          oprot.writeString(struct.telReferencial);
          oprot.writeFieldEnd();
        }
      }
      if (struct.telResidencial != null) {
        if (struct.isSetTelResidencial()) {
          oprot.writeFieldBegin(TEL_RESIDENCIAL_FIELD_DESC);
          oprot.writeString(struct.telResidencial);
          oprot.writeFieldEnd();
        }
      }
      if (struct.tipoLogradouroNumeroDne != null) {
        if (struct.isSetTipoLogradouroNumeroDne()) {
          oprot.writeFieldBegin(TIPO_LOGRADOURO_NUMERO_DNE_FIELD_DESC);
          oprot.writeString(struct.tipoLogradouroNumeroDne);
          oprot.writeFieldEnd();
        }
      }
      if (struct.isSetStSemNumero()) {
        oprot.writeFieldBegin(ST_SEM_NUMERO_FIELD_DESC);
        oprot.writeBool(struct.stSemNumero);
        oprot.writeFieldEnd();
      }
      oprot.writeFieldStop();
      oprot.writeStructEnd();
    }

  }

  private static class EnderecoLocalPermanenciaThriftTupleSchemeFactory implements SchemeFactory {
    public EnderecoLocalPermanenciaThriftTupleScheme getScheme() {
      return new EnderecoLocalPermanenciaThriftTupleScheme();
    }
  }

  private static class EnderecoLocalPermanenciaThriftTupleScheme extends TupleScheme<EnderecoLocalPermanenciaThrift> {

    @Override
    public void write(org.apache.thrift.protocol.TProtocol prot, EnderecoLocalPermanenciaThrift struct) throws org.apache.thrift.TException {
      TTupleProtocol oprot = (TTupleProtocol) prot;
      BitSet optionals = new BitSet();
      if (struct.isSetBairro()) {
        optionals.set(0);
      }
      if (struct.isSetCep()) {
        optionals.set(1);
      }
      if (struct.isSetCodigoIbgeMunicipio()) {
        optionals.set(2);
      }
      if (struct.isSetComplemento()) {
        optionals.set(3);
      }
      if (struct.isSetNomeLogradouro()) {
        optionals.set(4);
      }
      if (struct.isSetNumero()) {
        optionals.set(5);
      }
      if (struct.isSetNumeroDneUf()) {
        optionals.set(6);
      }
      if (struct.isSetTelReferencial()) {
        optionals.set(7);
      }
      if (struct.isSetTelResidencial()) {
        optionals.set(8);
      }
      if (struct.isSetTipoLogradouroNumeroDne()) {
        optionals.set(9);
      }
      if (struct.isSetStSemNumero()) {
        optionals.set(10);
      }
      oprot.writeBitSet(optionals, 11);
      if (struct.isSetBairro()) {
        oprot.writeString(struct.bairro);
      }
      if (struct.isSetCep()) {
        oprot.writeString(struct.cep);
      }
      if (struct.isSetCodigoIbgeMunicipio()) {
        oprot.writeString(struct.codigoIbgeMunicipio);
      }
      if (struct.isSetComplemento()) {
        oprot.writeString(struct.complemento);
      }
      if (struct.isSetNomeLogradouro()) {
        oprot.writeString(struct.nomeLogradouro);
      }
      if (struct.isSetNumero()) {
        oprot.writeString(struct.numero);
      }
      if (struct.isSetNumeroDneUf()) {
        oprot.writeString(struct.numeroDneUf);
      }
      if (struct.isSetTelReferencial()) {
        oprot.writeString(struct.telReferencial);
      }
      if (struct.isSetTelResidencial()) {
        oprot.writeString(struct.telResidencial);
      }
      if (struct.isSetTipoLogradouroNumeroDne()) {
        oprot.writeString(struct.tipoLogradouroNumeroDne);
      }
      if (struct.isSetStSemNumero()) {
        oprot.writeBool(struct.stSemNumero);
      }
    }

    @Override
    public void read(org.apache.thrift.protocol.TProtocol prot, EnderecoLocalPermanenciaThrift struct) throws org.apache.thrift.TException {
      TTupleProtocol iprot = (TTupleProtocol) prot;
      BitSet incoming = iprot.readBitSet(11);
      if (incoming.get(0)) {
        struct.bairro = iprot.readString();
        struct.setBairroIsSet(true);
      }
      if (incoming.get(1)) {
        struct.cep = iprot.readString();
        struct.setCepIsSet(true);
      }
      if (incoming.get(2)) {
        struct.codigoIbgeMunicipio = iprot.readString();
        struct.setCodigoIbgeMunicipioIsSet(true);
      }
      if (incoming.get(3)) {
        struct.complemento = iprot.readString();
        struct.setComplementoIsSet(true);
      }
      if (incoming.get(4)) {
        struct.nomeLogradouro = iprot.readString();
        struct.setNomeLogradouroIsSet(true);
      }
      if (incoming.get(5)) {
        struct.numero = iprot.readString();
        struct.setNumeroIsSet(true);
      }
      if (incoming.get(6)) {
        struct.numeroDneUf = iprot.readString();
        struct.setNumeroDneUfIsSet(true);
      }
      if (incoming.get(7)) {
        struct.telReferencial = iprot.readString();
        struct.setTelReferencialIsSet(true);
      }
      if (incoming.get(8)) {
        struct.telResidencial = iprot.readString();
        struct.setTelResidencialIsSet(true);
      }
      if (incoming.get(9)) {
        struct.tipoLogradouroNumeroDne = iprot.readString();
        struct.setTipoLogradouroNumeroDneIsSet(true);
      }
      if (incoming.get(10)) {
        struct.stSemNumero = iprot.readBool();
        struct.setStSemNumeroIsSet(true);
      }
    }
  }

}

