/**
 * Autogenerated by Thrift Compiler (0.9.2)
 *
 * DO NOT EDIT UNLESS YOU ARE SURE THAT YOU KNOW WHAT YOU ARE DOING
 *  @generated
 */
package br.gov.saude.esus.cds.transport.generated.thrift.avaliacaoelegibilidade;

import org.apache.thrift.scheme.IScheme;
import org.apache.thrift.scheme.SchemeFactory;
import org.apache.thrift.scheme.StandardScheme;

import org.apache.thrift.scheme.TupleScheme;
import org.apache.thrift.protocol.TTupleProtocol;
import org.apache.thrift.protocol.TProtocolException;
import org.apache.thrift.EncodingUtils;
import org.apache.thrift.TException;
import org.apache.thrift.async.AsyncMethodCallback;
import org.apache.thrift.server.AbstractNonblockingServer.*;
import java.util.List;
import java.util.ArrayList;
import java.util.Map;
import java.util.HashMap;
import java.util.EnumMap;
import java.util.Set;
import java.util.HashSet;
import java.util.EnumSet;
import java.util.Collections;
import java.util.BitSet;
import java.nio.ByteBuffer;
import java.util.Arrays;
import javax.annotation.Generated;
import org.slf4j.Logger;
import org.slf4j.LoggerFactory;

@SuppressWarnings({"cast", "rawtypes", "serial", "unchecked"})
@Generated(value = "Autogenerated by Thrift Compiler (0.9.2)", date = "2015-8-12")
public class FichaAvaliacaoElegibilidadeThrift implements org.apache.thrift.TBase<FichaAvaliacaoElegibilidadeThrift, FichaAvaliacaoElegibilidadeThrift._Fields>, java.io.Serializable, Cloneable, Comparable<FichaAvaliacaoElegibilidadeThrift> {
  private static final org.apache.thrift.protocol.TStruct STRUCT_DESC = new org.apache.thrift.protocol.TStruct("FichaAvaliacaoElegibilidadeThrift");

  private static final org.apache.thrift.protocol.TField UUID_FICHA_FIELD_DESC = new org.apache.thrift.protocol.TField("uuidFicha", org.apache.thrift.protocol.TType.STRING, (short)1);
  private static final org.apache.thrift.protocol.TField TP_CDS_ORIGEM_FIELD_DESC = new org.apache.thrift.protocol.TField("tpCdsOrigem", org.apache.thrift.protocol.TType.I32, (short)2);
  private static final org.apache.thrift.protocol.TField HEADER_TRANSPORT_FIELD_DESC = new org.apache.thrift.protocol.TField("headerTransport", org.apache.thrift.protocol.TType.STRUCT, (short)3);
  private static final org.apache.thrift.protocol.TField NUMERO_CARTAO_SUS_FIELD_DESC = new org.apache.thrift.protocol.TField("numeroCartaoSus", org.apache.thrift.protocol.TType.STRING, (short)4);
  private static final org.apache.thrift.protocol.TField NOME_CIDADAO_FIELD_DESC = new org.apache.thrift.protocol.TField("nomeCidadao", org.apache.thrift.protocol.TType.STRING, (short)5);
  private static final org.apache.thrift.protocol.TField NOME_SOCIAL_CIDADAO_FIELD_DESC = new org.apache.thrift.protocol.TField("nomeSocialCidadao", org.apache.thrift.protocol.TType.STRING, (short)6);
  private static final org.apache.thrift.protocol.TField DATA_NASCIMENTO_CIDADAO_FIELD_DESC = new org.apache.thrift.protocol.TField("dataNascimentoCidadao", org.apache.thrift.protocol.TType.I64, (short)7);
  private static final org.apache.thrift.protocol.TField SEXO_CIDADAO_FIELD_DESC = new org.apache.thrift.protocol.TField("sexoCidadao", org.apache.thrift.protocol.TType.I64, (short)8);
  private static final org.apache.thrift.protocol.TField RACA_COR_CIDADAO_FIELD_DESC = new org.apache.thrift.protocol.TField("racaCorCidadao", org.apache.thrift.protocol.TType.I64, (short)9);
  private static final org.apache.thrift.protocol.TField NOME_MAE_CIDADAO_FIELD_DESC = new org.apache.thrift.protocol.TField("nomeMaeCidadao", org.apache.thrift.protocol.TType.STRING, (short)10);
  private static final org.apache.thrift.protocol.TField DESCONHECE_NOME_MAE_FIELD_DESC = new org.apache.thrift.protocol.TField("desconheceNomeMae", org.apache.thrift.protocol.TType.BOOL, (short)11);
  private static final org.apache.thrift.protocol.TField CODIGO_IBGE_MUNICIPIO_NASCIMENTO_FIELD_DESC = new org.apache.thrift.protocol.TField("codigoIbgeMunicipioNascimento", org.apache.thrift.protocol.TType.STRING, (short)12);
  private static final org.apache.thrift.protocol.TField CODIGO_NACIONALIDADE_FIELD_DESC = new org.apache.thrift.protocol.TField("codigoNacionalidade", org.apache.thrift.protocol.TType.I64, (short)13);
  private static final org.apache.thrift.protocol.TField EMAIL_CIDADAO_FIELD_DESC = new org.apache.thrift.protocol.TField("emailCidadao", org.apache.thrift.protocol.TType.STRING, (short)14);
  private static final org.apache.thrift.protocol.TField NUMERO_NIS_PIS_PASEP_FIELD_DESC = new org.apache.thrift.protocol.TField("numeroNisPisPasep", org.apache.thrift.protocol.TType.STRING, (short)15);
  private static final org.apache.thrift.protocol.TField ENDERECO_FIELD_DESC = new org.apache.thrift.protocol.TField("endereco", org.apache.thrift.protocol.TType.STRUCT, (short)16);
  private static final org.apache.thrift.protocol.TField ATENCAO_DOMICILIAR_ORIGEM_FIELD_DESC = new org.apache.thrift.protocol.TField("atencaoDomiciliarOrigem", org.apache.thrift.protocol.TType.I64, (short)17);
  private static final org.apache.thrift.protocol.TField ATENCAO_DOMICILIAR_MODALIDADE_FIELD_DESC = new org.apache.thrift.protocol.TField("atencaoDomiciliarModalidade", org.apache.thrift.protocol.TType.I64, (short)18);
  private static final org.apache.thrift.protocol.TField SITUACOES_PRESENTES_FIELD_DESC = new org.apache.thrift.protocol.TField("situacoesPresentes", org.apache.thrift.protocol.TType.LIST, (short)19);
  private static final org.apache.thrift.protocol.TField CID10_PRINCIPAL_FIELD_DESC = new org.apache.thrift.protocol.TField("cid10Principal", org.apache.thrift.protocol.TType.STRING, (short)20);
  private static final org.apache.thrift.protocol.TField CID10_SEGUNDO_FIELD_DESC = new org.apache.thrift.protocol.TField("cid10Segundo", org.apache.thrift.protocol.TType.STRING, (short)21);
  private static final org.apache.thrift.protocol.TField CID10_TERCEIRO_FIELD_DESC = new org.apache.thrift.protocol.TField("cid10Terceiro", org.apache.thrift.protocol.TType.STRING, (short)22);
  private static final org.apache.thrift.protocol.TField CONCLUSAO_DESTINO_ELEGIVEL_FIELD_DESC = new org.apache.thrift.protocol.TField("conclusaoDestinoElegivel", org.apache.thrift.protocol.TType.I64, (short)23);
  private static final org.apache.thrift.protocol.TField CONCLUSAO_DESTINO_INELEGIVEL_FIELD_DESC = new org.apache.thrift.protocol.TField("conclusaoDestinoInelegivel", org.apache.thrift.protocol.TType.LIST, (short)24);
  private static final org.apache.thrift.protocol.TField CUIDADOR_CIDADAO_FIELD_DESC = new org.apache.thrift.protocol.TField("cuidadorCidadao", org.apache.thrift.protocol.TType.I64, (short)25);

  private static final Map<Class<? extends IScheme>, SchemeFactory> schemes = new HashMap<Class<? extends IScheme>, SchemeFactory>();
  static {
    schemes.put(StandardScheme.class, new FichaAvaliacaoElegibilidadeThriftStandardSchemeFactory());
    schemes.put(TupleScheme.class, new FichaAvaliacaoElegibilidadeThriftTupleSchemeFactory());
  }

  private String uuidFicha; // required
  private int tpCdsOrigem; // optional
  private br.gov.saude.esus.cds.transport.generated.thrift.common.UnicaLotacaoHeaderThrift headerTransport; // required
  private String numeroCartaoSus; // optional
  private String nomeCidadao; // optional
  private String nomeSocialCidadao; // optional
  private long dataNascimentoCidadao; // optional
  private long sexoCidadao; // optional
  private long racaCorCidadao; // optional
  private String nomeMaeCidadao; // optional
  private boolean desconheceNomeMae; // optional
  private String codigoIbgeMunicipioNascimento; // optional
  private long codigoNacionalidade; // optional
  private String emailCidadao; // optional
  private String numeroNisPisPasep; // optional
  private br.gov.saude.esus.cds.transport.generated.thrift.common.EnderecoLocalPermanenciaThrift endereco; // optional
  private long atencaoDomiciliarOrigem; // optional
  private long atencaoDomiciliarModalidade; // optional
  private List<Long> situacoesPresentes; // optional
  private String cid10Principal; // optional
  private String cid10Segundo; // optional
  private String cid10Terceiro; // optional
  private long conclusaoDestinoElegivel; // optional
  private List<Long> conclusaoDestinoInelegivel; // optional
  private long cuidadorCidadao; // optional

  /** The set of fields this struct contains, along with convenience methods for finding and manipulating them. */
  public enum _Fields implements org.apache.thrift.TFieldIdEnum {
    UUID_FICHA((short)1, "uuidFicha"),
    TP_CDS_ORIGEM((short)2, "tpCdsOrigem"),
    HEADER_TRANSPORT((short)3, "headerTransport"),
    NUMERO_CARTAO_SUS((short)4, "numeroCartaoSus"),
    NOME_CIDADAO((short)5, "nomeCidadao"),
    NOME_SOCIAL_CIDADAO((short)6, "nomeSocialCidadao"),
    DATA_NASCIMENTO_CIDADAO((short)7, "dataNascimentoCidadao"),
    SEXO_CIDADAO((short)8, "sexoCidadao"),
    RACA_COR_CIDADAO((short)9, "racaCorCidadao"),
    NOME_MAE_CIDADAO((short)10, "nomeMaeCidadao"),
    DESCONHECE_NOME_MAE((short)11, "desconheceNomeMae"),
    CODIGO_IBGE_MUNICIPIO_NASCIMENTO((short)12, "codigoIbgeMunicipioNascimento"),
    CODIGO_NACIONALIDADE((short)13, "codigoNacionalidade"),
    EMAIL_CIDADAO((short)14, "emailCidadao"),
    NUMERO_NIS_PIS_PASEP((short)15, "numeroNisPisPasep"),
    ENDERECO((short)16, "endereco"),
    ATENCAO_DOMICILIAR_ORIGEM((short)17, "atencaoDomiciliarOrigem"),
    ATENCAO_DOMICILIAR_MODALIDADE((short)18, "atencaoDomiciliarModalidade"),
    SITUACOES_PRESENTES((short)19, "situacoesPresentes"),
    CID10_PRINCIPAL((short)20, "cid10Principal"),
    CID10_SEGUNDO((short)21, "cid10Segundo"),
    CID10_TERCEIRO((short)22, "cid10Terceiro"),
    CONCLUSAO_DESTINO_ELEGIVEL((short)23, "conclusaoDestinoElegivel"),
    CONCLUSAO_DESTINO_INELEGIVEL((short)24, "conclusaoDestinoInelegivel"),
    CUIDADOR_CIDADAO((short)25, "cuidadorCidadao");

    private static final Map<String, _Fields> byName = new HashMap<String, _Fields>();

    static {
      for (_Fields field : EnumSet.allOf(_Fields.class)) {
        byName.put(field.getFieldName(), field);
      }
    }

    /**
     * Find the _Fields constant that matches fieldId, or null if its not found.
     */
    public static _Fields findByThriftId(int fieldId) {
      switch(fieldId) {
        case 1: // UUID_FICHA
          return UUID_FICHA;
        case 2: // TP_CDS_ORIGEM
          return TP_CDS_ORIGEM;
        case 3: // HEADER_TRANSPORT
          return HEADER_TRANSPORT;
        case 4: // NUMERO_CARTAO_SUS
          return NUMERO_CARTAO_SUS;
        case 5: // NOME_CIDADAO
          return NOME_CIDADAO;
        case 6: // NOME_SOCIAL_CIDADAO
          return NOME_SOCIAL_CIDADAO;
        case 7: // DATA_NASCIMENTO_CIDADAO
          return DATA_NASCIMENTO_CIDADAO;
        case 8: // SEXO_CIDADAO
          return SEXO_CIDADAO;
        case 9: // RACA_COR_CIDADAO
          return RACA_COR_CIDADAO;
        case 10: // NOME_MAE_CIDADAO
          return NOME_MAE_CIDADAO;
        case 11: // DESCONHECE_NOME_MAE
          return DESCONHECE_NOME_MAE;
        case 12: // CODIGO_IBGE_MUNICIPIO_NASCIMENTO
          return CODIGO_IBGE_MUNICIPIO_NASCIMENTO;
        case 13: // CODIGO_NACIONALIDADE
          return CODIGO_NACIONALIDADE;
        case 14: // EMAIL_CIDADAO
          return EMAIL_CIDADAO;
        case 15: // NUMERO_NIS_PIS_PASEP
          return NUMERO_NIS_PIS_PASEP;
        case 16: // ENDERECO
          return ENDERECO;
        case 17: // ATENCAO_DOMICILIAR_ORIGEM
          return ATENCAO_DOMICILIAR_ORIGEM;
        case 18: // ATENCAO_DOMICILIAR_MODALIDADE
          return ATENCAO_DOMICILIAR_MODALIDADE;
        case 19: // SITUACOES_PRESENTES
          return SITUACOES_PRESENTES;
        case 20: // CID10_PRINCIPAL
          return CID10_PRINCIPAL;
        case 21: // CID10_SEGUNDO
          return CID10_SEGUNDO;
        case 22: // CID10_TERCEIRO
          return CID10_TERCEIRO;
        case 23: // CONCLUSAO_DESTINO_ELEGIVEL
          return CONCLUSAO_DESTINO_ELEGIVEL;
        case 24: // CONCLUSAO_DESTINO_INELEGIVEL
          return CONCLUSAO_DESTINO_INELEGIVEL;
        case 25: // CUIDADOR_CIDADAO
          return CUIDADOR_CIDADAO;
        default:
          return null;
      }
    }

    /**
     * Find the _Fields constant that matches fieldId, throwing an exception
     * if it is not found.
     */
    public static _Fields findByThriftIdOrThrow(int fieldId) {
      _Fields fields = findByThriftId(fieldId);
      if (fields == null) throw new IllegalArgumentException("Field " + fieldId + " doesn't exist!");
      return fields;
    }

    /**
     * Find the _Fields constant that matches name, or null if its not found.
     */
    public static _Fields findByName(String name) {
      return byName.get(name);
    }

    private final short _thriftId;
    private final String _fieldName;

    _Fields(short thriftId, String fieldName) {
      _thriftId = thriftId;
      _fieldName = fieldName;
    }

    public short getThriftFieldId() {
      return _thriftId;
    }

    public String getFieldName() {
      return _fieldName;
    }
  }

  // isset id assignments
  private static final int __TPCDSORIGEM_ISSET_ID = 0;
  private static final int __DATANASCIMENTOCIDADAO_ISSET_ID = 1;
  private static final int __SEXOCIDADAO_ISSET_ID = 2;
  private static final int __RACACORCIDADAO_ISSET_ID = 3;
  private static final int __DESCONHECENOMEMAE_ISSET_ID = 4;
  private static final int __CODIGONACIONALIDADE_ISSET_ID = 5;
  private static final int __ATENCAODOMICILIARORIGEM_ISSET_ID = 6;
  private static final int __ATENCAODOMICILIARMODALIDADE_ISSET_ID = 7;
  private static final int __CONCLUSAODESTINOELEGIVEL_ISSET_ID = 8;
  private static final int __CUIDADORCIDADAO_ISSET_ID = 9;
  private short __isset_bitfield = 0;
  private static final _Fields optionals[] = {_Fields.TP_CDS_ORIGEM,_Fields.NUMERO_CARTAO_SUS,_Fields.NOME_CIDADAO,_Fields.NOME_SOCIAL_CIDADAO,_Fields.DATA_NASCIMENTO_CIDADAO,_Fields.SEXO_CIDADAO,_Fields.RACA_COR_CIDADAO,_Fields.NOME_MAE_CIDADAO,_Fields.DESCONHECE_NOME_MAE,_Fields.CODIGO_IBGE_MUNICIPIO_NASCIMENTO,_Fields.CODIGO_NACIONALIDADE,_Fields.EMAIL_CIDADAO,_Fields.NUMERO_NIS_PIS_PASEP,_Fields.ENDERECO,_Fields.ATENCAO_DOMICILIAR_ORIGEM,_Fields.ATENCAO_DOMICILIAR_MODALIDADE,_Fields.SITUACOES_PRESENTES,_Fields.CID10_PRINCIPAL,_Fields.CID10_SEGUNDO,_Fields.CID10_TERCEIRO,_Fields.CONCLUSAO_DESTINO_ELEGIVEL,_Fields.CONCLUSAO_DESTINO_INELEGIVEL,_Fields.CUIDADOR_CIDADAO};
  public static final Map<_Fields, org.apache.thrift.meta_data.FieldMetaData> metaDataMap;
  static {
    Map<_Fields, org.apache.thrift.meta_data.FieldMetaData> tmpMap = new EnumMap<_Fields, org.apache.thrift.meta_data.FieldMetaData>(_Fields.class);
    tmpMap.put(_Fields.UUID_FICHA, new org.apache.thrift.meta_data.FieldMetaData("uuidFicha", org.apache.thrift.TFieldRequirementType.REQUIRED, 
        new org.apache.thrift.meta_data.FieldValueMetaData(org.apache.thrift.protocol.TType.STRING)));
    tmpMap.put(_Fields.TP_CDS_ORIGEM, new org.apache.thrift.meta_data.FieldMetaData("tpCdsOrigem", org.apache.thrift.TFieldRequirementType.OPTIONAL, 
        new org.apache.thrift.meta_data.FieldValueMetaData(org.apache.thrift.protocol.TType.I32)));
    tmpMap.put(_Fields.HEADER_TRANSPORT, new org.apache.thrift.meta_data.FieldMetaData("headerTransport", org.apache.thrift.TFieldRequirementType.REQUIRED, 
        new org.apache.thrift.meta_data.StructMetaData(org.apache.thrift.protocol.TType.STRUCT, br.gov.saude.esus.cds.transport.generated.thrift.common.UnicaLotacaoHeaderThrift.class)));
    tmpMap.put(_Fields.NUMERO_CARTAO_SUS, new org.apache.thrift.meta_data.FieldMetaData("numeroCartaoSus", org.apache.thrift.TFieldRequirementType.OPTIONAL, 
        new org.apache.thrift.meta_data.FieldValueMetaData(org.apache.thrift.protocol.TType.STRING)));
    tmpMap.put(_Fields.NOME_CIDADAO, new org.apache.thrift.meta_data.FieldMetaData("nomeCidadao", org.apache.thrift.TFieldRequirementType.OPTIONAL, 
        new org.apache.thrift.meta_data.FieldValueMetaData(org.apache.thrift.protocol.TType.STRING)));
    tmpMap.put(_Fields.NOME_SOCIAL_CIDADAO, new org.apache.thrift.meta_data.FieldMetaData("nomeSocialCidadao", org.apache.thrift.TFieldRequirementType.OPTIONAL, 
        new org.apache.thrift.meta_data.FieldValueMetaData(org.apache.thrift.protocol.TType.STRING)));
    tmpMap.put(_Fields.DATA_NASCIMENTO_CIDADAO, new org.apache.thrift.meta_data.FieldMetaData("dataNascimentoCidadao", org.apache.thrift.TFieldRequirementType.OPTIONAL, 
        new org.apache.thrift.meta_data.FieldValueMetaData(org.apache.thrift.protocol.TType.I64)));
    tmpMap.put(_Fields.SEXO_CIDADAO, new org.apache.thrift.meta_data.FieldMetaData("sexoCidadao", org.apache.thrift.TFieldRequirementType.OPTIONAL, 
        new org.apache.thrift.meta_data.FieldValueMetaData(org.apache.thrift.protocol.TType.I64)));
    tmpMap.put(_Fields.RACA_COR_CIDADAO, new org.apache.thrift.meta_data.FieldMetaData("racaCorCidadao", org.apache.thrift.TFieldRequirementType.OPTIONAL, 
        new org.apache.thrift.meta_data.FieldValueMetaData(org.apache.thrift.protocol.TType.I64)));
    tmpMap.put(_Fields.NOME_MAE_CIDADAO, new org.apache.thrift.meta_data.FieldMetaData("nomeMaeCidadao", org.apache.thrift.TFieldRequirementType.OPTIONAL, 
        new org.apache.thrift.meta_data.FieldValueMetaData(org.apache.thrift.protocol.TType.STRING)));
    tmpMap.put(_Fields.DESCONHECE_NOME_MAE, new org.apache.thrift.meta_data.FieldMetaData("desconheceNomeMae", org.apache.thrift.TFieldRequirementType.OPTIONAL, 
        new org.apache.thrift.meta_data.FieldValueMetaData(org.apache.thrift.protocol.TType.BOOL)));
    tmpMap.put(_Fields.CODIGO_IBGE_MUNICIPIO_NASCIMENTO, new org.apache.thrift.meta_data.FieldMetaData("codigoIbgeMunicipioNascimento", org.apache.thrift.TFieldRequirementType.OPTIONAL, 
        new org.apache.thrift.meta_data.FieldValueMetaData(org.apache.thrift.protocol.TType.STRING)));
    tmpMap.put(_Fields.CODIGO_NACIONALIDADE, new org.apache.thrift.meta_data.FieldMetaData("codigoNacionalidade", org.apache.thrift.TFieldRequirementType.OPTIONAL, 
        new org.apache.thrift.meta_data.FieldValueMetaData(org.apache.thrift.protocol.TType.I64)));
    tmpMap.put(_Fields.EMAIL_CIDADAO, new org.apache.thrift.meta_data.FieldMetaData("emailCidadao", org.apache.thrift.TFieldRequirementType.OPTIONAL, 
        new org.apache.thrift.meta_data.FieldValueMetaData(org.apache.thrift.protocol.TType.STRING)));
    tmpMap.put(_Fields.NUMERO_NIS_PIS_PASEP, new org.apache.thrift.meta_data.FieldMetaData("numeroNisPisPasep", org.apache.thrift.TFieldRequirementType.OPTIONAL, 
        new org.apache.thrift.meta_data.FieldValueMetaData(org.apache.thrift.protocol.TType.STRING)));
    tmpMap.put(_Fields.ENDERECO, new org.apache.thrift.meta_data.FieldMetaData("endereco", org.apache.thrift.TFieldRequirementType.OPTIONAL, 
        new org.apache.thrift.meta_data.StructMetaData(org.apache.thrift.protocol.TType.STRUCT, br.gov.saude.esus.cds.transport.generated.thrift.common.EnderecoLocalPermanenciaThrift.class)));
    tmpMap.put(_Fields.ATENCAO_DOMICILIAR_ORIGEM, new org.apache.thrift.meta_data.FieldMetaData("atencaoDomiciliarOrigem", org.apache.thrift.TFieldRequirementType.OPTIONAL, 
        new org.apache.thrift.meta_data.FieldValueMetaData(org.apache.thrift.protocol.TType.I64)));
    tmpMap.put(_Fields.ATENCAO_DOMICILIAR_MODALIDADE, new org.apache.thrift.meta_data.FieldMetaData("atencaoDomiciliarModalidade", org.apache.thrift.TFieldRequirementType.OPTIONAL, 
        new org.apache.thrift.meta_data.FieldValueMetaData(org.apache.thrift.protocol.TType.I64)));
    tmpMap.put(_Fields.SITUACOES_PRESENTES, new org.apache.thrift.meta_data.FieldMetaData("situacoesPresentes", org.apache.thrift.TFieldRequirementType.OPTIONAL, 
        new org.apache.thrift.meta_data.ListMetaData(org.apache.thrift.protocol.TType.LIST, 
            new org.apache.thrift.meta_data.FieldValueMetaData(org.apache.thrift.protocol.TType.I64))));
    tmpMap.put(_Fields.CID10_PRINCIPAL, new org.apache.thrift.meta_data.FieldMetaData("cid10Principal", org.apache.thrift.TFieldRequirementType.OPTIONAL, 
        new org.apache.thrift.meta_data.FieldValueMetaData(org.apache.thrift.protocol.TType.STRING)));
    tmpMap.put(_Fields.CID10_SEGUNDO, new org.apache.thrift.meta_data.FieldMetaData("cid10Segundo", org.apache.thrift.TFieldRequirementType.OPTIONAL, 
        new org.apache.thrift.meta_data.FieldValueMetaData(org.apache.thrift.protocol.TType.STRING)));
    tmpMap.put(_Fields.CID10_TERCEIRO, new org.apache.thrift.meta_data.FieldMetaData("cid10Terceiro", org.apache.thrift.TFieldRequirementType.OPTIONAL, 
        new org.apache.thrift.meta_data.FieldValueMetaData(org.apache.thrift.protocol.TType.STRING)));
    tmpMap.put(_Fields.CONCLUSAO_DESTINO_ELEGIVEL, new org.apache.thrift.meta_data.FieldMetaData("conclusaoDestinoElegivel", org.apache.thrift.TFieldRequirementType.OPTIONAL, 
        new org.apache.thrift.meta_data.FieldValueMetaData(org.apache.thrift.protocol.TType.I64)));
    tmpMap.put(_Fields.CONCLUSAO_DESTINO_INELEGIVEL, new org.apache.thrift.meta_data.FieldMetaData("conclusaoDestinoInelegivel", org.apache.thrift.TFieldRequirementType.OPTIONAL, 
        new org.apache.thrift.meta_data.ListMetaData(org.apache.thrift.protocol.TType.LIST, 
            new org.apache.thrift.meta_data.FieldValueMetaData(org.apache.thrift.protocol.TType.I64))));
    tmpMap.put(_Fields.CUIDADOR_CIDADAO, new org.apache.thrift.meta_data.FieldMetaData("cuidadorCidadao", org.apache.thrift.TFieldRequirementType.OPTIONAL, 
        new org.apache.thrift.meta_data.FieldValueMetaData(org.apache.thrift.protocol.TType.I64)));
    metaDataMap = Collections.unmodifiableMap(tmpMap);
    org.apache.thrift.meta_data.FieldMetaData.addStructMetaDataMap(FichaAvaliacaoElegibilidadeThrift.class, metaDataMap);
  }

  public FichaAvaliacaoElegibilidadeThrift() {
  }

  public FichaAvaliacaoElegibilidadeThrift(
    String uuidFicha,
    br.gov.saude.esus.cds.transport.generated.thrift.common.UnicaLotacaoHeaderThrift headerTransport)
  {
    this();
    this.uuidFicha = uuidFicha;
    this.headerTransport = headerTransport;
  }

  /**
   * Performs a deep copy on <i>other</i>.
   */
  public FichaAvaliacaoElegibilidadeThrift(FichaAvaliacaoElegibilidadeThrift other) {
    __isset_bitfield = other.__isset_bitfield;
    if (other.isSetUuidFicha()) {
      this.uuidFicha = other.uuidFicha;
    }
    this.tpCdsOrigem = other.tpCdsOrigem;
    if (other.isSetHeaderTransport()) {
      this.headerTransport = new br.gov.saude.esus.cds.transport.generated.thrift.common.UnicaLotacaoHeaderThrift(other.headerTransport);
    }
    if (other.isSetNumeroCartaoSus()) {
      this.numeroCartaoSus = other.numeroCartaoSus;
    }
    if (other.isSetNomeCidadao()) {
      this.nomeCidadao = other.nomeCidadao;
    }
    if (other.isSetNomeSocialCidadao()) {
      this.nomeSocialCidadao = other.nomeSocialCidadao;
    }
    this.dataNascimentoCidadao = other.dataNascimentoCidadao;
    this.sexoCidadao = other.sexoCidadao;
    this.racaCorCidadao = other.racaCorCidadao;
    if (other.isSetNomeMaeCidadao()) {
      this.nomeMaeCidadao = other.nomeMaeCidadao;
    }
    this.desconheceNomeMae = other.desconheceNomeMae;
    if (other.isSetCodigoIbgeMunicipioNascimento()) {
      this.codigoIbgeMunicipioNascimento = other.codigoIbgeMunicipioNascimento;
    }
    this.codigoNacionalidade = other.codigoNacionalidade;
    if (other.isSetEmailCidadao()) {
      this.emailCidadao = other.emailCidadao;
    }
    if (other.isSetNumeroNisPisPasep()) {
      this.numeroNisPisPasep = other.numeroNisPisPasep;
    }
    if (other.isSetEndereco()) {
      this.endereco = new br.gov.saude.esus.cds.transport.generated.thrift.common.EnderecoLocalPermanenciaThrift(other.endereco);
    }
    this.atencaoDomiciliarOrigem = other.atencaoDomiciliarOrigem;
    this.atencaoDomiciliarModalidade = other.atencaoDomiciliarModalidade;
    if (other.isSetSituacoesPresentes()) {
      List<Long> __this__situacoesPresentes = new ArrayList<Long>(other.situacoesPresentes);
      this.situacoesPresentes = __this__situacoesPresentes;
    }
    if (other.isSetCid10Principal()) {
      this.cid10Principal = other.cid10Principal;
    }
    if (other.isSetCid10Segundo()) {
      this.cid10Segundo = other.cid10Segundo;
    }
    if (other.isSetCid10Terceiro()) {
      this.cid10Terceiro = other.cid10Terceiro;
    }
    this.conclusaoDestinoElegivel = other.conclusaoDestinoElegivel;
    if (other.isSetConclusaoDestinoInelegivel()) {
      List<Long> __this__conclusaoDestinoInelegivel = new ArrayList<Long>(other.conclusaoDestinoInelegivel);
      this.conclusaoDestinoInelegivel = __this__conclusaoDestinoInelegivel;
    }
    this.cuidadorCidadao = other.cuidadorCidadao;
  }

  public FichaAvaliacaoElegibilidadeThrift deepCopy() {
    return new FichaAvaliacaoElegibilidadeThrift(this);
  }

  @Override
  public void clear() {
    this.uuidFicha = null;
    setTpCdsOrigemIsSet(false);
    this.tpCdsOrigem = 0;
    this.headerTransport = null;
    this.numeroCartaoSus = null;
    this.nomeCidadao = null;
    this.nomeSocialCidadao = null;
    setDataNascimentoCidadaoIsSet(false);
    this.dataNascimentoCidadao = 0;
    setSexoCidadaoIsSet(false);
    this.sexoCidadao = 0;
    setRacaCorCidadaoIsSet(false);
    this.racaCorCidadao = 0;
    this.nomeMaeCidadao = null;
    setDesconheceNomeMaeIsSet(false);
    this.desconheceNomeMae = false;
    this.codigoIbgeMunicipioNascimento = null;
    setCodigoNacionalidadeIsSet(false);
    this.codigoNacionalidade = 0;
    this.emailCidadao = null;
    this.numeroNisPisPasep = null;
    this.endereco = null;
    setAtencaoDomiciliarOrigemIsSet(false);
    this.atencaoDomiciliarOrigem = 0;
    setAtencaoDomiciliarModalidadeIsSet(false);
    this.atencaoDomiciliarModalidade = 0;
    this.situacoesPresentes = null;
    this.cid10Principal = null;
    this.cid10Segundo = null;
    this.cid10Terceiro = null;
    setConclusaoDestinoElegivelIsSet(false);
    this.conclusaoDestinoElegivel = 0;
    this.conclusaoDestinoInelegivel = null;
    setCuidadorCidadaoIsSet(false);
    this.cuidadorCidadao = 0;
  }

  public String getUuidFicha() {
    return this.uuidFicha;
  }

  public void setUuidFicha(String uuidFicha) {
    this.uuidFicha = uuidFicha;
  }

  public void unsetUuidFicha() {
    this.uuidFicha = null;
  }

  /** Returns true if field uuidFicha is set (has been assigned a value) and false otherwise */
  public boolean isSetUuidFicha() {
    return this.uuidFicha != null;
  }

  public void setUuidFichaIsSet(boolean value) {
    if (!value) {
      this.uuidFicha = null;
    }
  }

  public int getTpCdsOrigem() {
    return this.tpCdsOrigem;
  }

  public void setTpCdsOrigem(int tpCdsOrigem) {
    this.tpCdsOrigem = tpCdsOrigem;
    setTpCdsOrigemIsSet(true);
  }

  public void unsetTpCdsOrigem() {
    __isset_bitfield = EncodingUtils.clearBit(__isset_bitfield, __TPCDSORIGEM_ISSET_ID);
  }

  /** Returns true if field tpCdsOrigem is set (has been assigned a value) and false otherwise */
  public boolean isSetTpCdsOrigem() {
    return EncodingUtils.testBit(__isset_bitfield, __TPCDSORIGEM_ISSET_ID);
  }

  public void setTpCdsOrigemIsSet(boolean value) {
    __isset_bitfield = EncodingUtils.setBit(__isset_bitfield, __TPCDSORIGEM_ISSET_ID, value);
  }

  public br.gov.saude.esus.cds.transport.generated.thrift.common.UnicaLotacaoHeaderThrift getHeaderTransport() {
    return this.headerTransport;
  }

  public void setHeaderTransport(br.gov.saude.esus.cds.transport.generated.thrift.common.UnicaLotacaoHeaderThrift headerTransport) {
    this.headerTransport = headerTransport;
  }

  public void unsetHeaderTransport() {
    this.headerTransport = null;
  }

  /** Returns true if field headerTransport is set (has been assigned a value) and false otherwise */
  public boolean isSetHeaderTransport() {
    return this.headerTransport != null;
  }

  public void setHeaderTransportIsSet(boolean value) {
    if (!value) {
      this.headerTransport = null;
    }
  }

  public String getNumeroCartaoSus() {
    return this.numeroCartaoSus;
  }

  public void setNumeroCartaoSus(String numeroCartaoSus) {
    this.numeroCartaoSus = numeroCartaoSus;
  }

  public void unsetNumeroCartaoSus() {
    this.numeroCartaoSus = null;
  }

  /** Returns true if field numeroCartaoSus is set (has been assigned a value) and false otherwise */
  public boolean isSetNumeroCartaoSus() {
    return this.numeroCartaoSus != null;
  }

  public void setNumeroCartaoSusIsSet(boolean value) {
    if (!value) {
      this.numeroCartaoSus = null;
    }
  }

  public String getNomeCidadao() {
    return this.nomeCidadao;
  }

  public void setNomeCidadao(String nomeCidadao) {
    this.nomeCidadao = nomeCidadao;
  }

  public void unsetNomeCidadao() {
    this.nomeCidadao = null;
  }

  /** Returns true if field nomeCidadao is set (has been assigned a value) and false otherwise */
  public boolean isSetNomeCidadao() {
    return this.nomeCidadao != null;
  }

  public void setNomeCidadaoIsSet(boolean value) {
    if (!value) {
      this.nomeCidadao = null;
    }
  }

  public String getNomeSocialCidadao() {
    return this.nomeSocialCidadao;
  }

  public void setNomeSocialCidadao(String nomeSocialCidadao) {
    this.nomeSocialCidadao = nomeSocialCidadao;
  }

  public void unsetNomeSocialCidadao() {
    this.nomeSocialCidadao = null;
  }

  /** Returns true if field nomeSocialCidadao is set (has been assigned a value) and false otherwise */
  public boolean isSetNomeSocialCidadao() {
    return this.nomeSocialCidadao != null;
  }

  public void setNomeSocialCidadaoIsSet(boolean value) {
    if (!value) {
      this.nomeSocialCidadao = null;
    }
  }

  public long getDataNascimentoCidadao() {
    return this.dataNascimentoCidadao;
  }

  public void setDataNascimentoCidadao(long dataNascimentoCidadao) {
    this.dataNascimentoCidadao = dataNascimentoCidadao;
    setDataNascimentoCidadaoIsSet(true);
  }

  public void unsetDataNascimentoCidadao() {
    __isset_bitfield = EncodingUtils.clearBit(__isset_bitfield, __DATANASCIMENTOCIDADAO_ISSET_ID);
  }

  /** Returns true if field dataNascimentoCidadao is set (has been assigned a value) and false otherwise */
  public boolean isSetDataNascimentoCidadao() {
    return EncodingUtils.testBit(__isset_bitfield, __DATANASCIMENTOCIDADAO_ISSET_ID);
  }

  public void setDataNascimentoCidadaoIsSet(boolean value) {
    __isset_bitfield = EncodingUtils.setBit(__isset_bitfield, __DATANASCIMENTOCIDADAO_ISSET_ID, value);
  }

  public long getSexoCidadao() {
    return this.sexoCidadao;
  }

  public void setSexoCidadao(long sexoCidadao) {
    this.sexoCidadao = sexoCidadao;
    setSexoCidadaoIsSet(true);
  }

  public void unsetSexoCidadao() {
    __isset_bitfield = EncodingUtils.clearBit(__isset_bitfield, __SEXOCIDADAO_ISSET_ID);
  }

  /** Returns true if field sexoCidadao is set (has been assigned a value) and false otherwise */
  public boolean isSetSexoCidadao() {
    return EncodingUtils.testBit(__isset_bitfield, __SEXOCIDADAO_ISSET_ID);
  }

  public void setSexoCidadaoIsSet(boolean value) {
    __isset_bitfield = EncodingUtils.setBit(__isset_bitfield, __SEXOCIDADAO_ISSET_ID, value);
  }

  public long getRacaCorCidadao() {
    return this.racaCorCidadao;
  }

  public void setRacaCorCidadao(long racaCorCidadao) {
    this.racaCorCidadao = racaCorCidadao;
    setRacaCorCidadaoIsSet(true);
  }

  public void unsetRacaCorCidadao() {
    __isset_bitfield = EncodingUtils.clearBit(__isset_bitfield, __RACACORCIDADAO_ISSET_ID);
  }

  /** Returns true if field racaCorCidadao is set (has been assigned a value) and false otherwise */
  public boolean isSetRacaCorCidadao() {
    return EncodingUtils.testBit(__isset_bitfield, __RACACORCIDADAO_ISSET_ID);
  }

  public void setRacaCorCidadaoIsSet(boolean value) {
    __isset_bitfield = EncodingUtils.setBit(__isset_bitfield, __RACACORCIDADAO_ISSET_ID, value);
  }

  public String getNomeMaeCidadao() {
    return this.nomeMaeCidadao;
  }

  public void setNomeMaeCidadao(String nomeMaeCidadao) {
    this.nomeMaeCidadao = nomeMaeCidadao;
  }

  public void unsetNomeMaeCidadao() {
    this.nomeMaeCidadao = null;
  }

  /** Returns true if field nomeMaeCidadao is set (has been assigned a value) and false otherwise */
  public boolean isSetNomeMaeCidadao() {
    return this.nomeMaeCidadao != null;
  }

  public void setNomeMaeCidadaoIsSet(boolean value) {
    if (!value) {
      this.nomeMaeCidadao = null;
    }
  }

  public boolean isDesconheceNomeMae() {
    return this.desconheceNomeMae;
  }

  public void setDesconheceNomeMae(boolean desconheceNomeMae) {
    this.desconheceNomeMae = desconheceNomeMae;
    setDesconheceNomeMaeIsSet(true);
  }

  public void unsetDesconheceNomeMae() {
    __isset_bitfield = EncodingUtils.clearBit(__isset_bitfield, __DESCONHECENOMEMAE_ISSET_ID);
  }

  /** Returns true if field desconheceNomeMae is set (has been assigned a value) and false otherwise */
  public boolean isSetDesconheceNomeMae() {
    return EncodingUtils.testBit(__isset_bitfield, __DESCONHECENOMEMAE_ISSET_ID);
  }

  public void setDesconheceNomeMaeIsSet(boolean value) {
    __isset_bitfield = EncodingUtils.setBit(__isset_bitfield, __DESCONHECENOMEMAE_ISSET_ID, value);
  }

  public String getCodigoIbgeMunicipioNascimento() {
    return this.codigoIbgeMunicipioNascimento;
  }

  public void setCodigoIbgeMunicipioNascimento(String codigoIbgeMunicipioNascimento) {
    this.codigoIbgeMunicipioNascimento = codigoIbgeMunicipioNascimento;
  }

  public void unsetCodigoIbgeMunicipioNascimento() {
    this.codigoIbgeMunicipioNascimento = null;
  }

  /** Returns true if field codigoIbgeMunicipioNascimento is set (has been assigned a value) and false otherwise */
  public boolean isSetCodigoIbgeMunicipioNascimento() {
    return this.codigoIbgeMunicipioNascimento != null;
  }

  public void setCodigoIbgeMunicipioNascimentoIsSet(boolean value) {
    if (!value) {
      this.codigoIbgeMunicipioNascimento = null;
    }
  }

  public long getCodigoNacionalidade() {
    return this.codigoNacionalidade;
  }

  public void setCodigoNacionalidade(long codigoNacionalidade) {
    this.codigoNacionalidade = codigoNacionalidade;
    setCodigoNacionalidadeIsSet(true);
  }

  public void unsetCodigoNacionalidade() {
    __isset_bitfield = EncodingUtils.clearBit(__isset_bitfield, __CODIGONACIONALIDADE_ISSET_ID);
  }

  /** Returns true if field codigoNacionalidade is set (has been assigned a value) and false otherwise */
  public boolean isSetCodigoNacionalidade() {
    return EncodingUtils.testBit(__isset_bitfield, __CODIGONACIONALIDADE_ISSET_ID);
  }

  public void setCodigoNacionalidadeIsSet(boolean value) {
    __isset_bitfield = EncodingUtils.setBit(__isset_bitfield, __CODIGONACIONALIDADE_ISSET_ID, value);
  }

  public String getEmailCidadao() {
    return this.emailCidadao;
  }

  public void setEmailCidadao(String emailCidadao) {
    this.emailCidadao = emailCidadao;
  }

  public void unsetEmailCidadao() {
    this.emailCidadao = null;
  }

  /** Returns true if field emailCidadao is set (has been assigned a value) and false otherwise */
  public boolean isSetEmailCidadao() {
    return this.emailCidadao != null;
  }

  public void setEmailCidadaoIsSet(boolean value) {
    if (!value) {
      this.emailCidadao = null;
    }
  }

  public String getNumeroNisPisPasep() {
    return this.numeroNisPisPasep;
  }

  public void setNumeroNisPisPasep(String numeroNisPisPasep) {
    this.numeroNisPisPasep = numeroNisPisPasep;
  }

  public void unsetNumeroNisPisPasep() {
    this.numeroNisPisPasep = null;
  }

  /** Returns true if field numeroNisPisPasep is set (has been assigned a value) and false otherwise */
  public boolean isSetNumeroNisPisPasep() {
    return this.numeroNisPisPasep != null;
  }

  public void setNumeroNisPisPasepIsSet(boolean value) {
    if (!value) {
      this.numeroNisPisPasep = null;
    }
  }

  public br.gov.saude.esus.cds.transport.generated.thrift.common.EnderecoLocalPermanenciaThrift getEndereco() {
    return this.endereco;
  }

  public void setEndereco(br.gov.saude.esus.cds.transport.generated.thrift.common.EnderecoLocalPermanenciaThrift endereco) {
    this.endereco = endereco;
  }

  public void unsetEndereco() {
    this.endereco = null;
  }

  /** Returns true if field endereco is set (has been assigned a value) and false otherwise */
  public boolean isSetEndereco() {
    return this.endereco != null;
  }

  public void setEnderecoIsSet(boolean value) {
    if (!value) {
      this.endereco = null;
    }
  }

  public long getAtencaoDomiciliarOrigem() {
    return this.atencaoDomiciliarOrigem;
  }

  public void setAtencaoDomiciliarOrigem(long atencaoDomiciliarOrigem) {
    this.atencaoDomiciliarOrigem = atencaoDomiciliarOrigem;
    setAtencaoDomiciliarOrigemIsSet(true);
  }

  public void unsetAtencaoDomiciliarOrigem() {
    __isset_bitfield = EncodingUtils.clearBit(__isset_bitfield, __ATENCAODOMICILIARORIGEM_ISSET_ID);
  }

  /** Returns true if field atencaoDomiciliarOrigem is set (has been assigned a value) and false otherwise */
  public boolean isSetAtencaoDomiciliarOrigem() {
    return EncodingUtils.testBit(__isset_bitfield, __ATENCAODOMICILIARORIGEM_ISSET_ID);
  }

  public void setAtencaoDomiciliarOrigemIsSet(boolean value) {
    __isset_bitfield = EncodingUtils.setBit(__isset_bitfield, __ATENCAODOMICILIARORIGEM_ISSET_ID, value);
  }

  public long getAtencaoDomiciliarModalidade() {
    return this.atencaoDomiciliarModalidade;
  }

  public void setAtencaoDomiciliarModalidade(long atencaoDomiciliarModalidade) {
    this.atencaoDomiciliarModalidade = atencaoDomiciliarModalidade;
    setAtencaoDomiciliarModalidadeIsSet(true);
  }

  public void unsetAtencaoDomiciliarModalidade() {
    __isset_bitfield = EncodingUtils.clearBit(__isset_bitfield, __ATENCAODOMICILIARMODALIDADE_ISSET_ID);
  }

  /** Returns true if field atencaoDomiciliarModalidade is set (has been assigned a value) and false otherwise */
  public boolean isSetAtencaoDomiciliarModalidade() {
    return EncodingUtils.testBit(__isset_bitfield, __ATENCAODOMICILIARMODALIDADE_ISSET_ID);
  }

  public void setAtencaoDomiciliarModalidadeIsSet(boolean value) {
    __isset_bitfield = EncodingUtils.setBit(__isset_bitfield, __ATENCAODOMICILIARMODALIDADE_ISSET_ID, value);
  }

  public int getSituacoesPresentesSize() {
    return (this.situacoesPresentes == null) ? 0 : this.situacoesPresentes.size();
  }

  public java.util.Iterator<Long> getSituacoesPresentesIterator() {
    return (this.situacoesPresentes == null) ? null : this.situacoesPresentes.iterator();
  }

  public void addToSituacoesPresentes(long elem) {
    if (this.situacoesPresentes == null) {
      this.situacoesPresentes = new ArrayList<Long>();
    }
    this.situacoesPresentes.add(elem);
  }

  public List<Long> getSituacoesPresentes() {
    return this.situacoesPresentes;
  }

  public void setSituacoesPresentes(List<Long> situacoesPresentes) {
    this.situacoesPresentes = situacoesPresentes;
  }

  public void unsetSituacoesPresentes() {
    this.situacoesPresentes = null;
  }

  /** Returns true if field situacoesPresentes is set (has been assigned a value) and false otherwise */
  public boolean isSetSituacoesPresentes() {
    return this.situacoesPresentes != null;
  }

  public void setSituacoesPresentesIsSet(boolean value) {
    if (!value) {
      this.situacoesPresentes = null;
    }
  }

  public String getCid10Principal() {
    return this.cid10Principal;
  }

  public void setCid10Principal(String cid10Principal) {
    this.cid10Principal = cid10Principal;
  }

  public void unsetCid10Principal() {
    this.cid10Principal = null;
  }

  /** Returns true if field cid10Principal is set (has been assigned a value) and false otherwise */
  public boolean isSetCid10Principal() {
    return this.cid10Principal != null;
  }

  public void setCid10PrincipalIsSet(boolean value) {
    if (!value) {
      this.cid10Principal = null;
    }
  }

  public String getCid10Segundo() {
    return this.cid10Segundo;
  }

  public void setCid10Segundo(String cid10Segundo) {
    this.cid10Segundo = cid10Segundo;
  }

  public void unsetCid10Segundo() {
    this.cid10Segundo = null;
  }

  /** Returns true if field cid10Segundo is set (has been assigned a value) and false otherwise */
  public boolean isSetCid10Segundo() {
    return this.cid10Segundo != null;
  }

  public void setCid10SegundoIsSet(boolean value) {
    if (!value) {
      this.cid10Segundo = null;
    }
  }

  public String getCid10Terceiro() {
    return this.cid10Terceiro;
  }

  public void setCid10Terceiro(String cid10Terceiro) {
    this.cid10Terceiro = cid10Terceiro;
  }

  public void unsetCid10Terceiro() {
    this.cid10Terceiro = null;
  }

  /** Returns true if field cid10Terceiro is set (has been assigned a value) and false otherwise */
  public boolean isSetCid10Terceiro() {
    return this.cid10Terceiro != null;
  }

  public void setCid10TerceiroIsSet(boolean value) {
    if (!value) {
      this.cid10Terceiro = null;
    }
  }

  public long getConclusaoDestinoElegivel() {
    return this.conclusaoDestinoElegivel;
  }

  public void setConclusaoDestinoElegivel(long conclusaoDestinoElegivel) {
    this.conclusaoDestinoElegivel = conclusaoDestinoElegivel;
    setConclusaoDestinoElegivelIsSet(true);
  }

  public void unsetConclusaoDestinoElegivel() {
    __isset_bitfield = EncodingUtils.clearBit(__isset_bitfield, __CONCLUSAODESTINOELEGIVEL_ISSET_ID);
  }

  /** Returns true if field conclusaoDestinoElegivel is set (has been assigned a value) and false otherwise */
  public boolean isSetConclusaoDestinoElegivel() {
    return EncodingUtils.testBit(__isset_bitfield, __CONCLUSAODESTINOELEGIVEL_ISSET_ID);
  }

  public void setConclusaoDestinoElegivelIsSet(boolean value) {
    __isset_bitfield = EncodingUtils.setBit(__isset_bitfield, __CONCLUSAODESTINOELEGIVEL_ISSET_ID, value);
  }

  public int getConclusaoDestinoInelegivelSize() {
    return (this.conclusaoDestinoInelegivel == null) ? 0 : this.conclusaoDestinoInelegivel.size();
  }

  public java.util.Iterator<Long> getConclusaoDestinoInelegivelIterator() {
    return (this.conclusaoDestinoInelegivel == null) ? null : this.conclusaoDestinoInelegivel.iterator();
  }

  public void addToConclusaoDestinoInelegivel(long elem) {
    if (this.conclusaoDestinoInelegivel == null) {
      this.conclusaoDestinoInelegivel = new ArrayList<Long>();
    }
    this.conclusaoDestinoInelegivel.add(elem);
  }

  public List<Long> getConclusaoDestinoInelegivel() {
    return this.conclusaoDestinoInelegivel;
  }

  public void setConclusaoDestinoInelegivel(List<Long> conclusaoDestinoInelegivel) {
    this.conclusaoDestinoInelegivel = conclusaoDestinoInelegivel;
  }

  public void unsetConclusaoDestinoInelegivel() {
    this.conclusaoDestinoInelegivel = null;
  }

  /** Returns true if field conclusaoDestinoInelegivel is set (has been assigned a value) and false otherwise */
  public boolean isSetConclusaoDestinoInelegivel() {
    return this.conclusaoDestinoInelegivel != null;
  }

  public void setConclusaoDestinoInelegivelIsSet(boolean value) {
    if (!value) {
      this.conclusaoDestinoInelegivel = null;
    }
  }

  public long getCuidadorCidadao() {
    return this.cuidadorCidadao;
  }

  public void setCuidadorCidadao(long cuidadorCidadao) {
    this.cuidadorCidadao = cuidadorCidadao;
    setCuidadorCidadaoIsSet(true);
  }

  public void unsetCuidadorCidadao() {
    __isset_bitfield = EncodingUtils.clearBit(__isset_bitfield, __CUIDADORCIDADAO_ISSET_ID);
  }

  /** Returns true if field cuidadorCidadao is set (has been assigned a value) and false otherwise */
  public boolean isSetCuidadorCidadao() {
    return EncodingUtils.testBit(__isset_bitfield, __CUIDADORCIDADAO_ISSET_ID);
  }

  public void setCuidadorCidadaoIsSet(boolean value) {
    __isset_bitfield = EncodingUtils.setBit(__isset_bitfield, __CUIDADORCIDADAO_ISSET_ID, value);
  }

  public void setFieldValue(_Fields field, Object value) {
    switch (field) {
    case UUID_FICHA:
      if (value == null) {
        unsetUuidFicha();
      } else {
        setUuidFicha((String)value);
      }
      break;

    case TP_CDS_ORIGEM:
      if (value == null) {
        unsetTpCdsOrigem();
      } else {
        setTpCdsOrigem((Integer)value);
      }
      break;

    case HEADER_TRANSPORT:
      if (value == null) {
        unsetHeaderTransport();
      } else {
        setHeaderTransport((br.gov.saude.esus.cds.transport.generated.thrift.common.UnicaLotacaoHeaderThrift)value);
      }
      break;

    case NUMERO_CARTAO_SUS:
      if (value == null) {
        unsetNumeroCartaoSus();
      } else {
        setNumeroCartaoSus((String)value);
      }
      break;

    case NOME_CIDADAO:
      if (value == null) {
        unsetNomeCidadao();
      } else {
        setNomeCidadao((String)value);
      }
      break;

    case NOME_SOCIAL_CIDADAO:
      if (value == null) {
        unsetNomeSocialCidadao();
      } else {
        setNomeSocialCidadao((String)value);
      }
      break;

    case DATA_NASCIMENTO_CIDADAO:
      if (value == null) {
        unsetDataNascimentoCidadao();
      } else {
        setDataNascimentoCidadao((Long)value);
      }
      break;

    case SEXO_CIDADAO:
      if (value == null) {
        unsetSexoCidadao();
      } else {
        setSexoCidadao((Long)value);
      }
      break;

    case RACA_COR_CIDADAO:
      if (value == null) {
        unsetRacaCorCidadao();
      } else {
        setRacaCorCidadao((Long)value);
      }
      break;

    case NOME_MAE_CIDADAO:
      if (value == null) {
        unsetNomeMaeCidadao();
      } else {
        setNomeMaeCidadao((String)value);
      }
      break;

    case DESCONHECE_NOME_MAE:
      if (value == null) {
        unsetDesconheceNomeMae();
      } else {
        setDesconheceNomeMae((Boolean)value);
      }
      break;

    case CODIGO_IBGE_MUNICIPIO_NASCIMENTO:
      if (value == null) {
        unsetCodigoIbgeMunicipioNascimento();
      } else {
        setCodigoIbgeMunicipioNascimento((String)value);
      }
      break;

    case CODIGO_NACIONALIDADE:
      if (value == null) {
        unsetCodigoNacionalidade();
      } else {
        setCodigoNacionalidade((Long)value);
      }
      break;

    case EMAIL_CIDADAO:
      if (value == null) {
        unsetEmailCidadao();
      } else {
        setEmailCidadao((String)value);
      }
      break;

    case NUMERO_NIS_PIS_PASEP:
      if (value == null) {
        unsetNumeroNisPisPasep();
      } else {
        setNumeroNisPisPasep((String)value);
      }
      break;

    case ENDERECO:
      if (value == null) {
        unsetEndereco();
      } else {
        setEndereco((br.gov.saude.esus.cds.transport.generated.thrift.common.EnderecoLocalPermanenciaThrift)value);
      }
      break;

    case ATENCAO_DOMICILIAR_ORIGEM:
      if (value == null) {
        unsetAtencaoDomiciliarOrigem();
      } else {
        setAtencaoDomiciliarOrigem((Long)value);
      }
      break;

    case ATENCAO_DOMICILIAR_MODALIDADE:
      if (value == null) {
        unsetAtencaoDomiciliarModalidade();
      } else {
        setAtencaoDomiciliarModalidade((Long)value);
      }
      break;

    case SITUACOES_PRESENTES:
      if (value == null) {
        unsetSituacoesPresentes();
      } else {
        setSituacoesPresentes((List<Long>)value);
      }
      break;

    case CID10_PRINCIPAL:
      if (value == null) {
        unsetCid10Principal();
      } else {
        setCid10Principal((String)value);
      }
      break;

    case CID10_SEGUNDO:
      if (value == null) {
        unsetCid10Segundo();
      } else {
        setCid10Segundo((String)value);
      }
      break;

    case CID10_TERCEIRO:
      if (value == null) {
        unsetCid10Terceiro();
      } else {
        setCid10Terceiro((String)value);
      }
      break;

    case CONCLUSAO_DESTINO_ELEGIVEL:
      if (value == null) {
        unsetConclusaoDestinoElegivel();
      } else {
        setConclusaoDestinoElegivel((Long)value);
      }
      break;

    case CONCLUSAO_DESTINO_INELEGIVEL:
      if (value == null) {
        unsetConclusaoDestinoInelegivel();
      } else {
        setConclusaoDestinoInelegivel((List<Long>)value);
      }
      break;

    case CUIDADOR_CIDADAO:
      if (value == null) {
        unsetCuidadorCidadao();
      } else {
        setCuidadorCidadao((Long)value);
      }
      break;

    }
  }

  public Object getFieldValue(_Fields field) {
    switch (field) {
    case UUID_FICHA:
      return getUuidFicha();

    case TP_CDS_ORIGEM:
      return Integer.valueOf(getTpCdsOrigem());

    case HEADER_TRANSPORT:
      return getHeaderTransport();

    case NUMERO_CARTAO_SUS:
      return getNumeroCartaoSus();

    case NOME_CIDADAO:
      return getNomeCidadao();

    case NOME_SOCIAL_CIDADAO:
      return getNomeSocialCidadao();

    case DATA_NASCIMENTO_CIDADAO:
      return Long.valueOf(getDataNascimentoCidadao());

    case SEXO_CIDADAO:
      return Long.valueOf(getSexoCidadao());

    case RACA_COR_CIDADAO:
      return Long.valueOf(getRacaCorCidadao());

    case NOME_MAE_CIDADAO:
      return getNomeMaeCidadao();

    case DESCONHECE_NOME_MAE:
      return Boolean.valueOf(isDesconheceNomeMae());

    case CODIGO_IBGE_MUNICIPIO_NASCIMENTO:
      return getCodigoIbgeMunicipioNascimento();

    case CODIGO_NACIONALIDADE:
      return Long.valueOf(getCodigoNacionalidade());

    case EMAIL_CIDADAO:
      return getEmailCidadao();

    case NUMERO_NIS_PIS_PASEP:
      return getNumeroNisPisPasep();

    case ENDERECO:
      return getEndereco();

    case ATENCAO_DOMICILIAR_ORIGEM:
      return Long.valueOf(getAtencaoDomiciliarOrigem());

    case ATENCAO_DOMICILIAR_MODALIDADE:
      return Long.valueOf(getAtencaoDomiciliarModalidade());

    case SITUACOES_PRESENTES:
      return getSituacoesPresentes();

    case CID10_PRINCIPAL:
      return getCid10Principal();

    case CID10_SEGUNDO:
      return getCid10Segundo();

    case CID10_TERCEIRO:
      return getCid10Terceiro();

    case CONCLUSAO_DESTINO_ELEGIVEL:
      return Long.valueOf(getConclusaoDestinoElegivel());

    case CONCLUSAO_DESTINO_INELEGIVEL:
      return getConclusaoDestinoInelegivel();

    case CUIDADOR_CIDADAO:
      return Long.valueOf(getCuidadorCidadao());

    }
    throw new IllegalStateException();
  }

  /** Returns true if field corresponding to fieldID is set (has been assigned a value) and false otherwise */
  public boolean isSet(_Fields field) {
    if (field == null) {
      throw new IllegalArgumentException();
    }

    switch (field) {
    case UUID_FICHA:
      return isSetUuidFicha();
    case TP_CDS_ORIGEM:
      return isSetTpCdsOrigem();
    case HEADER_TRANSPORT:
      return isSetHeaderTransport();
    case NUMERO_CARTAO_SUS:
      return isSetNumeroCartaoSus();
    case NOME_CIDADAO:
      return isSetNomeCidadao();
    case NOME_SOCIAL_CIDADAO:
      return isSetNomeSocialCidadao();
    case DATA_NASCIMENTO_CIDADAO:
      return isSetDataNascimentoCidadao();
    case SEXO_CIDADAO:
      return isSetSexoCidadao();
    case RACA_COR_CIDADAO:
      return isSetRacaCorCidadao();
    case NOME_MAE_CIDADAO:
      return isSetNomeMaeCidadao();
    case DESCONHECE_NOME_MAE:
      return isSetDesconheceNomeMae();
    case CODIGO_IBGE_MUNICIPIO_NASCIMENTO:
      return isSetCodigoIbgeMunicipioNascimento();
    case CODIGO_NACIONALIDADE:
      return isSetCodigoNacionalidade();
    case EMAIL_CIDADAO:
      return isSetEmailCidadao();
    case NUMERO_NIS_PIS_PASEP:
      return isSetNumeroNisPisPasep();
    case ENDERECO:
      return isSetEndereco();
    case ATENCAO_DOMICILIAR_ORIGEM:
      return isSetAtencaoDomiciliarOrigem();
    case ATENCAO_DOMICILIAR_MODALIDADE:
      return isSetAtencaoDomiciliarModalidade();
    case SITUACOES_PRESENTES:
      return isSetSituacoesPresentes();
    case CID10_PRINCIPAL:
      return isSetCid10Principal();
    case CID10_SEGUNDO:
      return isSetCid10Segundo();
    case CID10_TERCEIRO:
      return isSetCid10Terceiro();
    case CONCLUSAO_DESTINO_ELEGIVEL:
      return isSetConclusaoDestinoElegivel();
    case CONCLUSAO_DESTINO_INELEGIVEL:
      return isSetConclusaoDestinoInelegivel();
    case CUIDADOR_CIDADAO:
      return isSetCuidadorCidadao();
    }
    throw new IllegalStateException();
  }

  @Override
  public boolean equals(Object that) {
    if (that == null)
      return false;
    if (that instanceof FichaAvaliacaoElegibilidadeThrift)
      return this.equals((FichaAvaliacaoElegibilidadeThrift)that);
    return false;
  }

  public boolean equals(FichaAvaliacaoElegibilidadeThrift that) {
    if (that == null)
      return false;

    boolean this_present_uuidFicha = true && this.isSetUuidFicha();
    boolean that_present_uuidFicha = true && that.isSetUuidFicha();
    if (this_present_uuidFicha || that_present_uuidFicha) {
      if (!(this_present_uuidFicha && that_present_uuidFicha))
        return false;
      if (!this.uuidFicha.equals(that.uuidFicha))
        return false;
    }

    boolean this_present_tpCdsOrigem = true && this.isSetTpCdsOrigem();
    boolean that_present_tpCdsOrigem = true && that.isSetTpCdsOrigem();
    if (this_present_tpCdsOrigem || that_present_tpCdsOrigem) {
      if (!(this_present_tpCdsOrigem && that_present_tpCdsOrigem))
        return false;
      if (this.tpCdsOrigem != that.tpCdsOrigem)
        return false;
    }

    boolean this_present_headerTransport = true && this.isSetHeaderTransport();
    boolean that_present_headerTransport = true && that.isSetHeaderTransport();
    if (this_present_headerTransport || that_present_headerTransport) {
      if (!(this_present_headerTransport && that_present_headerTransport))
        return false;
      if (!this.headerTransport.equals(that.headerTransport))
        return false;
    }

    boolean this_present_numeroCartaoSus = true && this.isSetNumeroCartaoSus();
    boolean that_present_numeroCartaoSus = true && that.isSetNumeroCartaoSus();
    if (this_present_numeroCartaoSus || that_present_numeroCartaoSus) {
      if (!(this_present_numeroCartaoSus && that_present_numeroCartaoSus))
        return false;
      if (!this.numeroCartaoSus.equals(that.numeroCartaoSus))
        return false;
    }

    boolean this_present_nomeCidadao = true && this.isSetNomeCidadao();
    boolean that_present_nomeCidadao = true && that.isSetNomeCidadao();
    if (this_present_nomeCidadao || that_present_nomeCidadao) {
      if (!(this_present_nomeCidadao && that_present_nomeCidadao))
        return false;
      if (!this.nomeCidadao.equals(that.nomeCidadao))
        return false;
    }

    boolean this_present_nomeSocialCidadao = true && this.isSetNomeSocialCidadao();
    boolean that_present_nomeSocialCidadao = true && that.isSetNomeSocialCidadao();
    if (this_present_nomeSocialCidadao || that_present_nomeSocialCidadao) {
      if (!(this_present_nomeSocialCidadao && that_present_nomeSocialCidadao))
        return false;
      if (!this.nomeSocialCidadao.equals(that.nomeSocialCidadao))
        return false;
    }

    boolean this_present_dataNascimentoCidadao = true && this.isSetDataNascimentoCidadao();
    boolean that_present_dataNascimentoCidadao = true && that.isSetDataNascimentoCidadao();
    if (this_present_dataNascimentoCidadao || that_present_dataNascimentoCidadao) {
      if (!(this_present_dataNascimentoCidadao && that_present_dataNascimentoCidadao))
        return false;
      if (this.dataNascimentoCidadao != that.dataNascimentoCidadao)
        return false;
    }

    boolean this_present_sexoCidadao = true && this.isSetSexoCidadao();
    boolean that_present_sexoCidadao = true && that.isSetSexoCidadao();
    if (this_present_sexoCidadao || that_present_sexoCidadao) {
      if (!(this_present_sexoCidadao && that_present_sexoCidadao))
        return false;
      if (this.sexoCidadao != that.sexoCidadao)
        return false;
    }

    boolean this_present_racaCorCidadao = true && this.isSetRacaCorCidadao();
    boolean that_present_racaCorCidadao = true && that.isSetRacaCorCidadao();
    if (this_present_racaCorCidadao || that_present_racaCorCidadao) {
      if (!(this_present_racaCorCidadao && that_present_racaCorCidadao))
        return false;
      if (this.racaCorCidadao != that.racaCorCidadao)
        return false;
    }

    boolean this_present_nomeMaeCidadao = true && this.isSetNomeMaeCidadao();
    boolean that_present_nomeMaeCidadao = true && that.isSetNomeMaeCidadao();
    if (this_present_nomeMaeCidadao || that_present_nomeMaeCidadao) {
      if (!(this_present_nomeMaeCidadao && that_present_nomeMaeCidadao))
        return false;
      if (!this.nomeMaeCidadao.equals(that.nomeMaeCidadao))
        return false;
    }

    boolean this_present_desconheceNomeMae = true && this.isSetDesconheceNomeMae();
    boolean that_present_desconheceNomeMae = true && that.isSetDesconheceNomeMae();
    if (this_present_desconheceNomeMae || that_present_desconheceNomeMae) {
      if (!(this_present_desconheceNomeMae && that_present_desconheceNomeMae))
        return false;
      if (this.desconheceNomeMae != that.desconheceNomeMae)
        return false;
    }

    boolean this_present_codigoIbgeMunicipioNascimento = true && this.isSetCodigoIbgeMunicipioNascimento();
    boolean that_present_codigoIbgeMunicipioNascimento = true && that.isSetCodigoIbgeMunicipioNascimento();
    if (this_present_codigoIbgeMunicipioNascimento || that_present_codigoIbgeMunicipioNascimento) {
      if (!(this_present_codigoIbgeMunicipioNascimento && that_present_codigoIbgeMunicipioNascimento))
        return false;
      if (!this.codigoIbgeMunicipioNascimento.equals(that.codigoIbgeMunicipioNascimento))
        return false;
    }

    boolean this_present_codigoNacionalidade = true && this.isSetCodigoNacionalidade();
    boolean that_present_codigoNacionalidade = true && that.isSetCodigoNacionalidade();
    if (this_present_codigoNacionalidade || that_present_codigoNacionalidade) {
      if (!(this_present_codigoNacionalidade && that_present_codigoNacionalidade))
        return false;
      if (this.codigoNacionalidade != that.codigoNacionalidade)
        return false;
    }

    boolean this_present_emailCidadao = true && this.isSetEmailCidadao();
    boolean that_present_emailCidadao = true && that.isSetEmailCidadao();
    if (this_present_emailCidadao || that_present_emailCidadao) {
      if (!(this_present_emailCidadao && that_present_emailCidadao))
        return false;
      if (!this.emailCidadao.equals(that.emailCidadao))
        return false;
    }

    boolean this_present_numeroNisPisPasep = true && this.isSetNumeroNisPisPasep();
    boolean that_present_numeroNisPisPasep = true && that.isSetNumeroNisPisPasep();
    if (this_present_numeroNisPisPasep || that_present_numeroNisPisPasep) {
      if (!(this_present_numeroNisPisPasep && that_present_numeroNisPisPasep))
        return false;
      if (!this.numeroNisPisPasep.equals(that.numeroNisPisPasep))
        return false;
    }

    boolean this_present_endereco = true && this.isSetEndereco();
    boolean that_present_endereco = true && that.isSetEndereco();
    if (this_present_endereco || that_present_endereco) {
      if (!(this_present_endereco && that_present_endereco))
        return false;
      if (!this.endereco.equals(that.endereco))
        return false;
    }

    boolean this_present_atencaoDomiciliarOrigem = true && this.isSetAtencaoDomiciliarOrigem();
    boolean that_present_atencaoDomiciliarOrigem = true && that.isSetAtencaoDomiciliarOrigem();
    if (this_present_atencaoDomiciliarOrigem || that_present_atencaoDomiciliarOrigem) {
      if (!(this_present_atencaoDomiciliarOrigem && that_present_atencaoDomiciliarOrigem))
        return false;
      if (this.atencaoDomiciliarOrigem != that.atencaoDomiciliarOrigem)
        return false;
    }

    boolean this_present_atencaoDomiciliarModalidade = true && this.isSetAtencaoDomiciliarModalidade();
    boolean that_present_atencaoDomiciliarModalidade = true && that.isSetAtencaoDomiciliarModalidade();
    if (this_present_atencaoDomiciliarModalidade || that_present_atencaoDomiciliarModalidade) {
      if (!(this_present_atencaoDomiciliarModalidade && that_present_atencaoDomiciliarModalidade))
        return false;
      if (this.atencaoDomiciliarModalidade != that.atencaoDomiciliarModalidade)
        return false;
    }

    boolean this_present_situacoesPresentes = true && this.isSetSituacoesPresentes();
    boolean that_present_situacoesPresentes = true && that.isSetSituacoesPresentes();
    if (this_present_situacoesPresentes || that_present_situacoesPresentes) {
      if (!(this_present_situacoesPresentes && that_present_situacoesPresentes))
        return false;
      if (!this.situacoesPresentes.equals(that.situacoesPresentes))
        return false;
    }

    boolean this_present_cid10Principal = true && this.isSetCid10Principal();
    boolean that_present_cid10Principal = true && that.isSetCid10Principal();
    if (this_present_cid10Principal || that_present_cid10Principal) {
      if (!(this_present_cid10Principal && that_present_cid10Principal))
        return false;
      if (!this.cid10Principal.equals(that.cid10Principal))
        return false;
    }

    boolean this_present_cid10Segundo = true && this.isSetCid10Segundo();
    boolean that_present_cid10Segundo = true && that.isSetCid10Segundo();
    if (this_present_cid10Segundo || that_present_cid10Segundo) {
      if (!(this_present_cid10Segundo && that_present_cid10Segundo))
        return false;
      if (!this.cid10Segundo.equals(that.cid10Segundo))
        return false;
    }

    boolean this_present_cid10Terceiro = true && this.isSetCid10Terceiro();
    boolean that_present_cid10Terceiro = true && that.isSetCid10Terceiro();
    if (this_present_cid10Terceiro || that_present_cid10Terceiro) {
      if (!(this_present_cid10Terceiro && that_present_cid10Terceiro))
        return false;
      if (!this.cid10Terceiro.equals(that.cid10Terceiro))
        return false;
    }

    boolean this_present_conclusaoDestinoElegivel = true && this.isSetConclusaoDestinoElegivel();
    boolean that_present_conclusaoDestinoElegivel = true && that.isSetConclusaoDestinoElegivel();
    if (this_present_conclusaoDestinoElegivel || that_present_conclusaoDestinoElegivel) {
      if (!(this_present_conclusaoDestinoElegivel && that_present_conclusaoDestinoElegivel))
        return false;
      if (this.conclusaoDestinoElegivel != that.conclusaoDestinoElegivel)
        return false;
    }

    boolean this_present_conclusaoDestinoInelegivel = true && this.isSetConclusaoDestinoInelegivel();
    boolean that_present_conclusaoDestinoInelegivel = true && that.isSetConclusaoDestinoInelegivel();
    if (this_present_conclusaoDestinoInelegivel || that_present_conclusaoDestinoInelegivel) {
      if (!(this_present_conclusaoDestinoInelegivel && that_present_conclusaoDestinoInelegivel))
        return false;
      if (!this.conclusaoDestinoInelegivel.equals(that.conclusaoDestinoInelegivel))
        return false;
    }

    boolean this_present_cuidadorCidadao = true && this.isSetCuidadorCidadao();
    boolean that_present_cuidadorCidadao = true && that.isSetCuidadorCidadao();
    if (this_present_cuidadorCidadao || that_present_cuidadorCidadao) {
      if (!(this_present_cuidadorCidadao && that_present_cuidadorCidadao))
        return false;
      if (this.cuidadorCidadao != that.cuidadorCidadao)
        return false;
    }

    return true;
  }

  @Override
  public int hashCode() {
    List<Object> list = new ArrayList<Object>();

    boolean present_uuidFicha = true && (isSetUuidFicha());
    list.add(present_uuidFicha);
    if (present_uuidFicha)
      list.add(uuidFicha);

    boolean present_tpCdsOrigem = true && (isSetTpCdsOrigem());
    list.add(present_tpCdsOrigem);
    if (present_tpCdsOrigem)
      list.add(tpCdsOrigem);

    boolean present_headerTransport = true && (isSetHeaderTransport());
    list.add(present_headerTransport);
    if (present_headerTransport)
      list.add(headerTransport);

    boolean present_numeroCartaoSus = true && (isSetNumeroCartaoSus());
    list.add(present_numeroCartaoSus);
    if (present_numeroCartaoSus)
      list.add(numeroCartaoSus);

    boolean present_nomeCidadao = true && (isSetNomeCidadao());
    list.add(present_nomeCidadao);
    if (present_nomeCidadao)
      list.add(nomeCidadao);

    boolean present_nomeSocialCidadao = true && (isSetNomeSocialCidadao());
    list.add(present_nomeSocialCidadao);
    if (present_nomeSocialCidadao)
      list.add(nomeSocialCidadao);

    boolean present_dataNascimentoCidadao = true && (isSetDataNascimentoCidadao());
    list.add(present_dataNascimentoCidadao);
    if (present_dataNascimentoCidadao)
      list.add(dataNascimentoCidadao);

    boolean present_sexoCidadao = true && (isSetSexoCidadao());
    list.add(present_sexoCidadao);
    if (present_sexoCidadao)
      list.add(sexoCidadao);

    boolean present_racaCorCidadao = true && (isSetRacaCorCidadao());
    list.add(present_racaCorCidadao);
    if (present_racaCorCidadao)
      list.add(racaCorCidadao);

    boolean present_nomeMaeCidadao = true && (isSetNomeMaeCidadao());
    list.add(present_nomeMaeCidadao);
    if (present_nomeMaeCidadao)
      list.add(nomeMaeCidadao);

    boolean present_desconheceNomeMae = true && (isSetDesconheceNomeMae());
    list.add(present_desconheceNomeMae);
    if (present_desconheceNomeMae)
      list.add(desconheceNomeMae);

    boolean present_codigoIbgeMunicipioNascimento = true && (isSetCodigoIbgeMunicipioNascimento());
    list.add(present_codigoIbgeMunicipioNascimento);
    if (present_codigoIbgeMunicipioNascimento)
      list.add(codigoIbgeMunicipioNascimento);

    boolean present_codigoNacionalidade = true && (isSetCodigoNacionalidade());
    list.add(present_codigoNacionalidade);
    if (present_codigoNacionalidade)
      list.add(codigoNacionalidade);

    boolean present_emailCidadao = true && (isSetEmailCidadao());
    list.add(present_emailCidadao);
    if (present_emailCidadao)
      list.add(emailCidadao);

    boolean present_numeroNisPisPasep = true && (isSetNumeroNisPisPasep());
    list.add(present_numeroNisPisPasep);
    if (present_numeroNisPisPasep)
      list.add(numeroNisPisPasep);

    boolean present_endereco = true && (isSetEndereco());
    list.add(present_endereco);
    if (present_endereco)
      list.add(endereco);

    boolean present_atencaoDomiciliarOrigem = true && (isSetAtencaoDomiciliarOrigem());
    list.add(present_atencaoDomiciliarOrigem);
    if (present_atencaoDomiciliarOrigem)
      list.add(atencaoDomiciliarOrigem);

    boolean present_atencaoDomiciliarModalidade = true && (isSetAtencaoDomiciliarModalidade());
    list.add(present_atencaoDomiciliarModalidade);
    if (present_atencaoDomiciliarModalidade)
      list.add(atencaoDomiciliarModalidade);

    boolean present_situacoesPresentes = true && (isSetSituacoesPresentes());
    list.add(present_situacoesPresentes);
    if (present_situacoesPresentes)
      list.add(situacoesPresentes);

    boolean present_cid10Principal = true && (isSetCid10Principal());
    list.add(present_cid10Principal);
    if (present_cid10Principal)
      list.add(cid10Principal);

    boolean present_cid10Segundo = true && (isSetCid10Segundo());
    list.add(present_cid10Segundo);
    if (present_cid10Segundo)
      list.add(cid10Segundo);

    boolean present_cid10Terceiro = true && (isSetCid10Terceiro());
    list.add(present_cid10Terceiro);
    if (present_cid10Terceiro)
      list.add(cid10Terceiro);

    boolean present_conclusaoDestinoElegivel = true && (isSetConclusaoDestinoElegivel());
    list.add(present_conclusaoDestinoElegivel);
    if (present_conclusaoDestinoElegivel)
      list.add(conclusaoDestinoElegivel);

    boolean present_conclusaoDestinoInelegivel = true && (isSetConclusaoDestinoInelegivel());
    list.add(present_conclusaoDestinoInelegivel);
    if (present_conclusaoDestinoInelegivel)
      list.add(conclusaoDestinoInelegivel);

    boolean present_cuidadorCidadao = true && (isSetCuidadorCidadao());
    list.add(present_cuidadorCidadao);
    if (present_cuidadorCidadao)
      list.add(cuidadorCidadao);

    return list.hashCode();
  }

  @Override
  public int compareTo(FichaAvaliacaoElegibilidadeThrift other) {
    if (!getClass().equals(other.getClass())) {
      return getClass().getName().compareTo(other.getClass().getName());
    }

    int lastComparison = 0;

    lastComparison = Boolean.valueOf(isSetUuidFicha()).compareTo(other.isSetUuidFicha());
    if (lastComparison != 0) {
      return lastComparison;
    }
    if (isSetUuidFicha()) {
      lastComparison = org.apache.thrift.TBaseHelper.compareTo(this.uuidFicha, other.uuidFicha);
      if (lastComparison != 0) {
        return lastComparison;
      }
    }
    lastComparison = Boolean.valueOf(isSetTpCdsOrigem()).compareTo(other.isSetTpCdsOrigem());
    if (lastComparison != 0) {
      return lastComparison;
    }
    if (isSetTpCdsOrigem()) {
      lastComparison = org.apache.thrift.TBaseHelper.compareTo(this.tpCdsOrigem, other.tpCdsOrigem);
      if (lastComparison != 0) {
        return lastComparison;
      }
    }
    lastComparison = Boolean.valueOf(isSetHeaderTransport()).compareTo(other.isSetHeaderTransport());
    if (lastComparison != 0) {
      return lastComparison;
    }
    if (isSetHeaderTransport()) {
      lastComparison = org.apache.thrift.TBaseHelper.compareTo(this.headerTransport, other.headerTransport);
      if (lastComparison != 0) {
        return lastComparison;
      }
    }
    lastComparison = Boolean.valueOf(isSetNumeroCartaoSus()).compareTo(other.isSetNumeroCartaoSus());
    if (lastComparison != 0) {
      return lastComparison;
    }
    if (isSetNumeroCartaoSus()) {
      lastComparison = org.apache.thrift.TBaseHelper.compareTo(this.numeroCartaoSus, other.numeroCartaoSus);
      if (lastComparison != 0) {
        return lastComparison;
      }
    }
    lastComparison = Boolean.valueOf(isSetNomeCidadao()).compareTo(other.isSetNomeCidadao());
    if (lastComparison != 0) {
      return lastComparison;
    }
    if (isSetNomeCidadao()) {
      lastComparison = org.apache.thrift.TBaseHelper.compareTo(this.nomeCidadao, other.nomeCidadao);
      if (lastComparison != 0) {
        return lastComparison;
      }
    }
    lastComparison = Boolean.valueOf(isSetNomeSocialCidadao()).compareTo(other.isSetNomeSocialCidadao());
    if (lastComparison != 0) {
      return lastComparison;
    }
    if (isSetNomeSocialCidadao()) {
      lastComparison = org.apache.thrift.TBaseHelper.compareTo(this.nomeSocialCidadao, other.nomeSocialCidadao);
      if (lastComparison != 0) {
        return lastComparison;
      }
    }
    lastComparison = Boolean.valueOf(isSetDataNascimentoCidadao()).compareTo(other.isSetDataNascimentoCidadao());
    if (lastComparison != 0) {
      return lastComparison;
    }
    if (isSetDataNascimentoCidadao()) {
      lastComparison = org.apache.thrift.TBaseHelper.compareTo(this.dataNascimentoCidadao, other.dataNascimentoCidadao);
      if (lastComparison != 0) {
        return lastComparison;
      }
    }
    lastComparison = Boolean.valueOf(isSetSexoCidadao()).compareTo(other.isSetSexoCidadao());
    if (lastComparison != 0) {
      return lastComparison;
    }
    if (isSetSexoCidadao()) {
      lastComparison = org.apache.thrift.TBaseHelper.compareTo(this.sexoCidadao, other.sexoCidadao);
      if (lastComparison != 0) {
        return lastComparison;
      }
    }
    lastComparison = Boolean.valueOf(isSetRacaCorCidadao()).compareTo(other.isSetRacaCorCidadao());
    if (lastComparison != 0) {
      return lastComparison;
    }
    if (isSetRacaCorCidadao()) {
      lastComparison = org.apache.thrift.TBaseHelper.compareTo(this.racaCorCidadao, other.racaCorCidadao);
      if (lastComparison != 0) {
        return lastComparison;
      }
    }
    lastComparison = Boolean.valueOf(isSetNomeMaeCidadao()).compareTo(other.isSetNomeMaeCidadao());
    if (lastComparison != 0) {
      return lastComparison;
    }
    if (isSetNomeMaeCidadao()) {
      lastComparison = org.apache.thrift.TBaseHelper.compareTo(this.nomeMaeCidadao, other.nomeMaeCidadao);
      if (lastComparison != 0) {
        return lastComparison;
      }
    }
    lastComparison = Boolean.valueOf(isSetDesconheceNomeMae()).compareTo(other.isSetDesconheceNomeMae());
    if (lastComparison != 0) {
      return lastComparison;
    }
    if (isSetDesconheceNomeMae()) {
      lastComparison = org.apache.thrift.TBaseHelper.compareTo(this.desconheceNomeMae, other.desconheceNomeMae);
      if (lastComparison != 0) {
        return lastComparison;
      }
    }
    lastComparison = Boolean.valueOf(isSetCodigoIbgeMunicipioNascimento()).compareTo(other.isSetCodigoIbgeMunicipioNascimento());
    if (lastComparison != 0) {
      return lastComparison;
    }
    if (isSetCodigoIbgeMunicipioNascimento()) {
      lastComparison = org.apache.thrift.TBaseHelper.compareTo(this.codigoIbgeMunicipioNascimento, other.codigoIbgeMunicipioNascimento);
      if (lastComparison != 0) {
        return lastComparison;
      }
    }
    lastComparison = Boolean.valueOf(isSetCodigoNacionalidade()).compareTo(other.isSetCodigoNacionalidade());
    if (lastComparison != 0) {
      return lastComparison;
    }
    if (isSetCodigoNacionalidade()) {
      lastComparison = org.apache.thrift.TBaseHelper.compareTo(this.codigoNacionalidade, other.codigoNacionalidade);
      if (lastComparison != 0) {
        return lastComparison;
      }
    }
    lastComparison = Boolean.valueOf(isSetEmailCidadao()).compareTo(other.isSetEmailCidadao());
    if (lastComparison != 0) {
      return lastComparison;
    }
    if (isSetEmailCidadao()) {
      lastComparison = org.apache.thrift.TBaseHelper.compareTo(this.emailCidadao, other.emailCidadao);
      if (lastComparison != 0) {
        return lastComparison;
      }
    }
    lastComparison = Boolean.valueOf(isSetNumeroNisPisPasep()).compareTo(other.isSetNumeroNisPisPasep());
    if (lastComparison != 0) {
      return lastComparison;
    }
    if (isSetNumeroNisPisPasep()) {
      lastComparison = org.apache.thrift.TBaseHelper.compareTo(this.numeroNisPisPasep, other.numeroNisPisPasep);
      if (lastComparison != 0) {
        return lastComparison;
      }
    }
    lastComparison = Boolean.valueOf(isSetEndereco()).compareTo(other.isSetEndereco());
    if (lastComparison != 0) {
      return lastComparison;
    }
    if (isSetEndereco()) {
      lastComparison = org.apache.thrift.TBaseHelper.compareTo(this.endereco, other.endereco);
      if (lastComparison != 0) {
        return lastComparison;
      }
    }
    lastComparison = Boolean.valueOf(isSetAtencaoDomiciliarOrigem()).compareTo(other.isSetAtencaoDomiciliarOrigem());
    if (lastComparison != 0) {
      return lastComparison;
    }
    if (isSetAtencaoDomiciliarOrigem()) {
      lastComparison = org.apache.thrift.TBaseHelper.compareTo(this.atencaoDomiciliarOrigem, other.atencaoDomiciliarOrigem);
      if (lastComparison != 0) {
        return lastComparison;
      }
    }
    lastComparison = Boolean.valueOf(isSetAtencaoDomiciliarModalidade()).compareTo(other.isSetAtencaoDomiciliarModalidade());
    if (lastComparison != 0) {
      return lastComparison;
    }
    if (isSetAtencaoDomiciliarModalidade()) {
      lastComparison = org.apache.thrift.TBaseHelper.compareTo(this.atencaoDomiciliarModalidade, other.atencaoDomiciliarModalidade);
      if (lastComparison != 0) {
        return lastComparison;
      }
    }
    lastComparison = Boolean.valueOf(isSetSituacoesPresentes()).compareTo(other.isSetSituacoesPresentes());
    if (lastComparison != 0) {
      return lastComparison;
    }
    if (isSetSituacoesPresentes()) {
      lastComparison = org.apache.thrift.TBaseHelper.compareTo(this.situacoesPresentes, other.situacoesPresentes);
      if (lastComparison != 0) {
        return lastComparison;
      }
    }
    lastComparison = Boolean.valueOf(isSetCid10Principal()).compareTo(other.isSetCid10Principal());
    if (lastComparison != 0) {
      return lastComparison;
    }
    if (isSetCid10Principal()) {
      lastComparison = org.apache.thrift.TBaseHelper.compareTo(this.cid10Principal, other.cid10Principal);
      if (lastComparison != 0) {
        return lastComparison;
      }
    }
    lastComparison = Boolean.valueOf(isSetCid10Segundo()).compareTo(other.isSetCid10Segundo());
    if (lastComparison != 0) {
      return lastComparison;
    }
    if (isSetCid10Segundo()) {
      lastComparison = org.apache.thrift.TBaseHelper.compareTo(this.cid10Segundo, other.cid10Segundo);
      if (lastComparison != 0) {
        return lastComparison;
      }
    }
    lastComparison = Boolean.valueOf(isSetCid10Terceiro()).compareTo(other.isSetCid10Terceiro());
    if (lastComparison != 0) {
      return lastComparison;
    }
    if (isSetCid10Terceiro()) {
      lastComparison = org.apache.thrift.TBaseHelper.compareTo(this.cid10Terceiro, other.cid10Terceiro);
      if (lastComparison != 0) {
        return lastComparison;
      }
    }
    lastComparison = Boolean.valueOf(isSetConclusaoDestinoElegivel()).compareTo(other.isSetConclusaoDestinoElegivel());
    if (lastComparison != 0) {
      return lastComparison;
    }
    if (isSetConclusaoDestinoElegivel()) {
      lastComparison = org.apache.thrift.TBaseHelper.compareTo(this.conclusaoDestinoElegivel, other.conclusaoDestinoElegivel);
      if (lastComparison != 0) {
        return lastComparison;
      }
    }
    lastComparison = Boolean.valueOf(isSetConclusaoDestinoInelegivel()).compareTo(other.isSetConclusaoDestinoInelegivel());
    if (lastComparison != 0) {
      return lastComparison;
    }
    if (isSetConclusaoDestinoInelegivel()) {
      lastComparison = org.apache.thrift.TBaseHelper.compareTo(this.conclusaoDestinoInelegivel, other.conclusaoDestinoInelegivel);
      if (lastComparison != 0) {
        return lastComparison;
      }
    }
    lastComparison = Boolean.valueOf(isSetCuidadorCidadao()).compareTo(other.isSetCuidadorCidadao());
    if (lastComparison != 0) {
      return lastComparison;
    }
    if (isSetCuidadorCidadao()) {
      lastComparison = org.apache.thrift.TBaseHelper.compareTo(this.cuidadorCidadao, other.cuidadorCidadao);
      if (lastComparison != 0) {
        return lastComparison;
      }
    }
    return 0;
  }

  public _Fields fieldForId(int fieldId) {
    return _Fields.findByThriftId(fieldId);
  }

  public void read(org.apache.thrift.protocol.TProtocol iprot) throws org.apache.thrift.TException {
    schemes.get(iprot.getScheme()).getScheme().read(iprot, this);
  }

  public void write(org.apache.thrift.protocol.TProtocol oprot) throws org.apache.thrift.TException {
    schemes.get(oprot.getScheme()).getScheme().write(oprot, this);
  }

  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder("FichaAvaliacaoElegibilidadeThrift(");
    boolean first = true;

    sb.append("uuidFicha:");
    if (this.uuidFicha == null) {
      sb.append("null");
    } else {
      sb.append(this.uuidFicha);
    }
    first = false;
    if (isSetTpCdsOrigem()) {
      if (!first) sb.append(", ");
      sb.append("tpCdsOrigem:");
      sb.append(this.tpCdsOrigem);
      first = false;
    }
    if (!first) sb.append(", ");
    sb.append("headerTransport:");
    if (this.headerTransport == null) {
      sb.append("null");
    } else {
      sb.append(this.headerTransport);
    }
    first = false;
    if (isSetNumeroCartaoSus()) {
      if (!first) sb.append(", ");
      sb.append("numeroCartaoSus:");
      if (this.numeroCartaoSus == null) {
        sb.append("null");
      } else {
        sb.append(this.numeroCartaoSus);
      }
      first = false;
    }
    if (isSetNomeCidadao()) {
      if (!first) sb.append(", ");
      sb.append("nomeCidadao:");
      if (this.nomeCidadao == null) {
        sb.append("null");
      } else {
        sb.append(this.nomeCidadao);
      }
      first = false;
    }
    if (isSetNomeSocialCidadao()) {
      if (!first) sb.append(", ");
      sb.append("nomeSocialCidadao:");
      if (this.nomeSocialCidadao == null) {
        sb.append("null");
      } else {
        sb.append(this.nomeSocialCidadao);
      }
      first = false;
    }
    if (isSetDataNascimentoCidadao()) {
      if (!first) sb.append(", ");
      sb.append("dataNascimentoCidadao:");
      sb.append(this.dataNascimentoCidadao);
      first = false;
    }
    if (isSetSexoCidadao()) {
      if (!first) sb.append(", ");
      sb.append("sexoCidadao:");
      sb.append(this.sexoCidadao);
      first = false;
    }
    if (isSetRacaCorCidadao()) {
      if (!first) sb.append(", ");
      sb.append("racaCorCidadao:");
      sb.append(this.racaCorCidadao);
      first = false;
    }
    if (isSetNomeMaeCidadao()) {
      if (!first) sb.append(", ");
      sb.append("nomeMaeCidadao:");
      if (this.nomeMaeCidadao == null) {
        sb.append("null");
      } else {
        sb.append(this.nomeMaeCidadao);
      }
      first = false;
    }
    if (isSetDesconheceNomeMae()) {
      if (!first) sb.append(", ");
      sb.append("desconheceNomeMae:");
      sb.append(this.desconheceNomeMae);
      first = false;
    }
    if (isSetCodigoIbgeMunicipioNascimento()) {
      if (!first) sb.append(", ");
      sb.append("codigoIbgeMunicipioNascimento:");
      if (this.codigoIbgeMunicipioNascimento == null) {
        sb.append("null");
      } else {
        sb.append(this.codigoIbgeMunicipioNascimento);
      }
      first = false;
    }
    if (isSetCodigoNacionalidade()) {
      if (!first) sb.append(", ");
      sb.append("codigoNacionalidade:");
      sb.append(this.codigoNacionalidade);
      first = false;
    }
    if (isSetEmailCidadao()) {
      if (!first) sb.append(", ");
      sb.append("emailCidadao:");
      if (this.emailCidadao == null) {
        sb.append("null");
      } else {
        sb.append(this.emailCidadao);
      }
      first = false;
    }
    if (isSetNumeroNisPisPasep()) {
      if (!first) sb.append(", ");
      sb.append("numeroNisPisPasep:");
      if (this.numeroNisPisPasep == null) {
        sb.append("null");
      } else {
        sb.append(this.numeroNisPisPasep);
      }
      first = false;
    }
    if (isSetEndereco()) {
      if (!first) sb.append(", ");
      sb.append("endereco:");
      if (this.endereco == null) {
        sb.append("null");
      } else {
        sb.append(this.endereco);
      }
      first = false;
    }
    if (isSetAtencaoDomiciliarOrigem()) {
      if (!first) sb.append(", ");
      sb.append("atencaoDomiciliarOrigem:");
      sb.append(this.atencaoDomiciliarOrigem);
      first = false;
    }
    if (isSetAtencaoDomiciliarModalidade()) {
      if (!first) sb.append(", ");
      sb.append("atencaoDomiciliarModalidade:");
      sb.append(this.atencaoDomiciliarModalidade);
      first = false;
    }
    if (isSetSituacoesPresentes()) {
      if (!first) sb.append(", ");
      sb.append("situacoesPresentes:");
      if (this.situacoesPresentes == null) {
        sb.append("null");
      } else {
        sb.append(this.situacoesPresentes);
      }
      first = false;
    }
    if (isSetCid10Principal()) {
      if (!first) sb.append(", ");
      sb.append("cid10Principal:");
      if (this.cid10Principal == null) {
        sb.append("null");
      } else {
        sb.append(this.cid10Principal);
      }
      first = false;
    }
    if (isSetCid10Segundo()) {
      if (!first) sb.append(", ");
      sb.append("cid10Segundo:");
      if (this.cid10Segundo == null) {
        sb.append("null");
      } else {
        sb.append(this.cid10Segundo);
      }
      first = false;
    }
    if (isSetCid10Terceiro()) {
      if (!first) sb.append(", ");
      sb.append("cid10Terceiro:");
      if (this.cid10Terceiro == null) {
        sb.append("null");
      } else {
        sb.append(this.cid10Terceiro);
      }
      first = false;
    }
    if (isSetConclusaoDestinoElegivel()) {
      if (!first) sb.append(", ");
      sb.append("conclusaoDestinoElegivel:");
      sb.append(this.conclusaoDestinoElegivel);
      first = false;
    }
    if (isSetConclusaoDestinoInelegivel()) {
      if (!first) sb.append(", ");
      sb.append("conclusaoDestinoInelegivel:");
      if (this.conclusaoDestinoInelegivel == null) {
        sb.append("null");
      } else {
        sb.append(this.conclusaoDestinoInelegivel);
      }
      first = false;
    }
    if (isSetCuidadorCidadao()) {
      if (!first) sb.append(", ");
      sb.append("cuidadorCidadao:");
      sb.append(this.cuidadorCidadao);
      first = false;
    }
    sb.append(")");
    return sb.toString();
  }

  public void validate() throws org.apache.thrift.TException {
    // check for required fields
    if (!isSetUuidFicha()) {
      throw new org.apache.thrift.protocol.TProtocolException("Required field 'uuidFicha' is unset! Struct:" + toString());
    }

    if (!isSetHeaderTransport()) {
      throw new org.apache.thrift.protocol.TProtocolException("Required field 'headerTransport' is unset! Struct:" + toString());
    }

    // check for sub-struct validity
    if (headerTransport != null) {
      headerTransport.validate();
    }
    if (endereco != null) {
      endereco.validate();
    }
  }

  private void writeObject(java.io.ObjectOutputStream out) throws java.io.IOException {
    try {
      write(new org.apache.thrift.protocol.TCompactProtocol(new org.apache.thrift.transport.TIOStreamTransport(out)));
    } catch (org.apache.thrift.TException te) {
      throw new java.io.IOException(te);
    }
  }

  private void readObject(java.io.ObjectInputStream in) throws java.io.IOException, ClassNotFoundException {
    try {
      // it doesn't seem like you should have to do this, but java serialization is wacky, and doesn't call the default constructor.
      __isset_bitfield = 0;
      read(new org.apache.thrift.protocol.TCompactProtocol(new org.apache.thrift.transport.TIOStreamTransport(in)));
    } catch (org.apache.thrift.TException te) {
      throw new java.io.IOException(te);
    }
  }

  private static class FichaAvaliacaoElegibilidadeThriftStandardSchemeFactory implements SchemeFactory {
    public FichaAvaliacaoElegibilidadeThriftStandardScheme getScheme() {
      return new FichaAvaliacaoElegibilidadeThriftStandardScheme();
    }
  }

  private static class FichaAvaliacaoElegibilidadeThriftStandardScheme extends StandardScheme<FichaAvaliacaoElegibilidadeThrift> {

    public void read(org.apache.thrift.protocol.TProtocol iprot, FichaAvaliacaoElegibilidadeThrift struct) throws org.apache.thrift.TException {
      org.apache.thrift.protocol.TField schemeField;
      iprot.readStructBegin();
      while (true)
      {
        schemeField = iprot.readFieldBegin();
        if (schemeField.type == org.apache.thrift.protocol.TType.STOP) { 
          break;
        }
        switch (schemeField.id) {
          case 1: // UUID_FICHA
            if (schemeField.type == org.apache.thrift.protocol.TType.STRING) {
              struct.uuidFicha = iprot.readString();
              struct.setUuidFichaIsSet(true);
            } else { 
              org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
            }
            break;
          case 2: // TP_CDS_ORIGEM
            if (schemeField.type == org.apache.thrift.protocol.TType.I32) {
              struct.tpCdsOrigem = iprot.readI32();
              struct.setTpCdsOrigemIsSet(true);
            } else { 
              org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
            }
            break;
          case 3: // HEADER_TRANSPORT
            if (schemeField.type == org.apache.thrift.protocol.TType.STRUCT) {
              struct.headerTransport = new br.gov.saude.esus.cds.transport.generated.thrift.common.UnicaLotacaoHeaderThrift();
              struct.headerTransport.read(iprot);
              struct.setHeaderTransportIsSet(true);
            } else { 
              org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
            }
            break;
          case 4: // NUMERO_CARTAO_SUS
            if (schemeField.type == org.apache.thrift.protocol.TType.STRING) {
              struct.numeroCartaoSus = iprot.readString();
              struct.setNumeroCartaoSusIsSet(true);
            } else { 
              org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
            }
            break;
          case 5: // NOME_CIDADAO
            if (schemeField.type == org.apache.thrift.protocol.TType.STRING) {
              struct.nomeCidadao = iprot.readString();
              struct.setNomeCidadaoIsSet(true);
            } else { 
              org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
            }
            break;
          case 6: // NOME_SOCIAL_CIDADAO
            if (schemeField.type == org.apache.thrift.protocol.TType.STRING) {
              struct.nomeSocialCidadao = iprot.readString();
              struct.setNomeSocialCidadaoIsSet(true);
            } else { 
              org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
            }
            break;
          case 7: // DATA_NASCIMENTO_CIDADAO
            if (schemeField.type == org.apache.thrift.protocol.TType.I64) {
              struct.dataNascimentoCidadao = iprot.readI64();
              struct.setDataNascimentoCidadaoIsSet(true);
            } else { 
              org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
            }
            break;
          case 8: // SEXO_CIDADAO
            if (schemeField.type == org.apache.thrift.protocol.TType.I64) {
              struct.sexoCidadao = iprot.readI64();
              struct.setSexoCidadaoIsSet(true);
            } else { 
              org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
            }
            break;
          case 9: // RACA_COR_CIDADAO
            if (schemeField.type == org.apache.thrift.protocol.TType.I64) {
              struct.racaCorCidadao = iprot.readI64();
              struct.setRacaCorCidadaoIsSet(true);
            } else { 
              org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
            }
            break;
          case 10: // NOME_MAE_CIDADAO
            if (schemeField.type == org.apache.thrift.protocol.TType.STRING) {
              struct.nomeMaeCidadao = iprot.readString();
              struct.setNomeMaeCidadaoIsSet(true);
            } else { 
              org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
            }
            break;
          case 11: // DESCONHECE_NOME_MAE
            if (schemeField.type == org.apache.thrift.protocol.TType.BOOL) {
              struct.desconheceNomeMae = iprot.readBool();
              struct.setDesconheceNomeMaeIsSet(true);
            } else { 
              org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
            }
            break;
          case 12: // CODIGO_IBGE_MUNICIPIO_NASCIMENTO
            if (schemeField.type == org.apache.thrift.protocol.TType.STRING) {
              struct.codigoIbgeMunicipioNascimento = iprot.readString();
              struct.setCodigoIbgeMunicipioNascimentoIsSet(true);
            } else { 
              org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
            }
            break;
          case 13: // CODIGO_NACIONALIDADE
            if (schemeField.type == org.apache.thrift.protocol.TType.I64) {
              struct.codigoNacionalidade = iprot.readI64();
              struct.setCodigoNacionalidadeIsSet(true);
            } else { 
              org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
            }
            break;
          case 14: // EMAIL_CIDADAO
            if (schemeField.type == org.apache.thrift.protocol.TType.STRING) {
              struct.emailCidadao = iprot.readString();
              struct.setEmailCidadaoIsSet(true);
            } else { 
              org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
            }
            break;
          case 15: // NUMERO_NIS_PIS_PASEP
            if (schemeField.type == org.apache.thrift.protocol.TType.STRING) {
              struct.numeroNisPisPasep = iprot.readString();
              struct.setNumeroNisPisPasepIsSet(true);
            } else { 
              org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
            }
            break;
          case 16: // ENDERECO
            if (schemeField.type == org.apache.thrift.protocol.TType.STRUCT) {
              struct.endereco = new br.gov.saude.esus.cds.transport.generated.thrift.common.EnderecoLocalPermanenciaThrift();
              struct.endereco.read(iprot);
              struct.setEnderecoIsSet(true);
            } else { 
              org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
            }
            break;
          case 17: // ATENCAO_DOMICILIAR_ORIGEM
            if (schemeField.type == org.apache.thrift.protocol.TType.I64) {
              struct.atencaoDomiciliarOrigem = iprot.readI64();
              struct.setAtencaoDomiciliarOrigemIsSet(true);
            } else { 
              org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
            }
            break;
          case 18: // ATENCAO_DOMICILIAR_MODALIDADE
            if (schemeField.type == org.apache.thrift.protocol.TType.I64) {
              struct.atencaoDomiciliarModalidade = iprot.readI64();
              struct.setAtencaoDomiciliarModalidadeIsSet(true);
            } else { 
              org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
            }
            break;
          case 19: // SITUACOES_PRESENTES
            if (schemeField.type == org.apache.thrift.protocol.TType.LIST) {
              {
                org.apache.thrift.protocol.TList _list0 = iprot.readListBegin();
                struct.situacoesPresentes = new ArrayList<Long>(_list0.size);
                long _elem1;
                for (int _i2 = 0; _i2 < _list0.size; ++_i2)
                {
                  _elem1 = iprot.readI64();
                  struct.situacoesPresentes.add(_elem1);
                }
                iprot.readListEnd();
              }
              struct.setSituacoesPresentesIsSet(true);
            } else { 
              org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
            }
            break;
          case 20: // CID10_PRINCIPAL
            if (schemeField.type == org.apache.thrift.protocol.TType.STRING) {
              struct.cid10Principal = iprot.readString();
              struct.setCid10PrincipalIsSet(true);
            } else { 
              org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
            }
            break;
          case 21: // CID10_SEGUNDO
            if (schemeField.type == org.apache.thrift.protocol.TType.STRING) {
              struct.cid10Segundo = iprot.readString();
              struct.setCid10SegundoIsSet(true);
            } else { 
              org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
            }
            break;
          case 22: // CID10_TERCEIRO
            if (schemeField.type == org.apache.thrift.protocol.TType.STRING) {
              struct.cid10Terceiro = iprot.readString();
              struct.setCid10TerceiroIsSet(true);
            } else { 
              org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
            }
            break;
          case 23: // CONCLUSAO_DESTINO_ELEGIVEL
            if (schemeField.type == org.apache.thrift.protocol.TType.I64) {
              struct.conclusaoDestinoElegivel = iprot.readI64();
              struct.setConclusaoDestinoElegivelIsSet(true);
            } else { 
              org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
            }
            break;
          case 24: // CONCLUSAO_DESTINO_INELEGIVEL
            if (schemeField.type == org.apache.thrift.protocol.TType.LIST) {
              {
                org.apache.thrift.protocol.TList _list3 = iprot.readListBegin();
                struct.conclusaoDestinoInelegivel = new ArrayList<Long>(_list3.size);
                long _elem4;
                for (int _i5 = 0; _i5 < _list3.size; ++_i5)
                {
                  _elem4 = iprot.readI64();
                  struct.conclusaoDestinoInelegivel.add(_elem4);
                }
                iprot.readListEnd();
              }
              struct.setConclusaoDestinoInelegivelIsSet(true);
            } else { 
              org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
            }
            break;
          case 25: // CUIDADOR_CIDADAO
            if (schemeField.type == org.apache.thrift.protocol.TType.I64) {
              struct.cuidadorCidadao = iprot.readI64();
              struct.setCuidadorCidadaoIsSet(true);
            } else { 
              org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
            }
            break;
          default:
            org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
        }
        iprot.readFieldEnd();
      }
      iprot.readStructEnd();
      struct.validate();
    }

    public void write(org.apache.thrift.protocol.TProtocol oprot, FichaAvaliacaoElegibilidadeThrift struct) throws org.apache.thrift.TException {
      struct.validate();

      oprot.writeStructBegin(STRUCT_DESC);
      if (struct.uuidFicha != null) {
        oprot.writeFieldBegin(UUID_FICHA_FIELD_DESC);
        oprot.writeString(struct.uuidFicha);
        oprot.writeFieldEnd();
      }
      if (struct.isSetTpCdsOrigem()) {
        oprot.writeFieldBegin(TP_CDS_ORIGEM_FIELD_DESC);
        oprot.writeI32(struct.tpCdsOrigem);
        oprot.writeFieldEnd();
      }
      if (struct.headerTransport != null) {
        oprot.writeFieldBegin(HEADER_TRANSPORT_FIELD_DESC);
        struct.headerTransport.write(oprot);
        oprot.writeFieldEnd();
      }
      if (struct.numeroCartaoSus != null) {
        if (struct.isSetNumeroCartaoSus()) {
          oprot.writeFieldBegin(NUMERO_CARTAO_SUS_FIELD_DESC);
          oprot.writeString(struct.numeroCartaoSus);
          oprot.writeFieldEnd();
        }
      }
      if (struct.nomeCidadao != null) {
        if (struct.isSetNomeCidadao()) {
          oprot.writeFieldBegin(NOME_CIDADAO_FIELD_DESC);
          oprot.writeString(struct.nomeCidadao);
          oprot.writeFieldEnd();
        }
      }
      if (struct.nomeSocialCidadao != null) {
        if (struct.isSetNomeSocialCidadao()) {
          oprot.writeFieldBegin(NOME_SOCIAL_CIDADAO_FIELD_DESC);
          oprot.writeString(struct.nomeSocialCidadao);
          oprot.writeFieldEnd();
        }
      }
      if (struct.isSetDataNascimentoCidadao()) {
        oprot.writeFieldBegin(DATA_NASCIMENTO_CIDADAO_FIELD_DESC);
        oprot.writeI64(struct.dataNascimentoCidadao);
        oprot.writeFieldEnd();
      }
      if (struct.isSetSexoCidadao()) {
        oprot.writeFieldBegin(SEXO_CIDADAO_FIELD_DESC);
        oprot.writeI64(struct.sexoCidadao);
        oprot.writeFieldEnd();
      }
      if (struct.isSetRacaCorCidadao()) {
        oprot.writeFieldBegin(RACA_COR_CIDADAO_FIELD_DESC);
        oprot.writeI64(struct.racaCorCidadao);
        oprot.writeFieldEnd();
      }
      if (struct.nomeMaeCidadao != null) {
        if (struct.isSetNomeMaeCidadao()) {
          oprot.writeFieldBegin(NOME_MAE_CIDADAO_FIELD_DESC);
          oprot.writeString(struct.nomeMaeCidadao);
          oprot.writeFieldEnd();
        }
      }
      if (struct.isSetDesconheceNomeMae()) {
        oprot.writeFieldBegin(DESCONHECE_NOME_MAE_FIELD_DESC);
        oprot.writeBool(struct.desconheceNomeMae);
        oprot.writeFieldEnd();
      }
      if (struct.codigoIbgeMunicipioNascimento != null) {
        if (struct.isSetCodigoIbgeMunicipioNascimento()) {
          oprot.writeFieldBegin(CODIGO_IBGE_MUNICIPIO_NASCIMENTO_FIELD_DESC);
          oprot.writeString(struct.codigoIbgeMunicipioNascimento);
          oprot.writeFieldEnd();
        }
      }
      if (struct.isSetCodigoNacionalidade()) {
        oprot.writeFieldBegin(CODIGO_NACIONALIDADE_FIELD_DESC);
        oprot.writeI64(struct.codigoNacionalidade);
        oprot.writeFieldEnd();
      }
      if (struct.emailCidadao != null) {
        if (struct.isSetEmailCidadao()) {
          oprot.writeFieldBegin(EMAIL_CIDADAO_FIELD_DESC);
          oprot.writeString(struct.emailCidadao);
          oprot.writeFieldEnd();
        }
      }
      if (struct.numeroNisPisPasep != null) {
        if (struct.isSetNumeroNisPisPasep()) {
          oprot.writeFieldBegin(NUMERO_NIS_PIS_PASEP_FIELD_DESC);
          oprot.writeString(struct.numeroNisPisPasep);
          oprot.writeFieldEnd();
        }
      }
      if (struct.endereco != null) {
        if (struct.isSetEndereco()) {
          oprot.writeFieldBegin(ENDERECO_FIELD_DESC);
          struct.endereco.write(oprot);
          oprot.writeFieldEnd();
        }
      }
      if (struct.isSetAtencaoDomiciliarOrigem()) {
        oprot.writeFieldBegin(ATENCAO_DOMICILIAR_ORIGEM_FIELD_DESC);
        oprot.writeI64(struct.atencaoDomiciliarOrigem);
        oprot.writeFieldEnd();
      }
      if (struct.isSetAtencaoDomiciliarModalidade()) {
        oprot.writeFieldBegin(ATENCAO_DOMICILIAR_MODALIDADE_FIELD_DESC);
        oprot.writeI64(struct.atencaoDomiciliarModalidade);
        oprot.writeFieldEnd();
      }
      if (struct.situacoesPresentes != null) {
        if (struct.isSetSituacoesPresentes()) {
          oprot.writeFieldBegin(SITUACOES_PRESENTES_FIELD_DESC);
          {
            oprot.writeListBegin(new org.apache.thrift.protocol.TList(org.apache.thrift.protocol.TType.I64, struct.situacoesPresentes.size()));
            for (long _iter6 : struct.situacoesPresentes)
            {
              oprot.writeI64(_iter6);
            }
            oprot.writeListEnd();
          }
          oprot.writeFieldEnd();
        }
      }
      if (struct.cid10Principal != null) {
        if (struct.isSetCid10Principal()) {
          oprot.writeFieldBegin(CID10_PRINCIPAL_FIELD_DESC);
          oprot.writeString(struct.cid10Principal);
          oprot.writeFieldEnd();
        }
      }
      if (struct.cid10Segundo != null) {
        if (struct.isSetCid10Segundo()) {
          oprot.writeFieldBegin(CID10_SEGUNDO_FIELD_DESC);
          oprot.writeString(struct.cid10Segundo);
          oprot.writeFieldEnd();
        }
      }
      if (struct.cid10Terceiro != null) {
        if (struct.isSetCid10Terceiro()) {
          oprot.writeFieldBegin(CID10_TERCEIRO_FIELD_DESC);
          oprot.writeString(struct.cid10Terceiro);
          oprot.writeFieldEnd();
        }
      }
      if (struct.isSetConclusaoDestinoElegivel()) {
        oprot.writeFieldBegin(CONCLUSAO_DESTINO_ELEGIVEL_FIELD_DESC);
        oprot.writeI64(struct.conclusaoDestinoElegivel);
        oprot.writeFieldEnd();
      }
      if (struct.conclusaoDestinoInelegivel != null) {
        if (struct.isSetConclusaoDestinoInelegivel()) {
          oprot.writeFieldBegin(CONCLUSAO_DESTINO_INELEGIVEL_FIELD_DESC);
          {
            oprot.writeListBegin(new org.apache.thrift.protocol.TList(org.apache.thrift.protocol.TType.I64, struct.conclusaoDestinoInelegivel.size()));
            for (long _iter7 : struct.conclusaoDestinoInelegivel)
            {
              oprot.writeI64(_iter7);
            }
            oprot.writeListEnd();
          }
          oprot.writeFieldEnd();
        }
      }
      if (struct.isSetCuidadorCidadao()) {
        oprot.writeFieldBegin(CUIDADOR_CIDADAO_FIELD_DESC);
        oprot.writeI64(struct.cuidadorCidadao);
        oprot.writeFieldEnd();
      }
      oprot.writeFieldStop();
      oprot.writeStructEnd();
    }

  }

  private static class FichaAvaliacaoElegibilidadeThriftTupleSchemeFactory implements SchemeFactory {
    public FichaAvaliacaoElegibilidadeThriftTupleScheme getScheme() {
      return new FichaAvaliacaoElegibilidadeThriftTupleScheme();
    }
  }

  private static class FichaAvaliacaoElegibilidadeThriftTupleScheme extends TupleScheme<FichaAvaliacaoElegibilidadeThrift> {

    @Override
    public void write(org.apache.thrift.protocol.TProtocol prot, FichaAvaliacaoElegibilidadeThrift struct) throws org.apache.thrift.TException {
      TTupleProtocol oprot = (TTupleProtocol) prot;
      oprot.writeString(struct.uuidFicha);
      struct.headerTransport.write(oprot);
      BitSet optionals = new BitSet();
      if (struct.isSetTpCdsOrigem()) {
        optionals.set(0);
      }
      if (struct.isSetNumeroCartaoSus()) {
        optionals.set(1);
      }
      if (struct.isSetNomeCidadao()) {
        optionals.set(2);
      }
      if (struct.isSetNomeSocialCidadao()) {
        optionals.set(3);
      }
      if (struct.isSetDataNascimentoCidadao()) {
        optionals.set(4);
      }
      if (struct.isSetSexoCidadao()) {
        optionals.set(5);
      }
      if (struct.isSetRacaCorCidadao()) {
        optionals.set(6);
      }
      if (struct.isSetNomeMaeCidadao()) {
        optionals.set(7);
      }
      if (struct.isSetDesconheceNomeMae()) {
        optionals.set(8);
      }
      if (struct.isSetCodigoIbgeMunicipioNascimento()) {
        optionals.set(9);
      }
      if (struct.isSetCodigoNacionalidade()) {
        optionals.set(10);
      }
      if (struct.isSetEmailCidadao()) {
        optionals.set(11);
      }
      if (struct.isSetNumeroNisPisPasep()) {
        optionals.set(12);
      }
      if (struct.isSetEndereco()) {
        optionals.set(13);
      }
      if (struct.isSetAtencaoDomiciliarOrigem()) {
        optionals.set(14);
      }
      if (struct.isSetAtencaoDomiciliarModalidade()) {
        optionals.set(15);
      }
      if (struct.isSetSituacoesPresentes()) {
        optionals.set(16);
      }
      if (struct.isSetCid10Principal()) {
        optionals.set(17);
      }
      if (struct.isSetCid10Segundo()) {
        optionals.set(18);
      }
      if (struct.isSetCid10Terceiro()) {
        optionals.set(19);
      }
      if (struct.isSetConclusaoDestinoElegivel()) {
        optionals.set(20);
      }
      if (struct.isSetConclusaoDestinoInelegivel()) {
        optionals.set(21);
      }
      if (struct.isSetCuidadorCidadao()) {
        optionals.set(22);
      }
      oprot.writeBitSet(optionals, 23);
      if (struct.isSetTpCdsOrigem()) {
        oprot.writeI32(struct.tpCdsOrigem);
      }
      if (struct.isSetNumeroCartaoSus()) {
        oprot.writeString(struct.numeroCartaoSus);
      }
      if (struct.isSetNomeCidadao()) {
        oprot.writeString(struct.nomeCidadao);
      }
      if (struct.isSetNomeSocialCidadao()) {
        oprot.writeString(struct.nomeSocialCidadao);
      }
      if (struct.isSetDataNascimentoCidadao()) {
        oprot.writeI64(struct.dataNascimentoCidadao);
      }
      if (struct.isSetSexoCidadao()) {
        oprot.writeI64(struct.sexoCidadao);
      }
      if (struct.isSetRacaCorCidadao()) {
        oprot.writeI64(struct.racaCorCidadao);
      }
      if (struct.isSetNomeMaeCidadao()) {
        oprot.writeString(struct.nomeMaeCidadao);
      }
      if (struct.isSetDesconheceNomeMae()) {
        oprot.writeBool(struct.desconheceNomeMae);
      }
      if (struct.isSetCodigoIbgeMunicipioNascimento()) {
        oprot.writeString(struct.codigoIbgeMunicipioNascimento);
      }
      if (struct.isSetCodigoNacionalidade()) {
        oprot.writeI64(struct.codigoNacionalidade);
      }
      if (struct.isSetEmailCidadao()) {
        oprot.writeString(struct.emailCidadao);
      }
      if (struct.isSetNumeroNisPisPasep()) {
        oprot.writeString(struct.numeroNisPisPasep);
      }
      if (struct.isSetEndereco()) {
        struct.endereco.write(oprot);
      }
      if (struct.isSetAtencaoDomiciliarOrigem()) {
        oprot.writeI64(struct.atencaoDomiciliarOrigem);
      }
      if (struct.isSetAtencaoDomiciliarModalidade()) {
        oprot.writeI64(struct.atencaoDomiciliarModalidade);
      }
      if (struct.isSetSituacoesPresentes()) {
        {
          oprot.writeI32(struct.situacoesPresentes.size());
          for (long _iter8 : struct.situacoesPresentes)
          {
            oprot.writeI64(_iter8);
          }
        }
      }
      if (struct.isSetCid10Principal()) {
        oprot.writeString(struct.cid10Principal);
      }
      if (struct.isSetCid10Segundo()) {
        oprot.writeString(struct.cid10Segundo);
      }
      if (struct.isSetCid10Terceiro()) {
        oprot.writeString(struct.cid10Terceiro);
      }
      if (struct.isSetConclusaoDestinoElegivel()) {
        oprot.writeI64(struct.conclusaoDestinoElegivel);
      }
      if (struct.isSetConclusaoDestinoInelegivel()) {
        {
          oprot.writeI32(struct.conclusaoDestinoInelegivel.size());
          for (long _iter9 : struct.conclusaoDestinoInelegivel)
          {
            oprot.writeI64(_iter9);
          }
        }
      }
      if (struct.isSetCuidadorCidadao()) {
        oprot.writeI64(struct.cuidadorCidadao);
      }
    }

    @Override
    public void read(org.apache.thrift.protocol.TProtocol prot, FichaAvaliacaoElegibilidadeThrift struct) throws org.apache.thrift.TException {
      TTupleProtocol iprot = (TTupleProtocol) prot;
      struct.uuidFicha = iprot.readString();
      struct.setUuidFichaIsSet(true);
      struct.headerTransport = new br.gov.saude.esus.cds.transport.generated.thrift.common.UnicaLotacaoHeaderThrift();
      struct.headerTransport.read(iprot);
      struct.setHeaderTransportIsSet(true);
      BitSet incoming = iprot.readBitSet(23);
      if (incoming.get(0)) {
        struct.tpCdsOrigem = iprot.readI32();
        struct.setTpCdsOrigemIsSet(true);
      }
      if (incoming.get(1)) {
        struct.numeroCartaoSus = iprot.readString();
        struct.setNumeroCartaoSusIsSet(true);
      }
      if (incoming.get(2)) {
        struct.nomeCidadao = iprot.readString();
        struct.setNomeCidadaoIsSet(true);
      }
      if (incoming.get(3)) {
        struct.nomeSocialCidadao = iprot.readString();
        struct.setNomeSocialCidadaoIsSet(true);
      }
      if (incoming.get(4)) {
        struct.dataNascimentoCidadao = iprot.readI64();
        struct.setDataNascimentoCidadaoIsSet(true);
      }
      if (incoming.get(5)) {
        struct.sexoCidadao = iprot.readI64();
        struct.setSexoCidadaoIsSet(true);
      }
      if (incoming.get(6)) {
        struct.racaCorCidadao = iprot.readI64();
        struct.setRacaCorCidadaoIsSet(true);
      }
      if (incoming.get(7)) {
        struct.nomeMaeCidadao = iprot.readString();
        struct.setNomeMaeCidadaoIsSet(true);
      }
      if (incoming.get(8)) {
        struct.desconheceNomeMae = iprot.readBool();
        struct.setDesconheceNomeMaeIsSet(true);
      }
      if (incoming.get(9)) {
        struct.codigoIbgeMunicipioNascimento = iprot.readString();
        struct.setCodigoIbgeMunicipioNascimentoIsSet(true);
      }
      if (incoming.get(10)) {
        struct.codigoNacionalidade = iprot.readI64();
        struct.setCodigoNacionalidadeIsSet(true);
      }
      if (incoming.get(11)) {
        struct.emailCidadao = iprot.readString();
        struct.setEmailCidadaoIsSet(true);
      }
      if (incoming.get(12)) {
        struct.numeroNisPisPasep = iprot.readString();
        struct.setNumeroNisPisPasepIsSet(true);
      }
      if (incoming.get(13)) {
        struct.endereco = new br.gov.saude.esus.cds.transport.generated.thrift.common.EnderecoLocalPermanenciaThrift();
        struct.endereco.read(iprot);
        struct.setEnderecoIsSet(true);
      }
      if (incoming.get(14)) {
        struct.atencaoDomiciliarOrigem = iprot.readI64();
        struct.setAtencaoDomiciliarOrigemIsSet(true);
      }
      if (incoming.get(15)) {
        struct.atencaoDomiciliarModalidade = iprot.readI64();
        struct.setAtencaoDomiciliarModalidadeIsSet(true);
      }
      if (incoming.get(16)) {
        {
          org.apache.thrift.protocol.TList _list10 = new org.apache.thrift.protocol.TList(org.apache.thrift.protocol.TType.I64, iprot.readI32());
          struct.situacoesPresentes = new ArrayList<Long>(_list10.size);
          long _elem11;
          for (int _i12 = 0; _i12 < _list10.size; ++_i12)
          {
            _elem11 = iprot.readI64();
            struct.situacoesPresentes.add(_elem11);
          }
        }
        struct.setSituacoesPresentesIsSet(true);
      }
      if (incoming.get(17)) {
        struct.cid10Principal = iprot.readString();
        struct.setCid10PrincipalIsSet(true);
      }
      if (incoming.get(18)) {
        struct.cid10Segundo = iprot.readString();
        struct.setCid10SegundoIsSet(true);
      }
      if (incoming.get(19)) {
        struct.cid10Terceiro = iprot.readString();
        struct.setCid10TerceiroIsSet(true);
      }
      if (incoming.get(20)) {
        struct.conclusaoDestinoElegivel = iprot.readI64();
        struct.setConclusaoDestinoElegivelIsSet(true);
      }
      if (incoming.get(21)) {
        {
          org.apache.thrift.protocol.TList _list13 = new org.apache.thrift.protocol.TList(org.apache.thrift.protocol.TType.I64, iprot.readI32());
          struct.conclusaoDestinoInelegivel = new ArrayList<Long>(_list13.size);
          long _elem14;
          for (int _i15 = 0; _i15 < _list13.size; ++_i15)
          {
            _elem14 = iprot.readI64();
            struct.conclusaoDestinoInelegivel.add(_elem14);
          }
        }
        struct.setConclusaoDestinoInelegivelIsSet(true);
      }
      if (incoming.get(22)) {
        struct.cuidadorCidadao = iprot.readI64();
        struct.setCuidadorCidadaoIsSet(true);
      }
    }
  }

}

