(**
 * Autogenerated by Thrift Compiler (0.9.0)
 *
 * DO NOT EDIT UNLESS YOU ARE SURE THAT YOU KNOW WHAT YOU ARE DOING
 *)

unit br.gov.saude.esus.transport.common.api.configuracaodestino;

interface

uses
  Classes,
  SysUtils,
  Generics.Collections,
  Thrift,
  Thrift.Utils,
  Thrift.Collections,
  Thrift.Protocol,
  Thrift.Transport;

const
  cbr_gov_saude_esus_transport_common_api_configuracaodestino_Option_AnsiStr_Binary = False;
type

{$SCOPEDENUMS ON}

  TTipoInstalacaoDestinoThrift = (
    PRONTUARIO = 0,
    CENTRALIZADOR = 1,
    CENTRALIZADOR_NACIONAL = 2
  );

  TTipoUsoDestinoThrift = (
    PRODUCAO = 0,
    TREINAMENTO = 1
  );

{$SCOPEDENUMS OFF}

  IVersaoThrift = interface(IBase)
    function GetMajor: Integer;
    procedure SetMajor( const Value: Integer);
    function GetMinor: Integer;
    procedure SetMinor( const Value: Integer);
    function GetRevision: Integer;
    procedure SetRevision( const Value: Integer);

    property Major: Integer read GetMajor write SetMajor;
    property Minor: Integer read GetMinor write SetMinor;
    property Revision: Integer read GetRevision write SetRevision;


  end;

  TVersaoThriftImpl = class(TInterfacedObject, IBase, IVersaoThrift)
  private
    FMajor: Integer;
    FMinor: Integer;
    FRevision: Integer;
    
    
    function GetMajor: Integer;
    procedure SetMajor( const Value: Integer);
    function GetMinor: Integer;
    procedure SetMinor( const Value: Integer);
    function GetRevision: Integer;
    procedure SetRevision( const Value: Integer);

  public
    constructor Create;
    destructor Destroy; override;

    function ToString: string; override;

    // IBase
    procedure Read( const iprot: IProtocol);
    procedure Write( const oprot: IProtocol);

    // Properties
    property Major: Integer read GetMajor write SetMajor;
    property Minor: Integer read GetMinor write SetMinor;
    property Revision: Integer read GetRevision write SetRevision;

    // isset
  end;

  IConfiguracaoDestinoThrift = interface(IBase)
    function GetInstalacao: TTipoInstalacaoDestinoThrift;
    procedure SetInstalacao( const Value: TTipoInstalacaoDestinoThrift);
    function GetUso: TTipoUsoDestinoThrift;
    procedure SetUso( const Value: TTipoUsoDestinoThrift);
    function GetVersao: IVersaoThrift;
    procedure SetVersao( const Value: IVersaoThrift);

    property Instalacao: TTipoInstalacaoDestinoThrift read GetInstalacao write SetInstalacao;
    property Uso: TTipoUsoDestinoThrift read GetUso write SetUso;
    property Versao: IVersaoThrift read GetVersao write SetVersao;


  end;

  TConfiguracaoDestinoThriftImpl = class(TInterfacedObject, IBase, IConfiguracaoDestinoThrift)
  private
    FInstalacao: TTipoInstalacaoDestinoThrift;
    FUso: TTipoUsoDestinoThrift;
    FVersao: IVersaoThrift;
    
    
    function GetInstalacao: TTipoInstalacaoDestinoThrift;
    procedure SetInstalacao( const Value: TTipoInstalacaoDestinoThrift);
    function GetUso: TTipoUsoDestinoThrift;
    procedure SetUso( const Value: TTipoUsoDestinoThrift);
    function GetVersao: IVersaoThrift;
    procedure SetVersao( const Value: IVersaoThrift);

  public
    constructor Create;
    destructor Destroy; override;

    function ToString: string; override;

    // IBase
    procedure Read( const iprot: IProtocol);
    procedure Write( const oprot: IProtocol);

    // Properties
    property Instalacao: TTipoInstalacaoDestinoThrift read GetInstalacao write SetInstalacao;
    property Uso: TTipoUsoDestinoThrift read GetUso write SetUso;
    property Versao: IVersaoThrift read GetVersao write SetVersao;

    // isset
  end;

implementation

constructor TVersaoThriftImpl.Create;
begin
  inherited;
end;

destructor TVersaoThriftImpl.Destroy;
begin
  inherited;
end;

function TVersaoThriftImpl.GetMajor: Integer;
begin
  Result := FMajor;
end;

procedure TVersaoThriftImpl.SetMajor( const Value: Integer);
begin
  FMajor := Value;
end;

function TVersaoThriftImpl.GetMinor: Integer;
begin
  Result := FMinor;
end;

procedure TVersaoThriftImpl.SetMinor( const Value: Integer);
begin
  FMinor := Value;
end;

function TVersaoThriftImpl.GetRevision: Integer;
begin
  Result := FRevision;
end;

procedure TVersaoThriftImpl.SetRevision( const Value: Integer);
begin
  FRevision := Value;
end;

procedure TVersaoThriftImpl.Read( const iprot: IProtocol);
var
  field_ : IField;
  struc : IStruct;
  _req_isset_Major : Boolean;
  _req_isset_Minor : Boolean;
  _req_isset_Revision : Boolean;

begin
  _req_isset_Major := FALSE;
  _req_isset_Minor := FALSE;
  _req_isset_Revision := FALSE;
  struc := iprot.ReadStructBegin;
  try
    while (true) do
    begin
      field_ := iprot.ReadFieldBegin();
      if (field_.Type_ = TType.Stop) then
      begin
        Break;
      end;
      case field_.ID of
        1: begin
          if (field_.Type_ = TType.I32) then
          begin
            Major := iprot.ReadI32();
            _req_isset_Major := TRUE;
          end else
          begin
            TProtocolUtil.Skip(iprot, field_.Type_);
          end;
        end;
        2: begin
          if (field_.Type_ = TType.I32) then
          begin
            Minor := iprot.ReadI32();
            _req_isset_Minor := TRUE;
          end else
          begin
            TProtocolUtil.Skip(iprot, field_.Type_);
          end;
        end;
        3: begin
          if (field_.Type_ = TType.I32) then
          begin
            Revision := iprot.ReadI32();
            _req_isset_Revision := TRUE;
          end else
          begin
            TProtocolUtil.Skip(iprot, field_.Type_);
          end;
        end
        else begin
          TProtocolUtil.Skip(iprot, field_.Type_);
        end;
      end;
      iprot.ReadFieldEnd;
    end;
  finally
    iprot.ReadStructEnd;
  end;
  if not _req_isset_Major
  then raise TProtocolException.Create( TProtocolException.INVALID_DATA, 'Major');
  if not _req_isset_Minor
  then raise TProtocolException.Create( TProtocolException.INVALID_DATA, 'Minor');
  if not _req_isset_Revision
  then raise TProtocolException.Create( TProtocolException.INVALID_DATA, 'Revision');
end;

procedure TVersaoThriftImpl.Write( const oprot: IProtocol);
var
  struc : IStruct;
  field_ : IField;
begin
  struc := TStructImpl.Create('VersaoThrift');
  oprot.WriteStructBegin(struc);
  field_ := TFieldImpl.Create;
  // required field
  field_.Name := 'major';
  field_.Type_  := TType.I32;
  field_.ID := 1;
  oprot.WriteFieldBegin(field_);
  oprot.WriteI32(Major);
  oprot.WriteFieldEnd();
  // required field
  field_.Name := 'minor';
  field_.Type_  := TType.I32;
  field_.ID := 2;
  oprot.WriteFieldBegin(field_);
  oprot.WriteI32(Minor);
  oprot.WriteFieldEnd();
  // required field
  field_.Name := 'revision';
  field_.Type_  := TType.I32;
  field_.ID := 3;
  oprot.WriteFieldBegin(field_);
  oprot.WriteI32(Revision);
  oprot.WriteFieldEnd();
  oprot.WriteFieldStop();
  oprot.WriteStructEnd();
end;

function TVersaoThriftImpl.ToString: string;
var
  sb : TThriftStringBuilder;
begin
  sb := TThriftStringBuilder.Create('(');
  try
    sb.Append('Major: ');
    sb.Append(Major);
    sb.Append(',Minor: ');
    sb.Append(Minor);
    sb.Append(',Revision: ');
    sb.Append(Revision);
    sb.Append(')');
    Result := sb.ToString;
  finally
    sb.Free;
  end;
end;

constructor TConfiguracaoDestinoThriftImpl.Create;
begin
  inherited;
end;

destructor TConfiguracaoDestinoThriftImpl.Destroy;
begin
  inherited;
end;

function TConfiguracaoDestinoThriftImpl.GetInstalacao: TTipoInstalacaoDestinoThrift;
begin
  Result := FInstalacao;
end;

procedure TConfiguracaoDestinoThriftImpl.SetInstalacao( const Value: TTipoInstalacaoDestinoThrift);
begin
  FInstalacao := Value;
end;

function TConfiguracaoDestinoThriftImpl.GetUso: TTipoUsoDestinoThrift;
begin
  Result := FUso;
end;

procedure TConfiguracaoDestinoThriftImpl.SetUso( const Value: TTipoUsoDestinoThrift);
begin
  FUso := Value;
end;

function TConfiguracaoDestinoThriftImpl.GetVersao: IVersaoThrift;
begin
  Result := FVersao;
end;

procedure TConfiguracaoDestinoThriftImpl.SetVersao( const Value: IVersaoThrift);
begin
  FVersao := Value;
end;

procedure TConfiguracaoDestinoThriftImpl.Read( const iprot: IProtocol);
var
  field_ : IField;
  struc : IStruct;
  _req_isset_Instalacao : Boolean;
  _req_isset_Uso : Boolean;
  _req_isset_Versao : Boolean;

begin
  _req_isset_Instalacao := FALSE;
  _req_isset_Uso := FALSE;
  _req_isset_Versao := FALSE;
  struc := iprot.ReadStructBegin;
  try
    while (true) do
    begin
      field_ := iprot.ReadFieldBegin();
      if (field_.Type_ = TType.Stop) then
      begin
        Break;
      end;
      case field_.ID of
        1: begin
          if (field_.Type_ = TType.I32) then
          begin
            Instalacao := TTipoInstalacaoDestinoThrift(iprot.ReadI32());
            _req_isset_Instalacao := TRUE;
          end else
          begin
            TProtocolUtil.Skip(iprot, field_.Type_);
          end;
        end;
        2: begin
          if (field_.Type_ = TType.I32) then
          begin
            Uso := TTipoUsoDestinoThrift(iprot.ReadI32());
            _req_isset_Uso := TRUE;
          end else
          begin
            TProtocolUtil.Skip(iprot, field_.Type_);
          end;
        end;
        3: begin
          if (field_.Type_ = TType.Struct) then
          begin
            Versao := TVersaoThriftImpl.Create;
            Versao.Read(iprot);
            _req_isset_Versao := TRUE;
          end else
          begin
            TProtocolUtil.Skip(iprot, field_.Type_);
          end;
        end
        else begin
          TProtocolUtil.Skip(iprot, field_.Type_);
        end;
      end;
      iprot.ReadFieldEnd;
    end;
  finally
    iprot.ReadStructEnd;
  end;
  if not _req_isset_Instalacao
  then raise TProtocolException.Create( TProtocolException.INVALID_DATA, 'Instalacao');
  if not _req_isset_Uso
  then raise TProtocolException.Create( TProtocolException.INVALID_DATA, 'Uso');
  if not _req_isset_Versao
  then raise TProtocolException.Create( TProtocolException.INVALID_DATA, 'Versao');
end;

procedure TConfiguracaoDestinoThriftImpl.Write( const oprot: IProtocol);
var
  struc : IStruct;
  field_ : IField;
begin
  struc := TStructImpl.Create('ConfiguracaoDestinoThrift');
  oprot.WriteStructBegin(struc);
  field_ := TFieldImpl.Create;
  // required field
  field_.Name := 'instalacao';
  field_.Type_  := TType.I32;
  field_.ID := 1;
  oprot.WriteFieldBegin(field_);
  oprot.WriteI32(Integer(Instalacao));
  oprot.WriteFieldEnd();
  // required field
  field_.Name := 'uso';
  field_.Type_  := TType.I32;
  field_.ID := 2;
  oprot.WriteFieldBegin(field_);
  oprot.WriteI32(Integer(Uso));
  oprot.WriteFieldEnd();
  if (Versao <> nil) then
  begin
    field_.Name := 'versao';
    field_.Type_  := TType.Struct;
    field_.ID := 3;
    oprot.WriteFieldBegin(field_);
    Versao.Write(oprot);
    oprot.WriteFieldEnd();
  end;
  oprot.WriteFieldStop();
  oprot.WriteStructEnd();
end;

function TConfiguracaoDestinoThriftImpl.ToString: string;
var
  sb : TThriftStringBuilder;
begin
  sb := TThriftStringBuilder.Create('(');
  try
    sb.Append('Instalacao: ');
    sb.Append(Integer(Instalacao));
    sb.Append(',Uso: ');
    sb.Append(Integer(Uso));
    sb.Append(',Versao: ');
    if (Versao = nil) then sb.Append('<null>') else sb.Append(Versao.ToString());
    sb.Append(')');
    Result := sb.ToString;
  finally
    sb.Free;
  end;
end;

end.
