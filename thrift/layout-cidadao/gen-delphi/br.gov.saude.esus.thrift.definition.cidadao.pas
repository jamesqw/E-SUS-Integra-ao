(**
 * Autogenerated by Thrift Compiler (0.9.0)
 *
 * DO NOT EDIT UNLESS YOU ARE SURE THAT YOU KNOW WHAT YOU ARE DOING
 *)

unit br.gov.saude.esus.thrift.definition.cidadao;

interface

uses
  Classes,
  SysUtils,
  Generics.Collections,
  Thrift,
  Thrift.Utils,
  Thrift.Collections,
  Thrift.Protocol,
  Thrift.Transport;

const
  cbr_gov_saude_esus_thrift_definition_cidadao_Option_AnsiStr_Binary = False;
type

{$SCOPEDENUMS ON}

  TSexoThrift = (
    MASCULINO = 0,
    FEMININO = 1,
    AMBOS = 2,
    NAO_INFORMADO = 3
  );

  TTipoSanguineoThrift = (
    A_POSITIVO = 0,
    A_NEGATIVO = 1,
    B_POSITIVO = 2,
    B_NEGATIVO = 3,
    AB_POSITIVO = 4,
    AB_NEGATIVO = 5,
    O_POSITIVO = 6,
    O_NEGATIVO = 7
  );

{$SCOPEDENUMS OFF}

  IEnderecoTransportThrift = interface(IBase)
    function GetBairroNome: string;
    procedure SetBairroNome( const Value: string);
    function GetBairroDne: string;
    procedure SetBairroDne( const Value: string);
    function GetLocalidadeCep: string;
    procedure SetLocalidadeCep( const Value: string);
    function GetLocalidadeDne: string;
    procedure SetLocalidadeDne( const Value: string);
    function GetLocalidadeIbge: string;
    procedure SetLocalidadeIbge( const Value: string);
    function GetComplemento: string;
    procedure SetComplemento( const Value: string);
    function GetLogradouro: string;
    procedure SetLogradouro( const Value: string);
    function GetLogradouroDne: string;
    procedure SetLogradouroDne( const Value: string);
    function GetNumero: string;
    procedure SetNumero( const Value: string);
    function GetPontoReferencia: string;
    procedure SetPontoReferencia( const Value: string);
    function GetSemNumero: Boolean;
    procedure SetSemNumero( const Value: Boolean);
    function GetUfSigla: string;
    procedure SetUfSigla( const Value: string);
    function GetArea: string;
    procedure SetArea( const Value: string);
    function GetMicroArea: string;
    procedure SetMicroArea( const Value: string);

    property BairroNome: string read GetBairroNome write SetBairroNome;
    property BairroDne: string read GetBairroDne write SetBairroDne;
    property LocalidadeCep: string read GetLocalidadeCep write SetLocalidadeCep;
    property LocalidadeDne: string read GetLocalidadeDne write SetLocalidadeDne;
    property LocalidadeIbge: string read GetLocalidadeIbge write SetLocalidadeIbge;
    property Complemento: string read GetComplemento write SetComplemento;
    property Logradouro: string read GetLogradouro write SetLogradouro;
    property LogradouroDne: string read GetLogradouroDne write SetLogradouroDne;
    property Numero: string read GetNumero write SetNumero;
    property PontoReferencia: string read GetPontoReferencia write SetPontoReferencia;
    property SemNumero: Boolean read GetSemNumero write SetSemNumero;
    property UfSigla: string read GetUfSigla write SetUfSigla;
    property Area: string read GetArea write SetArea;
    property MicroArea: string read GetMicroArea write SetMicroArea;

    function Get__isset_BairroNome: Boolean;
    function Get__isset_BairroDne: Boolean;
    function Get__isset_LocalidadeCep: Boolean;
    function Get__isset_LocalidadeDne: Boolean;
    function Get__isset_LocalidadeIbge: Boolean;
    function Get__isset_Complemento: Boolean;
    function Get__isset_Logradouro: Boolean;
    function Get__isset_LogradouroDne: Boolean;
    function Get__isset_Numero: Boolean;
    function Get__isset_PontoReferencia: Boolean;
    function Get__isset_SemNumero: Boolean;
    function Get__isset_UfSigla: Boolean;
    function Get__isset_Area: Boolean;
    function Get__isset_MicroArea: Boolean;

    property __isset_BairroNome: Boolean read Get__isset_BairroNome;
    property __isset_BairroDne: Boolean read Get__isset_BairroDne;
    property __isset_LocalidadeCep: Boolean read Get__isset_LocalidadeCep;
    property __isset_LocalidadeDne: Boolean read Get__isset_LocalidadeDne;
    property __isset_LocalidadeIbge: Boolean read Get__isset_LocalidadeIbge;
    property __isset_Complemento: Boolean read Get__isset_Complemento;
    property __isset_Logradouro: Boolean read Get__isset_Logradouro;
    property __isset_LogradouroDne: Boolean read Get__isset_LogradouroDne;
    property __isset_Numero: Boolean read Get__isset_Numero;
    property __isset_PontoReferencia: Boolean read Get__isset_PontoReferencia;
    property __isset_SemNumero: Boolean read Get__isset_SemNumero;
    property __isset_UfSigla: Boolean read Get__isset_UfSigla;
    property __isset_Area: Boolean read Get__isset_Area;
    property __isset_MicroArea: Boolean read Get__isset_MicroArea;
  end;

  TEnderecoTransportThriftImpl = class(TInterfacedObject, IBase, IEnderecoTransportThrift)
  private
    FBairroNome: string;
    FBairroDne: string;
    FLocalidadeCep: string;
    FLocalidadeDne: string;
    FLocalidadeIbge: string;
    FComplemento: string;
    FLogradouro: string;
    FLogradouroDne: string;
    FNumero: string;
    FPontoReferencia: string;
    FSemNumero: Boolean;
    FUfSigla: string;
    FArea: string;
    FMicroArea: string;
    
    F__isset_BairroNome: Boolean;
    F__isset_BairroDne: Boolean;
    F__isset_LocalidadeCep: Boolean;
    F__isset_LocalidadeDne: Boolean;
    F__isset_LocalidadeIbge: Boolean;
    F__isset_Complemento: Boolean;
    F__isset_Logradouro: Boolean;
    F__isset_LogradouroDne: Boolean;
    F__isset_Numero: Boolean;
    F__isset_PontoReferencia: Boolean;
    F__isset_SemNumero: Boolean;
    F__isset_UfSigla: Boolean;
    F__isset_Area: Boolean;
    F__isset_MicroArea: Boolean;
    
    function GetBairroNome: string;
    procedure SetBairroNome( const Value: string);
    function GetBairroDne: string;
    procedure SetBairroDne( const Value: string);
    function GetLocalidadeCep: string;
    procedure SetLocalidadeCep( const Value: string);
    function GetLocalidadeDne: string;
    procedure SetLocalidadeDne( const Value: string);
    function GetLocalidadeIbge: string;
    procedure SetLocalidadeIbge( const Value: string);
    function GetComplemento: string;
    procedure SetComplemento( const Value: string);
    function GetLogradouro: string;
    procedure SetLogradouro( const Value: string);
    function GetLogradouroDne: string;
    procedure SetLogradouroDne( const Value: string);
    function GetNumero: string;
    procedure SetNumero( const Value: string);
    function GetPontoReferencia: string;
    procedure SetPontoReferencia( const Value: string);
    function GetSemNumero: Boolean;
    procedure SetSemNumero( const Value: Boolean);
    function GetUfSigla: string;
    procedure SetUfSigla( const Value: string);
    function GetArea: string;
    procedure SetArea( const Value: string);
    function GetMicroArea: string;
    procedure SetMicroArea( const Value: string);

    function Get__isset_BairroNome: Boolean;
    function Get__isset_BairroDne: Boolean;
    function Get__isset_LocalidadeCep: Boolean;
    function Get__isset_LocalidadeDne: Boolean;
    function Get__isset_LocalidadeIbge: Boolean;
    function Get__isset_Complemento: Boolean;
    function Get__isset_Logradouro: Boolean;
    function Get__isset_LogradouroDne: Boolean;
    function Get__isset_Numero: Boolean;
    function Get__isset_PontoReferencia: Boolean;
    function Get__isset_SemNumero: Boolean;
    function Get__isset_UfSigla: Boolean;
    function Get__isset_Area: Boolean;
    function Get__isset_MicroArea: Boolean;
  public
    constructor Create;
    destructor Destroy; override;

    function ToString: string; override;

    // IBase
    procedure Read( const iprot: IProtocol);
    procedure Write( const oprot: IProtocol);

    // Properties
    property BairroNome: string read GetBairroNome write SetBairroNome;
    property BairroDne: string read GetBairroDne write SetBairroDne;
    property LocalidadeCep: string read GetLocalidadeCep write SetLocalidadeCep;
    property LocalidadeDne: string read GetLocalidadeDne write SetLocalidadeDne;
    property LocalidadeIbge: string read GetLocalidadeIbge write SetLocalidadeIbge;
    property Complemento: string read GetComplemento write SetComplemento;
    property Logradouro: string read GetLogradouro write SetLogradouro;
    property LogradouroDne: string read GetLogradouroDne write SetLogradouroDne;
    property Numero: string read GetNumero write SetNumero;
    property PontoReferencia: string read GetPontoReferencia write SetPontoReferencia;
    property SemNumero: Boolean read GetSemNumero write SetSemNumero;
    property UfSigla: string read GetUfSigla write SetUfSigla;
    property Area: string read GetArea write SetArea;
    property MicroArea: string read GetMicroArea write SetMicroArea;

    // isset
    property __isset_BairroNome: Boolean read Get__isset_BairroNome;
    property __isset_BairroDne: Boolean read Get__isset_BairroDne;
    property __isset_LocalidadeCep: Boolean read Get__isset_LocalidadeCep;
    property __isset_LocalidadeDne: Boolean read Get__isset_LocalidadeDne;
    property __isset_LocalidadeIbge: Boolean read Get__isset_LocalidadeIbge;
    property __isset_Complemento: Boolean read Get__isset_Complemento;
    property __isset_Logradouro: Boolean read Get__isset_Logradouro;
    property __isset_LogradouroDne: Boolean read Get__isset_LogradouroDne;
    property __isset_Numero: Boolean read Get__isset_Numero;
    property __isset_PontoReferencia: Boolean read Get__isset_PontoReferencia;
    property __isset_SemNumero: Boolean read Get__isset_SemNumero;
    property __isset_UfSigla: Boolean read Get__isset_UfSigla;
    property __isset_Area: Boolean read Get__isset_Area;
    property __isset_MicroArea: Boolean read Get__isset_MicroArea;
  end;

  ICidadaoTransportThrift = interface(IBase)
    function GetNaoPossuiCns: Boolean;
    procedure SetNaoPossuiCns( const Value: Boolean);
    function GetCns: string;
    procedure SetCns( const Value: string);
    function GetCpf: string;
    procedure SetCpf( const Value: string);
    function GetDataNascimento: Int64;
    procedure SetDataNascimento( const Value: Int64);
    function GetDesconheceNomeMae: Boolean;
    procedure SetDesconheceNomeMae( const Value: Boolean);
    function GetNomeMae: string;
    procedure SetNomeMae( const Value: string);
    function GetEmail: string;
    procedure SetEmail( const Value: string);
    function GetEndereco: IEnderecoTransportThrift;
    procedure SetEndereco( const Value: IEnderecoTransportThrift);
    function GetEscolaridadeId: Int64;
    procedure SetEscolaridadeId( const Value: Int64);
    function GetEstadoCivilId: Int64;
    procedure SetEstadoCivilId( const Value: Int64);
    function GetEstrangeiro: Boolean;
    procedure SetEstrangeiro( const Value: Boolean);
    function GetEtniaId: Int64;
    procedure SetEtniaId( const Value: Int64);
    function GetFaleceu: Boolean;
    procedure SetFaleceu( const Value: Boolean);
    function GetMunicipioNascimentoCep: string;
    procedure SetMunicipioNascimentoCep( const Value: string);
    function GetMunicipioNascimentoDne: string;
    procedure SetMunicipioNascimentoDne( const Value: string);
    function GetMunicipioNascimentoIbge: string;
    procedure SetMunicipioNascimentoIbge( const Value: string);
    function GetNisPisPasep: string;
    procedure SetNisPisPasep( const Value: string);
    function GetNomeCompleto: string;
    procedure SetNomeCompleto( const Value: string);
    function GetNomeSocial: string;
    procedure SetNomeSocial( const Value: string);
    function GetNumeroProntuario: string;
    procedure SetNumeroProntuario( const Value: string);
    function GetNumeroProntuarioCnes: string;
    procedure SetNumeroProntuarioCnes( const Value: string);
    function GetRacaCorId: Int64;
    procedure SetRacaCorId( const Value: Int64);
    function GetSexo: TSexoThrift;
    procedure SetSexo( const Value: TSexoThrift);
    function GetTelefoneCelular: string;
    procedure SetTelefoneCelular( const Value: string);
    function GetTelefoneContato: string;
    procedure SetTelefoneContato( const Value: string);
    function GetTelefoneResidencial: string;
    procedure SetTelefoneResidencial( const Value: string);
    function GetTipoSanguineo: TTipoSanguineoThrift;
    procedure SetTipoSanguineo( const Value: TTipoSanguineoThrift);
    function GetCboNumero: string;
    procedure SetCboNumero( const Value: string);

    property NaoPossuiCns: Boolean read GetNaoPossuiCns write SetNaoPossuiCns;
    property Cns: string read GetCns write SetCns;
    property Cpf: string read GetCpf write SetCpf;
    property DataNascimento: Int64 read GetDataNascimento write SetDataNascimento;
    property DesconheceNomeMae: Boolean read GetDesconheceNomeMae write SetDesconheceNomeMae;
    property NomeMae: string read GetNomeMae write SetNomeMae;
    property Email: string read GetEmail write SetEmail;
    property Endereco: IEnderecoTransportThrift read GetEndereco write SetEndereco;
    property EscolaridadeId: Int64 read GetEscolaridadeId write SetEscolaridadeId;
    property EstadoCivilId: Int64 read GetEstadoCivilId write SetEstadoCivilId;
    property Estrangeiro: Boolean read GetEstrangeiro write SetEstrangeiro;
    property EtniaId: Int64 read GetEtniaId write SetEtniaId;
    property Faleceu: Boolean read GetFaleceu write SetFaleceu;
    property MunicipioNascimentoCep: string read GetMunicipioNascimentoCep write SetMunicipioNascimentoCep;
    property MunicipioNascimentoDne: string read GetMunicipioNascimentoDne write SetMunicipioNascimentoDne;
    property MunicipioNascimentoIbge: string read GetMunicipioNascimentoIbge write SetMunicipioNascimentoIbge;
    property NisPisPasep: string read GetNisPisPasep write SetNisPisPasep;
    property NomeCompleto: string read GetNomeCompleto write SetNomeCompleto;
    property NomeSocial: string read GetNomeSocial write SetNomeSocial;
    property NumeroProntuario: string read GetNumeroProntuario write SetNumeroProntuario;
    property NumeroProntuarioCnes: string read GetNumeroProntuarioCnes write SetNumeroProntuarioCnes;
    property RacaCorId: Int64 read GetRacaCorId write SetRacaCorId;
    property Sexo: TSexoThrift read GetSexo write SetSexo;
    property TelefoneCelular: string read GetTelefoneCelular write SetTelefoneCelular;
    property TelefoneContato: string read GetTelefoneContato write SetTelefoneContato;
    property TelefoneResidencial: string read GetTelefoneResidencial write SetTelefoneResidencial;
    property TipoSanguineo: TTipoSanguineoThrift read GetTipoSanguineo write SetTipoSanguineo;
    property CboNumero: string read GetCboNumero write SetCboNumero;

    function Get__isset_Cpf: Boolean;
    function Get__isset_NomeMae: Boolean;
    function Get__isset_Email: Boolean;
    function Get__isset_Endereco: Boolean;
    function Get__isset_EscolaridadeId: Boolean;
    function Get__isset_EstadoCivilId: Boolean;
    function Get__isset_EtniaId: Boolean;
    function Get__isset_Faleceu: Boolean;
    function Get__isset_MunicipioNascimentoIbge: Boolean;
    function Get__isset_NisPisPasep: Boolean;
    function Get__isset_NomeSocial: Boolean;
    function Get__isset_NumeroProntuario: Boolean;
    function Get__isset_NumeroProntuarioCnes: Boolean;
    function Get__isset_TelefoneCelular: Boolean;
    function Get__isset_TelefoneContato: Boolean;
    function Get__isset_TelefoneResidencial: Boolean;
    function Get__isset_TipoSanguineo: Boolean;
    function Get__isset_CboNumero: Boolean;

    property __isset_Cpf: Boolean read Get__isset_Cpf;
    property __isset_NomeMae: Boolean read Get__isset_NomeMae;
    property __isset_Email: Boolean read Get__isset_Email;
    property __isset_Endereco: Boolean read Get__isset_Endereco;
    property __isset_EscolaridadeId: Boolean read Get__isset_EscolaridadeId;
    property __isset_EstadoCivilId: Boolean read Get__isset_EstadoCivilId;
    property __isset_EtniaId: Boolean read Get__isset_EtniaId;
    property __isset_Faleceu: Boolean read Get__isset_Faleceu;
    property __isset_MunicipioNascimentoIbge: Boolean read Get__isset_MunicipioNascimentoIbge;
    property __isset_NisPisPasep: Boolean read Get__isset_NisPisPasep;
    property __isset_NomeSocial: Boolean read Get__isset_NomeSocial;
    property __isset_NumeroProntuario: Boolean read Get__isset_NumeroProntuario;
    property __isset_NumeroProntuarioCnes: Boolean read Get__isset_NumeroProntuarioCnes;
    property __isset_TelefoneCelular: Boolean read Get__isset_TelefoneCelular;
    property __isset_TelefoneContato: Boolean read Get__isset_TelefoneContato;
    property __isset_TelefoneResidencial: Boolean read Get__isset_TelefoneResidencial;
    property __isset_TipoSanguineo: Boolean read Get__isset_TipoSanguineo;
    property __isset_CboNumero: Boolean read Get__isset_CboNumero;
  end;

  TCidadaoTransportThriftImpl = class(TInterfacedObject, IBase, ICidadaoTransportThrift)
  private
    FNaoPossuiCns: Boolean;
    FCns: string;
    FCpf: string;
    FDataNascimento: Int64;
    FDesconheceNomeMae: Boolean;
    FNomeMae: string;
    FEmail: string;
    FEndereco: IEnderecoTransportThrift;
    FEscolaridadeId: Int64;
    FEstadoCivilId: Int64;
    FEstrangeiro: Boolean;
    FEtniaId: Int64;
    FFaleceu: Boolean;
    FMunicipioNascimentoCep: string;
    FMunicipioNascimentoDne: string;
    FMunicipioNascimentoIbge: string;
    FNisPisPasep: string;
    FNomeCompleto: string;
    FNomeSocial: string;
    FNumeroProntuario: string;
    FNumeroProntuarioCnes: string;
    FRacaCorId: Int64;
    FSexo: TSexoThrift;
    FTelefoneCelular: string;
    FTelefoneContato: string;
    FTelefoneResidencial: string;
    FTipoSanguineo: TTipoSanguineoThrift;
    FCboNumero: string;
    
    F__isset_Cpf: Boolean;
    F__isset_NomeMae: Boolean;
    F__isset_Email: Boolean;
    F__isset_Endereco: Boolean;
    F__isset_EscolaridadeId: Boolean;
    F__isset_EstadoCivilId: Boolean;
    F__isset_EtniaId: Boolean;
    F__isset_Faleceu: Boolean;
    F__isset_MunicipioNascimentoIbge: Boolean;
    F__isset_NisPisPasep: Boolean;
    F__isset_NomeSocial: Boolean;
    F__isset_NumeroProntuario: Boolean;
    F__isset_NumeroProntuarioCnes: Boolean;
    F__isset_TelefoneCelular: Boolean;
    F__isset_TelefoneContato: Boolean;
    F__isset_TelefoneResidencial: Boolean;
    F__isset_TipoSanguineo: Boolean;
    F__isset_CboNumero: Boolean;
    
    function GetNaoPossuiCns: Boolean;
    procedure SetNaoPossuiCns( const Value: Boolean);
    function GetCns: string;
    procedure SetCns( const Value: string);
    function GetCpf: string;
    procedure SetCpf( const Value: string);
    function GetDataNascimento: Int64;
    procedure SetDataNascimento( const Value: Int64);
    function GetDesconheceNomeMae: Boolean;
    procedure SetDesconheceNomeMae( const Value: Boolean);
    function GetNomeMae: string;
    procedure SetNomeMae( const Value: string);
    function GetEmail: string;
    procedure SetEmail( const Value: string);
    function GetEndereco: IEnderecoTransportThrift;
    procedure SetEndereco( const Value: IEnderecoTransportThrift);
    function GetEscolaridadeId: Int64;
    procedure SetEscolaridadeId( const Value: Int64);
    function GetEstadoCivilId: Int64;
    procedure SetEstadoCivilId( const Value: Int64);
    function GetEstrangeiro: Boolean;
    procedure SetEstrangeiro( const Value: Boolean);
    function GetEtniaId: Int64;
    procedure SetEtniaId( const Value: Int64);
    function GetFaleceu: Boolean;
    procedure SetFaleceu( const Value: Boolean);
    function GetMunicipioNascimentoCep: string;
    procedure SetMunicipioNascimentoCep( const Value: string);
    function GetMunicipioNascimentoDne: string;
    procedure SetMunicipioNascimentoDne( const Value: string);
    function GetMunicipioNascimentoIbge: string;
    procedure SetMunicipioNascimentoIbge( const Value: string);
    function GetNisPisPasep: string;
    procedure SetNisPisPasep( const Value: string);
    function GetNomeCompleto: string;
    procedure SetNomeCompleto( const Value: string);
    function GetNomeSocial: string;
    procedure SetNomeSocial( const Value: string);
    function GetNumeroProntuario: string;
    procedure SetNumeroProntuario( const Value: string);
    function GetNumeroProntuarioCnes: string;
    procedure SetNumeroProntuarioCnes( const Value: string);
    function GetRacaCorId: Int64;
    procedure SetRacaCorId( const Value: Int64);
    function GetSexo: TSexoThrift;
    procedure SetSexo( const Value: TSexoThrift);
    function GetTelefoneCelular: string;
    procedure SetTelefoneCelular( const Value: string);
    function GetTelefoneContato: string;
    procedure SetTelefoneContato( const Value: string);
    function GetTelefoneResidencial: string;
    procedure SetTelefoneResidencial( const Value: string);
    function GetTipoSanguineo: TTipoSanguineoThrift;
    procedure SetTipoSanguineo( const Value: TTipoSanguineoThrift);
    function GetCboNumero: string;
    procedure SetCboNumero( const Value: string);

    function Get__isset_Cpf: Boolean;
    function Get__isset_NomeMae: Boolean;
    function Get__isset_Email: Boolean;
    function Get__isset_Endereco: Boolean;
    function Get__isset_EscolaridadeId: Boolean;
    function Get__isset_EstadoCivilId: Boolean;
    function Get__isset_EtniaId: Boolean;
    function Get__isset_Faleceu: Boolean;
    function Get__isset_MunicipioNascimentoIbge: Boolean;
    function Get__isset_NisPisPasep: Boolean;
    function Get__isset_NomeSocial: Boolean;
    function Get__isset_NumeroProntuario: Boolean;
    function Get__isset_NumeroProntuarioCnes: Boolean;
    function Get__isset_TelefoneCelular: Boolean;
    function Get__isset_TelefoneContato: Boolean;
    function Get__isset_TelefoneResidencial: Boolean;
    function Get__isset_TipoSanguineo: Boolean;
    function Get__isset_CboNumero: Boolean;
  public
    constructor Create;
    destructor Destroy; override;

    function ToString: string; override;

    // IBase
    procedure Read( const iprot: IProtocol);
    procedure Write( const oprot: IProtocol);

    // Properties
    property NaoPossuiCns: Boolean read GetNaoPossuiCns write SetNaoPossuiCns;
    property Cns: string read GetCns write SetCns;
    property Cpf: string read GetCpf write SetCpf;
    property DataNascimento: Int64 read GetDataNascimento write SetDataNascimento;
    property DesconheceNomeMae: Boolean read GetDesconheceNomeMae write SetDesconheceNomeMae;
    property NomeMae: string read GetNomeMae write SetNomeMae;
    property Email: string read GetEmail write SetEmail;
    property Endereco: IEnderecoTransportThrift read GetEndereco write SetEndereco;
    property EscolaridadeId: Int64 read GetEscolaridadeId write SetEscolaridadeId;
    property EstadoCivilId: Int64 read GetEstadoCivilId write SetEstadoCivilId;
    property Estrangeiro: Boolean read GetEstrangeiro write SetEstrangeiro;
    property EtniaId: Int64 read GetEtniaId write SetEtniaId;
    property Faleceu: Boolean read GetFaleceu write SetFaleceu;
    property MunicipioNascimentoCep: string read GetMunicipioNascimentoCep write SetMunicipioNascimentoCep;
    property MunicipioNascimentoDne: string read GetMunicipioNascimentoDne write SetMunicipioNascimentoDne;
    property MunicipioNascimentoIbge: string read GetMunicipioNascimentoIbge write SetMunicipioNascimentoIbge;
    property NisPisPasep: string read GetNisPisPasep write SetNisPisPasep;
    property NomeCompleto: string read GetNomeCompleto write SetNomeCompleto;
    property NomeSocial: string read GetNomeSocial write SetNomeSocial;
    property NumeroProntuario: string read GetNumeroProntuario write SetNumeroProntuario;
    property NumeroProntuarioCnes: string read GetNumeroProntuarioCnes write SetNumeroProntuarioCnes;
    property RacaCorId: Int64 read GetRacaCorId write SetRacaCorId;
    property Sexo: TSexoThrift read GetSexo write SetSexo;
    property TelefoneCelular: string read GetTelefoneCelular write SetTelefoneCelular;
    property TelefoneContato: string read GetTelefoneContato write SetTelefoneContato;
    property TelefoneResidencial: string read GetTelefoneResidencial write SetTelefoneResidencial;
    property TipoSanguineo: TTipoSanguineoThrift read GetTipoSanguineo write SetTipoSanguineo;
    property CboNumero: string read GetCboNumero write SetCboNumero;

    // isset
    property __isset_Cpf: Boolean read Get__isset_Cpf;
    property __isset_NomeMae: Boolean read Get__isset_NomeMae;
    property __isset_Email: Boolean read Get__isset_Email;
    property __isset_Endereco: Boolean read Get__isset_Endereco;
    property __isset_EscolaridadeId: Boolean read Get__isset_EscolaridadeId;
    property __isset_EstadoCivilId: Boolean read Get__isset_EstadoCivilId;
    property __isset_EtniaId: Boolean read Get__isset_EtniaId;
    property __isset_Faleceu: Boolean read Get__isset_Faleceu;
    property __isset_MunicipioNascimentoIbge: Boolean read Get__isset_MunicipioNascimentoIbge;
    property __isset_NisPisPasep: Boolean read Get__isset_NisPisPasep;
    property __isset_NomeSocial: Boolean read Get__isset_NomeSocial;
    property __isset_NumeroProntuario: Boolean read Get__isset_NumeroProntuario;
    property __isset_NumeroProntuarioCnes: Boolean read Get__isset_NumeroProntuarioCnes;
    property __isset_TelefoneCelular: Boolean read Get__isset_TelefoneCelular;
    property __isset_TelefoneContato: Boolean read Get__isset_TelefoneContato;
    property __isset_TelefoneResidencial: Boolean read Get__isset_TelefoneResidencial;
    property __isset_TipoSanguineo: Boolean read Get__isset_TipoSanguineo;
    property __isset_CboNumero: Boolean read Get__isset_CboNumero;
  end;

implementation

constructor TEnderecoTransportThriftImpl.Create;
begin
  inherited;
end;

destructor TEnderecoTransportThriftImpl.Destroy;
begin
  inherited;
end;

function TEnderecoTransportThriftImpl.GetBairroNome: string;
begin
  Result := FBairroNome;
end;

procedure TEnderecoTransportThriftImpl.SetBairroNome( const Value: string);
begin
  F__isset_BairroNome := True;
  FBairroNome := Value;
end;

function TEnderecoTransportThriftImpl.Get__isset_BairroNome: Boolean;
begin
  Result := F__isset_BairroNome;
end;

function TEnderecoTransportThriftImpl.GetBairroDne: string;
begin
  Result := FBairroDne;
end;

procedure TEnderecoTransportThriftImpl.SetBairroDne( const Value: string);
begin
  F__isset_BairroDne := True;
  FBairroDne := Value;
end;

function TEnderecoTransportThriftImpl.Get__isset_BairroDne: Boolean;
begin
  Result := F__isset_BairroDne;
end;

function TEnderecoTransportThriftImpl.GetLocalidadeCep: string;
begin
  Result := FLocalidadeCep;
end;

procedure TEnderecoTransportThriftImpl.SetLocalidadeCep( const Value: string);
begin
  F__isset_LocalidadeCep := True;
  FLocalidadeCep := Value;
end;

function TEnderecoTransportThriftImpl.Get__isset_LocalidadeCep: Boolean;
begin
  Result := F__isset_LocalidadeCep;
end;

function TEnderecoTransportThriftImpl.GetLocalidadeDne: string;
begin
  Result := FLocalidadeDne;
end;

procedure TEnderecoTransportThriftImpl.SetLocalidadeDne( const Value: string);
begin
  F__isset_LocalidadeDne := True;
  FLocalidadeDne := Value;
end;

function TEnderecoTransportThriftImpl.Get__isset_LocalidadeDne: Boolean;
begin
  Result := F__isset_LocalidadeDne;
end;

function TEnderecoTransportThriftImpl.GetLocalidadeIbge: string;
begin
  Result := FLocalidadeIbge;
end;

procedure TEnderecoTransportThriftImpl.SetLocalidadeIbge( const Value: string);
begin
  F__isset_LocalidadeIbge := True;
  FLocalidadeIbge := Value;
end;

function TEnderecoTransportThriftImpl.Get__isset_LocalidadeIbge: Boolean;
begin
  Result := F__isset_LocalidadeIbge;
end;

function TEnderecoTransportThriftImpl.GetComplemento: string;
begin
  Result := FComplemento;
end;

procedure TEnderecoTransportThriftImpl.SetComplemento( const Value: string);
begin
  F__isset_Complemento := True;
  FComplemento := Value;
end;

function TEnderecoTransportThriftImpl.Get__isset_Complemento: Boolean;
begin
  Result := F__isset_Complemento;
end;

function TEnderecoTransportThriftImpl.GetLogradouro: string;
begin
  Result := FLogradouro;
end;

procedure TEnderecoTransportThriftImpl.SetLogradouro( const Value: string);
begin
  F__isset_Logradouro := True;
  FLogradouro := Value;
end;

function TEnderecoTransportThriftImpl.Get__isset_Logradouro: Boolean;
begin
  Result := F__isset_Logradouro;
end;

function TEnderecoTransportThriftImpl.GetLogradouroDne: string;
begin
  Result := FLogradouroDne;
end;

procedure TEnderecoTransportThriftImpl.SetLogradouroDne( const Value: string);
begin
  F__isset_LogradouroDne := True;
  FLogradouroDne := Value;
end;

function TEnderecoTransportThriftImpl.Get__isset_LogradouroDne: Boolean;
begin
  Result := F__isset_LogradouroDne;
end;

function TEnderecoTransportThriftImpl.GetNumero: string;
begin
  Result := FNumero;
end;

procedure TEnderecoTransportThriftImpl.SetNumero( const Value: string);
begin
  F__isset_Numero := True;
  FNumero := Value;
end;

function TEnderecoTransportThriftImpl.Get__isset_Numero: Boolean;
begin
  Result := F__isset_Numero;
end;

function TEnderecoTransportThriftImpl.GetPontoReferencia: string;
begin
  Result := FPontoReferencia;
end;

procedure TEnderecoTransportThriftImpl.SetPontoReferencia( const Value: string);
begin
  F__isset_PontoReferencia := True;
  FPontoReferencia := Value;
end;

function TEnderecoTransportThriftImpl.Get__isset_PontoReferencia: Boolean;
begin
  Result := F__isset_PontoReferencia;
end;

function TEnderecoTransportThriftImpl.GetSemNumero: Boolean;
begin
  Result := FSemNumero;
end;

procedure TEnderecoTransportThriftImpl.SetSemNumero( const Value: Boolean);
begin
  F__isset_SemNumero := True;
  FSemNumero := Value;
end;

function TEnderecoTransportThriftImpl.Get__isset_SemNumero: Boolean;
begin
  Result := F__isset_SemNumero;
end;

function TEnderecoTransportThriftImpl.GetUfSigla: string;
begin
  Result := FUfSigla;
end;

procedure TEnderecoTransportThriftImpl.SetUfSigla( const Value: string);
begin
  F__isset_UfSigla := True;
  FUfSigla := Value;
end;

function TEnderecoTransportThriftImpl.Get__isset_UfSigla: Boolean;
begin
  Result := F__isset_UfSigla;
end;

function TEnderecoTransportThriftImpl.GetArea: string;
begin
  Result := FArea;
end;

procedure TEnderecoTransportThriftImpl.SetArea( const Value: string);
begin
  F__isset_Area := True;
  FArea := Value;
end;

function TEnderecoTransportThriftImpl.Get__isset_Area: Boolean;
begin
  Result := F__isset_Area;
end;

function TEnderecoTransportThriftImpl.GetMicroArea: string;
begin
  Result := FMicroArea;
end;

procedure TEnderecoTransportThriftImpl.SetMicroArea( const Value: string);
begin
  F__isset_MicroArea := True;
  FMicroArea := Value;
end;

function TEnderecoTransportThriftImpl.Get__isset_MicroArea: Boolean;
begin
  Result := F__isset_MicroArea;
end;

procedure TEnderecoTransportThriftImpl.Read( const iprot: IProtocol);
var
  field_ : IField;
  struc : IStruct;

begin
  struc := iprot.ReadStructBegin;
  try
    while (true) do
    begin
      field_ := iprot.ReadFieldBegin();
      if (field_.Type_ = TType.Stop) then
      begin
        Break;
      end;
      case field_.ID of
        1: begin
          if (field_.Type_ = TType.String_) then
          begin
            BairroNome := iprot.ReadString();
          end else
          begin
            TProtocolUtil.Skip(iprot, field_.Type_);
          end;
        end;
        2: begin
          if (field_.Type_ = TType.String_) then
          begin
            BairroDne := iprot.ReadString();
          end else
          begin
            TProtocolUtil.Skip(iprot, field_.Type_);
          end;
        end;
        3: begin
          if (field_.Type_ = TType.String_) then
          begin
            LocalidadeCep := iprot.ReadString();
          end else
          begin
            TProtocolUtil.Skip(iprot, field_.Type_);
          end;
        end;
        4: begin
          if (field_.Type_ = TType.String_) then
          begin
            LocalidadeDne := iprot.ReadString();
          end else
          begin
            TProtocolUtil.Skip(iprot, field_.Type_);
          end;
        end;
        5: begin
          if (field_.Type_ = TType.String_) then
          begin
            LocalidadeIbge := iprot.ReadString();
          end else
          begin
            TProtocolUtil.Skip(iprot, field_.Type_);
          end;
        end;
        6: begin
          if (field_.Type_ = TType.String_) then
          begin
            Complemento := iprot.ReadString();
          end else
          begin
            TProtocolUtil.Skip(iprot, field_.Type_);
          end;
        end;
        7: begin
          if (field_.Type_ = TType.String_) then
          begin
            Logradouro := iprot.ReadString();
          end else
          begin
            TProtocolUtil.Skip(iprot, field_.Type_);
          end;
        end;
        8: begin
          if (field_.Type_ = TType.String_) then
          begin
            LogradouroDne := iprot.ReadString();
          end else
          begin
            TProtocolUtil.Skip(iprot, field_.Type_);
          end;
        end;
        9: begin
          if (field_.Type_ = TType.String_) then
          begin
            Numero := iprot.ReadString();
          end else
          begin
            TProtocolUtil.Skip(iprot, field_.Type_);
          end;
        end;
        10: begin
          if (field_.Type_ = TType.String_) then
          begin
            PontoReferencia := iprot.ReadString();
          end else
          begin
            TProtocolUtil.Skip(iprot, field_.Type_);
          end;
        end;
        11: begin
          if (field_.Type_ = TType.Bool_) then
          begin
            SemNumero := iprot.ReadBool();
          end else
          begin
            TProtocolUtil.Skip(iprot, field_.Type_);
          end;
        end;
        12: begin
          if (field_.Type_ = TType.String_) then
          begin
            UfSigla := iprot.ReadString();
          end else
          begin
            TProtocolUtil.Skip(iprot, field_.Type_);
          end;
        end;
        13: begin
          if (field_.Type_ = TType.String_) then
          begin
            Area := iprot.ReadString();
          end else
          begin
            TProtocolUtil.Skip(iprot, field_.Type_);
          end;
        end;
        14: begin
          if (field_.Type_ = TType.String_) then
          begin
            MicroArea := iprot.ReadString();
          end else
          begin
            TProtocolUtil.Skip(iprot, field_.Type_);
          end;
        end
        else begin
          TProtocolUtil.Skip(iprot, field_.Type_);
        end;
      end;
      iprot.ReadFieldEnd;
    end;
  finally
    iprot.ReadStructEnd;
  end;
end;

procedure TEnderecoTransportThriftImpl.Write( const oprot: IProtocol);
var
  struc : IStruct;
  field_ : IField;
begin
  struc := TStructImpl.Create('EnderecoTransportThrift');
  oprot.WriteStructBegin(struc);
  field_ := TFieldImpl.Create;
  if (__isset_BairroNome) then
  begin
    field_.Name := 'bairroNome';
    field_.Type_  := TType.String_;
    field_.ID := 1;
    oprot.WriteFieldBegin(field_);
    oprot.WriteString(BairroNome);
    oprot.WriteFieldEnd();
  end;
  if (__isset_BairroDne) then
  begin
    field_.Name := 'bairroDne';
    field_.Type_  := TType.String_;
    field_.ID := 2;
    oprot.WriteFieldBegin(field_);
    oprot.WriteString(BairroDne);
    oprot.WriteFieldEnd();
  end;
  if (__isset_LocalidadeCep) then
  begin
    field_.Name := 'localidadeCep';
    field_.Type_  := TType.String_;
    field_.ID := 3;
    oprot.WriteFieldBegin(field_);
    oprot.WriteString(LocalidadeCep);
    oprot.WriteFieldEnd();
  end;
  if (__isset_LocalidadeDne) then
  begin
    field_.Name := 'localidadeDne';
    field_.Type_  := TType.String_;
    field_.ID := 4;
    oprot.WriteFieldBegin(field_);
    oprot.WriteString(LocalidadeDne);
    oprot.WriteFieldEnd();
  end;
  if (__isset_LocalidadeIbge) then
  begin
    field_.Name := 'localidadeIbge';
    field_.Type_  := TType.String_;
    field_.ID := 5;
    oprot.WriteFieldBegin(field_);
    oprot.WriteString(LocalidadeIbge);
    oprot.WriteFieldEnd();
  end;
  if (__isset_Complemento) then
  begin
    field_.Name := 'complemento';
    field_.Type_  := TType.String_;
    field_.ID := 6;
    oprot.WriteFieldBegin(field_);
    oprot.WriteString(Complemento);
    oprot.WriteFieldEnd();
  end;
  if (__isset_Logradouro) then
  begin
    field_.Name := 'logradouro';
    field_.Type_  := TType.String_;
    field_.ID := 7;
    oprot.WriteFieldBegin(field_);
    oprot.WriteString(Logradouro);
    oprot.WriteFieldEnd();
  end;
  if (__isset_LogradouroDne) then
  begin
    field_.Name := 'logradouroDne';
    field_.Type_  := TType.String_;
    field_.ID := 8;
    oprot.WriteFieldBegin(field_);
    oprot.WriteString(LogradouroDne);
    oprot.WriteFieldEnd();
  end;
  if (__isset_Numero) then
  begin
    field_.Name := 'numero';
    field_.Type_  := TType.String_;
    field_.ID := 9;
    oprot.WriteFieldBegin(field_);
    oprot.WriteString(Numero);
    oprot.WriteFieldEnd();
  end;
  if (__isset_PontoReferencia) then
  begin
    field_.Name := 'pontoReferencia';
    field_.Type_  := TType.String_;
    field_.ID := 10;
    oprot.WriteFieldBegin(field_);
    oprot.WriteString(PontoReferencia);
    oprot.WriteFieldEnd();
  end;
  if (__isset_SemNumero) then
  begin
    field_.Name := 'semNumero';
    field_.Type_  := TType.Bool_;
    field_.ID := 11;
    oprot.WriteFieldBegin(field_);
    oprot.WriteBool(SemNumero);
    oprot.WriteFieldEnd();
  end;
  if (__isset_UfSigla) then
  begin
    field_.Name := 'ufSigla';
    field_.Type_  := TType.String_;
    field_.ID := 12;
    oprot.WriteFieldBegin(field_);
    oprot.WriteString(UfSigla);
    oprot.WriteFieldEnd();
  end;
  if (__isset_Area) then
  begin
    field_.Name := 'area';
    field_.Type_  := TType.String_;
    field_.ID := 13;
    oprot.WriteFieldBegin(field_);
    oprot.WriteString(Area);
    oprot.WriteFieldEnd();
  end;
  if (__isset_MicroArea) then
  begin
    field_.Name := 'microArea';
    field_.Type_  := TType.String_;
    field_.ID := 14;
    oprot.WriteFieldBegin(field_);
    oprot.WriteString(MicroArea);
    oprot.WriteFieldEnd();
  end;
  oprot.WriteFieldStop();
  oprot.WriteStructEnd();
end;

function TEnderecoTransportThriftImpl.ToString: string;
var
  sb : TThriftStringBuilder;
begin
  sb := TThriftStringBuilder.Create('(');
  try
    sb.Append('BairroNome: ');
    sb.Append(BairroNome);
    sb.Append(',BairroDne: ');
    sb.Append(BairroDne);
    sb.Append(',LocalidadeCep: ');
    sb.Append(LocalidadeCep);
    sb.Append(',LocalidadeDne: ');
    sb.Append(LocalidadeDne);
    sb.Append(',LocalidadeIbge: ');
    sb.Append(LocalidadeIbge);
    sb.Append(',Complemento: ');
    sb.Append(Complemento);
    sb.Append(',Logradouro: ');
    sb.Append(Logradouro);
    sb.Append(',LogradouroDne: ');
    sb.Append(LogradouroDne);
    sb.Append(',Numero: ');
    sb.Append(Numero);
    sb.Append(',PontoReferencia: ');
    sb.Append(PontoReferencia);
    sb.Append(',SemNumero: ');
    sb.Append(SemNumero);
    sb.Append(',UfSigla: ');
    sb.Append(UfSigla);
    sb.Append(',Area: ');
    sb.Append(Area);
    sb.Append(',MicroArea: ');
    sb.Append(MicroArea);
    sb.Append(')');
    Result := sb.ToString;
  finally
    sb.Free;
  end;
end;

constructor TCidadaoTransportThriftImpl.Create;
begin
  inherited;
end;

destructor TCidadaoTransportThriftImpl.Destroy;
begin
  inherited;
end;

function TCidadaoTransportThriftImpl.GetNaoPossuiCns: Boolean;
begin
  Result := FNaoPossuiCns;
end;

procedure TCidadaoTransportThriftImpl.SetNaoPossuiCns( const Value: Boolean);
begin
  FNaoPossuiCns := Value;
end;

function TCidadaoTransportThriftImpl.GetCns: string;
begin
  Result := FCns;
end;

procedure TCidadaoTransportThriftImpl.SetCns( const Value: string);
begin
  FCns := Value;
end;

function TCidadaoTransportThriftImpl.GetCpf: string;
begin
  Result := FCpf;
end;

procedure TCidadaoTransportThriftImpl.SetCpf( const Value: string);
begin
  F__isset_Cpf := True;
  FCpf := Value;
end;

function TCidadaoTransportThriftImpl.Get__isset_Cpf: Boolean;
begin
  Result := F__isset_Cpf;
end;

function TCidadaoTransportThriftImpl.GetDataNascimento: Int64;
begin
  Result := FDataNascimento;
end;

procedure TCidadaoTransportThriftImpl.SetDataNascimento( const Value: Int64);
begin
  FDataNascimento := Value;
end;

function TCidadaoTransportThriftImpl.GetDesconheceNomeMae: Boolean;
begin
  Result := FDesconheceNomeMae;
end;

procedure TCidadaoTransportThriftImpl.SetDesconheceNomeMae( const Value: Boolean);
begin
  FDesconheceNomeMae := Value;
end;

function TCidadaoTransportThriftImpl.GetNomeMae: string;
begin
  Result := FNomeMae;
end;

procedure TCidadaoTransportThriftImpl.SetNomeMae( const Value: string);
begin
  F__isset_NomeMae := True;
  FNomeMae := Value;
end;

function TCidadaoTransportThriftImpl.Get__isset_NomeMae: Boolean;
begin
  Result := F__isset_NomeMae;
end;

function TCidadaoTransportThriftImpl.GetEmail: string;
begin
  Result := FEmail;
end;

procedure TCidadaoTransportThriftImpl.SetEmail( const Value: string);
begin
  F__isset_Email := True;
  FEmail := Value;
end;

function TCidadaoTransportThriftImpl.Get__isset_Email: Boolean;
begin
  Result := F__isset_Email;
end;

function TCidadaoTransportThriftImpl.GetEndereco: IEnderecoTransportThrift;
begin
  Result := FEndereco;
end;

procedure TCidadaoTransportThriftImpl.SetEndereco( const Value: IEnderecoTransportThrift);
begin
  F__isset_Endereco := True;
  FEndereco := Value;
end;

function TCidadaoTransportThriftImpl.Get__isset_Endereco: Boolean;
begin
  Result := F__isset_Endereco;
end;

function TCidadaoTransportThriftImpl.GetEscolaridadeId: Int64;
begin
  Result := FEscolaridadeId;
end;

procedure TCidadaoTransportThriftImpl.SetEscolaridadeId( const Value: Int64);
begin
  F__isset_EscolaridadeId := True;
  FEscolaridadeId := Value;
end;

function TCidadaoTransportThriftImpl.Get__isset_EscolaridadeId: Boolean;
begin
  Result := F__isset_EscolaridadeId;
end;

function TCidadaoTransportThriftImpl.GetEstadoCivilId: Int64;
begin
  Result := FEstadoCivilId;
end;

procedure TCidadaoTransportThriftImpl.SetEstadoCivilId( const Value: Int64);
begin
  F__isset_EstadoCivilId := True;
  FEstadoCivilId := Value;
end;

function TCidadaoTransportThriftImpl.Get__isset_EstadoCivilId: Boolean;
begin
  Result := F__isset_EstadoCivilId;
end;

function TCidadaoTransportThriftImpl.GetEstrangeiro: Boolean;
begin
  Result := FEstrangeiro;
end;

procedure TCidadaoTransportThriftImpl.SetEstrangeiro( const Value: Boolean);
begin
  FEstrangeiro := Value;
end;

function TCidadaoTransportThriftImpl.GetEtniaId: Int64;
begin
  Result := FEtniaId;
end;

procedure TCidadaoTransportThriftImpl.SetEtniaId( const Value: Int64);
begin
  F__isset_EtniaId := True;
  FEtniaId := Value;
end;

function TCidadaoTransportThriftImpl.Get__isset_EtniaId: Boolean;
begin
  Result := F__isset_EtniaId;
end;

function TCidadaoTransportThriftImpl.GetFaleceu: Boolean;
begin
  Result := FFaleceu;
end;

procedure TCidadaoTransportThriftImpl.SetFaleceu( const Value: Boolean);
begin
  F__isset_Faleceu := True;
  FFaleceu := Value;
end;

function TCidadaoTransportThriftImpl.Get__isset_Faleceu: Boolean;
begin
  Result := F__isset_Faleceu;
end;

function TCidadaoTransportThriftImpl.GetMunicipioNascimentoCep: string;
begin
  Result := FMunicipioNascimentoCep;
end;

procedure TCidadaoTransportThriftImpl.SetMunicipioNascimentoCep( const Value: string);
begin
  FMunicipioNascimentoCep := Value;
end;

function TCidadaoTransportThriftImpl.GetMunicipioNascimentoDne: string;
begin
  Result := FMunicipioNascimentoDne;
end;

procedure TCidadaoTransportThriftImpl.SetMunicipioNascimentoDne( const Value: string);
begin
  FMunicipioNascimentoDne := Value;
end;

function TCidadaoTransportThriftImpl.GetMunicipioNascimentoIbge: string;
begin
  Result := FMunicipioNascimentoIbge;
end;

procedure TCidadaoTransportThriftImpl.SetMunicipioNascimentoIbge( const Value: string);
begin
  F__isset_MunicipioNascimentoIbge := True;
  FMunicipioNascimentoIbge := Value;
end;

function TCidadaoTransportThriftImpl.Get__isset_MunicipioNascimentoIbge: Boolean;
begin
  Result := F__isset_MunicipioNascimentoIbge;
end;

function TCidadaoTransportThriftImpl.GetNisPisPasep: string;
begin
  Result := FNisPisPasep;
end;

procedure TCidadaoTransportThriftImpl.SetNisPisPasep( const Value: string);
begin
  F__isset_NisPisPasep := True;
  FNisPisPasep := Value;
end;

function TCidadaoTransportThriftImpl.Get__isset_NisPisPasep: Boolean;
begin
  Result := F__isset_NisPisPasep;
end;

function TCidadaoTransportThriftImpl.GetNomeCompleto: string;
begin
  Result := FNomeCompleto;
end;

procedure TCidadaoTransportThriftImpl.SetNomeCompleto( const Value: string);
begin
  FNomeCompleto := Value;
end;

function TCidadaoTransportThriftImpl.GetNomeSocial: string;
begin
  Result := FNomeSocial;
end;

procedure TCidadaoTransportThriftImpl.SetNomeSocial( const Value: string);
begin
  F__isset_NomeSocial := True;
  FNomeSocial := Value;
end;

function TCidadaoTransportThriftImpl.Get__isset_NomeSocial: Boolean;
begin
  Result := F__isset_NomeSocial;
end;

function TCidadaoTransportThriftImpl.GetNumeroProntuario: string;
begin
  Result := FNumeroProntuario;
end;

procedure TCidadaoTransportThriftImpl.SetNumeroProntuario( const Value: string);
begin
  F__isset_NumeroProntuario := True;
  FNumeroProntuario := Value;
end;

function TCidadaoTransportThriftImpl.Get__isset_NumeroProntuario: Boolean;
begin
  Result := F__isset_NumeroProntuario;
end;

function TCidadaoTransportThriftImpl.GetNumeroProntuarioCnes: string;
begin
  Result := FNumeroProntuarioCnes;
end;

procedure TCidadaoTransportThriftImpl.SetNumeroProntuarioCnes( const Value: string);
begin
  F__isset_NumeroProntuarioCnes := True;
  FNumeroProntuarioCnes := Value;
end;

function TCidadaoTransportThriftImpl.Get__isset_NumeroProntuarioCnes: Boolean;
begin
  Result := F__isset_NumeroProntuarioCnes;
end;

function TCidadaoTransportThriftImpl.GetRacaCorId: Int64;
begin
  Result := FRacaCorId;
end;

procedure TCidadaoTransportThriftImpl.SetRacaCorId( const Value: Int64);
begin
  FRacaCorId := Value;
end;

function TCidadaoTransportThriftImpl.GetSexo: TSexoThrift;
begin
  Result := FSexo;
end;

procedure TCidadaoTransportThriftImpl.SetSexo( const Value: TSexoThrift);
begin
  FSexo := Value;
end;

function TCidadaoTransportThriftImpl.GetTelefoneCelular: string;
begin
  Result := FTelefoneCelular;
end;

procedure TCidadaoTransportThriftImpl.SetTelefoneCelular( const Value: string);
begin
  F__isset_TelefoneCelular := True;
  FTelefoneCelular := Value;
end;

function TCidadaoTransportThriftImpl.Get__isset_TelefoneCelular: Boolean;
begin
  Result := F__isset_TelefoneCelular;
end;

function TCidadaoTransportThriftImpl.GetTelefoneContato: string;
begin
  Result := FTelefoneContato;
end;

procedure TCidadaoTransportThriftImpl.SetTelefoneContato( const Value: string);
begin
  F__isset_TelefoneContato := True;
  FTelefoneContato := Value;
end;

function TCidadaoTransportThriftImpl.Get__isset_TelefoneContato: Boolean;
begin
  Result := F__isset_TelefoneContato;
end;

function TCidadaoTransportThriftImpl.GetTelefoneResidencial: string;
begin
  Result := FTelefoneResidencial;
end;

procedure TCidadaoTransportThriftImpl.SetTelefoneResidencial( const Value: string);
begin
  F__isset_TelefoneResidencial := True;
  FTelefoneResidencial := Value;
end;

function TCidadaoTransportThriftImpl.Get__isset_TelefoneResidencial: Boolean;
begin
  Result := F__isset_TelefoneResidencial;
end;

function TCidadaoTransportThriftImpl.GetTipoSanguineo: TTipoSanguineoThrift;
begin
  Result := FTipoSanguineo;
end;

procedure TCidadaoTransportThriftImpl.SetTipoSanguineo( const Value: TTipoSanguineoThrift);
begin
  F__isset_TipoSanguineo := True;
  FTipoSanguineo := Value;
end;

function TCidadaoTransportThriftImpl.Get__isset_TipoSanguineo: Boolean;
begin
  Result := F__isset_TipoSanguineo;
end;

function TCidadaoTransportThriftImpl.GetCboNumero: string;
begin
  Result := FCboNumero;
end;

procedure TCidadaoTransportThriftImpl.SetCboNumero( const Value: string);
begin
  F__isset_CboNumero := True;
  FCboNumero := Value;
end;

function TCidadaoTransportThriftImpl.Get__isset_CboNumero: Boolean;
begin
  Result := F__isset_CboNumero;
end;

procedure TCidadaoTransportThriftImpl.Read( const iprot: IProtocol);
var
  field_ : IField;
  struc : IStruct;
  _req_isset_NaoPossuiCns : Boolean;
  _req_isset_Cns : Boolean;
  _req_isset_DataNascimento : Boolean;
  _req_isset_DesconheceNomeMae : Boolean;
  _req_isset_Estrangeiro : Boolean;
  _req_isset_MunicipioNascimentoCep : Boolean;
  _req_isset_MunicipioNascimentoDne : Boolean;
  _req_isset_NomeCompleto : Boolean;
  _req_isset_RacaCorId : Boolean;
  _req_isset_Sexo : Boolean;

begin
  _req_isset_NaoPossuiCns := FALSE;
  _req_isset_Cns := FALSE;
  _req_isset_DataNascimento := FALSE;
  _req_isset_DesconheceNomeMae := FALSE;
  _req_isset_Estrangeiro := FALSE;
  _req_isset_MunicipioNascimentoCep := FALSE;
  _req_isset_MunicipioNascimentoDne := FALSE;
  _req_isset_NomeCompleto := FALSE;
  _req_isset_RacaCorId := FALSE;
  _req_isset_Sexo := FALSE;
  struc := iprot.ReadStructBegin;
  try
    while (true) do
    begin
      field_ := iprot.ReadFieldBegin();
      if (field_.Type_ = TType.Stop) then
      begin
        Break;
      end;
      case field_.ID of
        1: begin
          if (field_.Type_ = TType.Bool_) then
          begin
            NaoPossuiCns := iprot.ReadBool();
            _req_isset_NaoPossuiCns := TRUE;
          end else
          begin
            TProtocolUtil.Skip(iprot, field_.Type_);
          end;
        end;
        2: begin
          if (field_.Type_ = TType.String_) then
          begin
            Cns := iprot.ReadString();
            _req_isset_Cns := TRUE;
          end else
          begin
            TProtocolUtil.Skip(iprot, field_.Type_);
          end;
        end;
        3: begin
          if (field_.Type_ = TType.String_) then
          begin
            Cpf := iprot.ReadString();
          end else
          begin
            TProtocolUtil.Skip(iprot, field_.Type_);
          end;
        end;
        4: begin
          if (field_.Type_ = TType.I64) then
          begin
            DataNascimento := iprot.ReadI64();
            _req_isset_DataNascimento := TRUE;
          end else
          begin
            TProtocolUtil.Skip(iprot, field_.Type_);
          end;
        end;
        5: begin
          if (field_.Type_ = TType.Bool_) then
          begin
            DesconheceNomeMae := iprot.ReadBool();
            _req_isset_DesconheceNomeMae := TRUE;
          end else
          begin
            TProtocolUtil.Skip(iprot, field_.Type_);
          end;
        end;
        6: begin
          if (field_.Type_ = TType.String_) then
          begin
            NomeMae := iprot.ReadString();
          end else
          begin
            TProtocolUtil.Skip(iprot, field_.Type_);
          end;
        end;
        7: begin
          if (field_.Type_ = TType.String_) then
          begin
            Email := iprot.ReadString();
          end else
          begin
            TProtocolUtil.Skip(iprot, field_.Type_);
          end;
        end;
        8: begin
          if (field_.Type_ = TType.Struct) then
          begin
            Endereco := TEnderecoTransportThriftImpl.Create;
            Endereco.Read(iprot);
          end else
          begin
            TProtocolUtil.Skip(iprot, field_.Type_);
          end;
        end;
        9: begin
          if (field_.Type_ = TType.I64) then
          begin
            EscolaridadeId := iprot.ReadI64();
          end else
          begin
            TProtocolUtil.Skip(iprot, field_.Type_);
          end;
        end;
        10: begin
          if (field_.Type_ = TType.I64) then
          begin
            EstadoCivilId := iprot.ReadI64();
          end else
          begin
            TProtocolUtil.Skip(iprot, field_.Type_);
          end;
        end;
        11: begin
          if (field_.Type_ = TType.Bool_) then
          begin
            Estrangeiro := iprot.ReadBool();
            _req_isset_Estrangeiro := TRUE;
          end else
          begin
            TProtocolUtil.Skip(iprot, field_.Type_);
          end;
        end;
        12: begin
          if (field_.Type_ = TType.I64) then
          begin
            EtniaId := iprot.ReadI64();
          end else
          begin
            TProtocolUtil.Skip(iprot, field_.Type_);
          end;
        end;
        13: begin
          if (field_.Type_ = TType.Bool_) then
          begin
            Faleceu := iprot.ReadBool();
          end else
          begin
            TProtocolUtil.Skip(iprot, field_.Type_);
          end;
        end;
        14: begin
          if (field_.Type_ = TType.String_) then
          begin
            MunicipioNascimentoCep := iprot.ReadString();
            _req_isset_MunicipioNascimentoCep := TRUE;
          end else
          begin
            TProtocolUtil.Skip(iprot, field_.Type_);
          end;
        end;
        15: begin
          if (field_.Type_ = TType.String_) then
          begin
            MunicipioNascimentoDne := iprot.ReadString();
            _req_isset_MunicipioNascimentoDne := TRUE;
          end else
          begin
            TProtocolUtil.Skip(iprot, field_.Type_);
          end;
        end;
        16: begin
          if (field_.Type_ = TType.String_) then
          begin
            MunicipioNascimentoIbge := iprot.ReadString();
          end else
          begin
            TProtocolUtil.Skip(iprot, field_.Type_);
          end;
        end;
        17: begin
          if (field_.Type_ = TType.String_) then
          begin
            NisPisPasep := iprot.ReadString();
          end else
          begin
            TProtocolUtil.Skip(iprot, field_.Type_);
          end;
        end;
        18: begin
          if (field_.Type_ = TType.String_) then
          begin
            NomeCompleto := iprot.ReadString();
            _req_isset_NomeCompleto := TRUE;
          end else
          begin
            TProtocolUtil.Skip(iprot, field_.Type_);
          end;
        end;
        19: begin
          if (field_.Type_ = TType.String_) then
          begin
            NomeSocial := iprot.ReadString();
          end else
          begin
            TProtocolUtil.Skip(iprot, field_.Type_);
          end;
        end;
        20: begin
          if (field_.Type_ = TType.String_) then
          begin
            NumeroProntuario := iprot.ReadString();
          end else
          begin
            TProtocolUtil.Skip(iprot, field_.Type_);
          end;
        end;
        22: begin
          if (field_.Type_ = TType.String_) then
          begin
            NumeroProntuarioCnes := iprot.ReadString();
          end else
          begin
            TProtocolUtil.Skip(iprot, field_.Type_);
          end;
        end;
        23: begin
          if (field_.Type_ = TType.I64) then
          begin
            RacaCorId := iprot.ReadI64();
            _req_isset_RacaCorId := TRUE;
          end else
          begin
            TProtocolUtil.Skip(iprot, field_.Type_);
          end;
        end;
        24: begin
          if (field_.Type_ = TType.I32) then
          begin
            Sexo := TSexoThrift(iprot.ReadI32());
            _req_isset_Sexo := TRUE;
          end else
          begin
            TProtocolUtil.Skip(iprot, field_.Type_);
          end;
        end;
        25: begin
          if (field_.Type_ = TType.String_) then
          begin
            TelefoneCelular := iprot.ReadString();
          end else
          begin
            TProtocolUtil.Skip(iprot, field_.Type_);
          end;
        end;
        26: begin
          if (field_.Type_ = TType.String_) then
          begin
            TelefoneContato := iprot.ReadString();
          end else
          begin
            TProtocolUtil.Skip(iprot, field_.Type_);
          end;
        end;
        27: begin
          if (field_.Type_ = TType.String_) then
          begin
            TelefoneResidencial := iprot.ReadString();
          end else
          begin
            TProtocolUtil.Skip(iprot, field_.Type_);
          end;
        end;
        28: begin
          if (field_.Type_ = TType.I32) then
          begin
            TipoSanguineo := TTipoSanguineoThrift(iprot.ReadI32());
          end else
          begin
            TProtocolUtil.Skip(iprot, field_.Type_);
          end;
        end;
        29: begin
          if (field_.Type_ = TType.String_) then
          begin
            CboNumero := iprot.ReadString();
          end else
          begin
            TProtocolUtil.Skip(iprot, field_.Type_);
          end;
        end
        else begin
          TProtocolUtil.Skip(iprot, field_.Type_);
        end;
      end;
      iprot.ReadFieldEnd;
    end;
  finally
    iprot.ReadStructEnd;
  end;
  if not _req_isset_NaoPossuiCns
  then raise TProtocolException.Create( TProtocolException.INVALID_DATA, 'NaoPossuiCns');
  if not _req_isset_Cns
  then raise TProtocolException.Create( TProtocolException.INVALID_DATA, 'Cns');
  if not _req_isset_DataNascimento
  then raise TProtocolException.Create( TProtocolException.INVALID_DATA, 'DataNascimento');
  if not _req_isset_DesconheceNomeMae
  then raise TProtocolException.Create( TProtocolException.INVALID_DATA, 'DesconheceNomeMae');
  if not _req_isset_Estrangeiro
  then raise TProtocolException.Create( TProtocolException.INVALID_DATA, 'Estrangeiro');
  if not _req_isset_MunicipioNascimentoCep
  then raise TProtocolException.Create( TProtocolException.INVALID_DATA, 'MunicipioNascimentoCep');
  if not _req_isset_MunicipioNascimentoDne
  then raise TProtocolException.Create( TProtocolException.INVALID_DATA, 'MunicipioNascimentoDne');
  if not _req_isset_NomeCompleto
  then raise TProtocolException.Create( TProtocolException.INVALID_DATA, 'NomeCompleto');
  if not _req_isset_RacaCorId
  then raise TProtocolException.Create( TProtocolException.INVALID_DATA, 'RacaCorId');
  if not _req_isset_Sexo
  then raise TProtocolException.Create( TProtocolException.INVALID_DATA, 'Sexo');
end;

procedure TCidadaoTransportThriftImpl.Write( const oprot: IProtocol);
var
  struc : IStruct;
  field_ : IField;
begin
  struc := TStructImpl.Create('CidadaoTransportThrift');
  oprot.WriteStructBegin(struc);
  field_ := TFieldImpl.Create;
  // required field
  field_.Name := 'naoPossuiCns';
  field_.Type_  := TType.Bool_;
  field_.ID := 1;
  oprot.WriteFieldBegin(field_);
  oprot.WriteBool(NaoPossuiCns);
  oprot.WriteFieldEnd();
  // required field
  field_.Name := 'cns';
  field_.Type_  := TType.String_;
  field_.ID := 2;
  oprot.WriteFieldBegin(field_);
  oprot.WriteString(Cns);
  oprot.WriteFieldEnd();
  if (__isset_Cpf) then
  begin
    field_.Name := 'cpf';
    field_.Type_  := TType.String_;
    field_.ID := 3;
    oprot.WriteFieldBegin(field_);
    oprot.WriteString(Cpf);
    oprot.WriteFieldEnd();
  end;
  // required field
  field_.Name := 'dataNascimento';
  field_.Type_  := TType.I64;
  field_.ID := 4;
  oprot.WriteFieldBegin(field_);
  oprot.WriteI64(DataNascimento);
  oprot.WriteFieldEnd();
  // required field
  field_.Name := 'desconheceNomeMae';
  field_.Type_  := TType.Bool_;
  field_.ID := 5;
  oprot.WriteFieldBegin(field_);
  oprot.WriteBool(DesconheceNomeMae);
  oprot.WriteFieldEnd();
  if (__isset_NomeMae) then
  begin
    field_.Name := 'nomeMae';
    field_.Type_  := TType.String_;
    field_.ID := 6;
    oprot.WriteFieldBegin(field_);
    oprot.WriteString(NomeMae);
    oprot.WriteFieldEnd();
  end;
  if (__isset_Email) then
  begin
    field_.Name := 'email';
    field_.Type_  := TType.String_;
    field_.ID := 7;
    oprot.WriteFieldBegin(field_);
    oprot.WriteString(Email);
    oprot.WriteFieldEnd();
  end;
  if (Endereco <> nil) and __isset_Endereco then
  begin
    field_.Name := 'endereco';
    field_.Type_  := TType.Struct;
    field_.ID := 8;
    oprot.WriteFieldBegin(field_);
    Endereco.Write(oprot);
    oprot.WriteFieldEnd();
  end;
  if (__isset_EscolaridadeId) then
  begin
    field_.Name := 'escolaridadeId';
    field_.Type_  := TType.I64;
    field_.ID := 9;
    oprot.WriteFieldBegin(field_);
    oprot.WriteI64(EscolaridadeId);
    oprot.WriteFieldEnd();
  end;
  if (__isset_EstadoCivilId) then
  begin
    field_.Name := 'estadoCivilId';
    field_.Type_  := TType.I64;
    field_.ID := 10;
    oprot.WriteFieldBegin(field_);
    oprot.WriteI64(EstadoCivilId);
    oprot.WriteFieldEnd();
  end;
  // required field
  field_.Name := 'estrangeiro';
  field_.Type_  := TType.Bool_;
  field_.ID := 11;
  oprot.WriteFieldBegin(field_);
  oprot.WriteBool(Estrangeiro);
  oprot.WriteFieldEnd();
  if (__isset_EtniaId) then
  begin
    field_.Name := 'etniaId';
    field_.Type_  := TType.I64;
    field_.ID := 12;
    oprot.WriteFieldBegin(field_);
    oprot.WriteI64(EtniaId);
    oprot.WriteFieldEnd();
  end;
  if (__isset_Faleceu) then
  begin
    field_.Name := 'faleceu';
    field_.Type_  := TType.Bool_;
    field_.ID := 13;
    oprot.WriteFieldBegin(field_);
    oprot.WriteBool(Faleceu);
    oprot.WriteFieldEnd();
  end;
  // required field
  field_.Name := 'municipioNascimentoCep';
  field_.Type_  := TType.String_;
  field_.ID := 14;
  oprot.WriteFieldBegin(field_);
  oprot.WriteString(MunicipioNascimentoCep);
  oprot.WriteFieldEnd();
  // required field
  field_.Name := 'municipioNascimentoDne';
  field_.Type_  := TType.String_;
  field_.ID := 15;
  oprot.WriteFieldBegin(field_);
  oprot.WriteString(MunicipioNascimentoDne);
  oprot.WriteFieldEnd();
  if (__isset_MunicipioNascimentoIbge) then
  begin
    field_.Name := 'municipioNascimentoIbge';
    field_.Type_  := TType.String_;
    field_.ID := 16;
    oprot.WriteFieldBegin(field_);
    oprot.WriteString(MunicipioNascimentoIbge);
    oprot.WriteFieldEnd();
  end;
  if (__isset_NisPisPasep) then
  begin
    field_.Name := 'nisPisPasep';
    field_.Type_  := TType.String_;
    field_.ID := 17;
    oprot.WriteFieldBegin(field_);
    oprot.WriteString(NisPisPasep);
    oprot.WriteFieldEnd();
  end;
  // required field
  field_.Name := 'nomeCompleto';
  field_.Type_  := TType.String_;
  field_.ID := 18;
  oprot.WriteFieldBegin(field_);
  oprot.WriteString(NomeCompleto);
  oprot.WriteFieldEnd();
  if (__isset_NomeSocial) then
  begin
    field_.Name := 'nomeSocial';
    field_.Type_  := TType.String_;
    field_.ID := 19;
    oprot.WriteFieldBegin(field_);
    oprot.WriteString(NomeSocial);
    oprot.WriteFieldEnd();
  end;
  if (__isset_NumeroProntuario) then
  begin
    field_.Name := 'numeroProntuario';
    field_.Type_  := TType.String_;
    field_.ID := 20;
    oprot.WriteFieldBegin(field_);
    oprot.WriteString(NumeroProntuario);
    oprot.WriteFieldEnd();
  end;
  if (__isset_NumeroProntuarioCnes) then
  begin
    field_.Name := 'numeroProntuarioCnes';
    field_.Type_  := TType.String_;
    field_.ID := 22;
    oprot.WriteFieldBegin(field_);
    oprot.WriteString(NumeroProntuarioCnes);
    oprot.WriteFieldEnd();
  end;
  // required field
  field_.Name := 'racaCorId';
  field_.Type_  := TType.I64;
  field_.ID := 23;
  oprot.WriteFieldBegin(field_);
  oprot.WriteI64(RacaCorId);
  oprot.WriteFieldEnd();
  // required field
  field_.Name := 'sexo';
  field_.Type_  := TType.I32;
  field_.ID := 24;
  oprot.WriteFieldBegin(field_);
  oprot.WriteI32(Integer(Sexo));
  oprot.WriteFieldEnd();
  if (__isset_TelefoneCelular) then
  begin
    field_.Name := 'telefoneCelular';
    field_.Type_  := TType.String_;
    field_.ID := 25;
    oprot.WriteFieldBegin(field_);
    oprot.WriteString(TelefoneCelular);
    oprot.WriteFieldEnd();
  end;
  if (__isset_TelefoneContato) then
  begin
    field_.Name := 'telefoneContato';
    field_.Type_  := TType.String_;
    field_.ID := 26;
    oprot.WriteFieldBegin(field_);
    oprot.WriteString(TelefoneContato);
    oprot.WriteFieldEnd();
  end;
  if (__isset_TelefoneResidencial) then
  begin
    field_.Name := 'telefoneResidencial';
    field_.Type_  := TType.String_;
    field_.ID := 27;
    oprot.WriteFieldBegin(field_);
    oprot.WriteString(TelefoneResidencial);
    oprot.WriteFieldEnd();
  end;
  if (__isset_TipoSanguineo) then
  begin
    field_.Name := 'tipoSanguineo';
    field_.Type_  := TType.I32;
    field_.ID := 28;
    oprot.WriteFieldBegin(field_);
    oprot.WriteI32(Integer(TipoSanguineo));
    oprot.WriteFieldEnd();
  end;
  if (__isset_CboNumero) then
  begin
    field_.Name := 'cboNumero';
    field_.Type_  := TType.String_;
    field_.ID := 29;
    oprot.WriteFieldBegin(field_);
    oprot.WriteString(CboNumero);
    oprot.WriteFieldEnd();
  end;
  oprot.WriteFieldStop();
  oprot.WriteStructEnd();
end;

function TCidadaoTransportThriftImpl.ToString: string;
var
  sb : TThriftStringBuilder;
begin
  sb := TThriftStringBuilder.Create('(');
  try
    sb.Append('NaoPossuiCns: ');
    sb.Append(NaoPossuiCns);
    sb.Append(',Cns: ');
    sb.Append(Cns);
    sb.Append(',Cpf: ');
    sb.Append(Cpf);
    sb.Append(',DataNascimento: ');
    sb.Append(DataNascimento);
    sb.Append(',DesconheceNomeMae: ');
    sb.Append(DesconheceNomeMae);
    sb.Append(',NomeMae: ');
    sb.Append(NomeMae);
    sb.Append(',Email: ');
    sb.Append(Email);
    sb.Append(',Endereco: ');
    if (Endereco = nil) then sb.Append('<null>') else sb.Append(Endereco.ToString());
    sb.Append(',EscolaridadeId: ');
    sb.Append(EscolaridadeId);
    sb.Append(',EstadoCivilId: ');
    sb.Append(EstadoCivilId);
    sb.Append(',Estrangeiro: ');
    sb.Append(Estrangeiro);
    sb.Append(',EtniaId: ');
    sb.Append(EtniaId);
    sb.Append(',Faleceu: ');
    sb.Append(Faleceu);
    sb.Append(',MunicipioNascimentoCep: ');
    sb.Append(MunicipioNascimentoCep);
    sb.Append(',MunicipioNascimentoDne: ');
    sb.Append(MunicipioNascimentoDne);
    sb.Append(',MunicipioNascimentoIbge: ');
    sb.Append(MunicipioNascimentoIbge);
    sb.Append(',NisPisPasep: ');
    sb.Append(NisPisPasep);
    sb.Append(',NomeCompleto: ');
    sb.Append(NomeCompleto);
    sb.Append(',NomeSocial: ');
    sb.Append(NomeSocial);
    sb.Append(',NumeroProntuario: ');
    sb.Append(NumeroProntuario);
    sb.Append(',NumeroProntuarioCnes: ');
    sb.Append(NumeroProntuarioCnes);
    sb.Append(',RacaCorId: ');
    sb.Append(RacaCorId);
    sb.Append(',Sexo: ');
    sb.Append(Integer(Sexo));
    sb.Append(',TelefoneCelular: ');
    sb.Append(TelefoneCelular);
    sb.Append(',TelefoneContato: ');
    sb.Append(TelefoneContato);
    sb.Append(',TelefoneResidencial: ');
    sb.Append(TelefoneResidencial);
    sb.Append(',TipoSanguineo: ');
    sb.Append(Integer(TipoSanguineo));
    sb.Append(',CboNumero: ');
    sb.Append(CboNumero);
    sb.Append(')');
    Result := sb.ToString;
  finally
    sb.Free;
  end;
end;

end.
