/**
 * Autogenerated by Thrift Compiler (0.9.0)
 *
 * DO NOT EDIT UNLESS YOU ARE SURE THAT YOU KNOW WHAT YOU ARE DOING
 *  @generated
 */
using System;
using System.Collections;
using System.Collections.Generic;
using System.Text;
using System.IO;
using Thrift;
using Thrift.Collections;
using System.Runtime.Serialization;
using Thrift.Protocol;
using Thrift.Transport;

namespace br.gov.saude.esus.thrift.definition.cidadao
{

  #if !SILVERLIGHT
  [Serializable]
  #endif
  public partial class CidadaoTransportThrift : TBase
  {
    private bool _naoPossuiCns;
    private string _cns;
    private string _cpf;
    private long _dataNascimento;
    private bool _desconheceNomeMae;
    private string _nomeMae;
    private string _email;
    private EnderecoTransportThrift _endereco;
    private long _escolaridadeId;
    private long _estadoCivilId;
    private bool _estrangeiro;
    private long _etniaId;
    private bool _faleceu;
    private string _municipioNascimentoCep;
    private string _municipioNascimentoDne;
    private string _municipioNascimentoIbge;
    private string _nisPisPasep;
    private string _nomeCompleto;
    private string _nomeSocial;
    private string _numeroProntuario;
    private string _numeroProntuarioCnes;
    private long _racaCorId;
    private SexoThrift _sexo;
    private string _telefoneCelular;
    private string _telefoneContato;
    private string _telefoneResidencial;
    private TipoSanguineoThrift _tipoSanguineo;
    private string _cboNumero;

    public bool NaoPossuiCns
    {
      get
      {
        return _naoPossuiCns;
      }
      set
      {
        __isset.naoPossuiCns = true;
        this._naoPossuiCns = value;
      }
    }

    public string Cns
    {
      get
      {
        return _cns;
      }
      set
      {
        __isset.cns = true;
        this._cns = value;
      }
    }

    public string Cpf
    {
      get
      {
        return _cpf;
      }
      set
      {
        __isset.cpf = true;
        this._cpf = value;
      }
    }

    public long DataNascimento
    {
      get
      {
        return _dataNascimento;
      }
      set
      {
        __isset.dataNascimento = true;
        this._dataNascimento = value;
      }
    }

    public bool DesconheceNomeMae
    {
      get
      {
        return _desconheceNomeMae;
      }
      set
      {
        __isset.desconheceNomeMae = true;
        this._desconheceNomeMae = value;
      }
    }

    public string NomeMae
    {
      get
      {
        return _nomeMae;
      }
      set
      {
        __isset.nomeMae = true;
        this._nomeMae = value;
      }
    }

    public string Email
    {
      get
      {
        return _email;
      }
      set
      {
        __isset.email = true;
        this._email = value;
      }
    }

    public EnderecoTransportThrift Endereco
    {
      get
      {
        return _endereco;
      }
      set
      {
        __isset.endereco = true;
        this._endereco = value;
      }
    }

    public long EscolaridadeId
    {
      get
      {
        return _escolaridadeId;
      }
      set
      {
        __isset.escolaridadeId = true;
        this._escolaridadeId = value;
      }
    }

    public long EstadoCivilId
    {
      get
      {
        return _estadoCivilId;
      }
      set
      {
        __isset.estadoCivilId = true;
        this._estadoCivilId = value;
      }
    }

    public bool Estrangeiro
    {
      get
      {
        return _estrangeiro;
      }
      set
      {
        __isset.estrangeiro = true;
        this._estrangeiro = value;
      }
    }

    public long EtniaId
    {
      get
      {
        return _etniaId;
      }
      set
      {
        __isset.etniaId = true;
        this._etniaId = value;
      }
    }

    public bool Faleceu
    {
      get
      {
        return _faleceu;
      }
      set
      {
        __isset.faleceu = true;
        this._faleceu = value;
      }
    }

    public string MunicipioNascimentoCep
    {
      get
      {
        return _municipioNascimentoCep;
      }
      set
      {
        __isset.municipioNascimentoCep = true;
        this._municipioNascimentoCep = value;
      }
    }

    public string MunicipioNascimentoDne
    {
      get
      {
        return _municipioNascimentoDne;
      }
      set
      {
        __isset.municipioNascimentoDne = true;
        this._municipioNascimentoDne = value;
      }
    }

    public string MunicipioNascimentoIbge
    {
      get
      {
        return _municipioNascimentoIbge;
      }
      set
      {
        __isset.municipioNascimentoIbge = true;
        this._municipioNascimentoIbge = value;
      }
    }

    public string NisPisPasep
    {
      get
      {
        return _nisPisPasep;
      }
      set
      {
        __isset.nisPisPasep = true;
        this._nisPisPasep = value;
      }
    }

    public string NomeCompleto
    {
      get
      {
        return _nomeCompleto;
      }
      set
      {
        __isset.nomeCompleto = true;
        this._nomeCompleto = value;
      }
    }

    public string NomeSocial
    {
      get
      {
        return _nomeSocial;
      }
      set
      {
        __isset.nomeSocial = true;
        this._nomeSocial = value;
      }
    }

    public string NumeroProntuario
    {
      get
      {
        return _numeroProntuario;
      }
      set
      {
        __isset.numeroProntuario = true;
        this._numeroProntuario = value;
      }
    }

    public string NumeroProntuarioCnes
    {
      get
      {
        return _numeroProntuarioCnes;
      }
      set
      {
        __isset.numeroProntuarioCnes = true;
        this._numeroProntuarioCnes = value;
      }
    }

    public long RacaCorId
    {
      get
      {
        return _racaCorId;
      }
      set
      {
        __isset.racaCorId = true;
        this._racaCorId = value;
      }
    }

    /// <summary>
    /// 
    /// <seealso cref="SexoThrift"/>
    /// </summary>
    public SexoThrift Sexo
    {
      get
      {
        return _sexo;
      }
      set
      {
        __isset.sexo = true;
        this._sexo = value;
      }
    }

    public string TelefoneCelular
    {
      get
      {
        return _telefoneCelular;
      }
      set
      {
        __isset.telefoneCelular = true;
        this._telefoneCelular = value;
      }
    }

    public string TelefoneContato
    {
      get
      {
        return _telefoneContato;
      }
      set
      {
        __isset.telefoneContato = true;
        this._telefoneContato = value;
      }
    }

    public string TelefoneResidencial
    {
      get
      {
        return _telefoneResidencial;
      }
      set
      {
        __isset.telefoneResidencial = true;
        this._telefoneResidencial = value;
      }
    }

    /// <summary>
    /// 
    /// <seealso cref="TipoSanguineoThrift"/>
    /// </summary>
    public TipoSanguineoThrift TipoSanguineo
    {
      get
      {
        return _tipoSanguineo;
      }
      set
      {
        __isset.tipoSanguineo = true;
        this._tipoSanguineo = value;
      }
    }

    public string CboNumero
    {
      get
      {
        return _cboNumero;
      }
      set
      {
        __isset.cboNumero = true;
        this._cboNumero = value;
      }
    }


    public Isset __isset;
    #if !SILVERLIGHT
    [Serializable]
    #endif
    public struct Isset {
      public bool naoPossuiCns;
      public bool cns;
      public bool cpf;
      public bool dataNascimento;
      public bool desconheceNomeMae;
      public bool nomeMae;
      public bool email;
      public bool endereco;
      public bool escolaridadeId;
      public bool estadoCivilId;
      public bool estrangeiro;
      public bool etniaId;
      public bool faleceu;
      public bool municipioNascimentoCep;
      public bool municipioNascimentoDne;
      public bool municipioNascimentoIbge;
      public bool nisPisPasep;
      public bool nomeCompleto;
      public bool nomeSocial;
      public bool numeroProntuario;
      public bool numeroProntuarioCnes;
      public bool racaCorId;
      public bool sexo;
      public bool telefoneCelular;
      public bool telefoneContato;
      public bool telefoneResidencial;
      public bool tipoSanguineo;
      public bool cboNumero;
    }

    public CidadaoTransportThrift() {
    }

    public void Read (TProtocol iprot)
    {
      TField field;
      iprot.ReadStructBegin();
      while (true)
      {
        field = iprot.ReadFieldBegin();
        if (field.Type == TType.Stop) { 
          break;
        }
        switch (field.ID)
        {
          case 1:
            if (field.Type == TType.Bool) {
              NaoPossuiCns = iprot.ReadBool();
            } else { 
              TProtocolUtil.Skip(iprot, field.Type);
            }
            break;
          case 2:
            if (field.Type == TType.String) {
              Cns = iprot.ReadString();
            } else { 
              TProtocolUtil.Skip(iprot, field.Type);
            }
            break;
          case 3:
            if (field.Type == TType.String) {
              Cpf = iprot.ReadString();
            } else { 
              TProtocolUtil.Skip(iprot, field.Type);
            }
            break;
          case 4:
            if (field.Type == TType.I64) {
              DataNascimento = iprot.ReadI64();
            } else { 
              TProtocolUtil.Skip(iprot, field.Type);
            }
            break;
          case 5:
            if (field.Type == TType.Bool) {
              DesconheceNomeMae = iprot.ReadBool();
            } else { 
              TProtocolUtil.Skip(iprot, field.Type);
            }
            break;
          case 6:
            if (field.Type == TType.String) {
              NomeMae = iprot.ReadString();
            } else { 
              TProtocolUtil.Skip(iprot, field.Type);
            }
            break;
          case 7:
            if (field.Type == TType.String) {
              Email = iprot.ReadString();
            } else { 
              TProtocolUtil.Skip(iprot, field.Type);
            }
            break;
          case 8:
            if (field.Type == TType.Struct) {
              Endereco = new EnderecoTransportThrift();
              Endereco.Read(iprot);
            } else { 
              TProtocolUtil.Skip(iprot, field.Type);
            }
            break;
          case 9:
            if (field.Type == TType.I64) {
              EscolaridadeId = iprot.ReadI64();
            } else { 
              TProtocolUtil.Skip(iprot, field.Type);
            }
            break;
          case 10:
            if (field.Type == TType.I64) {
              EstadoCivilId = iprot.ReadI64();
            } else { 
              TProtocolUtil.Skip(iprot, field.Type);
            }
            break;
          case 11:
            if (field.Type == TType.Bool) {
              Estrangeiro = iprot.ReadBool();
            } else { 
              TProtocolUtil.Skip(iprot, field.Type);
            }
            break;
          case 12:
            if (field.Type == TType.I64) {
              EtniaId = iprot.ReadI64();
            } else { 
              TProtocolUtil.Skip(iprot, field.Type);
            }
            break;
          case 13:
            if (field.Type == TType.Bool) {
              Faleceu = iprot.ReadBool();
            } else { 
              TProtocolUtil.Skip(iprot, field.Type);
            }
            break;
          case 14:
            if (field.Type == TType.String) {
              MunicipioNascimentoCep = iprot.ReadString();
            } else { 
              TProtocolUtil.Skip(iprot, field.Type);
            }
            break;
          case 15:
            if (field.Type == TType.String) {
              MunicipioNascimentoDne = iprot.ReadString();
            } else { 
              TProtocolUtil.Skip(iprot, field.Type);
            }
            break;
          case 16:
            if (field.Type == TType.String) {
              MunicipioNascimentoIbge = iprot.ReadString();
            } else { 
              TProtocolUtil.Skip(iprot, field.Type);
            }
            break;
          case 17:
            if (field.Type == TType.String) {
              NisPisPasep = iprot.ReadString();
            } else { 
              TProtocolUtil.Skip(iprot, field.Type);
            }
            break;
          case 18:
            if (field.Type == TType.String) {
              NomeCompleto = iprot.ReadString();
            } else { 
              TProtocolUtil.Skip(iprot, field.Type);
            }
            break;
          case 19:
            if (field.Type == TType.String) {
              NomeSocial = iprot.ReadString();
            } else { 
              TProtocolUtil.Skip(iprot, field.Type);
            }
            break;
          case 20:
            if (field.Type == TType.String) {
              NumeroProntuario = iprot.ReadString();
            } else { 
              TProtocolUtil.Skip(iprot, field.Type);
            }
            break;
          case 22:
            if (field.Type == TType.String) {
              NumeroProntuarioCnes = iprot.ReadString();
            } else { 
              TProtocolUtil.Skip(iprot, field.Type);
            }
            break;
          case 23:
            if (field.Type == TType.I64) {
              RacaCorId = iprot.ReadI64();
            } else { 
              TProtocolUtil.Skip(iprot, field.Type);
            }
            break;
          case 24:
            if (field.Type == TType.I32) {
              Sexo = (SexoThrift)iprot.ReadI32();
            } else { 
              TProtocolUtil.Skip(iprot, field.Type);
            }
            break;
          case 25:
            if (field.Type == TType.String) {
              TelefoneCelular = iprot.ReadString();
            } else { 
              TProtocolUtil.Skip(iprot, field.Type);
            }
            break;
          case 26:
            if (field.Type == TType.String) {
              TelefoneContato = iprot.ReadString();
            } else { 
              TProtocolUtil.Skip(iprot, field.Type);
            }
            break;
          case 27:
            if (field.Type == TType.String) {
              TelefoneResidencial = iprot.ReadString();
            } else { 
              TProtocolUtil.Skip(iprot, field.Type);
            }
            break;
          case 28:
            if (field.Type == TType.I32) {
              TipoSanguineo = (TipoSanguineoThrift)iprot.ReadI32();
            } else { 
              TProtocolUtil.Skip(iprot, field.Type);
            }
            break;
          case 29:
            if (field.Type == TType.String) {
              CboNumero = iprot.ReadString();
            } else { 
              TProtocolUtil.Skip(iprot, field.Type);
            }
            break;
          default: 
            TProtocolUtil.Skip(iprot, field.Type);
            break;
        }
        iprot.ReadFieldEnd();
      }
      iprot.ReadStructEnd();
    }

    public void Write(TProtocol oprot) {
      TStruct struc = new TStruct("CidadaoTransportThrift");
      oprot.WriteStructBegin(struc);
      TField field = new TField();
      if (__isset.naoPossuiCns) {
        field.Name = "naoPossuiCns";
        field.Type = TType.Bool;
        field.ID = 1;
        oprot.WriteFieldBegin(field);
        oprot.WriteBool(NaoPossuiCns);
        oprot.WriteFieldEnd();
      }
      if (Cns != null && __isset.cns) {
        field.Name = "cns";
        field.Type = TType.String;
        field.ID = 2;
        oprot.WriteFieldBegin(field);
        oprot.WriteString(Cns);
        oprot.WriteFieldEnd();
      }
      if (Cpf != null && __isset.cpf) {
        field.Name = "cpf";
        field.Type = TType.String;
        field.ID = 3;
        oprot.WriteFieldBegin(field);
        oprot.WriteString(Cpf);
        oprot.WriteFieldEnd();
      }
      if (__isset.dataNascimento) {
        field.Name = "dataNascimento";
        field.Type = TType.I64;
        field.ID = 4;
        oprot.WriteFieldBegin(field);
        oprot.WriteI64(DataNascimento);
        oprot.WriteFieldEnd();
      }
      if (__isset.desconheceNomeMae) {
        field.Name = "desconheceNomeMae";
        field.Type = TType.Bool;
        field.ID = 5;
        oprot.WriteFieldBegin(field);
        oprot.WriteBool(DesconheceNomeMae);
        oprot.WriteFieldEnd();
      }
      if (NomeMae != null && __isset.nomeMae) {
        field.Name = "nomeMae";
        field.Type = TType.String;
        field.ID = 6;
        oprot.WriteFieldBegin(field);
        oprot.WriteString(NomeMae);
        oprot.WriteFieldEnd();
      }
      if (Email != null && __isset.email) {
        field.Name = "email";
        field.Type = TType.String;
        field.ID = 7;
        oprot.WriteFieldBegin(field);
        oprot.WriteString(Email);
        oprot.WriteFieldEnd();
      }
      if (Endereco != null && __isset.endereco) {
        field.Name = "endereco";
        field.Type = TType.Struct;
        field.ID = 8;
        oprot.WriteFieldBegin(field);
        Endereco.Write(oprot);
        oprot.WriteFieldEnd();
      }
      if (__isset.escolaridadeId) {
        field.Name = "escolaridadeId";
        field.Type = TType.I64;
        field.ID = 9;
        oprot.WriteFieldBegin(field);
        oprot.WriteI64(EscolaridadeId);
        oprot.WriteFieldEnd();
      }
      if (__isset.estadoCivilId) {
        field.Name = "estadoCivilId";
        field.Type = TType.I64;
        field.ID = 10;
        oprot.WriteFieldBegin(field);
        oprot.WriteI64(EstadoCivilId);
        oprot.WriteFieldEnd();
      }
      if (__isset.estrangeiro) {
        field.Name = "estrangeiro";
        field.Type = TType.Bool;
        field.ID = 11;
        oprot.WriteFieldBegin(field);
        oprot.WriteBool(Estrangeiro);
        oprot.WriteFieldEnd();
      }
      if (__isset.etniaId) {
        field.Name = "etniaId";
        field.Type = TType.I64;
        field.ID = 12;
        oprot.WriteFieldBegin(field);
        oprot.WriteI64(EtniaId);
        oprot.WriteFieldEnd();
      }
      if (__isset.faleceu) {
        field.Name = "faleceu";
        field.Type = TType.Bool;
        field.ID = 13;
        oprot.WriteFieldBegin(field);
        oprot.WriteBool(Faleceu);
        oprot.WriteFieldEnd();
      }
      if (MunicipioNascimentoCep != null && __isset.municipioNascimentoCep) {
        field.Name = "municipioNascimentoCep";
        field.Type = TType.String;
        field.ID = 14;
        oprot.WriteFieldBegin(field);
        oprot.WriteString(MunicipioNascimentoCep);
        oprot.WriteFieldEnd();
      }
      if (MunicipioNascimentoDne != null && __isset.municipioNascimentoDne) {
        field.Name = "municipioNascimentoDne";
        field.Type = TType.String;
        field.ID = 15;
        oprot.WriteFieldBegin(field);
        oprot.WriteString(MunicipioNascimentoDne);
        oprot.WriteFieldEnd();
      }
      if (MunicipioNascimentoIbge != null && __isset.municipioNascimentoIbge) {
        field.Name = "municipioNascimentoIbge";
        field.Type = TType.String;
        field.ID = 16;
        oprot.WriteFieldBegin(field);
        oprot.WriteString(MunicipioNascimentoIbge);
        oprot.WriteFieldEnd();
      }
      if (NisPisPasep != null && __isset.nisPisPasep) {
        field.Name = "nisPisPasep";
        field.Type = TType.String;
        field.ID = 17;
        oprot.WriteFieldBegin(field);
        oprot.WriteString(NisPisPasep);
        oprot.WriteFieldEnd();
      }
      if (NomeCompleto != null && __isset.nomeCompleto) {
        field.Name = "nomeCompleto";
        field.Type = TType.String;
        field.ID = 18;
        oprot.WriteFieldBegin(field);
        oprot.WriteString(NomeCompleto);
        oprot.WriteFieldEnd();
      }
      if (NomeSocial != null && __isset.nomeSocial) {
        field.Name = "nomeSocial";
        field.Type = TType.String;
        field.ID = 19;
        oprot.WriteFieldBegin(field);
        oprot.WriteString(NomeSocial);
        oprot.WriteFieldEnd();
      }
      if (NumeroProntuario != null && __isset.numeroProntuario) {
        field.Name = "numeroProntuario";
        field.Type = TType.String;
        field.ID = 20;
        oprot.WriteFieldBegin(field);
        oprot.WriteString(NumeroProntuario);
        oprot.WriteFieldEnd();
      }
      if (NumeroProntuarioCnes != null && __isset.numeroProntuarioCnes) {
        field.Name = "numeroProntuarioCnes";
        field.Type = TType.String;
        field.ID = 22;
        oprot.WriteFieldBegin(field);
        oprot.WriteString(NumeroProntuarioCnes);
        oprot.WriteFieldEnd();
      }
      if (__isset.racaCorId) {
        field.Name = "racaCorId";
        field.Type = TType.I64;
        field.ID = 23;
        oprot.WriteFieldBegin(field);
        oprot.WriteI64(RacaCorId);
        oprot.WriteFieldEnd();
      }
      if (__isset.sexo) {
        field.Name = "sexo";
        field.Type = TType.I32;
        field.ID = 24;
        oprot.WriteFieldBegin(field);
        oprot.WriteI32((int)Sexo);
        oprot.WriteFieldEnd();
      }
      if (TelefoneCelular != null && __isset.telefoneCelular) {
        field.Name = "telefoneCelular";
        field.Type = TType.String;
        field.ID = 25;
        oprot.WriteFieldBegin(field);
        oprot.WriteString(TelefoneCelular);
        oprot.WriteFieldEnd();
      }
      if (TelefoneContato != null && __isset.telefoneContato) {
        field.Name = "telefoneContato";
        field.Type = TType.String;
        field.ID = 26;
        oprot.WriteFieldBegin(field);
        oprot.WriteString(TelefoneContato);
        oprot.WriteFieldEnd();
      }
      if (TelefoneResidencial != null && __isset.telefoneResidencial) {
        field.Name = "telefoneResidencial";
        field.Type = TType.String;
        field.ID = 27;
        oprot.WriteFieldBegin(field);
        oprot.WriteString(TelefoneResidencial);
        oprot.WriteFieldEnd();
      }
      if (__isset.tipoSanguineo) {
        field.Name = "tipoSanguineo";
        field.Type = TType.I32;
        field.ID = 28;
        oprot.WriteFieldBegin(field);
        oprot.WriteI32((int)TipoSanguineo);
        oprot.WriteFieldEnd();
      }
      if (CboNumero != null && __isset.cboNumero) {
        field.Name = "cboNumero";
        field.Type = TType.String;
        field.ID = 29;
        oprot.WriteFieldBegin(field);
        oprot.WriteString(CboNumero);
        oprot.WriteFieldEnd();
      }
      oprot.WriteFieldStop();
      oprot.WriteStructEnd();
    }

    public override string ToString() {
      StringBuilder sb = new StringBuilder("CidadaoTransportThrift(");
      sb.Append("NaoPossuiCns: ");
      sb.Append(NaoPossuiCns);
      sb.Append(",Cns: ");
      sb.Append(Cns);
      sb.Append(",Cpf: ");
      sb.Append(Cpf);
      sb.Append(",DataNascimento: ");
      sb.Append(DataNascimento);
      sb.Append(",DesconheceNomeMae: ");
      sb.Append(DesconheceNomeMae);
      sb.Append(",NomeMae: ");
      sb.Append(NomeMae);
      sb.Append(",Email: ");
      sb.Append(Email);
      sb.Append(",Endereco: ");
      sb.Append(Endereco== null ? "<null>" : Endereco.ToString());
      sb.Append(",EscolaridadeId: ");
      sb.Append(EscolaridadeId);
      sb.Append(",EstadoCivilId: ");
      sb.Append(EstadoCivilId);
      sb.Append(",Estrangeiro: ");
      sb.Append(Estrangeiro);
      sb.Append(",EtniaId: ");
      sb.Append(EtniaId);
      sb.Append(",Faleceu: ");
      sb.Append(Faleceu);
      sb.Append(",MunicipioNascimentoCep: ");
      sb.Append(MunicipioNascimentoCep);
      sb.Append(",MunicipioNascimentoDne: ");
      sb.Append(MunicipioNascimentoDne);
      sb.Append(",MunicipioNascimentoIbge: ");
      sb.Append(MunicipioNascimentoIbge);
      sb.Append(",NisPisPasep: ");
      sb.Append(NisPisPasep);
      sb.Append(",NomeCompleto: ");
      sb.Append(NomeCompleto);
      sb.Append(",NomeSocial: ");
      sb.Append(NomeSocial);
      sb.Append(",NumeroProntuario: ");
      sb.Append(NumeroProntuario);
      sb.Append(",NumeroProntuarioCnes: ");
      sb.Append(NumeroProntuarioCnes);
      sb.Append(",RacaCorId: ");
      sb.Append(RacaCorId);
      sb.Append(",Sexo: ");
      sb.Append(Sexo);
      sb.Append(",TelefoneCelular: ");
      sb.Append(TelefoneCelular);
      sb.Append(",TelefoneContato: ");
      sb.Append(TelefoneContato);
      sb.Append(",TelefoneResidencial: ");
      sb.Append(TelefoneResidencial);
      sb.Append(",TipoSanguineo: ");
      sb.Append(TipoSanguineo);
      sb.Append(",CboNumero: ");
      sb.Append(CboNumero);
      sb.Append(")");
      return sb.ToString();
    }

  }

}
