/**
 * Autogenerated by Thrift Compiler (0.9.2)
 *
 * DO NOT EDIT UNLESS YOU ARE SURE THAT YOU KNOW WHAT YOU ARE DOING
 *  @generated
 */
using System;
using System.Collections;
using System.Collections.Generic;
using System.Text;
using System.IO;
using Thrift;
using Thrift.Collections;
using System.Runtime.Serialization;
using Thrift.Protocol;
using Thrift.Transport;

namespace br.gov.saude.esusab.ras.cadastrodomiciliar
{

  #if !SILVERLIGHT
  [Serializable]
  #endif
  public partial class FamiliaRowThrift : TBase
  {
    private long _dataNascimentoResponsavel;
    private string _numeroCnsResponsavel;
    private int _numeroMembrosFamilia;
    private string _numeroProntuario;
    private long _rendaFamiliar;
    private long _resideDesde;
    private bool _stMudanca;

    public long DataNascimentoResponsavel
    {
      get
      {
        return _dataNascimentoResponsavel;
      }
      set
      {
        __isset.dataNascimentoResponsavel = true;
        this._dataNascimentoResponsavel = value;
      }
    }

    public string NumeroCnsResponsavel
    {
      get
      {
        return _numeroCnsResponsavel;
      }
      set
      {
        __isset.numeroCnsResponsavel = true;
        this._numeroCnsResponsavel = value;
      }
    }

    public int NumeroMembrosFamilia
    {
      get
      {
        return _numeroMembrosFamilia;
      }
      set
      {
        __isset.numeroMembrosFamilia = true;
        this._numeroMembrosFamilia = value;
      }
    }

    public string NumeroProntuario
    {
      get
      {
        return _numeroProntuario;
      }
      set
      {
        __isset.numeroProntuario = true;
        this._numeroProntuario = value;
      }
    }

    public long RendaFamiliar
    {
      get
      {
        return _rendaFamiliar;
      }
      set
      {
        __isset.rendaFamiliar = true;
        this._rendaFamiliar = value;
      }
    }

    public long ResideDesde
    {
      get
      {
        return _resideDesde;
      }
      set
      {
        __isset.resideDesde = true;
        this._resideDesde = value;
      }
    }

    public bool StMudanca
    {
      get
      {
        return _stMudanca;
      }
      set
      {
        __isset.stMudanca = true;
        this._stMudanca = value;
      }
    }


    public Isset __isset;
    #if !SILVERLIGHT
    [Serializable]
    #endif
    public struct Isset {
      public bool dataNascimentoResponsavel;
      public bool numeroCnsResponsavel;
      public bool numeroMembrosFamilia;
      public bool numeroProntuario;
      public bool rendaFamiliar;
      public bool resideDesde;
      public bool stMudanca;
    }

    public FamiliaRowThrift() {
    }

    public void Read (TProtocol iprot)
    {
      TField field;
      iprot.ReadStructBegin();
      while (true)
      {
        field = iprot.ReadFieldBegin();
        if (field.Type == TType.Stop) { 
          break;
        }
        switch (field.ID)
        {
          case 1:
            if (field.Type == TType.I64) {
              DataNascimentoResponsavel = iprot.ReadI64();
            } else { 
              TProtocolUtil.Skip(iprot, field.Type);
            }
            break;
          case 2:
            if (field.Type == TType.String) {
              NumeroCnsResponsavel = iprot.ReadString();
            } else { 
              TProtocolUtil.Skip(iprot, field.Type);
            }
            break;
          case 3:
            if (field.Type == TType.I32) {
              NumeroMembrosFamilia = iprot.ReadI32();
            } else { 
              TProtocolUtil.Skip(iprot, field.Type);
            }
            break;
          case 4:
            if (field.Type == TType.String) {
              NumeroProntuario = iprot.ReadString();
            } else { 
              TProtocolUtil.Skip(iprot, field.Type);
            }
            break;
          case 5:
            if (field.Type == TType.I64) {
              RendaFamiliar = iprot.ReadI64();
            } else { 
              TProtocolUtil.Skip(iprot, field.Type);
            }
            break;
          case 6:
            if (field.Type == TType.I64) {
              ResideDesde = iprot.ReadI64();
            } else { 
              TProtocolUtil.Skip(iprot, field.Type);
            }
            break;
          case 7:
            if (field.Type == TType.Bool) {
              StMudanca = iprot.ReadBool();
            } else { 
              TProtocolUtil.Skip(iprot, field.Type);
            }
            break;
          default: 
            TProtocolUtil.Skip(iprot, field.Type);
            break;
        }
        iprot.ReadFieldEnd();
      }
      iprot.ReadStructEnd();
    }

    public void Write(TProtocol oprot) {
      TStruct struc = new TStruct("FamiliaRowThrift");
      oprot.WriteStructBegin(struc);
      TField field = new TField();
      if (__isset.dataNascimentoResponsavel) {
        field.Name = "dataNascimentoResponsavel";
        field.Type = TType.I64;
        field.ID = 1;
        oprot.WriteFieldBegin(field);
        oprot.WriteI64(DataNascimentoResponsavel);
        oprot.WriteFieldEnd();
      }
      if (NumeroCnsResponsavel != null && __isset.numeroCnsResponsavel) {
        field.Name = "numeroCnsResponsavel";
        field.Type = TType.String;
        field.ID = 2;
        oprot.WriteFieldBegin(field);
        oprot.WriteString(NumeroCnsResponsavel);
        oprot.WriteFieldEnd();
      }
      if (__isset.numeroMembrosFamilia) {
        field.Name = "numeroMembrosFamilia";
        field.Type = TType.I32;
        field.ID = 3;
        oprot.WriteFieldBegin(field);
        oprot.WriteI32(NumeroMembrosFamilia);
        oprot.WriteFieldEnd();
      }
      if (NumeroProntuario != null && __isset.numeroProntuario) {
        field.Name = "numeroProntuario";
        field.Type = TType.String;
        field.ID = 4;
        oprot.WriteFieldBegin(field);
        oprot.WriteString(NumeroProntuario);
        oprot.WriteFieldEnd();
      }
      if (__isset.rendaFamiliar) {
        field.Name = "rendaFamiliar";
        field.Type = TType.I64;
        field.ID = 5;
        oprot.WriteFieldBegin(field);
        oprot.WriteI64(RendaFamiliar);
        oprot.WriteFieldEnd();
      }
      if (__isset.resideDesde) {
        field.Name = "resideDesde";
        field.Type = TType.I64;
        field.ID = 6;
        oprot.WriteFieldBegin(field);
        oprot.WriteI64(ResideDesde);
        oprot.WriteFieldEnd();
      }
      if (__isset.stMudanca) {
        field.Name = "stMudanca";
        field.Type = TType.Bool;
        field.ID = 7;
        oprot.WriteFieldBegin(field);
        oprot.WriteBool(StMudanca);
        oprot.WriteFieldEnd();
      }
      oprot.WriteFieldStop();
      oprot.WriteStructEnd();
    }

    public override string ToString() {
      StringBuilder __sb = new StringBuilder("FamiliaRowThrift(");
      bool __first = true;
      if (__isset.dataNascimentoResponsavel) {
        if(!__first) { __sb.Append(", "); }
        __first = false;
        __sb.Append("DataNascimentoResponsavel: ");
        __sb.Append(DataNascimentoResponsavel);
      }
      if (NumeroCnsResponsavel != null && __isset.numeroCnsResponsavel) {
        if(!__first) { __sb.Append(", "); }
        __first = false;
        __sb.Append("NumeroCnsResponsavel: ");
        __sb.Append(NumeroCnsResponsavel);
      }
      if (__isset.numeroMembrosFamilia) {
        if(!__first) { __sb.Append(", "); }
        __first = false;
        __sb.Append("NumeroMembrosFamilia: ");
        __sb.Append(NumeroMembrosFamilia);
      }
      if (NumeroProntuario != null && __isset.numeroProntuario) {
        if(!__first) { __sb.Append(", "); }
        __first = false;
        __sb.Append("NumeroProntuario: ");
        __sb.Append(NumeroProntuario);
      }
      if (__isset.rendaFamiliar) {
        if(!__first) { __sb.Append(", "); }
        __first = false;
        __sb.Append("RendaFamiliar: ");
        __sb.Append(RendaFamiliar);
      }
      if (__isset.resideDesde) {
        if(!__first) { __sb.Append(", "); }
        __first = false;
        __sb.Append("ResideDesde: ");
        __sb.Append(ResideDesde);
      }
      if (__isset.stMudanca) {
        if(!__first) { __sb.Append(", "); }
        __first = false;
        __sb.Append("StMudanca: ");
        __sb.Append(StMudanca);
      }
      __sb.Append(")");
      return __sb.ToString();
    }

  }

}
