/**
 * Autogenerated by Thrift Compiler (0.9.2)
 *
 * DO NOT EDIT UNLESS YOU ARE SURE THAT YOU KNOW WHAT YOU ARE DOING
 *  @generated
 */
using System;
using System.Collections;
using System.Collections.Generic;
using System.Text;
using System.IO;
using Thrift;
using Thrift.Collections;
using System.Runtime.Serialization;
using Thrift.Protocol;
using Thrift.Transport;

namespace br.gov.saude.esusab.ras.cadastroindividual
{

  #if !SILVERLIGHT
  [Serializable]
  #endif
  public partial class IdentificacaoUsuarioCidadaoThrift : TBase
  {
    private string _nomeSocial;
    private string _codigoIbgeMunicipioNascimento;
    private long _dataNascimentoCidadao;
    private bool _desconheceNomeMae;
    private string _emailCidadao;
    private long _nacionalidadeCidadao;
    private string _nomeCidadao;
    private string _nomeMaeCidadao;
    private string _cnsCidadao;
    private string _cnsResponsavelFamiliar;
    private string _telefoneCelular;
    private string _numeroNisPisPasep;
    private long _paisNascimento;
    private long _racaCorCidadao;
    private long _sexoCidadao;
    private bool _statusEhResponsavel;
    private long _etnia;
    private string _nomePaiCidadao;
    private bool _desconheceNomePai;
    private long _dtNaturalizacao;
    private string _portariaNaturalizacao;
    private long _dtEntradaBrasil;
    private string _microArea;
    private bool _stForaArea;

    public string NomeSocial
    {
      get
      {
        return _nomeSocial;
      }
      set
      {
        __isset.nomeSocial = true;
        this._nomeSocial = value;
      }
    }

    public string CodigoIbgeMunicipioNascimento
    {
      get
      {
        return _codigoIbgeMunicipioNascimento;
      }
      set
      {
        __isset.codigoIbgeMunicipioNascimento = true;
        this._codigoIbgeMunicipioNascimento = value;
      }
    }

    public long DataNascimentoCidadao
    {
      get
      {
        return _dataNascimentoCidadao;
      }
      set
      {
        __isset.dataNascimentoCidadao = true;
        this._dataNascimentoCidadao = value;
      }
    }

    public bool DesconheceNomeMae
    {
      get
      {
        return _desconheceNomeMae;
      }
      set
      {
        __isset.desconheceNomeMae = true;
        this._desconheceNomeMae = value;
      }
    }

    public string EmailCidadao
    {
      get
      {
        return _emailCidadao;
      }
      set
      {
        __isset.emailCidadao = true;
        this._emailCidadao = value;
      }
    }

    public long NacionalidadeCidadao
    {
      get
      {
        return _nacionalidadeCidadao;
      }
      set
      {
        __isset.nacionalidadeCidadao = true;
        this._nacionalidadeCidadao = value;
      }
    }

    public string NomeCidadao
    {
      get
      {
        return _nomeCidadao;
      }
      set
      {
        __isset.nomeCidadao = true;
        this._nomeCidadao = value;
      }
    }

    public string NomeMaeCidadao
    {
      get
      {
        return _nomeMaeCidadao;
      }
      set
      {
        __isset.nomeMaeCidadao = true;
        this._nomeMaeCidadao = value;
      }
    }

    public string CnsCidadao
    {
      get
      {
        return _cnsCidadao;
      }
      set
      {
        __isset.cnsCidadao = true;
        this._cnsCidadao = value;
      }
    }

    public string CnsResponsavelFamiliar
    {
      get
      {
        return _cnsResponsavelFamiliar;
      }
      set
      {
        __isset.cnsResponsavelFamiliar = true;
        this._cnsResponsavelFamiliar = value;
      }
    }

    public string TelefoneCelular
    {
      get
      {
        return _telefoneCelular;
      }
      set
      {
        __isset.telefoneCelular = true;
        this._telefoneCelular = value;
      }
    }

    public string NumeroNisPisPasep
    {
      get
      {
        return _numeroNisPisPasep;
      }
      set
      {
        __isset.numeroNisPisPasep = true;
        this._numeroNisPisPasep = value;
      }
    }

    public long PaisNascimento
    {
      get
      {
        return _paisNascimento;
      }
      set
      {
        __isset.paisNascimento = true;
        this._paisNascimento = value;
      }
    }

    public long RacaCorCidadao
    {
      get
      {
        return _racaCorCidadao;
      }
      set
      {
        __isset.racaCorCidadao = true;
        this._racaCorCidadao = value;
      }
    }

    public long SexoCidadao
    {
      get
      {
        return _sexoCidadao;
      }
      set
      {
        __isset.sexoCidadao = true;
        this._sexoCidadao = value;
      }
    }

    public bool StatusEhResponsavel
    {
      get
      {
        return _statusEhResponsavel;
      }
      set
      {
        __isset.statusEhResponsavel = true;
        this._statusEhResponsavel = value;
      }
    }

    public long Etnia
    {
      get
      {
        return _etnia;
      }
      set
      {
        __isset.etnia = true;
        this._etnia = value;
      }
    }

    public string NomePaiCidadao
    {
      get
      {
        return _nomePaiCidadao;
      }
      set
      {
        __isset.nomePaiCidadao = true;
        this._nomePaiCidadao = value;
      }
    }

    public bool DesconheceNomePai
    {
      get
      {
        return _desconheceNomePai;
      }
      set
      {
        __isset.desconheceNomePai = true;
        this._desconheceNomePai = value;
      }
    }

    public long DtNaturalizacao
    {
      get
      {
        return _dtNaturalizacao;
      }
      set
      {
        __isset.dtNaturalizacao = true;
        this._dtNaturalizacao = value;
      }
    }

    public string PortariaNaturalizacao
    {
      get
      {
        return _portariaNaturalizacao;
      }
      set
      {
        __isset.portariaNaturalizacao = true;
        this._portariaNaturalizacao = value;
      }
    }

    public long DtEntradaBrasil
    {
      get
      {
        return _dtEntradaBrasil;
      }
      set
      {
        __isset.dtEntradaBrasil = true;
        this._dtEntradaBrasil = value;
      }
    }

    public string MicroArea
    {
      get
      {
        return _microArea;
      }
      set
      {
        __isset.microArea = true;
        this._microArea = value;
      }
    }

    public bool StForaArea
    {
      get
      {
        return _stForaArea;
      }
      set
      {
        __isset.stForaArea = true;
        this._stForaArea = value;
      }
    }


    public Isset __isset;
    #if !SILVERLIGHT
    [Serializable]
    #endif
    public struct Isset {
      public bool nomeSocial;
      public bool codigoIbgeMunicipioNascimento;
      public bool dataNascimentoCidadao;
      public bool desconheceNomeMae;
      public bool emailCidadao;
      public bool nacionalidadeCidadao;
      public bool nomeCidadao;
      public bool nomeMaeCidadao;
      public bool cnsCidadao;
      public bool cnsResponsavelFamiliar;
      public bool telefoneCelular;
      public bool numeroNisPisPasep;
      public bool paisNascimento;
      public bool racaCorCidadao;
      public bool sexoCidadao;
      public bool statusEhResponsavel;
      public bool etnia;
      public bool nomePaiCidadao;
      public bool desconheceNomePai;
      public bool dtNaturalizacao;
      public bool portariaNaturalizacao;
      public bool dtEntradaBrasil;
      public bool microArea;
      public bool stForaArea;
    }

    public IdentificacaoUsuarioCidadaoThrift() {
    }

    public void Read (TProtocol iprot)
    {
      TField field;
      iprot.ReadStructBegin();
      while (true)
      {
        field = iprot.ReadFieldBegin();
        if (field.Type == TType.Stop) { 
          break;
        }
        switch (field.ID)
        {
          case 1:
            if (field.Type == TType.String) {
              NomeSocial = iprot.ReadString();
            } else { 
              TProtocolUtil.Skip(iprot, field.Type);
            }
            break;
          case 2:
            if (field.Type == TType.String) {
              CodigoIbgeMunicipioNascimento = iprot.ReadString();
            } else { 
              TProtocolUtil.Skip(iprot, field.Type);
            }
            break;
          case 3:
            if (field.Type == TType.I64) {
              DataNascimentoCidadao = iprot.ReadI64();
            } else { 
              TProtocolUtil.Skip(iprot, field.Type);
            }
            break;
          case 5:
            if (field.Type == TType.Bool) {
              DesconheceNomeMae = iprot.ReadBool();
            } else { 
              TProtocolUtil.Skip(iprot, field.Type);
            }
            break;
          case 6:
            if (field.Type == TType.String) {
              EmailCidadao = iprot.ReadString();
            } else { 
              TProtocolUtil.Skip(iprot, field.Type);
            }
            break;
          case 7:
            if (field.Type == TType.I64) {
              NacionalidadeCidadao = iprot.ReadI64();
            } else { 
              TProtocolUtil.Skip(iprot, field.Type);
            }
            break;
          case 8:
            if (field.Type == TType.String) {
              NomeCidadao = iprot.ReadString();
            } else { 
              TProtocolUtil.Skip(iprot, field.Type);
            }
            break;
          case 9:
            if (field.Type == TType.String) {
              NomeMaeCidadao = iprot.ReadString();
            } else { 
              TProtocolUtil.Skip(iprot, field.Type);
            }
            break;
          case 10:
            if (field.Type == TType.String) {
              CnsCidadao = iprot.ReadString();
            } else { 
              TProtocolUtil.Skip(iprot, field.Type);
            }
            break;
          case 11:
            if (field.Type == TType.String) {
              CnsResponsavelFamiliar = iprot.ReadString();
            } else { 
              TProtocolUtil.Skip(iprot, field.Type);
            }
            break;
          case 12:
            if (field.Type == TType.String) {
              TelefoneCelular = iprot.ReadString();
            } else { 
              TProtocolUtil.Skip(iprot, field.Type);
            }
            break;
          case 13:
            if (field.Type == TType.String) {
              NumeroNisPisPasep = iprot.ReadString();
            } else { 
              TProtocolUtil.Skip(iprot, field.Type);
            }
            break;
          case 14:
            if (field.Type == TType.I64) {
              PaisNascimento = iprot.ReadI64();
            } else { 
              TProtocolUtil.Skip(iprot, field.Type);
            }
            break;
          case 15:
            if (field.Type == TType.I64) {
              RacaCorCidadao = iprot.ReadI64();
            } else { 
              TProtocolUtil.Skip(iprot, field.Type);
            }
            break;
          case 16:
            if (field.Type == TType.I64) {
              SexoCidadao = iprot.ReadI64();
            } else { 
              TProtocolUtil.Skip(iprot, field.Type);
            }
            break;
          case 17:
            if (field.Type == TType.Bool) {
              StatusEhResponsavel = iprot.ReadBool();
            } else { 
              TProtocolUtil.Skip(iprot, field.Type);
            }
            break;
          case 18:
            if (field.Type == TType.I64) {
              Etnia = iprot.ReadI64();
            } else { 
              TProtocolUtil.Skip(iprot, field.Type);
            }
            break;
          case 19:
            if (field.Type == TType.String) {
              NomePaiCidadao = iprot.ReadString();
            } else { 
              TProtocolUtil.Skip(iprot, field.Type);
            }
            break;
          case 20:
            if (field.Type == TType.Bool) {
              DesconheceNomePai = iprot.ReadBool();
            } else { 
              TProtocolUtil.Skip(iprot, field.Type);
            }
            break;
          case 21:
            if (field.Type == TType.I64) {
              DtNaturalizacao = iprot.ReadI64();
            } else { 
              TProtocolUtil.Skip(iprot, field.Type);
            }
            break;
          case 22:
            if (field.Type == TType.String) {
              PortariaNaturalizacao = iprot.ReadString();
            } else { 
              TProtocolUtil.Skip(iprot, field.Type);
            }
            break;
          case 23:
            if (field.Type == TType.I64) {
              DtEntradaBrasil = iprot.ReadI64();
            } else { 
              TProtocolUtil.Skip(iprot, field.Type);
            }
            break;
          case 24:
            if (field.Type == TType.String) {
              MicroArea = iprot.ReadString();
            } else { 
              TProtocolUtil.Skip(iprot, field.Type);
            }
            break;
          case 25:
            if (field.Type == TType.Bool) {
              StForaArea = iprot.ReadBool();
            } else { 
              TProtocolUtil.Skip(iprot, field.Type);
            }
            break;
          default: 
            TProtocolUtil.Skip(iprot, field.Type);
            break;
        }
        iprot.ReadFieldEnd();
      }
      iprot.ReadStructEnd();
    }

    public void Write(TProtocol oprot) {
      TStruct struc = new TStruct("IdentificacaoUsuarioCidadaoThrift");
      oprot.WriteStructBegin(struc);
      TField field = new TField();
      if (NomeSocial != null && __isset.nomeSocial) {
        field.Name = "nomeSocial";
        field.Type = TType.String;
        field.ID = 1;
        oprot.WriteFieldBegin(field);
        oprot.WriteString(NomeSocial);
        oprot.WriteFieldEnd();
      }
      if (CodigoIbgeMunicipioNascimento != null && __isset.codigoIbgeMunicipioNascimento) {
        field.Name = "codigoIbgeMunicipioNascimento";
        field.Type = TType.String;
        field.ID = 2;
        oprot.WriteFieldBegin(field);
        oprot.WriteString(CodigoIbgeMunicipioNascimento);
        oprot.WriteFieldEnd();
      }
      if (__isset.dataNascimentoCidadao) {
        field.Name = "dataNascimentoCidadao";
        field.Type = TType.I64;
        field.ID = 3;
        oprot.WriteFieldBegin(field);
        oprot.WriteI64(DataNascimentoCidadao);
        oprot.WriteFieldEnd();
      }
      if (__isset.desconheceNomeMae) {
        field.Name = "desconheceNomeMae";
        field.Type = TType.Bool;
        field.ID = 5;
        oprot.WriteFieldBegin(field);
        oprot.WriteBool(DesconheceNomeMae);
        oprot.WriteFieldEnd();
      }
      if (EmailCidadao != null && __isset.emailCidadao) {
        field.Name = "emailCidadao";
        field.Type = TType.String;
        field.ID = 6;
        oprot.WriteFieldBegin(field);
        oprot.WriteString(EmailCidadao);
        oprot.WriteFieldEnd();
      }
      if (__isset.nacionalidadeCidadao) {
        field.Name = "nacionalidadeCidadao";
        field.Type = TType.I64;
        field.ID = 7;
        oprot.WriteFieldBegin(field);
        oprot.WriteI64(NacionalidadeCidadao);
        oprot.WriteFieldEnd();
      }
      if (NomeCidadao != null && __isset.nomeCidadao) {
        field.Name = "nomeCidadao";
        field.Type = TType.String;
        field.ID = 8;
        oprot.WriteFieldBegin(field);
        oprot.WriteString(NomeCidadao);
        oprot.WriteFieldEnd();
      }
      if (NomeMaeCidadao != null && __isset.nomeMaeCidadao) {
        field.Name = "nomeMaeCidadao";
        field.Type = TType.String;
        field.ID = 9;
        oprot.WriteFieldBegin(field);
        oprot.WriteString(NomeMaeCidadao);
        oprot.WriteFieldEnd();
      }
      if (CnsCidadao != null && __isset.cnsCidadao) {
        field.Name = "cnsCidadao";
        field.Type = TType.String;
        field.ID = 10;
        oprot.WriteFieldBegin(field);
        oprot.WriteString(CnsCidadao);
        oprot.WriteFieldEnd();
      }
      if (CnsResponsavelFamiliar != null && __isset.cnsResponsavelFamiliar) {
        field.Name = "cnsResponsavelFamiliar";
        field.Type = TType.String;
        field.ID = 11;
        oprot.WriteFieldBegin(field);
        oprot.WriteString(CnsResponsavelFamiliar);
        oprot.WriteFieldEnd();
      }
      if (TelefoneCelular != null && __isset.telefoneCelular) {
        field.Name = "telefoneCelular";
        field.Type = TType.String;
        field.ID = 12;
        oprot.WriteFieldBegin(field);
        oprot.WriteString(TelefoneCelular);
        oprot.WriteFieldEnd();
      }
      if (NumeroNisPisPasep != null && __isset.numeroNisPisPasep) {
        field.Name = "numeroNisPisPasep";
        field.Type = TType.String;
        field.ID = 13;
        oprot.WriteFieldBegin(field);
        oprot.WriteString(NumeroNisPisPasep);
        oprot.WriteFieldEnd();
      }
      if (__isset.paisNascimento) {
        field.Name = "paisNascimento";
        field.Type = TType.I64;
        field.ID = 14;
        oprot.WriteFieldBegin(field);
        oprot.WriteI64(PaisNascimento);
        oprot.WriteFieldEnd();
      }
      if (__isset.racaCorCidadao) {
        field.Name = "racaCorCidadao";
        field.Type = TType.I64;
        field.ID = 15;
        oprot.WriteFieldBegin(field);
        oprot.WriteI64(RacaCorCidadao);
        oprot.WriteFieldEnd();
      }
      if (__isset.sexoCidadao) {
        field.Name = "sexoCidadao";
        field.Type = TType.I64;
        field.ID = 16;
        oprot.WriteFieldBegin(field);
        oprot.WriteI64(SexoCidadao);
        oprot.WriteFieldEnd();
      }
      if (__isset.statusEhResponsavel) {
        field.Name = "statusEhResponsavel";
        field.Type = TType.Bool;
        field.ID = 17;
        oprot.WriteFieldBegin(field);
        oprot.WriteBool(StatusEhResponsavel);
        oprot.WriteFieldEnd();
      }
      if (__isset.etnia) {
        field.Name = "etnia";
        field.Type = TType.I64;
        field.ID = 18;
        oprot.WriteFieldBegin(field);
        oprot.WriteI64(Etnia);
        oprot.WriteFieldEnd();
      }
      if (NomePaiCidadao != null && __isset.nomePaiCidadao) {
        field.Name = "nomePaiCidadao";
        field.Type = TType.String;
        field.ID = 19;
        oprot.WriteFieldBegin(field);
        oprot.WriteString(NomePaiCidadao);
        oprot.WriteFieldEnd();
      }
      if (__isset.desconheceNomePai) {
        field.Name = "desconheceNomePai";
        field.Type = TType.Bool;
        field.ID = 20;
        oprot.WriteFieldBegin(field);
        oprot.WriteBool(DesconheceNomePai);
        oprot.WriteFieldEnd();
      }
      if (__isset.dtNaturalizacao) {
        field.Name = "dtNaturalizacao";
        field.Type = TType.I64;
        field.ID = 21;
        oprot.WriteFieldBegin(field);
        oprot.WriteI64(DtNaturalizacao);
        oprot.WriteFieldEnd();
      }
      if (PortariaNaturalizacao != null && __isset.portariaNaturalizacao) {
        field.Name = "portariaNaturalizacao";
        field.Type = TType.String;
        field.ID = 22;
        oprot.WriteFieldBegin(field);
        oprot.WriteString(PortariaNaturalizacao);
        oprot.WriteFieldEnd();
      }
      if (__isset.dtEntradaBrasil) {
        field.Name = "dtEntradaBrasil";
        field.Type = TType.I64;
        field.ID = 23;
        oprot.WriteFieldBegin(field);
        oprot.WriteI64(DtEntradaBrasil);
        oprot.WriteFieldEnd();
      }
      if (MicroArea != null && __isset.microArea) {
        field.Name = "microArea";
        field.Type = TType.String;
        field.ID = 24;
        oprot.WriteFieldBegin(field);
        oprot.WriteString(MicroArea);
        oprot.WriteFieldEnd();
      }
      if (__isset.stForaArea) {
        field.Name = "stForaArea";
        field.Type = TType.Bool;
        field.ID = 25;
        oprot.WriteFieldBegin(field);
        oprot.WriteBool(StForaArea);
        oprot.WriteFieldEnd();
      }
      oprot.WriteFieldStop();
      oprot.WriteStructEnd();
    }

    public override string ToString() {
      StringBuilder __sb = new StringBuilder("IdentificacaoUsuarioCidadaoThrift(");
      bool __first = true;
      if (NomeSocial != null && __isset.nomeSocial) {
        if(!__first) { __sb.Append(", "); }
        __first = false;
        __sb.Append("NomeSocial: ");
        __sb.Append(NomeSocial);
      }
      if (CodigoIbgeMunicipioNascimento != null && __isset.codigoIbgeMunicipioNascimento) {
        if(!__first) { __sb.Append(", "); }
        __first = false;
        __sb.Append("CodigoIbgeMunicipioNascimento: ");
        __sb.Append(CodigoIbgeMunicipioNascimento);
      }
      if (__isset.dataNascimentoCidadao) {
        if(!__first) { __sb.Append(", "); }
        __first = false;
        __sb.Append("DataNascimentoCidadao: ");
        __sb.Append(DataNascimentoCidadao);
      }
      if (__isset.desconheceNomeMae) {
        if(!__first) { __sb.Append(", "); }
        __first = false;
        __sb.Append("DesconheceNomeMae: ");
        __sb.Append(DesconheceNomeMae);
      }
      if (EmailCidadao != null && __isset.emailCidadao) {
        if(!__first) { __sb.Append(", "); }
        __first = false;
        __sb.Append("EmailCidadao: ");
        __sb.Append(EmailCidadao);
      }
      if (__isset.nacionalidadeCidadao) {
        if(!__first) { __sb.Append(", "); }
        __first = false;
        __sb.Append("NacionalidadeCidadao: ");
        __sb.Append(NacionalidadeCidadao);
      }
      if (NomeCidadao != null && __isset.nomeCidadao) {
        if(!__first) { __sb.Append(", "); }
        __first = false;
        __sb.Append("NomeCidadao: ");
        __sb.Append(NomeCidadao);
      }
      if (NomeMaeCidadao != null && __isset.nomeMaeCidadao) {
        if(!__first) { __sb.Append(", "); }
        __first = false;
        __sb.Append("NomeMaeCidadao: ");
        __sb.Append(NomeMaeCidadao);
      }
      if (CnsCidadao != null && __isset.cnsCidadao) {
        if(!__first) { __sb.Append(", "); }
        __first = false;
        __sb.Append("CnsCidadao: ");
        __sb.Append(CnsCidadao);
      }
      if (CnsResponsavelFamiliar != null && __isset.cnsResponsavelFamiliar) {
        if(!__first) { __sb.Append(", "); }
        __first = false;
        __sb.Append("CnsResponsavelFamiliar: ");
        __sb.Append(CnsResponsavelFamiliar);
      }
      if (TelefoneCelular != null && __isset.telefoneCelular) {
        if(!__first) { __sb.Append(", "); }
        __first = false;
        __sb.Append("TelefoneCelular: ");
        __sb.Append(TelefoneCelular);
      }
      if (NumeroNisPisPasep != null && __isset.numeroNisPisPasep) {
        if(!__first) { __sb.Append(", "); }
        __first = false;
        __sb.Append("NumeroNisPisPasep: ");
        __sb.Append(NumeroNisPisPasep);
      }
      if (__isset.paisNascimento) {
        if(!__first) { __sb.Append(", "); }
        __first = false;
        __sb.Append("PaisNascimento: ");
        __sb.Append(PaisNascimento);
      }
      if (__isset.racaCorCidadao) {
        if(!__first) { __sb.Append(", "); }
        __first = false;
        __sb.Append("RacaCorCidadao: ");
        __sb.Append(RacaCorCidadao);
      }
      if (__isset.sexoCidadao) {
        if(!__first) { __sb.Append(", "); }
        __first = false;
        __sb.Append("SexoCidadao: ");
        __sb.Append(SexoCidadao);
      }
      if (__isset.statusEhResponsavel) {
        if(!__first) { __sb.Append(", "); }
        __first = false;
        __sb.Append("StatusEhResponsavel: ");
        __sb.Append(StatusEhResponsavel);
      }
      if (__isset.etnia) {
        if(!__first) { __sb.Append(", "); }
        __first = false;
        __sb.Append("Etnia: ");
        __sb.Append(Etnia);
      }
      if (NomePaiCidadao != null && __isset.nomePaiCidadao) {
        if(!__first) { __sb.Append(", "); }
        __first = false;
        __sb.Append("NomePaiCidadao: ");
        __sb.Append(NomePaiCidadao);
      }
      if (__isset.desconheceNomePai) {
        if(!__first) { __sb.Append(", "); }
        __first = false;
        __sb.Append("DesconheceNomePai: ");
        __sb.Append(DesconheceNomePai);
      }
      if (__isset.dtNaturalizacao) {
        if(!__first) { __sb.Append(", "); }
        __first = false;
        __sb.Append("DtNaturalizacao: ");
        __sb.Append(DtNaturalizacao);
      }
      if (PortariaNaturalizacao != null && __isset.portariaNaturalizacao) {
        if(!__first) { __sb.Append(", "); }
        __first = false;
        __sb.Append("PortariaNaturalizacao: ");
        __sb.Append(PortariaNaturalizacao);
      }
      if (__isset.dtEntradaBrasil) {
        if(!__first) { __sb.Append(", "); }
        __first = false;
        __sb.Append("DtEntradaBrasil: ");
        __sb.Append(DtEntradaBrasil);
      }
      if (MicroArea != null && __isset.microArea) {
        if(!__first) { __sb.Append(", "); }
        __first = false;
        __sb.Append("MicroArea: ");
        __sb.Append(MicroArea);
      }
      if (__isset.stForaArea) {
        if(!__first) { __sb.Append(", "); }
        __first = false;
        __sb.Append("StForaArea: ");
        __sb.Append(StForaArea);
      }
      __sb.Append(")");
      return __sb.ToString();
    }

  }

}
