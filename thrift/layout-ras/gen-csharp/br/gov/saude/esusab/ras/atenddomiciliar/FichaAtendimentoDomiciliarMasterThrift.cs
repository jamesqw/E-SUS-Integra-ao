/**
 * Autogenerated by Thrift Compiler (0.9.3)
 *
 * DO NOT EDIT UNLESS YOU ARE SURE THAT YOU KNOW WHAT YOU ARE DOING
 *  @generated
 */
using System;
using System.Collections;
using System.Collections.Generic;
using System.Text;
using System.IO;
using Thrift;
using Thrift.Collections;
using System.Runtime.Serialization;
using Thrift.Protocol;
using Thrift.Transport;

namespace br.gov.saude.esusab.ras.atenddomiciliar
{

  #if !SILVERLIGHT
  [Serializable]
  #endif
  public partial class FichaAtendimentoDomiciliarMasterThrift : TBase
  {
    private int _tpCdsOrigem;
    private List<FichaAtendimentoDomiciliarChildThrift> _atendimentosDomiciliares;
    private br.gov.saude.esusab.ras.common.VariasLotacoesHeaderThrift _headerTransport;

    public string UuidFicha { get; set; }

    public int TpCdsOrigem
    {
      get
      {
        return _tpCdsOrigem;
      }
      set
      {
        __isset.tpCdsOrigem = true;
        this._tpCdsOrigem = value;
      }
    }

    public List<FichaAtendimentoDomiciliarChildThrift> AtendimentosDomiciliares
    {
      get
      {
        return _atendimentosDomiciliares;
      }
      set
      {
        __isset.atendimentosDomiciliares = true;
        this._atendimentosDomiciliares = value;
      }
    }

    public br.gov.saude.esusab.ras.common.VariasLotacoesHeaderThrift HeaderTransport
    {
      get
      {
        return _headerTransport;
      }
      set
      {
        __isset.headerTransport = true;
        this._headerTransport = value;
      }
    }


    public Isset __isset;
    #if !SILVERLIGHT
    [Serializable]
    #endif
    public struct Isset {
      public bool tpCdsOrigem;
      public bool atendimentosDomiciliares;
      public bool headerTransport;
    }

    public FichaAtendimentoDomiciliarMasterThrift() {
    }

    public FichaAtendimentoDomiciliarMasterThrift(string uuidFicha) : this() {
      this.UuidFicha = uuidFicha;
    }

    public void Read (TProtocol iprot)
    {
      iprot.IncrementRecursionDepth();
      try
      {
        bool isset_uuidFicha = false;
        TField field;
        iprot.ReadStructBegin();
        while (true)
        {
          field = iprot.ReadFieldBegin();
          if (field.Type == TType.Stop) { 
            break;
          }
          switch (field.ID)
          {
            case 1:
              if (field.Type == TType.String) {
                UuidFicha = iprot.ReadString();
                isset_uuidFicha = true;
              } else { 
                TProtocolUtil.Skip(iprot, field.Type);
              }
              break;
            case 2:
              if (field.Type == TType.I32) {
                TpCdsOrigem = iprot.ReadI32();
              } else { 
                TProtocolUtil.Skip(iprot, field.Type);
              }
              break;
            case 4:
              if (field.Type == TType.List) {
                {
                  AtendimentosDomiciliares = new List<FichaAtendimentoDomiciliarChildThrift>();
                  TList _list8 = iprot.ReadListBegin();
                  for( int _i9 = 0; _i9 < _list8.Count; ++_i9)
                  {
                    FichaAtendimentoDomiciliarChildThrift _elem10;
                    _elem10 = new FichaAtendimentoDomiciliarChildThrift();
                    _elem10.Read(iprot);
                    AtendimentosDomiciliares.Add(_elem10);
                  }
                  iprot.ReadListEnd();
                }
              } else { 
                TProtocolUtil.Skip(iprot, field.Type);
              }
              break;
            case 5:
              if (field.Type == TType.Struct) {
                HeaderTransport = new br.gov.saude.esusab.ras.common.VariasLotacoesHeaderThrift();
                HeaderTransport.Read(iprot);
              } else { 
                TProtocolUtil.Skip(iprot, field.Type);
              }
              break;
            default: 
              TProtocolUtil.Skip(iprot, field.Type);
              break;
          }
          iprot.ReadFieldEnd();
        }
        iprot.ReadStructEnd();
        if (!isset_uuidFicha)
          throw new TProtocolException(TProtocolException.INVALID_DATA);
      }
      finally
      {
        iprot.DecrementRecursionDepth();
      }
    }

    public void Write(TProtocol oprot) {
      oprot.IncrementRecursionDepth();
      try
      {
        TStruct struc = new TStruct("FichaAtendimentoDomiciliarMasterThrift");
        oprot.WriteStructBegin(struc);
        TField field = new TField();
        field.Name = "uuidFicha";
        field.Type = TType.String;
        field.ID = 1;
        oprot.WriteFieldBegin(field);
        oprot.WriteString(UuidFicha);
        oprot.WriteFieldEnd();
        if (__isset.tpCdsOrigem) {
          field.Name = "tpCdsOrigem";
          field.Type = TType.I32;
          field.ID = 2;
          oprot.WriteFieldBegin(field);
          oprot.WriteI32(TpCdsOrigem);
          oprot.WriteFieldEnd();
        }
        if (AtendimentosDomiciliares != null && __isset.atendimentosDomiciliares) {
          field.Name = "atendimentosDomiciliares";
          field.Type = TType.List;
          field.ID = 4;
          oprot.WriteFieldBegin(field);
          {
            oprot.WriteListBegin(new TList(TType.Struct, AtendimentosDomiciliares.Count));
            foreach (FichaAtendimentoDomiciliarChildThrift _iter11 in AtendimentosDomiciliares)
            {
              _iter11.Write(oprot);
            }
            oprot.WriteListEnd();
          }
          oprot.WriteFieldEnd();
        }
        if (HeaderTransport != null && __isset.headerTransport) {
          field.Name = "headerTransport";
          field.Type = TType.Struct;
          field.ID = 5;
          oprot.WriteFieldBegin(field);
          HeaderTransport.Write(oprot);
          oprot.WriteFieldEnd();
        }
        oprot.WriteFieldStop();
        oprot.WriteStructEnd();
      }
      finally
      {
        oprot.DecrementRecursionDepth();
      }
    }

    public override string ToString() {
      StringBuilder __sb = new StringBuilder("FichaAtendimentoDomiciliarMasterThrift(");
      __sb.Append(", UuidFicha: ");
      __sb.Append(UuidFicha);
      if (__isset.tpCdsOrigem) {
        __sb.Append(", TpCdsOrigem: ");
        __sb.Append(TpCdsOrigem);
      }
      if (AtendimentosDomiciliares != null && __isset.atendimentosDomiciliares) {
        __sb.Append(", AtendimentosDomiciliares: ");
        __sb.Append(AtendimentosDomiciliares);
      }
      if (HeaderTransport != null && __isset.headerTransport) {
        __sb.Append(", HeaderTransport: ");
        __sb.Append(HeaderTransport== null ? "<null>" : HeaderTransport.ToString());
      }
      __sb.Append(")");
      return __sb.ToString();
    }

  }

}
