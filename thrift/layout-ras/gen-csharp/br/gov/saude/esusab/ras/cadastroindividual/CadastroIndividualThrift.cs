/**
 * Autogenerated by Thrift Compiler (0.9.2)
 *
 * DO NOT EDIT UNLESS YOU ARE SURE THAT YOU KNOW WHAT YOU ARE DOING
 *  @generated
 */
using System;
using System.Collections;
using System.Collections.Generic;
using System.Text;
using System.IO;
using Thrift;
using Thrift.Collections;
using System.Runtime.Serialization;
using Thrift.Protocol;
using Thrift.Transport;

namespace br.gov.saude.esusab.ras.cadastroindividual
{

  #if !SILVERLIGHT
  [Serializable]
  #endif
  public partial class CadastroIndividualThrift : TBase
  {
    private CondicoesDeSaudeThrift _condicoesDeSaude;
    private EmSituacaoDeRuaThrift _emSituacaoDeRua;
    private bool _fichaAtualizada;
    private IdentificacaoUsuarioCidadaoThrift _identificacaoUsuarioCidadao;
    private InformacoesSocioDemograficasThrift _informacoesSocioDemograficas;
    private bool _statusTermoRecusaCadastroIndividualAtencaoBasica;
    private int _tpCdsOrigem;
    private string _uuidFichaOriginadora;
    private string _uuidCidadao;
    private SaidaCidadaoCadastroThrift _saidaCidadaoCadastro;
    private br.gov.saude.esusab.ras.common.UnicaLotacaoHeaderThrift _headerTransport;

    public CondicoesDeSaudeThrift CondicoesDeSaude
    {
      get
      {
        return _condicoesDeSaude;
      }
      set
      {
        __isset.condicoesDeSaude = true;
        this._condicoesDeSaude = value;
      }
    }

    public EmSituacaoDeRuaThrift EmSituacaoDeRua
    {
      get
      {
        return _emSituacaoDeRua;
      }
      set
      {
        __isset.emSituacaoDeRua = true;
        this._emSituacaoDeRua = value;
      }
    }

    public bool FichaAtualizada
    {
      get
      {
        return _fichaAtualizada;
      }
      set
      {
        __isset.fichaAtualizada = true;
        this._fichaAtualizada = value;
      }
    }

    public IdentificacaoUsuarioCidadaoThrift IdentificacaoUsuarioCidadao
    {
      get
      {
        return _identificacaoUsuarioCidadao;
      }
      set
      {
        __isset.identificacaoUsuarioCidadao = true;
        this._identificacaoUsuarioCidadao = value;
      }
    }

    public InformacoesSocioDemograficasThrift InformacoesSocioDemograficas
    {
      get
      {
        return _informacoesSocioDemograficas;
      }
      set
      {
        __isset.informacoesSocioDemograficas = true;
        this._informacoesSocioDemograficas = value;
      }
    }

    public bool StatusTermoRecusaCadastroIndividualAtencaoBasica
    {
      get
      {
        return _statusTermoRecusaCadastroIndividualAtencaoBasica;
      }
      set
      {
        __isset.statusTermoRecusaCadastroIndividualAtencaoBasica = true;
        this._statusTermoRecusaCadastroIndividualAtencaoBasica = value;
      }
    }

    public int TpCdsOrigem
    {
      get
      {
        return _tpCdsOrigem;
      }
      set
      {
        __isset.tpCdsOrigem = true;
        this._tpCdsOrigem = value;
      }
    }

    public string Uuid { get; set; }

    public string UuidFichaOriginadora
    {
      get
      {
        return _uuidFichaOriginadora;
      }
      set
      {
        __isset.uuidFichaOriginadora = true;
        this._uuidFichaOriginadora = value;
      }
    }

    public string UuidCidadao
    {
      get
      {
        return _uuidCidadao;
      }
      set
      {
        __isset.uuidCidadao = true;
        this._uuidCidadao = value;
      }
    }

    public SaidaCidadaoCadastroThrift SaidaCidadaoCadastro
    {
      get
      {
        return _saidaCidadaoCadastro;
      }
      set
      {
        __isset.saidaCidadaoCadastro = true;
        this._saidaCidadaoCadastro = value;
      }
    }

    public br.gov.saude.esusab.ras.common.UnicaLotacaoHeaderThrift HeaderTransport
    {
      get
      {
        return _headerTransport;
      }
      set
      {
        __isset.headerTransport = true;
        this._headerTransport = value;
      }
    }


    public Isset __isset;
    #if !SILVERLIGHT
    [Serializable]
    #endif
    public struct Isset {
      public bool condicoesDeSaude;
      public bool emSituacaoDeRua;
      public bool fichaAtualizada;
      public bool identificacaoUsuarioCidadao;
      public bool informacoesSocioDemograficas;
      public bool statusTermoRecusaCadastroIndividualAtencaoBasica;
      public bool tpCdsOrigem;
      public bool uuidFichaOriginadora;
      public bool uuidCidadao;
      public bool saidaCidadaoCadastro;
      public bool headerTransport;
    }

    public CadastroIndividualThrift() {
    }

    public CadastroIndividualThrift(string uuid) : this() {
      this.Uuid = uuid;
    }

    public void Read (TProtocol iprot)
    {
      bool isset_uuid = false;
      TField field;
      iprot.ReadStructBegin();
      while (true)
      {
        field = iprot.ReadFieldBegin();
        if (field.Type == TType.Stop) { 
          break;
        }
        switch (field.ID)
        {
          case 1:
            if (field.Type == TType.Struct) {
              CondicoesDeSaude = new CondicoesDeSaudeThrift();
              CondicoesDeSaude.Read(iprot);
            } else { 
              TProtocolUtil.Skip(iprot, field.Type);
            }
            break;
          case 3:
            if (field.Type == TType.Struct) {
              EmSituacaoDeRua = new EmSituacaoDeRuaThrift();
              EmSituacaoDeRua.Read(iprot);
            } else { 
              TProtocolUtil.Skip(iprot, field.Type);
            }
            break;
          case 4:
            if (field.Type == TType.Bool) {
              FichaAtualizada = iprot.ReadBool();
            } else { 
              TProtocolUtil.Skip(iprot, field.Type);
            }
            break;
          case 5:
            if (field.Type == TType.Struct) {
              IdentificacaoUsuarioCidadao = new IdentificacaoUsuarioCidadaoThrift();
              IdentificacaoUsuarioCidadao.Read(iprot);
            } else { 
              TProtocolUtil.Skip(iprot, field.Type);
            }
            break;
          case 6:
            if (field.Type == TType.Struct) {
              InformacoesSocioDemograficas = new InformacoesSocioDemograficasThrift();
              InformacoesSocioDemograficas.Read(iprot);
            } else { 
              TProtocolUtil.Skip(iprot, field.Type);
            }
            break;
          case 7:
            if (field.Type == TType.Bool) {
              StatusTermoRecusaCadastroIndividualAtencaoBasica = iprot.ReadBool();
            } else { 
              TProtocolUtil.Skip(iprot, field.Type);
            }
            break;
          case 8:
            if (field.Type == TType.I32) {
              TpCdsOrigem = iprot.ReadI32();
            } else { 
              TProtocolUtil.Skip(iprot, field.Type);
            }
            break;
          case 9:
            if (field.Type == TType.String) {
              Uuid = iprot.ReadString();
              isset_uuid = true;
            } else { 
              TProtocolUtil.Skip(iprot, field.Type);
            }
            break;
          case 10:
            if (field.Type == TType.String) {
              UuidFichaOriginadora = iprot.ReadString();
            } else { 
              TProtocolUtil.Skip(iprot, field.Type);
            }
            break;
          case 11:
            if (field.Type == TType.String) {
              UuidCidadao = iprot.ReadString();
            } else { 
              TProtocolUtil.Skip(iprot, field.Type);
            }
            break;
          case 12:
            if (field.Type == TType.Struct) {
              SaidaCidadaoCadastro = new SaidaCidadaoCadastroThrift();
              SaidaCidadaoCadastro.Read(iprot);
            } else { 
              TProtocolUtil.Skip(iprot, field.Type);
            }
            break;
          case 13:
            if (field.Type == TType.Struct) {
              HeaderTransport = new br.gov.saude.esusab.ras.common.UnicaLotacaoHeaderThrift();
              HeaderTransport.Read(iprot);
            } else { 
              TProtocolUtil.Skip(iprot, field.Type);
            }
            break;
          default: 
            TProtocolUtil.Skip(iprot, field.Type);
            break;
        }
        iprot.ReadFieldEnd();
      }
      iprot.ReadStructEnd();
      if (!isset_uuid)
        throw new TProtocolException(TProtocolException.INVALID_DATA);
    }

    public void Write(TProtocol oprot) {
      TStruct struc = new TStruct("CadastroIndividualThrift");
      oprot.WriteStructBegin(struc);
      TField field = new TField();
      if (CondicoesDeSaude != null && __isset.condicoesDeSaude) {
        field.Name = "condicoesDeSaude";
        field.Type = TType.Struct;
        field.ID = 1;
        oprot.WriteFieldBegin(field);
        CondicoesDeSaude.Write(oprot);
        oprot.WriteFieldEnd();
      }
      if (EmSituacaoDeRua != null && __isset.emSituacaoDeRua) {
        field.Name = "emSituacaoDeRua";
        field.Type = TType.Struct;
        field.ID = 3;
        oprot.WriteFieldBegin(field);
        EmSituacaoDeRua.Write(oprot);
        oprot.WriteFieldEnd();
      }
      if (__isset.fichaAtualizada) {
        field.Name = "fichaAtualizada";
        field.Type = TType.Bool;
        field.ID = 4;
        oprot.WriteFieldBegin(field);
        oprot.WriteBool(FichaAtualizada);
        oprot.WriteFieldEnd();
      }
      if (IdentificacaoUsuarioCidadao != null && __isset.identificacaoUsuarioCidadao) {
        field.Name = "identificacaoUsuarioCidadao";
        field.Type = TType.Struct;
        field.ID = 5;
        oprot.WriteFieldBegin(field);
        IdentificacaoUsuarioCidadao.Write(oprot);
        oprot.WriteFieldEnd();
      }
      if (InformacoesSocioDemograficas != null && __isset.informacoesSocioDemograficas) {
        field.Name = "informacoesSocioDemograficas";
        field.Type = TType.Struct;
        field.ID = 6;
        oprot.WriteFieldBegin(field);
        InformacoesSocioDemograficas.Write(oprot);
        oprot.WriteFieldEnd();
      }
      if (__isset.statusTermoRecusaCadastroIndividualAtencaoBasica) {
        field.Name = "statusTermoRecusaCadastroIndividualAtencaoBasica";
        field.Type = TType.Bool;
        field.ID = 7;
        oprot.WriteFieldBegin(field);
        oprot.WriteBool(StatusTermoRecusaCadastroIndividualAtencaoBasica);
        oprot.WriteFieldEnd();
      }
      if (__isset.tpCdsOrigem) {
        field.Name = "tpCdsOrigem";
        field.Type = TType.I32;
        field.ID = 8;
        oprot.WriteFieldBegin(field);
        oprot.WriteI32(TpCdsOrigem);
        oprot.WriteFieldEnd();
      }
      field.Name = "uuid";
      field.Type = TType.String;
      field.ID = 9;
      oprot.WriteFieldBegin(field);
      oprot.WriteString(Uuid);
      oprot.WriteFieldEnd();
      if (UuidFichaOriginadora != null && __isset.uuidFichaOriginadora) {
        field.Name = "uuidFichaOriginadora";
        field.Type = TType.String;
        field.ID = 10;
        oprot.WriteFieldBegin(field);
        oprot.WriteString(UuidFichaOriginadora);
        oprot.WriteFieldEnd();
      }
      if (UuidCidadao != null && __isset.uuidCidadao) {
        field.Name = "uuidCidadao";
        field.Type = TType.String;
        field.ID = 11;
        oprot.WriteFieldBegin(field);
        oprot.WriteString(UuidCidadao);
        oprot.WriteFieldEnd();
      }
      if (SaidaCidadaoCadastro != null && __isset.saidaCidadaoCadastro) {
        field.Name = "saidaCidadaoCadastro";
        field.Type = TType.Struct;
        field.ID = 12;
        oprot.WriteFieldBegin(field);
        SaidaCidadaoCadastro.Write(oprot);
        oprot.WriteFieldEnd();
      }
      if (HeaderTransport != null && __isset.headerTransport) {
        field.Name = "headerTransport";
        field.Type = TType.Struct;
        field.ID = 13;
        oprot.WriteFieldBegin(field);
        HeaderTransport.Write(oprot);
        oprot.WriteFieldEnd();
      }
      oprot.WriteFieldStop();
      oprot.WriteStructEnd();
    }

    public override string ToString() {
      StringBuilder __sb = new StringBuilder("CadastroIndividualThrift(");
      bool __first = true;
      if (CondicoesDeSaude != null && __isset.condicoesDeSaude) {
        if(!__first) { __sb.Append(", "); }
        __first = false;
        __sb.Append("CondicoesDeSaude: ");
        __sb.Append(CondicoesDeSaude== null ? "<null>" : CondicoesDeSaude.ToString());
      }
      if (EmSituacaoDeRua != null && __isset.emSituacaoDeRua) {
        if(!__first) { __sb.Append(", "); }
        __first = false;
        __sb.Append("EmSituacaoDeRua: ");
        __sb.Append(EmSituacaoDeRua== null ? "<null>" : EmSituacaoDeRua.ToString());
      }
      if (__isset.fichaAtualizada) {
        if(!__first) { __sb.Append(", "); }
        __first = false;
        __sb.Append("FichaAtualizada: ");
        __sb.Append(FichaAtualizada);
      }
      if (IdentificacaoUsuarioCidadao != null && __isset.identificacaoUsuarioCidadao) {
        if(!__first) { __sb.Append(", "); }
        __first = false;
        __sb.Append("IdentificacaoUsuarioCidadao: ");
        __sb.Append(IdentificacaoUsuarioCidadao== null ? "<null>" : IdentificacaoUsuarioCidadao.ToString());
      }
      if (InformacoesSocioDemograficas != null && __isset.informacoesSocioDemograficas) {
        if(!__first) { __sb.Append(", "); }
        __first = false;
        __sb.Append("InformacoesSocioDemograficas: ");
        __sb.Append(InformacoesSocioDemograficas== null ? "<null>" : InformacoesSocioDemograficas.ToString());
      }
      if (__isset.statusTermoRecusaCadastroIndividualAtencaoBasica) {
        if(!__first) { __sb.Append(", "); }
        __first = false;
        __sb.Append("StatusTermoRecusaCadastroIndividualAtencaoBasica: ");
        __sb.Append(StatusTermoRecusaCadastroIndividualAtencaoBasica);
      }
      if (__isset.tpCdsOrigem) {
        if(!__first) { __sb.Append(", "); }
        __first = false;
        __sb.Append("TpCdsOrigem: ");
        __sb.Append(TpCdsOrigem);
      }
      if(!__first) { __sb.Append(", "); }
      __sb.Append("Uuid: ");
      __sb.Append(Uuid);
      if (UuidFichaOriginadora != null && __isset.uuidFichaOriginadora) {
        __sb.Append(", UuidFichaOriginadora: ");
        __sb.Append(UuidFichaOriginadora);
      }
      if (UuidCidadao != null && __isset.uuidCidadao) {
        __sb.Append(", UuidCidadao: ");
        __sb.Append(UuidCidadao);
      }
      if (SaidaCidadaoCadastro != null && __isset.saidaCidadaoCadastro) {
        __sb.Append(", SaidaCidadaoCadastro: ");
        __sb.Append(SaidaCidadaoCadastro== null ? "<null>" : SaidaCidadaoCadastro.ToString());
      }
      if (HeaderTransport != null && __isset.headerTransport) {
        __sb.Append(", HeaderTransport: ");
        __sb.Append(HeaderTransport== null ? "<null>" : HeaderTransport.ToString());
      }
      __sb.Append(")");
      return __sb.ToString();
    }

  }

}
