/**
 * Autogenerated by Thrift Compiler (0.9.2)
 *
 * DO NOT EDIT UNLESS YOU ARE SURE THAT YOU KNOW WHAT YOU ARE DOING
 *  @generated
 */
using System;
using System.Collections;
using System.Collections.Generic;
using System.Text;
using System.IO;
using Thrift;
using Thrift.Collections;
using System.Runtime.Serialization;
using Thrift.Protocol;
using Thrift.Transport;

namespace br.gov.saude.esusab.ras.cadastroindividual
{

  #if !SILVERLIGHT
  [Serializable]
  #endif
  public partial class InformacoesSocioDemograficasThrift : TBase
  {
    private List<long> _deficienciasCidadao;
    private long _grauInstrucaoCidadao;
    private string _ocupacaoCodigoCbo2002;
    private long _orientacaoSexualCidadao;
    private string _povoComunidadeTradicional;
    private long _relacaoParentescoCidadao;
    private long _situacaoMercadoTrabalhoCidadao;
    private bool _statusDesejaInformarOrientacaoSexual;
    private bool _statusFrequentaBenzedeira;
    private bool _statusFrequentaEscola;
    private bool _statusMembroPovoComunidadeTradicional;
    private bool _statusParticipaGrupoComunitario;
    private bool _statusPossuiPlanoSaudePrivado;
    private bool _statusTemAlgumaDeficiencia;
    private long _identidadeGeneroCidadao;
    private bool _statusDesejaInformarIdentidadeGenero;
    private List<long> _responsavelPorCrianca;

    public List<long> DeficienciasCidadao
    {
      get
      {
        return _deficienciasCidadao;
      }
      set
      {
        __isset.deficienciasCidadao = true;
        this._deficienciasCidadao = value;
      }
    }

    public long GrauInstrucaoCidadao
    {
      get
      {
        return _grauInstrucaoCidadao;
      }
      set
      {
        __isset.grauInstrucaoCidadao = true;
        this._grauInstrucaoCidadao = value;
      }
    }

    public string OcupacaoCodigoCbo2002
    {
      get
      {
        return _ocupacaoCodigoCbo2002;
      }
      set
      {
        __isset.ocupacaoCodigoCbo2002 = true;
        this._ocupacaoCodigoCbo2002 = value;
      }
    }

    public long OrientacaoSexualCidadao
    {
      get
      {
        return _orientacaoSexualCidadao;
      }
      set
      {
        __isset.orientacaoSexualCidadao = true;
        this._orientacaoSexualCidadao = value;
      }
    }

    public string PovoComunidadeTradicional
    {
      get
      {
        return _povoComunidadeTradicional;
      }
      set
      {
        __isset.povoComunidadeTradicional = true;
        this._povoComunidadeTradicional = value;
      }
    }

    public long RelacaoParentescoCidadao
    {
      get
      {
        return _relacaoParentescoCidadao;
      }
      set
      {
        __isset.relacaoParentescoCidadao = true;
        this._relacaoParentescoCidadao = value;
      }
    }

    public long SituacaoMercadoTrabalhoCidadao
    {
      get
      {
        return _situacaoMercadoTrabalhoCidadao;
      }
      set
      {
        __isset.situacaoMercadoTrabalhoCidadao = true;
        this._situacaoMercadoTrabalhoCidadao = value;
      }
    }

    public bool StatusDesejaInformarOrientacaoSexual
    {
      get
      {
        return _statusDesejaInformarOrientacaoSexual;
      }
      set
      {
        __isset.statusDesejaInformarOrientacaoSexual = true;
        this._statusDesejaInformarOrientacaoSexual = value;
      }
    }

    public bool StatusFrequentaBenzedeira
    {
      get
      {
        return _statusFrequentaBenzedeira;
      }
      set
      {
        __isset.statusFrequentaBenzedeira = true;
        this._statusFrequentaBenzedeira = value;
      }
    }

    public bool StatusFrequentaEscola
    {
      get
      {
        return _statusFrequentaEscola;
      }
      set
      {
        __isset.statusFrequentaEscola = true;
        this._statusFrequentaEscola = value;
      }
    }

    public bool StatusMembroPovoComunidadeTradicional
    {
      get
      {
        return _statusMembroPovoComunidadeTradicional;
      }
      set
      {
        __isset.statusMembroPovoComunidadeTradicional = true;
        this._statusMembroPovoComunidadeTradicional = value;
      }
    }

    public bool StatusParticipaGrupoComunitario
    {
      get
      {
        return _statusParticipaGrupoComunitario;
      }
      set
      {
        __isset.statusParticipaGrupoComunitario = true;
        this._statusParticipaGrupoComunitario = value;
      }
    }

    public bool StatusPossuiPlanoSaudePrivado
    {
      get
      {
        return _statusPossuiPlanoSaudePrivado;
      }
      set
      {
        __isset.statusPossuiPlanoSaudePrivado = true;
        this._statusPossuiPlanoSaudePrivado = value;
      }
    }

    public bool StatusTemAlgumaDeficiencia
    {
      get
      {
        return _statusTemAlgumaDeficiencia;
      }
      set
      {
        __isset.statusTemAlgumaDeficiencia = true;
        this._statusTemAlgumaDeficiencia = value;
      }
    }

    public long IdentidadeGeneroCidadao
    {
      get
      {
        return _identidadeGeneroCidadao;
      }
      set
      {
        __isset.identidadeGeneroCidadao = true;
        this._identidadeGeneroCidadao = value;
      }
    }

    public bool StatusDesejaInformarIdentidadeGenero
    {
      get
      {
        return _statusDesejaInformarIdentidadeGenero;
      }
      set
      {
        __isset.statusDesejaInformarIdentidadeGenero = true;
        this._statusDesejaInformarIdentidadeGenero = value;
      }
    }

    public List<long> ResponsavelPorCrianca
    {
      get
      {
        return _responsavelPorCrianca;
      }
      set
      {
        __isset.responsavelPorCrianca = true;
        this._responsavelPorCrianca = value;
      }
    }


    public Isset __isset;
    #if !SILVERLIGHT
    [Serializable]
    #endif
    public struct Isset {
      public bool deficienciasCidadao;
      public bool grauInstrucaoCidadao;
      public bool ocupacaoCodigoCbo2002;
      public bool orientacaoSexualCidadao;
      public bool povoComunidadeTradicional;
      public bool relacaoParentescoCidadao;
      public bool situacaoMercadoTrabalhoCidadao;
      public bool statusDesejaInformarOrientacaoSexual;
      public bool statusFrequentaBenzedeira;
      public bool statusFrequentaEscola;
      public bool statusMembroPovoComunidadeTradicional;
      public bool statusParticipaGrupoComunitario;
      public bool statusPossuiPlanoSaudePrivado;
      public bool statusTemAlgumaDeficiencia;
      public bool identidadeGeneroCidadao;
      public bool statusDesejaInformarIdentidadeGenero;
      public bool responsavelPorCrianca;
    }

    public InformacoesSocioDemograficasThrift() {
    }

    public void Read (TProtocol iprot)
    {
      TField field;
      iprot.ReadStructBegin();
      while (true)
      {
        field = iprot.ReadFieldBegin();
        if (field.Type == TType.Stop) { 
          break;
        }
        switch (field.ID)
        {
          case 1:
            if (field.Type == TType.List) {
              {
                DeficienciasCidadao = new List<long>();
                TList _list20 = iprot.ReadListBegin();
                for( int _i21 = 0; _i21 < _list20.Count; ++_i21)
                {
                  long _elem22;
                  _elem22 = iprot.ReadI64();
                  DeficienciasCidadao.Add(_elem22);
                }
                iprot.ReadListEnd();
              }
            } else { 
              TProtocolUtil.Skip(iprot, field.Type);
            }
            break;
          case 2:
            if (field.Type == TType.I64) {
              GrauInstrucaoCidadao = iprot.ReadI64();
            } else { 
              TProtocolUtil.Skip(iprot, field.Type);
            }
            break;
          case 4:
            if (field.Type == TType.String) {
              OcupacaoCodigoCbo2002 = iprot.ReadString();
            } else { 
              TProtocolUtil.Skip(iprot, field.Type);
            }
            break;
          case 5:
            if (field.Type == TType.I64) {
              OrientacaoSexualCidadao = iprot.ReadI64();
            } else { 
              TProtocolUtil.Skip(iprot, field.Type);
            }
            break;
          case 6:
            if (field.Type == TType.String) {
              PovoComunidadeTradicional = iprot.ReadString();
            } else { 
              TProtocolUtil.Skip(iprot, field.Type);
            }
            break;
          case 7:
            if (field.Type == TType.I64) {
              RelacaoParentescoCidadao = iprot.ReadI64();
            } else { 
              TProtocolUtil.Skip(iprot, field.Type);
            }
            break;
          case 9:
            if (field.Type == TType.I64) {
              SituacaoMercadoTrabalhoCidadao = iprot.ReadI64();
            } else { 
              TProtocolUtil.Skip(iprot, field.Type);
            }
            break;
          case 10:
            if (field.Type == TType.Bool) {
              StatusDesejaInformarOrientacaoSexual = iprot.ReadBool();
            } else { 
              TProtocolUtil.Skip(iprot, field.Type);
            }
            break;
          case 11:
            if (field.Type == TType.Bool) {
              StatusFrequentaBenzedeira = iprot.ReadBool();
            } else { 
              TProtocolUtil.Skip(iprot, field.Type);
            }
            break;
          case 12:
            if (field.Type == TType.Bool) {
              StatusFrequentaEscola = iprot.ReadBool();
            } else { 
              TProtocolUtil.Skip(iprot, field.Type);
            }
            break;
          case 13:
            if (field.Type == TType.Bool) {
              StatusMembroPovoComunidadeTradicional = iprot.ReadBool();
            } else { 
              TProtocolUtil.Skip(iprot, field.Type);
            }
            break;
          case 14:
            if (field.Type == TType.Bool) {
              StatusParticipaGrupoComunitario = iprot.ReadBool();
            } else { 
              TProtocolUtil.Skip(iprot, field.Type);
            }
            break;
          case 15:
            if (field.Type == TType.Bool) {
              StatusPossuiPlanoSaudePrivado = iprot.ReadBool();
            } else { 
              TProtocolUtil.Skip(iprot, field.Type);
            }
            break;
          case 16:
            if (field.Type == TType.Bool) {
              StatusTemAlgumaDeficiencia = iprot.ReadBool();
            } else { 
              TProtocolUtil.Skip(iprot, field.Type);
            }
            break;
          case 17:
            if (field.Type == TType.I64) {
              IdentidadeGeneroCidadao = iprot.ReadI64();
            } else { 
              TProtocolUtil.Skip(iprot, field.Type);
            }
            break;
          case 18:
            if (field.Type == TType.Bool) {
              StatusDesejaInformarIdentidadeGenero = iprot.ReadBool();
            } else { 
              TProtocolUtil.Skip(iprot, field.Type);
            }
            break;
          case 19:
            if (field.Type == TType.List) {
              {
                ResponsavelPorCrianca = new List<long>();
                TList _list23 = iprot.ReadListBegin();
                for( int _i24 = 0; _i24 < _list23.Count; ++_i24)
                {
                  long _elem25;
                  _elem25 = iprot.ReadI64();
                  ResponsavelPorCrianca.Add(_elem25);
                }
                iprot.ReadListEnd();
              }
            } else { 
              TProtocolUtil.Skip(iprot, field.Type);
            }
            break;
          default: 
            TProtocolUtil.Skip(iprot, field.Type);
            break;
        }
        iprot.ReadFieldEnd();
      }
      iprot.ReadStructEnd();
    }

    public void Write(TProtocol oprot) {
      TStruct struc = new TStruct("InformacoesSocioDemograficasThrift");
      oprot.WriteStructBegin(struc);
      TField field = new TField();
      if (DeficienciasCidadao != null && __isset.deficienciasCidadao) {
        field.Name = "deficienciasCidadao";
        field.Type = TType.List;
        field.ID = 1;
        oprot.WriteFieldBegin(field);
        {
          oprot.WriteListBegin(new TList(TType.I64, DeficienciasCidadao.Count));
          foreach (long _iter26 in DeficienciasCidadao)
          {
            oprot.WriteI64(_iter26);
          }
          oprot.WriteListEnd();
        }
        oprot.WriteFieldEnd();
      }
      if (__isset.grauInstrucaoCidadao) {
        field.Name = "grauInstrucaoCidadao";
        field.Type = TType.I64;
        field.ID = 2;
        oprot.WriteFieldBegin(field);
        oprot.WriteI64(GrauInstrucaoCidadao);
        oprot.WriteFieldEnd();
      }
      if (OcupacaoCodigoCbo2002 != null && __isset.ocupacaoCodigoCbo2002) {
        field.Name = "ocupacaoCodigoCbo2002";
        field.Type = TType.String;
        field.ID = 4;
        oprot.WriteFieldBegin(field);
        oprot.WriteString(OcupacaoCodigoCbo2002);
        oprot.WriteFieldEnd();
      }
      if (__isset.orientacaoSexualCidadao) {
        field.Name = "orientacaoSexualCidadao";
        field.Type = TType.I64;
        field.ID = 5;
        oprot.WriteFieldBegin(field);
        oprot.WriteI64(OrientacaoSexualCidadao);
        oprot.WriteFieldEnd();
      }
      if (PovoComunidadeTradicional != null && __isset.povoComunidadeTradicional) {
        field.Name = "povoComunidadeTradicional";
        field.Type = TType.String;
        field.ID = 6;
        oprot.WriteFieldBegin(field);
        oprot.WriteString(PovoComunidadeTradicional);
        oprot.WriteFieldEnd();
      }
      if (__isset.relacaoParentescoCidadao) {
        field.Name = "relacaoParentescoCidadao";
        field.Type = TType.I64;
        field.ID = 7;
        oprot.WriteFieldBegin(field);
        oprot.WriteI64(RelacaoParentescoCidadao);
        oprot.WriteFieldEnd();
      }
      if (__isset.situacaoMercadoTrabalhoCidadao) {
        field.Name = "situacaoMercadoTrabalhoCidadao";
        field.Type = TType.I64;
        field.ID = 9;
        oprot.WriteFieldBegin(field);
        oprot.WriteI64(SituacaoMercadoTrabalhoCidadao);
        oprot.WriteFieldEnd();
      }
      if (__isset.statusDesejaInformarOrientacaoSexual) {
        field.Name = "statusDesejaInformarOrientacaoSexual";
        field.Type = TType.Bool;
        field.ID = 10;
        oprot.WriteFieldBegin(field);
        oprot.WriteBool(StatusDesejaInformarOrientacaoSexual);
        oprot.WriteFieldEnd();
      }
      if (__isset.statusFrequentaBenzedeira) {
        field.Name = "statusFrequentaBenzedeira";
        field.Type = TType.Bool;
        field.ID = 11;
        oprot.WriteFieldBegin(field);
        oprot.WriteBool(StatusFrequentaBenzedeira);
        oprot.WriteFieldEnd();
      }
      if (__isset.statusFrequentaEscola) {
        field.Name = "statusFrequentaEscola";
        field.Type = TType.Bool;
        field.ID = 12;
        oprot.WriteFieldBegin(field);
        oprot.WriteBool(StatusFrequentaEscola);
        oprot.WriteFieldEnd();
      }
      if (__isset.statusMembroPovoComunidadeTradicional) {
        field.Name = "statusMembroPovoComunidadeTradicional";
        field.Type = TType.Bool;
        field.ID = 13;
        oprot.WriteFieldBegin(field);
        oprot.WriteBool(StatusMembroPovoComunidadeTradicional);
        oprot.WriteFieldEnd();
      }
      if (__isset.statusParticipaGrupoComunitario) {
        field.Name = "statusParticipaGrupoComunitario";
        field.Type = TType.Bool;
        field.ID = 14;
        oprot.WriteFieldBegin(field);
        oprot.WriteBool(StatusParticipaGrupoComunitario);
        oprot.WriteFieldEnd();
      }
      if (__isset.statusPossuiPlanoSaudePrivado) {
        field.Name = "statusPossuiPlanoSaudePrivado";
        field.Type = TType.Bool;
        field.ID = 15;
        oprot.WriteFieldBegin(field);
        oprot.WriteBool(StatusPossuiPlanoSaudePrivado);
        oprot.WriteFieldEnd();
      }
      if (__isset.statusTemAlgumaDeficiencia) {
        field.Name = "statusTemAlgumaDeficiencia";
        field.Type = TType.Bool;
        field.ID = 16;
        oprot.WriteFieldBegin(field);
        oprot.WriteBool(StatusTemAlgumaDeficiencia);
        oprot.WriteFieldEnd();
      }
      if (__isset.identidadeGeneroCidadao) {
        field.Name = "identidadeGeneroCidadao";
        field.Type = TType.I64;
        field.ID = 17;
        oprot.WriteFieldBegin(field);
        oprot.WriteI64(IdentidadeGeneroCidadao);
        oprot.WriteFieldEnd();
      }
      if (__isset.statusDesejaInformarIdentidadeGenero) {
        field.Name = "statusDesejaInformarIdentidadeGenero";
        field.Type = TType.Bool;
        field.ID = 18;
        oprot.WriteFieldBegin(field);
        oprot.WriteBool(StatusDesejaInformarIdentidadeGenero);
        oprot.WriteFieldEnd();
      }
      if (ResponsavelPorCrianca != null && __isset.responsavelPorCrianca) {
        field.Name = "responsavelPorCrianca";
        field.Type = TType.List;
        field.ID = 19;
        oprot.WriteFieldBegin(field);
        {
          oprot.WriteListBegin(new TList(TType.I64, ResponsavelPorCrianca.Count));
          foreach (long _iter27 in ResponsavelPorCrianca)
          {
            oprot.WriteI64(_iter27);
          }
          oprot.WriteListEnd();
        }
        oprot.WriteFieldEnd();
      }
      oprot.WriteFieldStop();
      oprot.WriteStructEnd();
    }

    public override string ToString() {
      StringBuilder __sb = new StringBuilder("InformacoesSocioDemograficasThrift(");
      bool __first = true;
      if (DeficienciasCidadao != null && __isset.deficienciasCidadao) {
        if(!__first) { __sb.Append(", "); }
        __first = false;
        __sb.Append("DeficienciasCidadao: ");
        __sb.Append(DeficienciasCidadao);
      }
      if (__isset.grauInstrucaoCidadao) {
        if(!__first) { __sb.Append(", "); }
        __first = false;
        __sb.Append("GrauInstrucaoCidadao: ");
        __sb.Append(GrauInstrucaoCidadao);
      }
      if (OcupacaoCodigoCbo2002 != null && __isset.ocupacaoCodigoCbo2002) {
        if(!__first) { __sb.Append(", "); }
        __first = false;
        __sb.Append("OcupacaoCodigoCbo2002: ");
        __sb.Append(OcupacaoCodigoCbo2002);
      }
      if (__isset.orientacaoSexualCidadao) {
        if(!__first) { __sb.Append(", "); }
        __first = false;
        __sb.Append("OrientacaoSexualCidadao: ");
        __sb.Append(OrientacaoSexualCidadao);
      }
      if (PovoComunidadeTradicional != null && __isset.povoComunidadeTradicional) {
        if(!__first) { __sb.Append(", "); }
        __first = false;
        __sb.Append("PovoComunidadeTradicional: ");
        __sb.Append(PovoComunidadeTradicional);
      }
      if (__isset.relacaoParentescoCidadao) {
        if(!__first) { __sb.Append(", "); }
        __first = false;
        __sb.Append("RelacaoParentescoCidadao: ");
        __sb.Append(RelacaoParentescoCidadao);
      }
      if (__isset.situacaoMercadoTrabalhoCidadao) {
        if(!__first) { __sb.Append(", "); }
        __first = false;
        __sb.Append("SituacaoMercadoTrabalhoCidadao: ");
        __sb.Append(SituacaoMercadoTrabalhoCidadao);
      }
      if (__isset.statusDesejaInformarOrientacaoSexual) {
        if(!__first) { __sb.Append(", "); }
        __first = false;
        __sb.Append("StatusDesejaInformarOrientacaoSexual: ");
        __sb.Append(StatusDesejaInformarOrientacaoSexual);
      }
      if (__isset.statusFrequentaBenzedeira) {
        if(!__first) { __sb.Append(", "); }
        __first = false;
        __sb.Append("StatusFrequentaBenzedeira: ");
        __sb.Append(StatusFrequentaBenzedeira);
      }
      if (__isset.statusFrequentaEscola) {
        if(!__first) { __sb.Append(", "); }
        __first = false;
        __sb.Append("StatusFrequentaEscola: ");
        __sb.Append(StatusFrequentaEscola);
      }
      if (__isset.statusMembroPovoComunidadeTradicional) {
        if(!__first) { __sb.Append(", "); }
        __first = false;
        __sb.Append("StatusMembroPovoComunidadeTradicional: ");
        __sb.Append(StatusMembroPovoComunidadeTradicional);
      }
      if (__isset.statusParticipaGrupoComunitario) {
        if(!__first) { __sb.Append(", "); }
        __first = false;
        __sb.Append("StatusParticipaGrupoComunitario: ");
        __sb.Append(StatusParticipaGrupoComunitario);
      }
      if (__isset.statusPossuiPlanoSaudePrivado) {
        if(!__first) { __sb.Append(", "); }
        __first = false;
        __sb.Append("StatusPossuiPlanoSaudePrivado: ");
        __sb.Append(StatusPossuiPlanoSaudePrivado);
      }
      if (__isset.statusTemAlgumaDeficiencia) {
        if(!__first) { __sb.Append(", "); }
        __first = false;
        __sb.Append("StatusTemAlgumaDeficiencia: ");
        __sb.Append(StatusTemAlgumaDeficiencia);
      }
      if (__isset.identidadeGeneroCidadao) {
        if(!__first) { __sb.Append(", "); }
        __first = false;
        __sb.Append("IdentidadeGeneroCidadao: ");
        __sb.Append(IdentidadeGeneroCidadao);
      }
      if (__isset.statusDesejaInformarIdentidadeGenero) {
        if(!__first) { __sb.Append(", "); }
        __first = false;
        __sb.Append("StatusDesejaInformarIdentidadeGenero: ");
        __sb.Append(StatusDesejaInformarIdentidadeGenero);
      }
      if (ResponsavelPorCrianca != null && __isset.responsavelPorCrianca) {
        if(!__first) { __sb.Append(", "); }
        __first = false;
        __sb.Append("ResponsavelPorCrianca: ");
        __sb.Append(ResponsavelPorCrianca);
      }
      __sb.Append(")");
      return __sb.ToString();
    }

  }

}
