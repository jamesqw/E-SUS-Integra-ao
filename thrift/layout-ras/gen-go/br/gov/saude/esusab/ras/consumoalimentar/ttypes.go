// Autogenerated by Thrift Compiler (0.9.2)
// DO NOT EDIT UNLESS YOU ARE SURE THAT YOU KNOW WHAT YOU ARE DOING

package consumoalimentar

import (
	"br/gov/saude/esusab/ras/common"
	"bytes"
	"fmt"
	"git.apache.org/thrift.git/lib/go/thrift"
)

// (needed to ensure safety because of naive import list construction.)
var _ = thrift.ZERO
var _ = fmt.Printf
var _ = bytes.Equal

var _ = common.GoUnusedProtection__
var GoUnusedProtection__ int

type PerguntaCriancasMenoresSeisMesesEnumThrift int64

const (
	PerguntaCriancasMenoresSeisMesesEnumThrift_A_CRIANCA_ONTEM_TOMOU_LEITE_DO_PEITO PerguntaCriancasMenoresSeisMesesEnumThrift = 1
	PerguntaCriancasMenoresSeisMesesEnumThrift_MINGAU                               PerguntaCriancasMenoresSeisMesesEnumThrift = 3
	PerguntaCriancasMenoresSeisMesesEnumThrift_AGUA_CHA                             PerguntaCriancasMenoresSeisMesesEnumThrift = 4
	PerguntaCriancasMenoresSeisMesesEnumThrift_LEITE_VACA                           PerguntaCriancasMenoresSeisMesesEnumThrift = 5
	PerguntaCriancasMenoresSeisMesesEnumThrift_FORMULA_INFANTIL                     PerguntaCriancasMenoresSeisMesesEnumThrift = 6
	PerguntaCriancasMenoresSeisMesesEnumThrift_SUCO_FRUTA                           PerguntaCriancasMenoresSeisMesesEnumThrift = 7
	PerguntaCriancasMenoresSeisMesesEnumThrift_FRUTA                                PerguntaCriancasMenoresSeisMesesEnumThrift = 8
	PerguntaCriancasMenoresSeisMesesEnumThrift_COMIDA_DE_SAL                        PerguntaCriancasMenoresSeisMesesEnumThrift = 9
	PerguntaCriancasMenoresSeisMesesEnumThrift_OUTROS_ALIMENTOS_BEBIDAS             PerguntaCriancasMenoresSeisMesesEnumThrift = 10
)

func (p PerguntaCriancasMenoresSeisMesesEnumThrift) String() string {
	switch p {
	case PerguntaCriancasMenoresSeisMesesEnumThrift_A_CRIANCA_ONTEM_TOMOU_LEITE_DO_PEITO:
		return "PerguntaCriancasMenoresSeisMesesEnumThrift_A_CRIANCA_ONTEM_TOMOU_LEITE_DO_PEITO"
	case PerguntaCriancasMenoresSeisMesesEnumThrift_MINGAU:
		return "PerguntaCriancasMenoresSeisMesesEnumThrift_MINGAU"
	case PerguntaCriancasMenoresSeisMesesEnumThrift_AGUA_CHA:
		return "PerguntaCriancasMenoresSeisMesesEnumThrift_AGUA_CHA"
	case PerguntaCriancasMenoresSeisMesesEnumThrift_LEITE_VACA:
		return "PerguntaCriancasMenoresSeisMesesEnumThrift_LEITE_VACA"
	case PerguntaCriancasMenoresSeisMesesEnumThrift_FORMULA_INFANTIL:
		return "PerguntaCriancasMenoresSeisMesesEnumThrift_FORMULA_INFANTIL"
	case PerguntaCriancasMenoresSeisMesesEnumThrift_SUCO_FRUTA:
		return "PerguntaCriancasMenoresSeisMesesEnumThrift_SUCO_FRUTA"
	case PerguntaCriancasMenoresSeisMesesEnumThrift_FRUTA:
		return "PerguntaCriancasMenoresSeisMesesEnumThrift_FRUTA"
	case PerguntaCriancasMenoresSeisMesesEnumThrift_COMIDA_DE_SAL:
		return "PerguntaCriancasMenoresSeisMesesEnumThrift_COMIDA_DE_SAL"
	case PerguntaCriancasMenoresSeisMesesEnumThrift_OUTROS_ALIMENTOS_BEBIDAS:
		return "PerguntaCriancasMenoresSeisMesesEnumThrift_OUTROS_ALIMENTOS_BEBIDAS"
	}
	return "<UNSET>"
}

func PerguntaCriancasMenoresSeisMesesEnumThriftFromString(s string) (PerguntaCriancasMenoresSeisMesesEnumThrift, error) {
	switch s {
	case "PerguntaCriancasMenoresSeisMesesEnumThrift_A_CRIANCA_ONTEM_TOMOU_LEITE_DO_PEITO":
		return PerguntaCriancasMenoresSeisMesesEnumThrift_A_CRIANCA_ONTEM_TOMOU_LEITE_DO_PEITO, nil
	case "PerguntaCriancasMenoresSeisMesesEnumThrift_MINGAU":
		return PerguntaCriancasMenoresSeisMesesEnumThrift_MINGAU, nil
	case "PerguntaCriancasMenoresSeisMesesEnumThrift_AGUA_CHA":
		return PerguntaCriancasMenoresSeisMesesEnumThrift_AGUA_CHA, nil
	case "PerguntaCriancasMenoresSeisMesesEnumThrift_LEITE_VACA":
		return PerguntaCriancasMenoresSeisMesesEnumThrift_LEITE_VACA, nil
	case "PerguntaCriancasMenoresSeisMesesEnumThrift_FORMULA_INFANTIL":
		return PerguntaCriancasMenoresSeisMesesEnumThrift_FORMULA_INFANTIL, nil
	case "PerguntaCriancasMenoresSeisMesesEnumThrift_SUCO_FRUTA":
		return PerguntaCriancasMenoresSeisMesesEnumThrift_SUCO_FRUTA, nil
	case "PerguntaCriancasMenoresSeisMesesEnumThrift_FRUTA":
		return PerguntaCriancasMenoresSeisMesesEnumThrift_FRUTA, nil
	case "PerguntaCriancasMenoresSeisMesesEnumThrift_COMIDA_DE_SAL":
		return PerguntaCriancasMenoresSeisMesesEnumThrift_COMIDA_DE_SAL, nil
	case "PerguntaCriancasMenoresSeisMesesEnumThrift_OUTROS_ALIMENTOS_BEBIDAS":
		return PerguntaCriancasMenoresSeisMesesEnumThrift_OUTROS_ALIMENTOS_BEBIDAS, nil
	}
	return PerguntaCriancasMenoresSeisMesesEnumThrift(0), fmt.Errorf("not a valid PerguntaCriancasMenoresSeisMesesEnumThrift string")
}

func PerguntaCriancasMenoresSeisMesesEnumThriftPtr(v PerguntaCriancasMenoresSeisMesesEnumThrift) *PerguntaCriancasMenoresSeisMesesEnumThrift {
	return &v
}

type PerguntaCriancasDeSeisVinteTresMesesEnumThrift int64

const (
	PerguntaCriancasDeSeisVinteTresMesesEnumThrift_A_CRIANCA_ONTEM_TOMOU_LEITE_PEITO                   PerguntaCriancasDeSeisVinteTresMesesEnumThrift = 21
	PerguntaCriancasDeSeisVinteTresMesesEnumThrift_ONTEM_A_CRIANCA_COMEU_FRUTA_INTEIRA_PEDACO_AMASSADO PerguntaCriancasDeSeisVinteTresMesesEnumThrift = 22
	PerguntaCriancasDeSeisVinteTresMesesEnumThrift_SE_SIM_QUANTAS_VEZES                                PerguntaCriancasDeSeisVinteTresMesesEnumThrift = 23
	PerguntaCriancasDeSeisVinteTresMesesEnumThrift_ONTEM_A_CRIANCA_COMEU_COMIDA_DE_SAL                 PerguntaCriancasDeSeisVinteTresMesesEnumThrift = 24
	PerguntaCriancasDeSeisVinteTresMesesEnumThrift_SE_COMEU_COMIDA_DE_SAL_QUANTAS_VEZES                PerguntaCriancasDeSeisVinteTresMesesEnumThrift = 25
	PerguntaCriancasDeSeisVinteTresMesesEnumThrift_SE_SIM_ESSA_COMIDA_FOI_OFERECIDA                    PerguntaCriancasDeSeisVinteTresMesesEnumThrift = 26
	PerguntaCriancasDeSeisVinteTresMesesEnumThrift_OUTRO_LEITE_QUE_NAO_LEITE_DO_PEITO                  PerguntaCriancasDeSeisVinteTresMesesEnumThrift = 28
	PerguntaCriancasDeSeisVinteTresMesesEnumThrift_MINGAU_COM_LEITE                                    PerguntaCriancasDeSeisVinteTresMesesEnumThrift = 29
	PerguntaCriancasDeSeisVinteTresMesesEnumThrift_IOGURTE                                             PerguntaCriancasDeSeisVinteTresMesesEnumThrift = 30
	PerguntaCriancasDeSeisVinteTresMesesEnumThrift_LEGUMES                                             PerguntaCriancasDeSeisVinteTresMesesEnumThrift = 31
	PerguntaCriancasDeSeisVinteTresMesesEnumThrift_VEGETAL_OU_FRUTAS_COR_ALARANJADA_OU_FOLHAS_ESCURAS  PerguntaCriancasDeSeisVinteTresMesesEnumThrift = 32
	PerguntaCriancasDeSeisVinteTresMesesEnumThrift_VERDURA_DE_FOLHA                                    PerguntaCriancasDeSeisVinteTresMesesEnumThrift = 33
	PerguntaCriancasDeSeisVinteTresMesesEnumThrift_CARNE                                               PerguntaCriancasDeSeisVinteTresMesesEnumThrift = 34
	PerguntaCriancasDeSeisVinteTresMesesEnumThrift_FIGADO                                              PerguntaCriancasDeSeisVinteTresMesesEnumThrift = 35
	PerguntaCriancasDeSeisVinteTresMesesEnumThrift_FEIJAO                                              PerguntaCriancasDeSeisVinteTresMesesEnumThrift = 36
	PerguntaCriancasDeSeisVinteTresMesesEnumThrift_ARROZ_BATATA_INHAME_MANDIOCA_FARINHA_MACARRAO       PerguntaCriancasDeSeisVinteTresMesesEnumThrift = 37
	PerguntaCriancasDeSeisVinteTresMesesEnumThrift_HAMBURGUER_E_OU_EMBUTIDOS                           PerguntaCriancasDeSeisVinteTresMesesEnumThrift = 38
	PerguntaCriancasDeSeisVinteTresMesesEnumThrift_BEBIDAS_ADOCADAS                                    PerguntaCriancasDeSeisVinteTresMesesEnumThrift = 39
	PerguntaCriancasDeSeisVinteTresMesesEnumThrift_MACARRAO_INSTANTANEO_SALGADINHOS_BISCOITOS          PerguntaCriancasDeSeisVinteTresMesesEnumThrift = 40
	PerguntaCriancasDeSeisVinteTresMesesEnumThrift_BISCOITO_RECHEADO_DOCES_OU_GULOSEIMAS               PerguntaCriancasDeSeisVinteTresMesesEnumThrift = 41
)

func (p PerguntaCriancasDeSeisVinteTresMesesEnumThrift) String() string {
	switch p {
	case PerguntaCriancasDeSeisVinteTresMesesEnumThrift_A_CRIANCA_ONTEM_TOMOU_LEITE_PEITO:
		return "PerguntaCriancasDeSeisVinteTresMesesEnumThrift_A_CRIANCA_ONTEM_TOMOU_LEITE_PEITO"
	case PerguntaCriancasDeSeisVinteTresMesesEnumThrift_ONTEM_A_CRIANCA_COMEU_FRUTA_INTEIRA_PEDACO_AMASSADO:
		return "PerguntaCriancasDeSeisVinteTresMesesEnumThrift_ONTEM_A_CRIANCA_COMEU_FRUTA_INTEIRA_PEDACO_AMASSADO"
	case PerguntaCriancasDeSeisVinteTresMesesEnumThrift_SE_SIM_QUANTAS_VEZES:
		return "PerguntaCriancasDeSeisVinteTresMesesEnumThrift_SE_SIM_QUANTAS_VEZES"
	case PerguntaCriancasDeSeisVinteTresMesesEnumThrift_ONTEM_A_CRIANCA_COMEU_COMIDA_DE_SAL:
		return "PerguntaCriancasDeSeisVinteTresMesesEnumThrift_ONTEM_A_CRIANCA_COMEU_COMIDA_DE_SAL"
	case PerguntaCriancasDeSeisVinteTresMesesEnumThrift_SE_COMEU_COMIDA_DE_SAL_QUANTAS_VEZES:
		return "PerguntaCriancasDeSeisVinteTresMesesEnumThrift_SE_COMEU_COMIDA_DE_SAL_QUANTAS_VEZES"
	case PerguntaCriancasDeSeisVinteTresMesesEnumThrift_SE_SIM_ESSA_COMIDA_FOI_OFERECIDA:
		return "PerguntaCriancasDeSeisVinteTresMesesEnumThrift_SE_SIM_ESSA_COMIDA_FOI_OFERECIDA"
	case PerguntaCriancasDeSeisVinteTresMesesEnumThrift_OUTRO_LEITE_QUE_NAO_LEITE_DO_PEITO:
		return "PerguntaCriancasDeSeisVinteTresMesesEnumThrift_OUTRO_LEITE_QUE_NAO_LEITE_DO_PEITO"
	case PerguntaCriancasDeSeisVinteTresMesesEnumThrift_MINGAU_COM_LEITE:
		return "PerguntaCriancasDeSeisVinteTresMesesEnumThrift_MINGAU_COM_LEITE"
	case PerguntaCriancasDeSeisVinteTresMesesEnumThrift_IOGURTE:
		return "PerguntaCriancasDeSeisVinteTresMesesEnumThrift_IOGURTE"
	case PerguntaCriancasDeSeisVinteTresMesesEnumThrift_LEGUMES:
		return "PerguntaCriancasDeSeisVinteTresMesesEnumThrift_LEGUMES"
	case PerguntaCriancasDeSeisVinteTresMesesEnumThrift_VEGETAL_OU_FRUTAS_COR_ALARANJADA_OU_FOLHAS_ESCURAS:
		return "PerguntaCriancasDeSeisVinteTresMesesEnumThrift_VEGETAL_OU_FRUTAS_COR_ALARANJADA_OU_FOLHAS_ESCURAS"
	case PerguntaCriancasDeSeisVinteTresMesesEnumThrift_VERDURA_DE_FOLHA:
		return "PerguntaCriancasDeSeisVinteTresMesesEnumThrift_VERDURA_DE_FOLHA"
	case PerguntaCriancasDeSeisVinteTresMesesEnumThrift_CARNE:
		return "PerguntaCriancasDeSeisVinteTresMesesEnumThrift_CARNE"
	case PerguntaCriancasDeSeisVinteTresMesesEnumThrift_FIGADO:
		return "PerguntaCriancasDeSeisVinteTresMesesEnumThrift_FIGADO"
	case PerguntaCriancasDeSeisVinteTresMesesEnumThrift_FEIJAO:
		return "PerguntaCriancasDeSeisVinteTresMesesEnumThrift_FEIJAO"
	case PerguntaCriancasDeSeisVinteTresMesesEnumThrift_ARROZ_BATATA_INHAME_MANDIOCA_FARINHA_MACARRAO:
		return "PerguntaCriancasDeSeisVinteTresMesesEnumThrift_ARROZ_BATATA_INHAME_MANDIOCA_FARINHA_MACARRAO"
	case PerguntaCriancasDeSeisVinteTresMesesEnumThrift_HAMBURGUER_E_OU_EMBUTIDOS:
		return "PerguntaCriancasDeSeisVinteTresMesesEnumThrift_HAMBURGUER_E_OU_EMBUTIDOS"
	case PerguntaCriancasDeSeisVinteTresMesesEnumThrift_BEBIDAS_ADOCADAS:
		return "PerguntaCriancasDeSeisVinteTresMesesEnumThrift_BEBIDAS_ADOCADAS"
	case PerguntaCriancasDeSeisVinteTresMesesEnumThrift_MACARRAO_INSTANTANEO_SALGADINHOS_BISCOITOS:
		return "PerguntaCriancasDeSeisVinteTresMesesEnumThrift_MACARRAO_INSTANTANEO_SALGADINHOS_BISCOITOS"
	case PerguntaCriancasDeSeisVinteTresMesesEnumThrift_BISCOITO_RECHEADO_DOCES_OU_GULOSEIMAS:
		return "PerguntaCriancasDeSeisVinteTresMesesEnumThrift_BISCOITO_RECHEADO_DOCES_OU_GULOSEIMAS"
	}
	return "<UNSET>"
}

func PerguntaCriancasDeSeisVinteTresMesesEnumThriftFromString(s string) (PerguntaCriancasDeSeisVinteTresMesesEnumThrift, error) {
	switch s {
	case "PerguntaCriancasDeSeisVinteTresMesesEnumThrift_A_CRIANCA_ONTEM_TOMOU_LEITE_PEITO":
		return PerguntaCriancasDeSeisVinteTresMesesEnumThrift_A_CRIANCA_ONTEM_TOMOU_LEITE_PEITO, nil
	case "PerguntaCriancasDeSeisVinteTresMesesEnumThrift_ONTEM_A_CRIANCA_COMEU_FRUTA_INTEIRA_PEDACO_AMASSADO":
		return PerguntaCriancasDeSeisVinteTresMesesEnumThrift_ONTEM_A_CRIANCA_COMEU_FRUTA_INTEIRA_PEDACO_AMASSADO, nil
	case "PerguntaCriancasDeSeisVinteTresMesesEnumThrift_SE_SIM_QUANTAS_VEZES":
		return PerguntaCriancasDeSeisVinteTresMesesEnumThrift_SE_SIM_QUANTAS_VEZES, nil
	case "PerguntaCriancasDeSeisVinteTresMesesEnumThrift_ONTEM_A_CRIANCA_COMEU_COMIDA_DE_SAL":
		return PerguntaCriancasDeSeisVinteTresMesesEnumThrift_ONTEM_A_CRIANCA_COMEU_COMIDA_DE_SAL, nil
	case "PerguntaCriancasDeSeisVinteTresMesesEnumThrift_SE_COMEU_COMIDA_DE_SAL_QUANTAS_VEZES":
		return PerguntaCriancasDeSeisVinteTresMesesEnumThrift_SE_COMEU_COMIDA_DE_SAL_QUANTAS_VEZES, nil
	case "PerguntaCriancasDeSeisVinteTresMesesEnumThrift_SE_SIM_ESSA_COMIDA_FOI_OFERECIDA":
		return PerguntaCriancasDeSeisVinteTresMesesEnumThrift_SE_SIM_ESSA_COMIDA_FOI_OFERECIDA, nil
	case "PerguntaCriancasDeSeisVinteTresMesesEnumThrift_OUTRO_LEITE_QUE_NAO_LEITE_DO_PEITO":
		return PerguntaCriancasDeSeisVinteTresMesesEnumThrift_OUTRO_LEITE_QUE_NAO_LEITE_DO_PEITO, nil
	case "PerguntaCriancasDeSeisVinteTresMesesEnumThrift_MINGAU_COM_LEITE":
		return PerguntaCriancasDeSeisVinteTresMesesEnumThrift_MINGAU_COM_LEITE, nil
	case "PerguntaCriancasDeSeisVinteTresMesesEnumThrift_IOGURTE":
		return PerguntaCriancasDeSeisVinteTresMesesEnumThrift_IOGURTE, nil
	case "PerguntaCriancasDeSeisVinteTresMesesEnumThrift_LEGUMES":
		return PerguntaCriancasDeSeisVinteTresMesesEnumThrift_LEGUMES, nil
	case "PerguntaCriancasDeSeisVinteTresMesesEnumThrift_VEGETAL_OU_FRUTAS_COR_ALARANJADA_OU_FOLHAS_ESCURAS":
		return PerguntaCriancasDeSeisVinteTresMesesEnumThrift_VEGETAL_OU_FRUTAS_COR_ALARANJADA_OU_FOLHAS_ESCURAS, nil
	case "PerguntaCriancasDeSeisVinteTresMesesEnumThrift_VERDURA_DE_FOLHA":
		return PerguntaCriancasDeSeisVinteTresMesesEnumThrift_VERDURA_DE_FOLHA, nil
	case "PerguntaCriancasDeSeisVinteTresMesesEnumThrift_CARNE":
		return PerguntaCriancasDeSeisVinteTresMesesEnumThrift_CARNE, nil
	case "PerguntaCriancasDeSeisVinteTresMesesEnumThrift_FIGADO":
		return PerguntaCriancasDeSeisVinteTresMesesEnumThrift_FIGADO, nil
	case "PerguntaCriancasDeSeisVinteTresMesesEnumThrift_FEIJAO":
		return PerguntaCriancasDeSeisVinteTresMesesEnumThrift_FEIJAO, nil
	case "PerguntaCriancasDeSeisVinteTresMesesEnumThrift_ARROZ_BATATA_INHAME_MANDIOCA_FARINHA_MACARRAO":
		return PerguntaCriancasDeSeisVinteTresMesesEnumThrift_ARROZ_BATATA_INHAME_MANDIOCA_FARINHA_MACARRAO, nil
	case "PerguntaCriancasDeSeisVinteTresMesesEnumThrift_HAMBURGUER_E_OU_EMBUTIDOS":
		return PerguntaCriancasDeSeisVinteTresMesesEnumThrift_HAMBURGUER_E_OU_EMBUTIDOS, nil
	case "PerguntaCriancasDeSeisVinteTresMesesEnumThrift_BEBIDAS_ADOCADAS":
		return PerguntaCriancasDeSeisVinteTresMesesEnumThrift_BEBIDAS_ADOCADAS, nil
	case "PerguntaCriancasDeSeisVinteTresMesesEnumThrift_MACARRAO_INSTANTANEO_SALGADINHOS_BISCOITOS":
		return PerguntaCriancasDeSeisVinteTresMesesEnumThrift_MACARRAO_INSTANTANEO_SALGADINHOS_BISCOITOS, nil
	case "PerguntaCriancasDeSeisVinteTresMesesEnumThrift_BISCOITO_RECHEADO_DOCES_OU_GULOSEIMAS":
		return PerguntaCriancasDeSeisVinteTresMesesEnumThrift_BISCOITO_RECHEADO_DOCES_OU_GULOSEIMAS, nil
	}
	return PerguntaCriancasDeSeisVinteTresMesesEnumThrift(0), fmt.Errorf("not a valid PerguntaCriancasDeSeisVinteTresMesesEnumThrift string")
}

func PerguntaCriancasDeSeisVinteTresMesesEnumThriftPtr(v PerguntaCriancasDeSeisVinteTresMesesEnumThrift) *PerguntaCriancasDeSeisVinteTresMesesEnumThrift {
	return &v
}

type PerguntaCriancasComMaisDoisAnosEnumThrift int64

const (
	PerguntaCriancasComMaisDoisAnosEnumThrift_VOCE_TEM_COSTUME_DE_REALIZAR_AS_REFEICOES_ASSISTINDO_TV_MEXENDO_NO_COMPUTADOR_E_OU_CELULAR PerguntaCriancasComMaisDoisAnosEnumThrift = 11
	PerguntaCriancasComMaisDoisAnosEnumThrift_QUAIS_REFEICOES_VOCE_FAZ_AO_LONGO_DO_DIA                                                   PerguntaCriancasComMaisDoisAnosEnumThrift = 12
	PerguntaCriancasComMaisDoisAnosEnumThrift_FEIJAO                                                                                     PerguntaCriancasComMaisDoisAnosEnumThrift = 14
	PerguntaCriancasComMaisDoisAnosEnumThrift_FRUTAS_FRESCAS                                                                             PerguntaCriancasComMaisDoisAnosEnumThrift = 15
	PerguntaCriancasComMaisDoisAnosEnumThrift_VERDURAS_E_OU_LEGUMES                                                                      PerguntaCriancasComMaisDoisAnosEnumThrift = 16
	PerguntaCriancasComMaisDoisAnosEnumThrift_HAMBURGUER_E_OU_EMBUTIDOS                                                                  PerguntaCriancasComMaisDoisAnosEnumThrift = 17
	PerguntaCriancasComMaisDoisAnosEnumThrift_BEBIDAS_ADOCADAS                                                                           PerguntaCriancasComMaisDoisAnosEnumThrift = 18
	PerguntaCriancasComMaisDoisAnosEnumThrift_MACARRAO_INSTANTANEO_SALGADINHOS_BISCOITOS                                                 PerguntaCriancasComMaisDoisAnosEnumThrift = 19
	PerguntaCriancasComMaisDoisAnosEnumThrift_BISCOITO_RECHEADO_DOCES_OU_GULOSEIMAS                                                      PerguntaCriancasComMaisDoisAnosEnumThrift = 20
)

func (p PerguntaCriancasComMaisDoisAnosEnumThrift) String() string {
	switch p {
	case PerguntaCriancasComMaisDoisAnosEnumThrift_VOCE_TEM_COSTUME_DE_REALIZAR_AS_REFEICOES_ASSISTINDO_TV_MEXENDO_NO_COMPUTADOR_E_OU_CELULAR:
		return "PerguntaCriancasComMaisDoisAnosEnumThrift_VOCE_TEM_COSTUME_DE_REALIZAR_AS_REFEICOES_ASSISTINDO_TV_MEXENDO_NO_COMPUTADOR_E_OU_CELULAR"
	case PerguntaCriancasComMaisDoisAnosEnumThrift_QUAIS_REFEICOES_VOCE_FAZ_AO_LONGO_DO_DIA:
		return "PerguntaCriancasComMaisDoisAnosEnumThrift_QUAIS_REFEICOES_VOCE_FAZ_AO_LONGO_DO_DIA"
	case PerguntaCriancasComMaisDoisAnosEnumThrift_FEIJAO:
		return "PerguntaCriancasComMaisDoisAnosEnumThrift_FEIJAO"
	case PerguntaCriancasComMaisDoisAnosEnumThrift_FRUTAS_FRESCAS:
		return "PerguntaCriancasComMaisDoisAnosEnumThrift_FRUTAS_FRESCAS"
	case PerguntaCriancasComMaisDoisAnosEnumThrift_VERDURAS_E_OU_LEGUMES:
		return "PerguntaCriancasComMaisDoisAnosEnumThrift_VERDURAS_E_OU_LEGUMES"
	case PerguntaCriancasComMaisDoisAnosEnumThrift_HAMBURGUER_E_OU_EMBUTIDOS:
		return "PerguntaCriancasComMaisDoisAnosEnumThrift_HAMBURGUER_E_OU_EMBUTIDOS"
	case PerguntaCriancasComMaisDoisAnosEnumThrift_BEBIDAS_ADOCADAS:
		return "PerguntaCriancasComMaisDoisAnosEnumThrift_BEBIDAS_ADOCADAS"
	case PerguntaCriancasComMaisDoisAnosEnumThrift_MACARRAO_INSTANTANEO_SALGADINHOS_BISCOITOS:
		return "PerguntaCriancasComMaisDoisAnosEnumThrift_MACARRAO_INSTANTANEO_SALGADINHOS_BISCOITOS"
	case PerguntaCriancasComMaisDoisAnosEnumThrift_BISCOITO_RECHEADO_DOCES_OU_GULOSEIMAS:
		return "PerguntaCriancasComMaisDoisAnosEnumThrift_BISCOITO_RECHEADO_DOCES_OU_GULOSEIMAS"
	}
	return "<UNSET>"
}

func PerguntaCriancasComMaisDoisAnosEnumThriftFromString(s string) (PerguntaCriancasComMaisDoisAnosEnumThrift, error) {
	switch s {
	case "PerguntaCriancasComMaisDoisAnosEnumThrift_VOCE_TEM_COSTUME_DE_REALIZAR_AS_REFEICOES_ASSISTINDO_TV_MEXENDO_NO_COMPUTADOR_E_OU_CELULAR":
		return PerguntaCriancasComMaisDoisAnosEnumThrift_VOCE_TEM_COSTUME_DE_REALIZAR_AS_REFEICOES_ASSISTINDO_TV_MEXENDO_NO_COMPUTADOR_E_OU_CELULAR, nil
	case "PerguntaCriancasComMaisDoisAnosEnumThrift_QUAIS_REFEICOES_VOCE_FAZ_AO_LONGO_DO_DIA":
		return PerguntaCriancasComMaisDoisAnosEnumThrift_QUAIS_REFEICOES_VOCE_FAZ_AO_LONGO_DO_DIA, nil
	case "PerguntaCriancasComMaisDoisAnosEnumThrift_FEIJAO":
		return PerguntaCriancasComMaisDoisAnosEnumThrift_FEIJAO, nil
	case "PerguntaCriancasComMaisDoisAnosEnumThrift_FRUTAS_FRESCAS":
		return PerguntaCriancasComMaisDoisAnosEnumThrift_FRUTAS_FRESCAS, nil
	case "PerguntaCriancasComMaisDoisAnosEnumThrift_VERDURAS_E_OU_LEGUMES":
		return PerguntaCriancasComMaisDoisAnosEnumThrift_VERDURAS_E_OU_LEGUMES, nil
	case "PerguntaCriancasComMaisDoisAnosEnumThrift_HAMBURGUER_E_OU_EMBUTIDOS":
		return PerguntaCriancasComMaisDoisAnosEnumThrift_HAMBURGUER_E_OU_EMBUTIDOS, nil
	case "PerguntaCriancasComMaisDoisAnosEnumThrift_BEBIDAS_ADOCADAS":
		return PerguntaCriancasComMaisDoisAnosEnumThrift_BEBIDAS_ADOCADAS, nil
	case "PerguntaCriancasComMaisDoisAnosEnumThrift_MACARRAO_INSTANTANEO_SALGADINHOS_BISCOITOS":
		return PerguntaCriancasComMaisDoisAnosEnumThrift_MACARRAO_INSTANTANEO_SALGADINHOS_BISCOITOS, nil
	case "PerguntaCriancasComMaisDoisAnosEnumThrift_BISCOITO_RECHEADO_DOCES_OU_GULOSEIMAS":
		return PerguntaCriancasComMaisDoisAnosEnumThrift_BISCOITO_RECHEADO_DOCES_OU_GULOSEIMAS, nil
	}
	return PerguntaCriancasComMaisDoisAnosEnumThrift(0), fmt.Errorf("not a valid PerguntaCriancasComMaisDoisAnosEnumThrift string")
}

func PerguntaCriancasComMaisDoisAnosEnumThriftPtr(v PerguntaCriancasComMaisDoisAnosEnumThrift) *PerguntaCriancasComMaisDoisAnosEnumThrift {
	return &v
}

type RespostaUnicaEscolhaEnumThrift int64

const (
	RespostaUnicaEscolhaEnumThrift_SIM                RespostaUnicaEscolhaEnumThrift = 1
	RespostaUnicaEscolhaEnumThrift_NAO                RespostaUnicaEscolhaEnumThrift = 2
	RespostaUnicaEscolhaEnumThrift_NAO_SABE           RespostaUnicaEscolhaEnumThrift = 3
	RespostaUnicaEscolhaEnumThrift_UMA_VEZ            RespostaUnicaEscolhaEnumThrift = 4
	RespostaUnicaEscolhaEnumThrift_DUAS_VEZES         RespostaUnicaEscolhaEnumThrift = 5
	RespostaUnicaEscolhaEnumThrift_TRES_VEZES_OU_MAIS RespostaUnicaEscolhaEnumThrift = 6
	RespostaUnicaEscolhaEnumThrift_EM_PEDACOS         RespostaUnicaEscolhaEnumThrift = 7
	RespostaUnicaEscolhaEnumThrift_AMASSADA           RespostaUnicaEscolhaEnumThrift = 8
	RespostaUnicaEscolhaEnumThrift_PASSADA_NA_PENEIRA RespostaUnicaEscolhaEnumThrift = 9
	RespostaUnicaEscolhaEnumThrift_LIQUIDIFICADA      RespostaUnicaEscolhaEnumThrift = 10
	RespostaUnicaEscolhaEnumThrift_SO_O_CALDO         RespostaUnicaEscolhaEnumThrift = 11
)

func (p RespostaUnicaEscolhaEnumThrift) String() string {
	switch p {
	case RespostaUnicaEscolhaEnumThrift_SIM:
		return "RespostaUnicaEscolhaEnumThrift_SIM"
	case RespostaUnicaEscolhaEnumThrift_NAO:
		return "RespostaUnicaEscolhaEnumThrift_NAO"
	case RespostaUnicaEscolhaEnumThrift_NAO_SABE:
		return "RespostaUnicaEscolhaEnumThrift_NAO_SABE"
	case RespostaUnicaEscolhaEnumThrift_UMA_VEZ:
		return "RespostaUnicaEscolhaEnumThrift_UMA_VEZ"
	case RespostaUnicaEscolhaEnumThrift_DUAS_VEZES:
		return "RespostaUnicaEscolhaEnumThrift_DUAS_VEZES"
	case RespostaUnicaEscolhaEnumThrift_TRES_VEZES_OU_MAIS:
		return "RespostaUnicaEscolhaEnumThrift_TRES_VEZES_OU_MAIS"
	case RespostaUnicaEscolhaEnumThrift_EM_PEDACOS:
		return "RespostaUnicaEscolhaEnumThrift_EM_PEDACOS"
	case RespostaUnicaEscolhaEnumThrift_AMASSADA:
		return "RespostaUnicaEscolhaEnumThrift_AMASSADA"
	case RespostaUnicaEscolhaEnumThrift_PASSADA_NA_PENEIRA:
		return "RespostaUnicaEscolhaEnumThrift_PASSADA_NA_PENEIRA"
	case RespostaUnicaEscolhaEnumThrift_LIQUIDIFICADA:
		return "RespostaUnicaEscolhaEnumThrift_LIQUIDIFICADA"
	case RespostaUnicaEscolhaEnumThrift_SO_O_CALDO:
		return "RespostaUnicaEscolhaEnumThrift_SO_O_CALDO"
	}
	return "<UNSET>"
}

func RespostaUnicaEscolhaEnumThriftFromString(s string) (RespostaUnicaEscolhaEnumThrift, error) {
	switch s {
	case "RespostaUnicaEscolhaEnumThrift_SIM":
		return RespostaUnicaEscolhaEnumThrift_SIM, nil
	case "RespostaUnicaEscolhaEnumThrift_NAO":
		return RespostaUnicaEscolhaEnumThrift_NAO, nil
	case "RespostaUnicaEscolhaEnumThrift_NAO_SABE":
		return RespostaUnicaEscolhaEnumThrift_NAO_SABE, nil
	case "RespostaUnicaEscolhaEnumThrift_UMA_VEZ":
		return RespostaUnicaEscolhaEnumThrift_UMA_VEZ, nil
	case "RespostaUnicaEscolhaEnumThrift_DUAS_VEZES":
		return RespostaUnicaEscolhaEnumThrift_DUAS_VEZES, nil
	case "RespostaUnicaEscolhaEnumThrift_TRES_VEZES_OU_MAIS":
		return RespostaUnicaEscolhaEnumThrift_TRES_VEZES_OU_MAIS, nil
	case "RespostaUnicaEscolhaEnumThrift_EM_PEDACOS":
		return RespostaUnicaEscolhaEnumThrift_EM_PEDACOS, nil
	case "RespostaUnicaEscolhaEnumThrift_AMASSADA":
		return RespostaUnicaEscolhaEnumThrift_AMASSADA, nil
	case "RespostaUnicaEscolhaEnumThrift_PASSADA_NA_PENEIRA":
		return RespostaUnicaEscolhaEnumThrift_PASSADA_NA_PENEIRA, nil
	case "RespostaUnicaEscolhaEnumThrift_LIQUIDIFICADA":
		return RespostaUnicaEscolhaEnumThrift_LIQUIDIFICADA, nil
	case "RespostaUnicaEscolhaEnumThrift_SO_O_CALDO":
		return RespostaUnicaEscolhaEnumThrift_SO_O_CALDO, nil
	}
	return RespostaUnicaEscolhaEnumThrift(0), fmt.Errorf("not a valid RespostaUnicaEscolhaEnumThrift string")
}

func RespostaUnicaEscolhaEnumThriftPtr(v RespostaUnicaEscolhaEnumThrift) *RespostaUnicaEscolhaEnumThrift {
	return &v
}

type RespostaMultiplaEscolhaEnumThrift int64

const (
	RespostaMultiplaEscolhaEnumThrift_CAFE_DA_MANHA   RespostaMultiplaEscolhaEnumThrift = 12
	RespostaMultiplaEscolhaEnumThrift_LANCHE_DA_MANHA RespostaMultiplaEscolhaEnumThrift = 13
	RespostaMultiplaEscolhaEnumThrift_ALMOCO          RespostaMultiplaEscolhaEnumThrift = 14
	RespostaMultiplaEscolhaEnumThrift_LANCHE_DA_TARDE RespostaMultiplaEscolhaEnumThrift = 15
	RespostaMultiplaEscolhaEnumThrift_JANTAR          RespostaMultiplaEscolhaEnumThrift = 16
	RespostaMultiplaEscolhaEnumThrift_CEIA            RespostaMultiplaEscolhaEnumThrift = 17
)

func (p RespostaMultiplaEscolhaEnumThrift) String() string {
	switch p {
	case RespostaMultiplaEscolhaEnumThrift_CAFE_DA_MANHA:
		return "RespostaMultiplaEscolhaEnumThrift_CAFE_DA_MANHA"
	case RespostaMultiplaEscolhaEnumThrift_LANCHE_DA_MANHA:
		return "RespostaMultiplaEscolhaEnumThrift_LANCHE_DA_MANHA"
	case RespostaMultiplaEscolhaEnumThrift_ALMOCO:
		return "RespostaMultiplaEscolhaEnumThrift_ALMOCO"
	case RespostaMultiplaEscolhaEnumThrift_LANCHE_DA_TARDE:
		return "RespostaMultiplaEscolhaEnumThrift_LANCHE_DA_TARDE"
	case RespostaMultiplaEscolhaEnumThrift_JANTAR:
		return "RespostaMultiplaEscolhaEnumThrift_JANTAR"
	case RespostaMultiplaEscolhaEnumThrift_CEIA:
		return "RespostaMultiplaEscolhaEnumThrift_CEIA"
	}
	return "<UNSET>"
}

func RespostaMultiplaEscolhaEnumThriftFromString(s string) (RespostaMultiplaEscolhaEnumThrift, error) {
	switch s {
	case "RespostaMultiplaEscolhaEnumThrift_CAFE_DA_MANHA":
		return RespostaMultiplaEscolhaEnumThrift_CAFE_DA_MANHA, nil
	case "RespostaMultiplaEscolhaEnumThrift_LANCHE_DA_MANHA":
		return RespostaMultiplaEscolhaEnumThrift_LANCHE_DA_MANHA, nil
	case "RespostaMultiplaEscolhaEnumThrift_ALMOCO":
		return RespostaMultiplaEscolhaEnumThrift_ALMOCO, nil
	case "RespostaMultiplaEscolhaEnumThrift_LANCHE_DA_TARDE":
		return RespostaMultiplaEscolhaEnumThrift_LANCHE_DA_TARDE, nil
	case "RespostaMultiplaEscolhaEnumThrift_JANTAR":
		return RespostaMultiplaEscolhaEnumThrift_JANTAR, nil
	case "RespostaMultiplaEscolhaEnumThrift_CEIA":
		return RespostaMultiplaEscolhaEnumThrift_CEIA, nil
	}
	return RespostaMultiplaEscolhaEnumThrift(0), fmt.Errorf("not a valid RespostaMultiplaEscolhaEnumThrift string")
}

func RespostaMultiplaEscolhaEnumThriftPtr(v RespostaMultiplaEscolhaEnumThrift) *RespostaMultiplaEscolhaEnumThrift {
	return &v
}

type PerguntaQuestionarioCriancasMenoresSeisMesesThrift struct {
	Pergunta             *PerguntaCriancasMenoresSeisMesesEnumThrift `thrift:"pergunta,1" json:"pergunta"`
	RespostaUnicaEscolha *RespostaUnicaEscolhaEnumThrift             `thrift:"respostaUnicaEscolha,2" json:"respostaUnicaEscolha"`
}

func NewPerguntaQuestionarioCriancasMenoresSeisMesesThrift() *PerguntaQuestionarioCriancasMenoresSeisMesesThrift {
	return &PerguntaQuestionarioCriancasMenoresSeisMesesThrift{}
}

var PerguntaQuestionarioCriancasMenoresSeisMesesThrift_Pergunta_DEFAULT PerguntaCriancasMenoresSeisMesesEnumThrift

func (p *PerguntaQuestionarioCriancasMenoresSeisMesesThrift) GetPergunta() PerguntaCriancasMenoresSeisMesesEnumThrift {
	if !p.IsSetPergunta() {
		return PerguntaQuestionarioCriancasMenoresSeisMesesThrift_Pergunta_DEFAULT
	}
	return *p.Pergunta
}

var PerguntaQuestionarioCriancasMenoresSeisMesesThrift_RespostaUnicaEscolha_DEFAULT RespostaUnicaEscolhaEnumThrift

func (p *PerguntaQuestionarioCriancasMenoresSeisMesesThrift) GetRespostaUnicaEscolha() RespostaUnicaEscolhaEnumThrift {
	if !p.IsSetRespostaUnicaEscolha() {
		return PerguntaQuestionarioCriancasMenoresSeisMesesThrift_RespostaUnicaEscolha_DEFAULT
	}
	return *p.RespostaUnicaEscolha
}
func (p *PerguntaQuestionarioCriancasMenoresSeisMesesThrift) IsSetPergunta() bool {
	return p.Pergunta != nil
}

func (p *PerguntaQuestionarioCriancasMenoresSeisMesesThrift) IsSetRespostaUnicaEscolha() bool {
	return p.RespostaUnicaEscolha != nil
}

func (p *PerguntaQuestionarioCriancasMenoresSeisMesesThrift) Read(iprot thrift.TProtocol) error {
	if _, err := iprot.ReadStructBegin(); err != nil {
		return fmt.Errorf("%T read error: %s", p, err)
	}
	for {
		_, fieldTypeId, fieldId, err := iprot.ReadFieldBegin()
		if err != nil {
			return fmt.Errorf("%T field %d read error: %s", p, fieldId, err)
		}
		if fieldTypeId == thrift.STOP {
			break
		}
		switch fieldId {
		case 1:
			if err := p.ReadField1(iprot); err != nil {
				return err
			}
		case 2:
			if err := p.ReadField2(iprot); err != nil {
				return err
			}
		default:
			if err := iprot.Skip(fieldTypeId); err != nil {
				return err
			}
		}
		if err := iprot.ReadFieldEnd(); err != nil {
			return err
		}
	}
	if err := iprot.ReadStructEnd(); err != nil {
		return fmt.Errorf("%T read struct end error: %s", p, err)
	}
	return nil
}

func (p *PerguntaQuestionarioCriancasMenoresSeisMesesThrift) ReadField1(iprot thrift.TProtocol) error {
	if v, err := iprot.ReadI32(); err != nil {
		return fmt.Errorf("error reading field 1: %s", err)
	} else {
		temp := PerguntaCriancasMenoresSeisMesesEnumThrift(v)
		p.Pergunta = &temp
	}
	return nil
}

func (p *PerguntaQuestionarioCriancasMenoresSeisMesesThrift) ReadField2(iprot thrift.TProtocol) error {
	if v, err := iprot.ReadI32(); err != nil {
		return fmt.Errorf("error reading field 2: %s", err)
	} else {
		temp := RespostaUnicaEscolhaEnumThrift(v)
		p.RespostaUnicaEscolha = &temp
	}
	return nil
}

func (p *PerguntaQuestionarioCriancasMenoresSeisMesesThrift) Write(oprot thrift.TProtocol) error {
	if err := oprot.WriteStructBegin("PerguntaQuestionarioCriancasMenoresSeisMesesThrift"); err != nil {
		return fmt.Errorf("%T write struct begin error: %s", p, err)
	}
	if err := p.writeField1(oprot); err != nil {
		return err
	}
	if err := p.writeField2(oprot); err != nil {
		return err
	}
	if err := oprot.WriteFieldStop(); err != nil {
		return fmt.Errorf("write field stop error: %s", err)
	}
	if err := oprot.WriteStructEnd(); err != nil {
		return fmt.Errorf("write struct stop error: %s", err)
	}
	return nil
}

func (p *PerguntaQuestionarioCriancasMenoresSeisMesesThrift) writeField1(oprot thrift.TProtocol) (err error) {
	if p.IsSetPergunta() {
		if err := oprot.WriteFieldBegin("pergunta", thrift.I32, 1); err != nil {
			return fmt.Errorf("%T write field begin error 1:pergunta: %s", p, err)
		}
		if err := oprot.WriteI32(int32(*p.Pergunta)); err != nil {
			return fmt.Errorf("%T.pergunta (1) field write error: %s", p, err)
		}
		if err := oprot.WriteFieldEnd(); err != nil {
			return fmt.Errorf("%T write field end error 1:pergunta: %s", p, err)
		}
	}
	return err
}

func (p *PerguntaQuestionarioCriancasMenoresSeisMesesThrift) writeField2(oprot thrift.TProtocol) (err error) {
	if p.IsSetRespostaUnicaEscolha() {
		if err := oprot.WriteFieldBegin("respostaUnicaEscolha", thrift.I32, 2); err != nil {
			return fmt.Errorf("%T write field begin error 2:respostaUnicaEscolha: %s", p, err)
		}
		if err := oprot.WriteI32(int32(*p.RespostaUnicaEscolha)); err != nil {
			return fmt.Errorf("%T.respostaUnicaEscolha (2) field write error: %s", p, err)
		}
		if err := oprot.WriteFieldEnd(); err != nil {
			return fmt.Errorf("%T write field end error 2:respostaUnicaEscolha: %s", p, err)
		}
	}
	return err
}

func (p *PerguntaQuestionarioCriancasMenoresSeisMesesThrift) String() string {
	if p == nil {
		return "<nil>"
	}
	return fmt.Sprintf("PerguntaQuestionarioCriancasMenoresSeisMesesThrift(%+v)", *p)
}

type PerguntaQuestionarioCriancasDeSeisVinteTresMesesThrift struct {
	Pergunta             *PerguntaCriancasDeSeisVinteTresMesesEnumThrift `thrift:"pergunta,1" json:"pergunta"`
	RespostaUnicaEscolha *RespostaUnicaEscolhaEnumThrift                 `thrift:"respostaUnicaEscolha,2" json:"respostaUnicaEscolha"`
}

func NewPerguntaQuestionarioCriancasDeSeisVinteTresMesesThrift() *PerguntaQuestionarioCriancasDeSeisVinteTresMesesThrift {
	return &PerguntaQuestionarioCriancasDeSeisVinteTresMesesThrift{}
}

var PerguntaQuestionarioCriancasDeSeisVinteTresMesesThrift_Pergunta_DEFAULT PerguntaCriancasDeSeisVinteTresMesesEnumThrift

func (p *PerguntaQuestionarioCriancasDeSeisVinteTresMesesThrift) GetPergunta() PerguntaCriancasDeSeisVinteTresMesesEnumThrift {
	if !p.IsSetPergunta() {
		return PerguntaQuestionarioCriancasDeSeisVinteTresMesesThrift_Pergunta_DEFAULT
	}
	return *p.Pergunta
}

var PerguntaQuestionarioCriancasDeSeisVinteTresMesesThrift_RespostaUnicaEscolha_DEFAULT RespostaUnicaEscolhaEnumThrift

func (p *PerguntaQuestionarioCriancasDeSeisVinteTresMesesThrift) GetRespostaUnicaEscolha() RespostaUnicaEscolhaEnumThrift {
	if !p.IsSetRespostaUnicaEscolha() {
		return PerguntaQuestionarioCriancasDeSeisVinteTresMesesThrift_RespostaUnicaEscolha_DEFAULT
	}
	return *p.RespostaUnicaEscolha
}
func (p *PerguntaQuestionarioCriancasDeSeisVinteTresMesesThrift) IsSetPergunta() bool {
	return p.Pergunta != nil
}

func (p *PerguntaQuestionarioCriancasDeSeisVinteTresMesesThrift) IsSetRespostaUnicaEscolha() bool {
	return p.RespostaUnicaEscolha != nil
}

func (p *PerguntaQuestionarioCriancasDeSeisVinteTresMesesThrift) Read(iprot thrift.TProtocol) error {
	if _, err := iprot.ReadStructBegin(); err != nil {
		return fmt.Errorf("%T read error: %s", p, err)
	}
	for {
		_, fieldTypeId, fieldId, err := iprot.ReadFieldBegin()
		if err != nil {
			return fmt.Errorf("%T field %d read error: %s", p, fieldId, err)
		}
		if fieldTypeId == thrift.STOP {
			break
		}
		switch fieldId {
		case 1:
			if err := p.ReadField1(iprot); err != nil {
				return err
			}
		case 2:
			if err := p.ReadField2(iprot); err != nil {
				return err
			}
		default:
			if err := iprot.Skip(fieldTypeId); err != nil {
				return err
			}
		}
		if err := iprot.ReadFieldEnd(); err != nil {
			return err
		}
	}
	if err := iprot.ReadStructEnd(); err != nil {
		return fmt.Errorf("%T read struct end error: %s", p, err)
	}
	return nil
}

func (p *PerguntaQuestionarioCriancasDeSeisVinteTresMesesThrift) ReadField1(iprot thrift.TProtocol) error {
	if v, err := iprot.ReadI32(); err != nil {
		return fmt.Errorf("error reading field 1: %s", err)
	} else {
		temp := PerguntaCriancasDeSeisVinteTresMesesEnumThrift(v)
		p.Pergunta = &temp
	}
	return nil
}

func (p *PerguntaQuestionarioCriancasDeSeisVinteTresMesesThrift) ReadField2(iprot thrift.TProtocol) error {
	if v, err := iprot.ReadI32(); err != nil {
		return fmt.Errorf("error reading field 2: %s", err)
	} else {
		temp := RespostaUnicaEscolhaEnumThrift(v)
		p.RespostaUnicaEscolha = &temp
	}
	return nil
}

func (p *PerguntaQuestionarioCriancasDeSeisVinteTresMesesThrift) Write(oprot thrift.TProtocol) error {
	if err := oprot.WriteStructBegin("PerguntaQuestionarioCriancasDeSeisVinteTresMesesThrift"); err != nil {
		return fmt.Errorf("%T write struct begin error: %s", p, err)
	}
	if err := p.writeField1(oprot); err != nil {
		return err
	}
	if err := p.writeField2(oprot); err != nil {
		return err
	}
	if err := oprot.WriteFieldStop(); err != nil {
		return fmt.Errorf("write field stop error: %s", err)
	}
	if err := oprot.WriteStructEnd(); err != nil {
		return fmt.Errorf("write struct stop error: %s", err)
	}
	return nil
}

func (p *PerguntaQuestionarioCriancasDeSeisVinteTresMesesThrift) writeField1(oprot thrift.TProtocol) (err error) {
	if p.IsSetPergunta() {
		if err := oprot.WriteFieldBegin("pergunta", thrift.I32, 1); err != nil {
			return fmt.Errorf("%T write field begin error 1:pergunta: %s", p, err)
		}
		if err := oprot.WriteI32(int32(*p.Pergunta)); err != nil {
			return fmt.Errorf("%T.pergunta (1) field write error: %s", p, err)
		}
		if err := oprot.WriteFieldEnd(); err != nil {
			return fmt.Errorf("%T write field end error 1:pergunta: %s", p, err)
		}
	}
	return err
}

func (p *PerguntaQuestionarioCriancasDeSeisVinteTresMesesThrift) writeField2(oprot thrift.TProtocol) (err error) {
	if p.IsSetRespostaUnicaEscolha() {
		if err := oprot.WriteFieldBegin("respostaUnicaEscolha", thrift.I32, 2); err != nil {
			return fmt.Errorf("%T write field begin error 2:respostaUnicaEscolha: %s", p, err)
		}
		if err := oprot.WriteI32(int32(*p.RespostaUnicaEscolha)); err != nil {
			return fmt.Errorf("%T.respostaUnicaEscolha (2) field write error: %s", p, err)
		}
		if err := oprot.WriteFieldEnd(); err != nil {
			return fmt.Errorf("%T write field end error 2:respostaUnicaEscolha: %s", p, err)
		}
	}
	return err
}

func (p *PerguntaQuestionarioCriancasDeSeisVinteTresMesesThrift) String() string {
	if p == nil {
		return "<nil>"
	}
	return fmt.Sprintf("PerguntaQuestionarioCriancasDeSeisVinteTresMesesThrift(%+v)", *p)
}

type PerguntaQuestionarioCriancasComMaisDoisAnosThrift struct {
	Pergunta                *PerguntaCriancasComMaisDoisAnosEnumThrift `thrift:"pergunta,1" json:"pergunta"`
	RespostaUnicaEscolha    *RespostaUnicaEscolhaEnumThrift            `thrift:"respostaUnicaEscolha,2" json:"respostaUnicaEscolha"`
	RespostaMultiplaEscolha []RespostaMultiplaEscolhaEnumThrift        `thrift:"respostaMultiplaEscolha,3" json:"respostaMultiplaEscolha"`
}

func NewPerguntaQuestionarioCriancasComMaisDoisAnosThrift() *PerguntaQuestionarioCriancasComMaisDoisAnosThrift {
	return &PerguntaQuestionarioCriancasComMaisDoisAnosThrift{}
}

var PerguntaQuestionarioCriancasComMaisDoisAnosThrift_Pergunta_DEFAULT PerguntaCriancasComMaisDoisAnosEnumThrift

func (p *PerguntaQuestionarioCriancasComMaisDoisAnosThrift) GetPergunta() PerguntaCriancasComMaisDoisAnosEnumThrift {
	if !p.IsSetPergunta() {
		return PerguntaQuestionarioCriancasComMaisDoisAnosThrift_Pergunta_DEFAULT
	}
	return *p.Pergunta
}

var PerguntaQuestionarioCriancasComMaisDoisAnosThrift_RespostaUnicaEscolha_DEFAULT RespostaUnicaEscolhaEnumThrift

func (p *PerguntaQuestionarioCriancasComMaisDoisAnosThrift) GetRespostaUnicaEscolha() RespostaUnicaEscolhaEnumThrift {
	if !p.IsSetRespostaUnicaEscolha() {
		return PerguntaQuestionarioCriancasComMaisDoisAnosThrift_RespostaUnicaEscolha_DEFAULT
	}
	return *p.RespostaUnicaEscolha
}

var PerguntaQuestionarioCriancasComMaisDoisAnosThrift_RespostaMultiplaEscolha_DEFAULT []RespostaMultiplaEscolhaEnumThrift

func (p *PerguntaQuestionarioCriancasComMaisDoisAnosThrift) GetRespostaMultiplaEscolha() []RespostaMultiplaEscolhaEnumThrift {
	return p.RespostaMultiplaEscolha
}
func (p *PerguntaQuestionarioCriancasComMaisDoisAnosThrift) IsSetPergunta() bool {
	return p.Pergunta != nil
}

func (p *PerguntaQuestionarioCriancasComMaisDoisAnosThrift) IsSetRespostaUnicaEscolha() bool {
	return p.RespostaUnicaEscolha != nil
}

func (p *PerguntaQuestionarioCriancasComMaisDoisAnosThrift) IsSetRespostaMultiplaEscolha() bool {
	return p.RespostaMultiplaEscolha != nil
}

func (p *PerguntaQuestionarioCriancasComMaisDoisAnosThrift) Read(iprot thrift.TProtocol) error {
	if _, err := iprot.ReadStructBegin(); err != nil {
		return fmt.Errorf("%T read error: %s", p, err)
	}
	for {
		_, fieldTypeId, fieldId, err := iprot.ReadFieldBegin()
		if err != nil {
			return fmt.Errorf("%T field %d read error: %s", p, fieldId, err)
		}
		if fieldTypeId == thrift.STOP {
			break
		}
		switch fieldId {
		case 1:
			if err := p.ReadField1(iprot); err != nil {
				return err
			}
		case 2:
			if err := p.ReadField2(iprot); err != nil {
				return err
			}
		case 3:
			if err := p.ReadField3(iprot); err != nil {
				return err
			}
		default:
			if err := iprot.Skip(fieldTypeId); err != nil {
				return err
			}
		}
		if err := iprot.ReadFieldEnd(); err != nil {
			return err
		}
	}
	if err := iprot.ReadStructEnd(); err != nil {
		return fmt.Errorf("%T read struct end error: %s", p, err)
	}
	return nil
}

func (p *PerguntaQuestionarioCriancasComMaisDoisAnosThrift) ReadField1(iprot thrift.TProtocol) error {
	if v, err := iprot.ReadI32(); err != nil {
		return fmt.Errorf("error reading field 1: %s", err)
	} else {
		temp := PerguntaCriancasComMaisDoisAnosEnumThrift(v)
		p.Pergunta = &temp
	}
	return nil
}

func (p *PerguntaQuestionarioCriancasComMaisDoisAnosThrift) ReadField2(iprot thrift.TProtocol) error {
	if v, err := iprot.ReadI32(); err != nil {
		return fmt.Errorf("error reading field 2: %s", err)
	} else {
		temp := RespostaUnicaEscolhaEnumThrift(v)
		p.RespostaUnicaEscolha = &temp
	}
	return nil
}

func (p *PerguntaQuestionarioCriancasComMaisDoisAnosThrift) ReadField3(iprot thrift.TProtocol) error {
	_, size, err := iprot.ReadListBegin()
	if err != nil {
		return fmt.Errorf("error reading list begin: %s", err)
	}
	tSlice := make([]RespostaMultiplaEscolhaEnumThrift, 0, size)
	p.RespostaMultiplaEscolha = tSlice
	for i := 0; i < size; i++ {
		var _elem0 RespostaMultiplaEscolhaEnumThrift
		if v, err := iprot.ReadI32(); err != nil {
			return fmt.Errorf("error reading field 0: %s", err)
		} else {
			temp := RespostaMultiplaEscolhaEnumThrift(v)
			_elem0 = temp
		}
		p.RespostaMultiplaEscolha = append(p.RespostaMultiplaEscolha, _elem0)
	}
	if err := iprot.ReadListEnd(); err != nil {
		return fmt.Errorf("error reading list end: %s", err)
	}
	return nil
}

func (p *PerguntaQuestionarioCriancasComMaisDoisAnosThrift) Write(oprot thrift.TProtocol) error {
	if err := oprot.WriteStructBegin("PerguntaQuestionarioCriancasComMaisDoisAnosThrift"); err != nil {
		return fmt.Errorf("%T write struct begin error: %s", p, err)
	}
	if err := p.writeField1(oprot); err != nil {
		return err
	}
	if err := p.writeField2(oprot); err != nil {
		return err
	}
	if err := p.writeField3(oprot); err != nil {
		return err
	}
	if err := oprot.WriteFieldStop(); err != nil {
		return fmt.Errorf("write field stop error: %s", err)
	}
	if err := oprot.WriteStructEnd(); err != nil {
		return fmt.Errorf("write struct stop error: %s", err)
	}
	return nil
}

func (p *PerguntaQuestionarioCriancasComMaisDoisAnosThrift) writeField1(oprot thrift.TProtocol) (err error) {
	if p.IsSetPergunta() {
		if err := oprot.WriteFieldBegin("pergunta", thrift.I32, 1); err != nil {
			return fmt.Errorf("%T write field begin error 1:pergunta: %s", p, err)
		}
		if err := oprot.WriteI32(int32(*p.Pergunta)); err != nil {
			return fmt.Errorf("%T.pergunta (1) field write error: %s", p, err)
		}
		if err := oprot.WriteFieldEnd(); err != nil {
			return fmt.Errorf("%T write field end error 1:pergunta: %s", p, err)
		}
	}
	return err
}

func (p *PerguntaQuestionarioCriancasComMaisDoisAnosThrift) writeField2(oprot thrift.TProtocol) (err error) {
	if p.IsSetRespostaUnicaEscolha() {
		if err := oprot.WriteFieldBegin("respostaUnicaEscolha", thrift.I32, 2); err != nil {
			return fmt.Errorf("%T write field begin error 2:respostaUnicaEscolha: %s", p, err)
		}
		if err := oprot.WriteI32(int32(*p.RespostaUnicaEscolha)); err != nil {
			return fmt.Errorf("%T.respostaUnicaEscolha (2) field write error: %s", p, err)
		}
		if err := oprot.WriteFieldEnd(); err != nil {
			return fmt.Errorf("%T write field end error 2:respostaUnicaEscolha: %s", p, err)
		}
	}
	return err
}

func (p *PerguntaQuestionarioCriancasComMaisDoisAnosThrift) writeField3(oprot thrift.TProtocol) (err error) {
	if p.IsSetRespostaMultiplaEscolha() {
		if err := oprot.WriteFieldBegin("respostaMultiplaEscolha", thrift.LIST, 3); err != nil {
			return fmt.Errorf("%T write field begin error 3:respostaMultiplaEscolha: %s", p, err)
		}
		if err := oprot.WriteListBegin(thrift.I32, len(p.RespostaMultiplaEscolha)); err != nil {
			return fmt.Errorf("error writing list begin: %s", err)
		}
		for _, v := range p.RespostaMultiplaEscolha {
			if err := oprot.WriteI32(int32(v)); err != nil {
				return fmt.Errorf("%T. (0) field write error: %s", p, err)
			}
		}
		if err := oprot.WriteListEnd(); err != nil {
			return fmt.Errorf("error writing list end: %s", err)
		}
		if err := oprot.WriteFieldEnd(); err != nil {
			return fmt.Errorf("%T write field end error 3:respostaMultiplaEscolha: %s", p, err)
		}
	}
	return err
}

func (p *PerguntaQuestionarioCriancasComMaisDoisAnosThrift) String() string {
	if p == nil {
		return "<nil>"
	}
	return fmt.Sprintf("PerguntaQuestionarioCriancasComMaisDoisAnosThrift(%+v)", *p)
}

type FichaConsumoAlimentarThrift struct {
	HeaderTransport                                   *common.UnicaLotacaoHeaderThrift                          `thrift:"headerTransport,1" json:"headerTransport"`
	CnsCidadao                                        *string                                                   `thrift:"cnsCidadao,2" json:"cnsCidadao"`
	IdentificacaoUsuario                              *string                                                   `thrift:"identificacaoUsuario,3" json:"identificacaoUsuario"`
	DataNascimento                                    *int64                                                    `thrift:"dataNascimento,4" json:"dataNascimento"`
	Sexo                                              *int64                                                    `thrift:"sexo,5" json:"sexo"`
	LocalAtendimento                                  *int64                                                    `thrift:"localAtendimento,6" json:"localAtendimento"`
	PerguntasQuestionarioCriancasMenoresSeisMeses     []*PerguntaQuestionarioCriancasMenoresSeisMesesThrift     `thrift:"perguntasQuestionarioCriancasMenoresSeisMeses,7" json:"perguntasQuestionarioCriancasMenoresSeisMeses"`
	PerguntasQuestionarioCriancasDeSeisVinteTresMeses []*PerguntaQuestionarioCriancasDeSeisVinteTresMesesThrift `thrift:"perguntasQuestionarioCriancasDeSeisVinteTresMeses,8" json:"perguntasQuestionarioCriancasDeSeisVinteTresMeses"`
	PerguntasQuestionarioCriancasComMaisDoisAnos      []*PerguntaQuestionarioCriancasComMaisDoisAnosThrift      `thrift:"perguntasQuestionarioCriancasComMaisDoisAnos,9" json:"perguntasQuestionarioCriancasComMaisDoisAnos"`
	UuidFicha                                         string                                                    `thrift:"uuidFicha,10,required" json:"uuidFicha"`
	TpCdsOrigem                                       *int32                                                    `thrift:"tpCdsOrigem,11" json:"tpCdsOrigem"`
}

func NewFichaConsumoAlimentarThrift() *FichaConsumoAlimentarThrift {
	return &FichaConsumoAlimentarThrift{}
}

var FichaConsumoAlimentarThrift_HeaderTransport_DEFAULT *common.UnicaLotacaoHeaderThrift

func (p *FichaConsumoAlimentarThrift) GetHeaderTransport() *common.UnicaLotacaoHeaderThrift {
	if !p.IsSetHeaderTransport() {
		return FichaConsumoAlimentarThrift_HeaderTransport_DEFAULT
	}
	return p.HeaderTransport
}

var FichaConsumoAlimentarThrift_CnsCidadao_DEFAULT string

func (p *FichaConsumoAlimentarThrift) GetCnsCidadao() string {
	if !p.IsSetCnsCidadao() {
		return FichaConsumoAlimentarThrift_CnsCidadao_DEFAULT
	}
	return *p.CnsCidadao
}

var FichaConsumoAlimentarThrift_IdentificacaoUsuario_DEFAULT string

func (p *FichaConsumoAlimentarThrift) GetIdentificacaoUsuario() string {
	if !p.IsSetIdentificacaoUsuario() {
		return FichaConsumoAlimentarThrift_IdentificacaoUsuario_DEFAULT
	}
	return *p.IdentificacaoUsuario
}

var FichaConsumoAlimentarThrift_DataNascimento_DEFAULT int64

func (p *FichaConsumoAlimentarThrift) GetDataNascimento() int64 {
	if !p.IsSetDataNascimento() {
		return FichaConsumoAlimentarThrift_DataNascimento_DEFAULT
	}
	return *p.DataNascimento
}

var FichaConsumoAlimentarThrift_Sexo_DEFAULT int64

func (p *FichaConsumoAlimentarThrift) GetSexo() int64 {
	if !p.IsSetSexo() {
		return FichaConsumoAlimentarThrift_Sexo_DEFAULT
	}
	return *p.Sexo
}

var FichaConsumoAlimentarThrift_LocalAtendimento_DEFAULT int64

func (p *FichaConsumoAlimentarThrift) GetLocalAtendimento() int64 {
	if !p.IsSetLocalAtendimento() {
		return FichaConsumoAlimentarThrift_LocalAtendimento_DEFAULT
	}
	return *p.LocalAtendimento
}

var FichaConsumoAlimentarThrift_PerguntasQuestionarioCriancasMenoresSeisMeses_DEFAULT []*PerguntaQuestionarioCriancasMenoresSeisMesesThrift

func (p *FichaConsumoAlimentarThrift) GetPerguntasQuestionarioCriancasMenoresSeisMeses() []*PerguntaQuestionarioCriancasMenoresSeisMesesThrift {
	return p.PerguntasQuestionarioCriancasMenoresSeisMeses
}

var FichaConsumoAlimentarThrift_PerguntasQuestionarioCriancasDeSeisVinteTresMeses_DEFAULT []*PerguntaQuestionarioCriancasDeSeisVinteTresMesesThrift

func (p *FichaConsumoAlimentarThrift) GetPerguntasQuestionarioCriancasDeSeisVinteTresMeses() []*PerguntaQuestionarioCriancasDeSeisVinteTresMesesThrift {
	return p.PerguntasQuestionarioCriancasDeSeisVinteTresMeses
}

var FichaConsumoAlimentarThrift_PerguntasQuestionarioCriancasComMaisDoisAnos_DEFAULT []*PerguntaQuestionarioCriancasComMaisDoisAnosThrift

func (p *FichaConsumoAlimentarThrift) GetPerguntasQuestionarioCriancasComMaisDoisAnos() []*PerguntaQuestionarioCriancasComMaisDoisAnosThrift {
	return p.PerguntasQuestionarioCriancasComMaisDoisAnos
}

func (p *FichaConsumoAlimentarThrift) GetUuidFicha() string {
	return p.UuidFicha
}

var FichaConsumoAlimentarThrift_TpCdsOrigem_DEFAULT int32

func (p *FichaConsumoAlimentarThrift) GetTpCdsOrigem() int32 {
	if !p.IsSetTpCdsOrigem() {
		return FichaConsumoAlimentarThrift_TpCdsOrigem_DEFAULT
	}
	return *p.TpCdsOrigem
}
func (p *FichaConsumoAlimentarThrift) IsSetHeaderTransport() bool {
	return p.HeaderTransport != nil
}

func (p *FichaConsumoAlimentarThrift) IsSetCnsCidadao() bool {
	return p.CnsCidadao != nil
}

func (p *FichaConsumoAlimentarThrift) IsSetIdentificacaoUsuario() bool {
	return p.IdentificacaoUsuario != nil
}

func (p *FichaConsumoAlimentarThrift) IsSetDataNascimento() bool {
	return p.DataNascimento != nil
}

func (p *FichaConsumoAlimentarThrift) IsSetSexo() bool {
	return p.Sexo != nil
}

func (p *FichaConsumoAlimentarThrift) IsSetLocalAtendimento() bool {
	return p.LocalAtendimento != nil
}

func (p *FichaConsumoAlimentarThrift) IsSetPerguntasQuestionarioCriancasMenoresSeisMeses() bool {
	return p.PerguntasQuestionarioCriancasMenoresSeisMeses != nil
}

func (p *FichaConsumoAlimentarThrift) IsSetPerguntasQuestionarioCriancasDeSeisVinteTresMeses() bool {
	return p.PerguntasQuestionarioCriancasDeSeisVinteTresMeses != nil
}

func (p *FichaConsumoAlimentarThrift) IsSetPerguntasQuestionarioCriancasComMaisDoisAnos() bool {
	return p.PerguntasQuestionarioCriancasComMaisDoisAnos != nil
}

func (p *FichaConsumoAlimentarThrift) IsSetTpCdsOrigem() bool {
	return p.TpCdsOrigem != nil
}

func (p *FichaConsumoAlimentarThrift) Read(iprot thrift.TProtocol) error {
	if _, err := iprot.ReadStructBegin(); err != nil {
		return fmt.Errorf("%T read error: %s", p, err)
	}
	for {
		_, fieldTypeId, fieldId, err := iprot.ReadFieldBegin()
		if err != nil {
			return fmt.Errorf("%T field %d read error: %s", p, fieldId, err)
		}
		if fieldTypeId == thrift.STOP {
			break
		}
		switch fieldId {
		case 1:
			if err := p.ReadField1(iprot); err != nil {
				return err
			}
		case 2:
			if err := p.ReadField2(iprot); err != nil {
				return err
			}
		case 3:
			if err := p.ReadField3(iprot); err != nil {
				return err
			}
		case 4:
			if err := p.ReadField4(iprot); err != nil {
				return err
			}
		case 5:
			if err := p.ReadField5(iprot); err != nil {
				return err
			}
		case 6:
			if err := p.ReadField6(iprot); err != nil {
				return err
			}
		case 7:
			if err := p.ReadField7(iprot); err != nil {
				return err
			}
		case 8:
			if err := p.ReadField8(iprot); err != nil {
				return err
			}
		case 9:
			if err := p.ReadField9(iprot); err != nil {
				return err
			}
		case 10:
			if err := p.ReadField10(iprot); err != nil {
				return err
			}
		case 11:
			if err := p.ReadField11(iprot); err != nil {
				return err
			}
		default:
			if err := iprot.Skip(fieldTypeId); err != nil {
				return err
			}
		}
		if err := iprot.ReadFieldEnd(); err != nil {
			return err
		}
	}
	if err := iprot.ReadStructEnd(); err != nil {
		return fmt.Errorf("%T read struct end error: %s", p, err)
	}
	return nil
}

func (p *FichaConsumoAlimentarThrift) ReadField1(iprot thrift.TProtocol) error {
	p.HeaderTransport = &common.UnicaLotacaoHeaderThrift{}
	if err := p.HeaderTransport.Read(iprot); err != nil {
		return fmt.Errorf("%T error reading struct: %s", p.HeaderTransport, err)
	}
	return nil
}

func (p *FichaConsumoAlimentarThrift) ReadField2(iprot thrift.TProtocol) error {
	if v, err := iprot.ReadString(); err != nil {
		return fmt.Errorf("error reading field 2: %s", err)
	} else {
		p.CnsCidadao = &v
	}
	return nil
}

func (p *FichaConsumoAlimentarThrift) ReadField3(iprot thrift.TProtocol) error {
	if v, err := iprot.ReadString(); err != nil {
		return fmt.Errorf("error reading field 3: %s", err)
	} else {
		p.IdentificacaoUsuario = &v
	}
	return nil
}

func (p *FichaConsumoAlimentarThrift) ReadField4(iprot thrift.TProtocol) error {
	if v, err := iprot.ReadI64(); err != nil {
		return fmt.Errorf("error reading field 4: %s", err)
	} else {
		p.DataNascimento = &v
	}
	return nil
}

func (p *FichaConsumoAlimentarThrift) ReadField5(iprot thrift.TProtocol) error {
	if v, err := iprot.ReadI64(); err != nil {
		return fmt.Errorf("error reading field 5: %s", err)
	} else {
		p.Sexo = &v
	}
	return nil
}

func (p *FichaConsumoAlimentarThrift) ReadField6(iprot thrift.TProtocol) error {
	if v, err := iprot.ReadI64(); err != nil {
		return fmt.Errorf("error reading field 6: %s", err)
	} else {
		p.LocalAtendimento = &v
	}
	return nil
}

func (p *FichaConsumoAlimentarThrift) ReadField7(iprot thrift.TProtocol) error {
	_, size, err := iprot.ReadListBegin()
	if err != nil {
		return fmt.Errorf("error reading list begin: %s", err)
	}
	tSlice := make([]*PerguntaQuestionarioCriancasMenoresSeisMesesThrift, 0, size)
	p.PerguntasQuestionarioCriancasMenoresSeisMeses = tSlice
	for i := 0; i < size; i++ {
		_elem1 := &PerguntaQuestionarioCriancasMenoresSeisMesesThrift{}
		if err := _elem1.Read(iprot); err != nil {
			return fmt.Errorf("%T error reading struct: %s", _elem1, err)
		}
		p.PerguntasQuestionarioCriancasMenoresSeisMeses = append(p.PerguntasQuestionarioCriancasMenoresSeisMeses, _elem1)
	}
	if err := iprot.ReadListEnd(); err != nil {
		return fmt.Errorf("error reading list end: %s", err)
	}
	return nil
}

func (p *FichaConsumoAlimentarThrift) ReadField8(iprot thrift.TProtocol) error {
	_, size, err := iprot.ReadListBegin()
	if err != nil {
		return fmt.Errorf("error reading list begin: %s", err)
	}
	tSlice := make([]*PerguntaQuestionarioCriancasDeSeisVinteTresMesesThrift, 0, size)
	p.PerguntasQuestionarioCriancasDeSeisVinteTresMeses = tSlice
	for i := 0; i < size; i++ {
		_elem2 := &PerguntaQuestionarioCriancasDeSeisVinteTresMesesThrift{}
		if err := _elem2.Read(iprot); err != nil {
			return fmt.Errorf("%T error reading struct: %s", _elem2, err)
		}
		p.PerguntasQuestionarioCriancasDeSeisVinteTresMeses = append(p.PerguntasQuestionarioCriancasDeSeisVinteTresMeses, _elem2)
	}
	if err := iprot.ReadListEnd(); err != nil {
		return fmt.Errorf("error reading list end: %s", err)
	}
	return nil
}

func (p *FichaConsumoAlimentarThrift) ReadField9(iprot thrift.TProtocol) error {
	_, size, err := iprot.ReadListBegin()
	if err != nil {
		return fmt.Errorf("error reading list begin: %s", err)
	}
	tSlice := make([]*PerguntaQuestionarioCriancasComMaisDoisAnosThrift, 0, size)
	p.PerguntasQuestionarioCriancasComMaisDoisAnos = tSlice
	for i := 0; i < size; i++ {
		_elem3 := &PerguntaQuestionarioCriancasComMaisDoisAnosThrift{}
		if err := _elem3.Read(iprot); err != nil {
			return fmt.Errorf("%T error reading struct: %s", _elem3, err)
		}
		p.PerguntasQuestionarioCriancasComMaisDoisAnos = append(p.PerguntasQuestionarioCriancasComMaisDoisAnos, _elem3)
	}
	if err := iprot.ReadListEnd(); err != nil {
		return fmt.Errorf("error reading list end: %s", err)
	}
	return nil
}

func (p *FichaConsumoAlimentarThrift) ReadField10(iprot thrift.TProtocol) error {
	if v, err := iprot.ReadString(); err != nil {
		return fmt.Errorf("error reading field 10: %s", err)
	} else {
		p.UuidFicha = v
	}
	return nil
}

func (p *FichaConsumoAlimentarThrift) ReadField11(iprot thrift.TProtocol) error {
	if v, err := iprot.ReadI32(); err != nil {
		return fmt.Errorf("error reading field 11: %s", err)
	} else {
		p.TpCdsOrigem = &v
	}
	return nil
}

func (p *FichaConsumoAlimentarThrift) Write(oprot thrift.TProtocol) error {
	if err := oprot.WriteStructBegin("FichaConsumoAlimentarThrift"); err != nil {
		return fmt.Errorf("%T write struct begin error: %s", p, err)
	}
	if err := p.writeField1(oprot); err != nil {
		return err
	}
	if err := p.writeField2(oprot); err != nil {
		return err
	}
	if err := p.writeField3(oprot); err != nil {
		return err
	}
	if err := p.writeField4(oprot); err != nil {
		return err
	}
	if err := p.writeField5(oprot); err != nil {
		return err
	}
	if err := p.writeField6(oprot); err != nil {
		return err
	}
	if err := p.writeField7(oprot); err != nil {
		return err
	}
	if err := p.writeField8(oprot); err != nil {
		return err
	}
	if err := p.writeField9(oprot); err != nil {
		return err
	}
	if err := p.writeField10(oprot); err != nil {
		return err
	}
	if err := p.writeField11(oprot); err != nil {
		return err
	}
	if err := oprot.WriteFieldStop(); err != nil {
		return fmt.Errorf("write field stop error: %s", err)
	}
	if err := oprot.WriteStructEnd(); err != nil {
		return fmt.Errorf("write struct stop error: %s", err)
	}
	return nil
}

func (p *FichaConsumoAlimentarThrift) writeField1(oprot thrift.TProtocol) (err error) {
	if p.IsSetHeaderTransport() {
		if err := oprot.WriteFieldBegin("headerTransport", thrift.STRUCT, 1); err != nil {
			return fmt.Errorf("%T write field begin error 1:headerTransport: %s", p, err)
		}
		if err := p.HeaderTransport.Write(oprot); err != nil {
			return fmt.Errorf("%T error writing struct: %s", p.HeaderTransport, err)
		}
		if err := oprot.WriteFieldEnd(); err != nil {
			return fmt.Errorf("%T write field end error 1:headerTransport: %s", p, err)
		}
	}
	return err
}

func (p *FichaConsumoAlimentarThrift) writeField2(oprot thrift.TProtocol) (err error) {
	if p.IsSetCnsCidadao() {
		if err := oprot.WriteFieldBegin("cnsCidadao", thrift.STRING, 2); err != nil {
			return fmt.Errorf("%T write field begin error 2:cnsCidadao: %s", p, err)
		}
		if err := oprot.WriteString(string(*p.CnsCidadao)); err != nil {
			return fmt.Errorf("%T.cnsCidadao (2) field write error: %s", p, err)
		}
		if err := oprot.WriteFieldEnd(); err != nil {
			return fmt.Errorf("%T write field end error 2:cnsCidadao: %s", p, err)
		}
	}
	return err
}

func (p *FichaConsumoAlimentarThrift) writeField3(oprot thrift.TProtocol) (err error) {
	if p.IsSetIdentificacaoUsuario() {
		if err := oprot.WriteFieldBegin("identificacaoUsuario", thrift.STRING, 3); err != nil {
			return fmt.Errorf("%T write field begin error 3:identificacaoUsuario: %s", p, err)
		}
		if err := oprot.WriteString(string(*p.IdentificacaoUsuario)); err != nil {
			return fmt.Errorf("%T.identificacaoUsuario (3) field write error: %s", p, err)
		}
		if err := oprot.WriteFieldEnd(); err != nil {
			return fmt.Errorf("%T write field end error 3:identificacaoUsuario: %s", p, err)
		}
	}
	return err
}

func (p *FichaConsumoAlimentarThrift) writeField4(oprot thrift.TProtocol) (err error) {
	if p.IsSetDataNascimento() {
		if err := oprot.WriteFieldBegin("dataNascimento", thrift.I64, 4); err != nil {
			return fmt.Errorf("%T write field begin error 4:dataNascimento: %s", p, err)
		}
		if err := oprot.WriteI64(int64(*p.DataNascimento)); err != nil {
			return fmt.Errorf("%T.dataNascimento (4) field write error: %s", p, err)
		}
		if err := oprot.WriteFieldEnd(); err != nil {
			return fmt.Errorf("%T write field end error 4:dataNascimento: %s", p, err)
		}
	}
	return err
}

func (p *FichaConsumoAlimentarThrift) writeField5(oprot thrift.TProtocol) (err error) {
	if p.IsSetSexo() {
		if err := oprot.WriteFieldBegin("sexo", thrift.I64, 5); err != nil {
			return fmt.Errorf("%T write field begin error 5:sexo: %s", p, err)
		}
		if err := oprot.WriteI64(int64(*p.Sexo)); err != nil {
			return fmt.Errorf("%T.sexo (5) field write error: %s", p, err)
		}
		if err := oprot.WriteFieldEnd(); err != nil {
			return fmt.Errorf("%T write field end error 5:sexo: %s", p, err)
		}
	}
	return err
}

func (p *FichaConsumoAlimentarThrift) writeField6(oprot thrift.TProtocol) (err error) {
	if p.IsSetLocalAtendimento() {
		if err := oprot.WriteFieldBegin("localAtendimento", thrift.I64, 6); err != nil {
			return fmt.Errorf("%T write field begin error 6:localAtendimento: %s", p, err)
		}
		if err := oprot.WriteI64(int64(*p.LocalAtendimento)); err != nil {
			return fmt.Errorf("%T.localAtendimento (6) field write error: %s", p, err)
		}
		if err := oprot.WriteFieldEnd(); err != nil {
			return fmt.Errorf("%T write field end error 6:localAtendimento: %s", p, err)
		}
	}
	return err
}

func (p *FichaConsumoAlimentarThrift) writeField7(oprot thrift.TProtocol) (err error) {
	if p.IsSetPerguntasQuestionarioCriancasMenoresSeisMeses() {
		if err := oprot.WriteFieldBegin("perguntasQuestionarioCriancasMenoresSeisMeses", thrift.LIST, 7); err != nil {
			return fmt.Errorf("%T write field begin error 7:perguntasQuestionarioCriancasMenoresSeisMeses: %s", p, err)
		}
		if err := oprot.WriteListBegin(thrift.STRUCT, len(p.PerguntasQuestionarioCriancasMenoresSeisMeses)); err != nil {
			return fmt.Errorf("error writing list begin: %s", err)
		}
		for _, v := range p.PerguntasQuestionarioCriancasMenoresSeisMeses {
			if err := v.Write(oprot); err != nil {
				return fmt.Errorf("%T error writing struct: %s", v, err)
			}
		}
		if err := oprot.WriteListEnd(); err != nil {
			return fmt.Errorf("error writing list end: %s", err)
		}
		if err := oprot.WriteFieldEnd(); err != nil {
			return fmt.Errorf("%T write field end error 7:perguntasQuestionarioCriancasMenoresSeisMeses: %s", p, err)
		}
	}
	return err
}

func (p *FichaConsumoAlimentarThrift) writeField8(oprot thrift.TProtocol) (err error) {
	if p.IsSetPerguntasQuestionarioCriancasDeSeisVinteTresMeses() {
		if err := oprot.WriteFieldBegin("perguntasQuestionarioCriancasDeSeisVinteTresMeses", thrift.LIST, 8); err != nil {
			return fmt.Errorf("%T write field begin error 8:perguntasQuestionarioCriancasDeSeisVinteTresMeses: %s", p, err)
		}
		if err := oprot.WriteListBegin(thrift.STRUCT, len(p.PerguntasQuestionarioCriancasDeSeisVinteTresMeses)); err != nil {
			return fmt.Errorf("error writing list begin: %s", err)
		}
		for _, v := range p.PerguntasQuestionarioCriancasDeSeisVinteTresMeses {
			if err := v.Write(oprot); err != nil {
				return fmt.Errorf("%T error writing struct: %s", v, err)
			}
		}
		if err := oprot.WriteListEnd(); err != nil {
			return fmt.Errorf("error writing list end: %s", err)
		}
		if err := oprot.WriteFieldEnd(); err != nil {
			return fmt.Errorf("%T write field end error 8:perguntasQuestionarioCriancasDeSeisVinteTresMeses: %s", p, err)
		}
	}
	return err
}

func (p *FichaConsumoAlimentarThrift) writeField9(oprot thrift.TProtocol) (err error) {
	if p.IsSetPerguntasQuestionarioCriancasComMaisDoisAnos() {
		if err := oprot.WriteFieldBegin("perguntasQuestionarioCriancasComMaisDoisAnos", thrift.LIST, 9); err != nil {
			return fmt.Errorf("%T write field begin error 9:perguntasQuestionarioCriancasComMaisDoisAnos: %s", p, err)
		}
		if err := oprot.WriteListBegin(thrift.STRUCT, len(p.PerguntasQuestionarioCriancasComMaisDoisAnos)); err != nil {
			return fmt.Errorf("error writing list begin: %s", err)
		}
		for _, v := range p.PerguntasQuestionarioCriancasComMaisDoisAnos {
			if err := v.Write(oprot); err != nil {
				return fmt.Errorf("%T error writing struct: %s", v, err)
			}
		}
		if err := oprot.WriteListEnd(); err != nil {
			return fmt.Errorf("error writing list end: %s", err)
		}
		if err := oprot.WriteFieldEnd(); err != nil {
			return fmt.Errorf("%T write field end error 9:perguntasQuestionarioCriancasComMaisDoisAnos: %s", p, err)
		}
	}
	return err
}

func (p *FichaConsumoAlimentarThrift) writeField10(oprot thrift.TProtocol) (err error) {
	if err := oprot.WriteFieldBegin("uuidFicha", thrift.STRING, 10); err != nil {
		return fmt.Errorf("%T write field begin error 10:uuidFicha: %s", p, err)
	}
	if err := oprot.WriteString(string(p.UuidFicha)); err != nil {
		return fmt.Errorf("%T.uuidFicha (10) field write error: %s", p, err)
	}
	if err := oprot.WriteFieldEnd(); err != nil {
		return fmt.Errorf("%T write field end error 10:uuidFicha: %s", p, err)
	}
	return err
}

func (p *FichaConsumoAlimentarThrift) writeField11(oprot thrift.TProtocol) (err error) {
	if p.IsSetTpCdsOrigem() {
		if err := oprot.WriteFieldBegin("tpCdsOrigem", thrift.I32, 11); err != nil {
			return fmt.Errorf("%T write field begin error 11:tpCdsOrigem: %s", p, err)
		}
		if err := oprot.WriteI32(int32(*p.TpCdsOrigem)); err != nil {
			return fmt.Errorf("%T.tpCdsOrigem (11) field write error: %s", p, err)
		}
		if err := oprot.WriteFieldEnd(); err != nil {
			return fmt.Errorf("%T write field end error 11:tpCdsOrigem: %s", p, err)
		}
	}
	return err
}

func (p *FichaConsumoAlimentarThrift) String() string {
	if p == nil {
		return "<nil>"
	}
	return fmt.Sprintf("FichaConsumoAlimentarThrift(%+v)", *p)
}
