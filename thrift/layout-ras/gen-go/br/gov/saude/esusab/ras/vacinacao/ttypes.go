// Autogenerated by Thrift Compiler (0.9.2)
// DO NOT EDIT UNLESS YOU ARE SURE THAT YOU KNOW WHAT YOU ARE DOING

package vacinacao

import (
	"br/gov/saude/esusab/ras/common"
	"bytes"
	"fmt"
	"git.apache.org/thrift.git/lib/go/thrift"
)

// (needed to ensure safety because of naive import list construction.)
var _ = thrift.ZERO
var _ = fmt.Printf
var _ = bytes.Equal

var _ = common.GoUnusedProtection__
var GoUnusedProtection__ int

type VacinaRowThrift struct {
	Imunobiologico      *int64  `thrift:"imunobiologico,1" json:"imunobiologico"`
	EstrategiaVacinacao *int64  `thrift:"estrategiaVacinacao,2" json:"estrategiaVacinacao"`
	Dose                *int64  `thrift:"dose,3" json:"dose"`
	Lote                *string `thrift:"lote,4" json:"lote"`
	Fabricante          *string `thrift:"fabricante,5" json:"fabricante"`
}

func NewVacinaRowThrift() *VacinaRowThrift {
	return &VacinaRowThrift{}
}

var VacinaRowThrift_Imunobiologico_DEFAULT int64

func (p *VacinaRowThrift) GetImunobiologico() int64 {
	if !p.IsSetImunobiologico() {
		return VacinaRowThrift_Imunobiologico_DEFAULT
	}
	return *p.Imunobiologico
}

var VacinaRowThrift_EstrategiaVacinacao_DEFAULT int64

func (p *VacinaRowThrift) GetEstrategiaVacinacao() int64 {
	if !p.IsSetEstrategiaVacinacao() {
		return VacinaRowThrift_EstrategiaVacinacao_DEFAULT
	}
	return *p.EstrategiaVacinacao
}

var VacinaRowThrift_Dose_DEFAULT int64

func (p *VacinaRowThrift) GetDose() int64 {
	if !p.IsSetDose() {
		return VacinaRowThrift_Dose_DEFAULT
	}
	return *p.Dose
}

var VacinaRowThrift_Lote_DEFAULT string

func (p *VacinaRowThrift) GetLote() string {
	if !p.IsSetLote() {
		return VacinaRowThrift_Lote_DEFAULT
	}
	return *p.Lote
}

var VacinaRowThrift_Fabricante_DEFAULT string

func (p *VacinaRowThrift) GetFabricante() string {
	if !p.IsSetFabricante() {
		return VacinaRowThrift_Fabricante_DEFAULT
	}
	return *p.Fabricante
}
func (p *VacinaRowThrift) IsSetImunobiologico() bool {
	return p.Imunobiologico != nil
}

func (p *VacinaRowThrift) IsSetEstrategiaVacinacao() bool {
	return p.EstrategiaVacinacao != nil
}

func (p *VacinaRowThrift) IsSetDose() bool {
	return p.Dose != nil
}

func (p *VacinaRowThrift) IsSetLote() bool {
	return p.Lote != nil
}

func (p *VacinaRowThrift) IsSetFabricante() bool {
	return p.Fabricante != nil
}

func (p *VacinaRowThrift) Read(iprot thrift.TProtocol) error {
	if _, err := iprot.ReadStructBegin(); err != nil {
		return fmt.Errorf("%T read error: %s", p, err)
	}
	for {
		_, fieldTypeId, fieldId, err := iprot.ReadFieldBegin()
		if err != nil {
			return fmt.Errorf("%T field %d read error: %s", p, fieldId, err)
		}
		if fieldTypeId == thrift.STOP {
			break
		}
		switch fieldId {
		case 1:
			if err := p.ReadField1(iprot); err != nil {
				return err
			}
		case 2:
			if err := p.ReadField2(iprot); err != nil {
				return err
			}
		case 3:
			if err := p.ReadField3(iprot); err != nil {
				return err
			}
		case 4:
			if err := p.ReadField4(iprot); err != nil {
				return err
			}
		case 5:
			if err := p.ReadField5(iprot); err != nil {
				return err
			}
		default:
			if err := iprot.Skip(fieldTypeId); err != nil {
				return err
			}
		}
		if err := iprot.ReadFieldEnd(); err != nil {
			return err
		}
	}
	if err := iprot.ReadStructEnd(); err != nil {
		return fmt.Errorf("%T read struct end error: %s", p, err)
	}
	return nil
}

func (p *VacinaRowThrift) ReadField1(iprot thrift.TProtocol) error {
	if v, err := iprot.ReadI64(); err != nil {
		return fmt.Errorf("error reading field 1: %s", err)
	} else {
		p.Imunobiologico = &v
	}
	return nil
}

func (p *VacinaRowThrift) ReadField2(iprot thrift.TProtocol) error {
	if v, err := iprot.ReadI64(); err != nil {
		return fmt.Errorf("error reading field 2: %s", err)
	} else {
		p.EstrategiaVacinacao = &v
	}
	return nil
}

func (p *VacinaRowThrift) ReadField3(iprot thrift.TProtocol) error {
	if v, err := iprot.ReadI64(); err != nil {
		return fmt.Errorf("error reading field 3: %s", err)
	} else {
		p.Dose = &v
	}
	return nil
}

func (p *VacinaRowThrift) ReadField4(iprot thrift.TProtocol) error {
	if v, err := iprot.ReadString(); err != nil {
		return fmt.Errorf("error reading field 4: %s", err)
	} else {
		p.Lote = &v
	}
	return nil
}

func (p *VacinaRowThrift) ReadField5(iprot thrift.TProtocol) error {
	if v, err := iprot.ReadString(); err != nil {
		return fmt.Errorf("error reading field 5: %s", err)
	} else {
		p.Fabricante = &v
	}
	return nil
}

func (p *VacinaRowThrift) Write(oprot thrift.TProtocol) error {
	if err := oprot.WriteStructBegin("VacinaRowThrift"); err != nil {
		return fmt.Errorf("%T write struct begin error: %s", p, err)
	}
	if err := p.writeField1(oprot); err != nil {
		return err
	}
	if err := p.writeField2(oprot); err != nil {
		return err
	}
	if err := p.writeField3(oprot); err != nil {
		return err
	}
	if err := p.writeField4(oprot); err != nil {
		return err
	}
	if err := p.writeField5(oprot); err != nil {
		return err
	}
	if err := oprot.WriteFieldStop(); err != nil {
		return fmt.Errorf("write field stop error: %s", err)
	}
	if err := oprot.WriteStructEnd(); err != nil {
		return fmt.Errorf("write struct stop error: %s", err)
	}
	return nil
}

func (p *VacinaRowThrift) writeField1(oprot thrift.TProtocol) (err error) {
	if p.IsSetImunobiologico() {
		if err := oprot.WriteFieldBegin("imunobiologico", thrift.I64, 1); err != nil {
			return fmt.Errorf("%T write field begin error 1:imunobiologico: %s", p, err)
		}
		if err := oprot.WriteI64(int64(*p.Imunobiologico)); err != nil {
			return fmt.Errorf("%T.imunobiologico (1) field write error: %s", p, err)
		}
		if err := oprot.WriteFieldEnd(); err != nil {
			return fmt.Errorf("%T write field end error 1:imunobiologico: %s", p, err)
		}
	}
	return err
}

func (p *VacinaRowThrift) writeField2(oprot thrift.TProtocol) (err error) {
	if p.IsSetEstrategiaVacinacao() {
		if err := oprot.WriteFieldBegin("estrategiaVacinacao", thrift.I64, 2); err != nil {
			return fmt.Errorf("%T write field begin error 2:estrategiaVacinacao: %s", p, err)
		}
		if err := oprot.WriteI64(int64(*p.EstrategiaVacinacao)); err != nil {
			return fmt.Errorf("%T.estrategiaVacinacao (2) field write error: %s", p, err)
		}
		if err := oprot.WriteFieldEnd(); err != nil {
			return fmt.Errorf("%T write field end error 2:estrategiaVacinacao: %s", p, err)
		}
	}
	return err
}

func (p *VacinaRowThrift) writeField3(oprot thrift.TProtocol) (err error) {
	if p.IsSetDose() {
		if err := oprot.WriteFieldBegin("dose", thrift.I64, 3); err != nil {
			return fmt.Errorf("%T write field begin error 3:dose: %s", p, err)
		}
		if err := oprot.WriteI64(int64(*p.Dose)); err != nil {
			return fmt.Errorf("%T.dose (3) field write error: %s", p, err)
		}
		if err := oprot.WriteFieldEnd(); err != nil {
			return fmt.Errorf("%T write field end error 3:dose: %s", p, err)
		}
	}
	return err
}

func (p *VacinaRowThrift) writeField4(oprot thrift.TProtocol) (err error) {
	if p.IsSetLote() {
		if err := oprot.WriteFieldBegin("lote", thrift.STRING, 4); err != nil {
			return fmt.Errorf("%T write field begin error 4:lote: %s", p, err)
		}
		if err := oprot.WriteString(string(*p.Lote)); err != nil {
			return fmt.Errorf("%T.lote (4) field write error: %s", p, err)
		}
		if err := oprot.WriteFieldEnd(); err != nil {
			return fmt.Errorf("%T write field end error 4:lote: %s", p, err)
		}
	}
	return err
}

func (p *VacinaRowThrift) writeField5(oprot thrift.TProtocol) (err error) {
	if p.IsSetFabricante() {
		if err := oprot.WriteFieldBegin("fabricante", thrift.STRING, 5); err != nil {
			return fmt.Errorf("%T write field begin error 5:fabricante: %s", p, err)
		}
		if err := oprot.WriteString(string(*p.Fabricante)); err != nil {
			return fmt.Errorf("%T.fabricante (5) field write error: %s", p, err)
		}
		if err := oprot.WriteFieldEnd(); err != nil {
			return fmt.Errorf("%T write field end error 5:fabricante: %s", p, err)
		}
	}
	return err
}

func (p *VacinaRowThrift) String() string {
	if p == nil {
		return "<nil>"
	}
	return fmt.Sprintf("VacinaRowThrift(%+v)", *p)
}

type FichaVacinacaoChildThrift struct {
	Turno                 *int64             `thrift:"turno,1" json:"turno"`
	NumProntuario         *string            `thrift:"numProntuario,2" json:"numProntuario"`
	CnsCidadao            *string            `thrift:"cnsCidadao,3" json:"cnsCidadao"`
	DtNascimento          *int64             `thrift:"dtNascimento,4" json:"dtNascimento"`
	Sexo                  *int64             `thrift:"sexo,5" json:"sexo"`
	LocalAtendimento      *int64             `thrift:"localAtendimento,6" json:"localAtendimento"`
	Viajante              *bool              `thrift:"viajante,7" json:"viajante"`
	ComunicanteHanseniase *bool              `thrift:"comunicanteHanseniase,8" json:"comunicanteHanseniase"`
	Gestante              *bool              `thrift:"gestante,9" json:"gestante"`
	Puerpera              *bool              `thrift:"puerpera,10" json:"puerpera"`
	Vacinas               []*VacinaRowThrift `thrift:"vacinas,11" json:"vacinas"`
}

func NewFichaVacinacaoChildThrift() *FichaVacinacaoChildThrift {
	return &FichaVacinacaoChildThrift{}
}

var FichaVacinacaoChildThrift_Turno_DEFAULT int64

func (p *FichaVacinacaoChildThrift) GetTurno() int64 {
	if !p.IsSetTurno() {
		return FichaVacinacaoChildThrift_Turno_DEFAULT
	}
	return *p.Turno
}

var FichaVacinacaoChildThrift_NumProntuario_DEFAULT string

func (p *FichaVacinacaoChildThrift) GetNumProntuario() string {
	if !p.IsSetNumProntuario() {
		return FichaVacinacaoChildThrift_NumProntuario_DEFAULT
	}
	return *p.NumProntuario
}

var FichaVacinacaoChildThrift_CnsCidadao_DEFAULT string

func (p *FichaVacinacaoChildThrift) GetCnsCidadao() string {
	if !p.IsSetCnsCidadao() {
		return FichaVacinacaoChildThrift_CnsCidadao_DEFAULT
	}
	return *p.CnsCidadao
}

var FichaVacinacaoChildThrift_DtNascimento_DEFAULT int64

func (p *FichaVacinacaoChildThrift) GetDtNascimento() int64 {
	if !p.IsSetDtNascimento() {
		return FichaVacinacaoChildThrift_DtNascimento_DEFAULT
	}
	return *p.DtNascimento
}

var FichaVacinacaoChildThrift_Sexo_DEFAULT int64

func (p *FichaVacinacaoChildThrift) GetSexo() int64 {
	if !p.IsSetSexo() {
		return FichaVacinacaoChildThrift_Sexo_DEFAULT
	}
	return *p.Sexo
}

var FichaVacinacaoChildThrift_LocalAtendimento_DEFAULT int64

func (p *FichaVacinacaoChildThrift) GetLocalAtendimento() int64 {
	if !p.IsSetLocalAtendimento() {
		return FichaVacinacaoChildThrift_LocalAtendimento_DEFAULT
	}
	return *p.LocalAtendimento
}

var FichaVacinacaoChildThrift_Viajante_DEFAULT bool

func (p *FichaVacinacaoChildThrift) GetViajante() bool {
	if !p.IsSetViajante() {
		return FichaVacinacaoChildThrift_Viajante_DEFAULT
	}
	return *p.Viajante
}

var FichaVacinacaoChildThrift_ComunicanteHanseniase_DEFAULT bool

func (p *FichaVacinacaoChildThrift) GetComunicanteHanseniase() bool {
	if !p.IsSetComunicanteHanseniase() {
		return FichaVacinacaoChildThrift_ComunicanteHanseniase_DEFAULT
	}
	return *p.ComunicanteHanseniase
}

var FichaVacinacaoChildThrift_Gestante_DEFAULT bool

func (p *FichaVacinacaoChildThrift) GetGestante() bool {
	if !p.IsSetGestante() {
		return FichaVacinacaoChildThrift_Gestante_DEFAULT
	}
	return *p.Gestante
}

var FichaVacinacaoChildThrift_Puerpera_DEFAULT bool

func (p *FichaVacinacaoChildThrift) GetPuerpera() bool {
	if !p.IsSetPuerpera() {
		return FichaVacinacaoChildThrift_Puerpera_DEFAULT
	}
	return *p.Puerpera
}

var FichaVacinacaoChildThrift_Vacinas_DEFAULT []*VacinaRowThrift

func (p *FichaVacinacaoChildThrift) GetVacinas() []*VacinaRowThrift {
	return p.Vacinas
}
func (p *FichaVacinacaoChildThrift) IsSetTurno() bool {
	return p.Turno != nil
}

func (p *FichaVacinacaoChildThrift) IsSetNumProntuario() bool {
	return p.NumProntuario != nil
}

func (p *FichaVacinacaoChildThrift) IsSetCnsCidadao() bool {
	return p.CnsCidadao != nil
}

func (p *FichaVacinacaoChildThrift) IsSetDtNascimento() bool {
	return p.DtNascimento != nil
}

func (p *FichaVacinacaoChildThrift) IsSetSexo() bool {
	return p.Sexo != nil
}

func (p *FichaVacinacaoChildThrift) IsSetLocalAtendimento() bool {
	return p.LocalAtendimento != nil
}

func (p *FichaVacinacaoChildThrift) IsSetViajante() bool {
	return p.Viajante != nil
}

func (p *FichaVacinacaoChildThrift) IsSetComunicanteHanseniase() bool {
	return p.ComunicanteHanseniase != nil
}

func (p *FichaVacinacaoChildThrift) IsSetGestante() bool {
	return p.Gestante != nil
}

func (p *FichaVacinacaoChildThrift) IsSetPuerpera() bool {
	return p.Puerpera != nil
}

func (p *FichaVacinacaoChildThrift) IsSetVacinas() bool {
	return p.Vacinas != nil
}

func (p *FichaVacinacaoChildThrift) Read(iprot thrift.TProtocol) error {
	if _, err := iprot.ReadStructBegin(); err != nil {
		return fmt.Errorf("%T read error: %s", p, err)
	}
	for {
		_, fieldTypeId, fieldId, err := iprot.ReadFieldBegin()
		if err != nil {
			return fmt.Errorf("%T field %d read error: %s", p, fieldId, err)
		}
		if fieldTypeId == thrift.STOP {
			break
		}
		switch fieldId {
		case 1:
			if err := p.ReadField1(iprot); err != nil {
				return err
			}
		case 2:
			if err := p.ReadField2(iprot); err != nil {
				return err
			}
		case 3:
			if err := p.ReadField3(iprot); err != nil {
				return err
			}
		case 4:
			if err := p.ReadField4(iprot); err != nil {
				return err
			}
		case 5:
			if err := p.ReadField5(iprot); err != nil {
				return err
			}
		case 6:
			if err := p.ReadField6(iprot); err != nil {
				return err
			}
		case 7:
			if err := p.ReadField7(iprot); err != nil {
				return err
			}
		case 8:
			if err := p.ReadField8(iprot); err != nil {
				return err
			}
		case 9:
			if err := p.ReadField9(iprot); err != nil {
				return err
			}
		case 10:
			if err := p.ReadField10(iprot); err != nil {
				return err
			}
		case 11:
			if err := p.ReadField11(iprot); err != nil {
				return err
			}
		default:
			if err := iprot.Skip(fieldTypeId); err != nil {
				return err
			}
		}
		if err := iprot.ReadFieldEnd(); err != nil {
			return err
		}
	}
	if err := iprot.ReadStructEnd(); err != nil {
		return fmt.Errorf("%T read struct end error: %s", p, err)
	}
	return nil
}

func (p *FichaVacinacaoChildThrift) ReadField1(iprot thrift.TProtocol) error {
	if v, err := iprot.ReadI64(); err != nil {
		return fmt.Errorf("error reading field 1: %s", err)
	} else {
		p.Turno = &v
	}
	return nil
}

func (p *FichaVacinacaoChildThrift) ReadField2(iprot thrift.TProtocol) error {
	if v, err := iprot.ReadString(); err != nil {
		return fmt.Errorf("error reading field 2: %s", err)
	} else {
		p.NumProntuario = &v
	}
	return nil
}

func (p *FichaVacinacaoChildThrift) ReadField3(iprot thrift.TProtocol) error {
	if v, err := iprot.ReadString(); err != nil {
		return fmt.Errorf("error reading field 3: %s", err)
	} else {
		p.CnsCidadao = &v
	}
	return nil
}

func (p *FichaVacinacaoChildThrift) ReadField4(iprot thrift.TProtocol) error {
	if v, err := iprot.ReadI64(); err != nil {
		return fmt.Errorf("error reading field 4: %s", err)
	} else {
		p.DtNascimento = &v
	}
	return nil
}

func (p *FichaVacinacaoChildThrift) ReadField5(iprot thrift.TProtocol) error {
	if v, err := iprot.ReadI64(); err != nil {
		return fmt.Errorf("error reading field 5: %s", err)
	} else {
		p.Sexo = &v
	}
	return nil
}

func (p *FichaVacinacaoChildThrift) ReadField6(iprot thrift.TProtocol) error {
	if v, err := iprot.ReadI64(); err != nil {
		return fmt.Errorf("error reading field 6: %s", err)
	} else {
		p.LocalAtendimento = &v
	}
	return nil
}

func (p *FichaVacinacaoChildThrift) ReadField7(iprot thrift.TProtocol) error {
	if v, err := iprot.ReadBool(); err != nil {
		return fmt.Errorf("error reading field 7: %s", err)
	} else {
		p.Viajante = &v
	}
	return nil
}

func (p *FichaVacinacaoChildThrift) ReadField8(iprot thrift.TProtocol) error {
	if v, err := iprot.ReadBool(); err != nil {
		return fmt.Errorf("error reading field 8: %s", err)
	} else {
		p.ComunicanteHanseniase = &v
	}
	return nil
}

func (p *FichaVacinacaoChildThrift) ReadField9(iprot thrift.TProtocol) error {
	if v, err := iprot.ReadBool(); err != nil {
		return fmt.Errorf("error reading field 9: %s", err)
	} else {
		p.Gestante = &v
	}
	return nil
}

func (p *FichaVacinacaoChildThrift) ReadField10(iprot thrift.TProtocol) error {
	if v, err := iprot.ReadBool(); err != nil {
		return fmt.Errorf("error reading field 10: %s", err)
	} else {
		p.Puerpera = &v
	}
	return nil
}

func (p *FichaVacinacaoChildThrift) ReadField11(iprot thrift.TProtocol) error {
	_, size, err := iprot.ReadListBegin()
	if err != nil {
		return fmt.Errorf("error reading list begin: %s", err)
	}
	tSlice := make([]*VacinaRowThrift, 0, size)
	p.Vacinas = tSlice
	for i := 0; i < size; i++ {
		_elem0 := &VacinaRowThrift{}
		if err := _elem0.Read(iprot); err != nil {
			return fmt.Errorf("%T error reading struct: %s", _elem0, err)
		}
		p.Vacinas = append(p.Vacinas, _elem0)
	}
	if err := iprot.ReadListEnd(); err != nil {
		return fmt.Errorf("error reading list end: %s", err)
	}
	return nil
}

func (p *FichaVacinacaoChildThrift) Write(oprot thrift.TProtocol) error {
	if err := oprot.WriteStructBegin("FichaVacinacaoChildThrift"); err != nil {
		return fmt.Errorf("%T write struct begin error: %s", p, err)
	}
	if err := p.writeField1(oprot); err != nil {
		return err
	}
	if err := p.writeField2(oprot); err != nil {
		return err
	}
	if err := p.writeField3(oprot); err != nil {
		return err
	}
	if err := p.writeField4(oprot); err != nil {
		return err
	}
	if err := p.writeField5(oprot); err != nil {
		return err
	}
	if err := p.writeField6(oprot); err != nil {
		return err
	}
	if err := p.writeField7(oprot); err != nil {
		return err
	}
	if err := p.writeField8(oprot); err != nil {
		return err
	}
	if err := p.writeField9(oprot); err != nil {
		return err
	}
	if err := p.writeField10(oprot); err != nil {
		return err
	}
	if err := p.writeField11(oprot); err != nil {
		return err
	}
	if err := oprot.WriteFieldStop(); err != nil {
		return fmt.Errorf("write field stop error: %s", err)
	}
	if err := oprot.WriteStructEnd(); err != nil {
		return fmt.Errorf("write struct stop error: %s", err)
	}
	return nil
}

func (p *FichaVacinacaoChildThrift) writeField1(oprot thrift.TProtocol) (err error) {
	if p.IsSetTurno() {
		if err := oprot.WriteFieldBegin("turno", thrift.I64, 1); err != nil {
			return fmt.Errorf("%T write field begin error 1:turno: %s", p, err)
		}
		if err := oprot.WriteI64(int64(*p.Turno)); err != nil {
			return fmt.Errorf("%T.turno (1) field write error: %s", p, err)
		}
		if err := oprot.WriteFieldEnd(); err != nil {
			return fmt.Errorf("%T write field end error 1:turno: %s", p, err)
		}
	}
	return err
}

func (p *FichaVacinacaoChildThrift) writeField2(oprot thrift.TProtocol) (err error) {
	if p.IsSetNumProntuario() {
		if err := oprot.WriteFieldBegin("numProntuario", thrift.STRING, 2); err != nil {
			return fmt.Errorf("%T write field begin error 2:numProntuario: %s", p, err)
		}
		if err := oprot.WriteString(string(*p.NumProntuario)); err != nil {
			return fmt.Errorf("%T.numProntuario (2) field write error: %s", p, err)
		}
		if err := oprot.WriteFieldEnd(); err != nil {
			return fmt.Errorf("%T write field end error 2:numProntuario: %s", p, err)
		}
	}
	return err
}

func (p *FichaVacinacaoChildThrift) writeField3(oprot thrift.TProtocol) (err error) {
	if p.IsSetCnsCidadao() {
		if err := oprot.WriteFieldBegin("cnsCidadao", thrift.STRING, 3); err != nil {
			return fmt.Errorf("%T write field begin error 3:cnsCidadao: %s", p, err)
		}
		if err := oprot.WriteString(string(*p.CnsCidadao)); err != nil {
			return fmt.Errorf("%T.cnsCidadao (3) field write error: %s", p, err)
		}
		if err := oprot.WriteFieldEnd(); err != nil {
			return fmt.Errorf("%T write field end error 3:cnsCidadao: %s", p, err)
		}
	}
	return err
}

func (p *FichaVacinacaoChildThrift) writeField4(oprot thrift.TProtocol) (err error) {
	if p.IsSetDtNascimento() {
		if err := oprot.WriteFieldBegin("dtNascimento", thrift.I64, 4); err != nil {
			return fmt.Errorf("%T write field begin error 4:dtNascimento: %s", p, err)
		}
		if err := oprot.WriteI64(int64(*p.DtNascimento)); err != nil {
			return fmt.Errorf("%T.dtNascimento (4) field write error: %s", p, err)
		}
		if err := oprot.WriteFieldEnd(); err != nil {
			return fmt.Errorf("%T write field end error 4:dtNascimento: %s", p, err)
		}
	}
	return err
}

func (p *FichaVacinacaoChildThrift) writeField5(oprot thrift.TProtocol) (err error) {
	if p.IsSetSexo() {
		if err := oprot.WriteFieldBegin("sexo", thrift.I64, 5); err != nil {
			return fmt.Errorf("%T write field begin error 5:sexo: %s", p, err)
		}
		if err := oprot.WriteI64(int64(*p.Sexo)); err != nil {
			return fmt.Errorf("%T.sexo (5) field write error: %s", p, err)
		}
		if err := oprot.WriteFieldEnd(); err != nil {
			return fmt.Errorf("%T write field end error 5:sexo: %s", p, err)
		}
	}
	return err
}

func (p *FichaVacinacaoChildThrift) writeField6(oprot thrift.TProtocol) (err error) {
	if p.IsSetLocalAtendimento() {
		if err := oprot.WriteFieldBegin("localAtendimento", thrift.I64, 6); err != nil {
			return fmt.Errorf("%T write field begin error 6:localAtendimento: %s", p, err)
		}
		if err := oprot.WriteI64(int64(*p.LocalAtendimento)); err != nil {
			return fmt.Errorf("%T.localAtendimento (6) field write error: %s", p, err)
		}
		if err := oprot.WriteFieldEnd(); err != nil {
			return fmt.Errorf("%T write field end error 6:localAtendimento: %s", p, err)
		}
	}
	return err
}

func (p *FichaVacinacaoChildThrift) writeField7(oprot thrift.TProtocol) (err error) {
	if p.IsSetViajante() {
		if err := oprot.WriteFieldBegin("viajante", thrift.BOOL, 7); err != nil {
			return fmt.Errorf("%T write field begin error 7:viajante: %s", p, err)
		}
		if err := oprot.WriteBool(bool(*p.Viajante)); err != nil {
			return fmt.Errorf("%T.viajante (7) field write error: %s", p, err)
		}
		if err := oprot.WriteFieldEnd(); err != nil {
			return fmt.Errorf("%T write field end error 7:viajante: %s", p, err)
		}
	}
	return err
}

func (p *FichaVacinacaoChildThrift) writeField8(oprot thrift.TProtocol) (err error) {
	if p.IsSetComunicanteHanseniase() {
		if err := oprot.WriteFieldBegin("comunicanteHanseniase", thrift.BOOL, 8); err != nil {
			return fmt.Errorf("%T write field begin error 8:comunicanteHanseniase: %s", p, err)
		}
		if err := oprot.WriteBool(bool(*p.ComunicanteHanseniase)); err != nil {
			return fmt.Errorf("%T.comunicanteHanseniase (8) field write error: %s", p, err)
		}
		if err := oprot.WriteFieldEnd(); err != nil {
			return fmt.Errorf("%T write field end error 8:comunicanteHanseniase: %s", p, err)
		}
	}
	return err
}

func (p *FichaVacinacaoChildThrift) writeField9(oprot thrift.TProtocol) (err error) {
	if p.IsSetGestante() {
		if err := oprot.WriteFieldBegin("gestante", thrift.BOOL, 9); err != nil {
			return fmt.Errorf("%T write field begin error 9:gestante: %s", p, err)
		}
		if err := oprot.WriteBool(bool(*p.Gestante)); err != nil {
			return fmt.Errorf("%T.gestante (9) field write error: %s", p, err)
		}
		if err := oprot.WriteFieldEnd(); err != nil {
			return fmt.Errorf("%T write field end error 9:gestante: %s", p, err)
		}
	}
	return err
}

func (p *FichaVacinacaoChildThrift) writeField10(oprot thrift.TProtocol) (err error) {
	if p.IsSetPuerpera() {
		if err := oprot.WriteFieldBegin("puerpera", thrift.BOOL, 10); err != nil {
			return fmt.Errorf("%T write field begin error 10:puerpera: %s", p, err)
		}
		if err := oprot.WriteBool(bool(*p.Puerpera)); err != nil {
			return fmt.Errorf("%T.puerpera (10) field write error: %s", p, err)
		}
		if err := oprot.WriteFieldEnd(); err != nil {
			return fmt.Errorf("%T write field end error 10:puerpera: %s", p, err)
		}
	}
	return err
}

func (p *FichaVacinacaoChildThrift) writeField11(oprot thrift.TProtocol) (err error) {
	if p.IsSetVacinas() {
		if err := oprot.WriteFieldBegin("vacinas", thrift.LIST, 11); err != nil {
			return fmt.Errorf("%T write field begin error 11:vacinas: %s", p, err)
		}
		if err := oprot.WriteListBegin(thrift.STRUCT, len(p.Vacinas)); err != nil {
			return fmt.Errorf("error writing list begin: %s", err)
		}
		for _, v := range p.Vacinas {
			if err := v.Write(oprot); err != nil {
				return fmt.Errorf("%T error writing struct: %s", v, err)
			}
		}
		if err := oprot.WriteListEnd(); err != nil {
			return fmt.Errorf("error writing list end: %s", err)
		}
		if err := oprot.WriteFieldEnd(); err != nil {
			return fmt.Errorf("%T write field end error 11:vacinas: %s", p, err)
		}
	}
	return err
}

func (p *FichaVacinacaoChildThrift) String() string {
	if p == nil {
		return "<nil>"
	}
	return fmt.Sprintf("FichaVacinacaoChildThrift(%+v)", *p)
}

type FichaVacinacaoMasterThrift struct {
	UuidFicha       string                           `thrift:"uuidFicha,1,required" json:"uuidFicha"`
	TpCdsOrigem     *int32                           `thrift:"tpCdsOrigem,2" json:"tpCdsOrigem"`
	HeaderTransport *common.UnicaLotacaoHeaderThrift `thrift:"headerTransport,3" json:"headerTransport"`
	Vacinacoes      []*FichaVacinacaoChildThrift     `thrift:"vacinacoes,4" json:"vacinacoes"`
}

func NewFichaVacinacaoMasterThrift() *FichaVacinacaoMasterThrift {
	return &FichaVacinacaoMasterThrift{}
}

func (p *FichaVacinacaoMasterThrift) GetUuidFicha() string {
	return p.UuidFicha
}

var FichaVacinacaoMasterThrift_TpCdsOrigem_DEFAULT int32

func (p *FichaVacinacaoMasterThrift) GetTpCdsOrigem() int32 {
	if !p.IsSetTpCdsOrigem() {
		return FichaVacinacaoMasterThrift_TpCdsOrigem_DEFAULT
	}
	return *p.TpCdsOrigem
}

var FichaVacinacaoMasterThrift_HeaderTransport_DEFAULT *common.UnicaLotacaoHeaderThrift

func (p *FichaVacinacaoMasterThrift) GetHeaderTransport() *common.UnicaLotacaoHeaderThrift {
	if !p.IsSetHeaderTransport() {
		return FichaVacinacaoMasterThrift_HeaderTransport_DEFAULT
	}
	return p.HeaderTransport
}

var FichaVacinacaoMasterThrift_Vacinacoes_DEFAULT []*FichaVacinacaoChildThrift

func (p *FichaVacinacaoMasterThrift) GetVacinacoes() []*FichaVacinacaoChildThrift {
	return p.Vacinacoes
}
func (p *FichaVacinacaoMasterThrift) IsSetTpCdsOrigem() bool {
	return p.TpCdsOrigem != nil
}

func (p *FichaVacinacaoMasterThrift) IsSetHeaderTransport() bool {
	return p.HeaderTransport != nil
}

func (p *FichaVacinacaoMasterThrift) IsSetVacinacoes() bool {
	return p.Vacinacoes != nil
}

func (p *FichaVacinacaoMasterThrift) Read(iprot thrift.TProtocol) error {
	if _, err := iprot.ReadStructBegin(); err != nil {
		return fmt.Errorf("%T read error: %s", p, err)
	}
	for {
		_, fieldTypeId, fieldId, err := iprot.ReadFieldBegin()
		if err != nil {
			return fmt.Errorf("%T field %d read error: %s", p, fieldId, err)
		}
		if fieldTypeId == thrift.STOP {
			break
		}
		switch fieldId {
		case 1:
			if err := p.ReadField1(iprot); err != nil {
				return err
			}
		case 2:
			if err := p.ReadField2(iprot); err != nil {
				return err
			}
		case 3:
			if err := p.ReadField3(iprot); err != nil {
				return err
			}
		case 4:
			if err := p.ReadField4(iprot); err != nil {
				return err
			}
		default:
			if err := iprot.Skip(fieldTypeId); err != nil {
				return err
			}
		}
		if err := iprot.ReadFieldEnd(); err != nil {
			return err
		}
	}
	if err := iprot.ReadStructEnd(); err != nil {
		return fmt.Errorf("%T read struct end error: %s", p, err)
	}
	return nil
}

func (p *FichaVacinacaoMasterThrift) ReadField1(iprot thrift.TProtocol) error {
	if v, err := iprot.ReadString(); err != nil {
		return fmt.Errorf("error reading field 1: %s", err)
	} else {
		p.UuidFicha = v
	}
	return nil
}

func (p *FichaVacinacaoMasterThrift) ReadField2(iprot thrift.TProtocol) error {
	if v, err := iprot.ReadI32(); err != nil {
		return fmt.Errorf("error reading field 2: %s", err)
	} else {
		p.TpCdsOrigem = &v
	}
	return nil
}

func (p *FichaVacinacaoMasterThrift) ReadField3(iprot thrift.TProtocol) error {
	p.HeaderTransport = &common.UnicaLotacaoHeaderThrift{}
	if err := p.HeaderTransport.Read(iprot); err != nil {
		return fmt.Errorf("%T error reading struct: %s", p.HeaderTransport, err)
	}
	return nil
}

func (p *FichaVacinacaoMasterThrift) ReadField4(iprot thrift.TProtocol) error {
	_, size, err := iprot.ReadListBegin()
	if err != nil {
		return fmt.Errorf("error reading list begin: %s", err)
	}
	tSlice := make([]*FichaVacinacaoChildThrift, 0, size)
	p.Vacinacoes = tSlice
	for i := 0; i < size; i++ {
		_elem1 := &FichaVacinacaoChildThrift{}
		if err := _elem1.Read(iprot); err != nil {
			return fmt.Errorf("%T error reading struct: %s", _elem1, err)
		}
		p.Vacinacoes = append(p.Vacinacoes, _elem1)
	}
	if err := iprot.ReadListEnd(); err != nil {
		return fmt.Errorf("error reading list end: %s", err)
	}
	return nil
}

func (p *FichaVacinacaoMasterThrift) Write(oprot thrift.TProtocol) error {
	if err := oprot.WriteStructBegin("FichaVacinacaoMasterThrift"); err != nil {
		return fmt.Errorf("%T write struct begin error: %s", p, err)
	}
	if err := p.writeField1(oprot); err != nil {
		return err
	}
	if err := p.writeField2(oprot); err != nil {
		return err
	}
	if err := p.writeField3(oprot); err != nil {
		return err
	}
	if err := p.writeField4(oprot); err != nil {
		return err
	}
	if err := oprot.WriteFieldStop(); err != nil {
		return fmt.Errorf("write field stop error: %s", err)
	}
	if err := oprot.WriteStructEnd(); err != nil {
		return fmt.Errorf("write struct stop error: %s", err)
	}
	return nil
}

func (p *FichaVacinacaoMasterThrift) writeField1(oprot thrift.TProtocol) (err error) {
	if err := oprot.WriteFieldBegin("uuidFicha", thrift.STRING, 1); err != nil {
		return fmt.Errorf("%T write field begin error 1:uuidFicha: %s", p, err)
	}
	if err := oprot.WriteString(string(p.UuidFicha)); err != nil {
		return fmt.Errorf("%T.uuidFicha (1) field write error: %s", p, err)
	}
	if err := oprot.WriteFieldEnd(); err != nil {
		return fmt.Errorf("%T write field end error 1:uuidFicha: %s", p, err)
	}
	return err
}

func (p *FichaVacinacaoMasterThrift) writeField2(oprot thrift.TProtocol) (err error) {
	if p.IsSetTpCdsOrigem() {
		if err := oprot.WriteFieldBegin("tpCdsOrigem", thrift.I32, 2); err != nil {
			return fmt.Errorf("%T write field begin error 2:tpCdsOrigem: %s", p, err)
		}
		if err := oprot.WriteI32(int32(*p.TpCdsOrigem)); err != nil {
			return fmt.Errorf("%T.tpCdsOrigem (2) field write error: %s", p, err)
		}
		if err := oprot.WriteFieldEnd(); err != nil {
			return fmt.Errorf("%T write field end error 2:tpCdsOrigem: %s", p, err)
		}
	}
	return err
}

func (p *FichaVacinacaoMasterThrift) writeField3(oprot thrift.TProtocol) (err error) {
	if p.IsSetHeaderTransport() {
		if err := oprot.WriteFieldBegin("headerTransport", thrift.STRUCT, 3); err != nil {
			return fmt.Errorf("%T write field begin error 3:headerTransport: %s", p, err)
		}
		if err := p.HeaderTransport.Write(oprot); err != nil {
			return fmt.Errorf("%T error writing struct: %s", p.HeaderTransport, err)
		}
		if err := oprot.WriteFieldEnd(); err != nil {
			return fmt.Errorf("%T write field end error 3:headerTransport: %s", p, err)
		}
	}
	return err
}

func (p *FichaVacinacaoMasterThrift) writeField4(oprot thrift.TProtocol) (err error) {
	if p.IsSetVacinacoes() {
		if err := oprot.WriteFieldBegin("vacinacoes", thrift.LIST, 4); err != nil {
			return fmt.Errorf("%T write field begin error 4:vacinacoes: %s", p, err)
		}
		if err := oprot.WriteListBegin(thrift.STRUCT, len(p.Vacinacoes)); err != nil {
			return fmt.Errorf("error writing list begin: %s", err)
		}
		for _, v := range p.Vacinacoes {
			if err := v.Write(oprot); err != nil {
				return fmt.Errorf("%T error writing struct: %s", v, err)
			}
		}
		if err := oprot.WriteListEnd(); err != nil {
			return fmt.Errorf("error writing list end: %s", err)
		}
		if err := oprot.WriteFieldEnd(); err != nil {
			return fmt.Errorf("%T write field end error 4:vacinacoes: %s", p, err)
		}
	}
	return err
}

func (p *FichaVacinacaoMasterThrift) String() string {
	if p == nil {
		return "<nil>"
	}
	return fmt.Sprintf("FichaVacinacaoMasterThrift(%+v)", *p)
}
