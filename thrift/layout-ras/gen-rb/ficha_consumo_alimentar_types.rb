#
# Autogenerated by Thrift Compiler (0.9.2)
#
# DO NOT EDIT UNLESS YOU ARE SURE THAT YOU KNOW WHAT YOU ARE DOING
#

require 'thrift'
require 'br/gov/saude/esusab/ras/common/common_types'


module Br
  module Gov
    module Saude
      module Esusab
        module Ras
          module Consumoalimentar
            module PerguntaCriancasMenoresSeisMesesEnumThrift
              A_CRIANCA_ONTEM_TOMOU_LEITE_DO_PEITO = 1
              MINGAU = 3
              AGUA_CHA = 4
              LEITE_VACA = 5
              FORMULA_INFANTIL = 6
              SUCO_FRUTA = 7
              FRUTA = 8
              COMIDA_DE_SAL = 9
              OUTROS_ALIMENTOS_BEBIDAS = 10
              VALUE_MAP = {1 => "A_CRIANCA_ONTEM_TOMOU_LEITE_DO_PEITO", 3 => "MINGAU", 4 => "AGUA_CHA", 5 => "LEITE_VACA", 6 => "FORMULA_INFANTIL", 7 => "SUCO_FRUTA", 8 => "FRUTA", 9 => "COMIDA_DE_SAL", 10 => "OUTROS_ALIMENTOS_BEBIDAS"}
              VALID_VALUES = Set.new([A_CRIANCA_ONTEM_TOMOU_LEITE_DO_PEITO, MINGAU, AGUA_CHA, LEITE_VACA, FORMULA_INFANTIL, SUCO_FRUTA, FRUTA, COMIDA_DE_SAL, OUTROS_ALIMENTOS_BEBIDAS]).freeze
            end

            module PerguntaCriancasDeSeisVinteTresMesesEnumThrift
              A_CRIANCA_ONTEM_TOMOU_LEITE_PEITO = 21
              ONTEM_A_CRIANCA_COMEU_FRUTA_INTEIRA_PEDACO_AMASSADO = 22
              SE_SIM_QUANTAS_VEZES = 23
              ONTEM_A_CRIANCA_COMEU_COMIDA_DE_SAL = 24
              SE_COMEU_COMIDA_DE_SAL_QUANTAS_VEZES = 25
              SE_SIM_ESSA_COMIDA_FOI_OFERECIDA = 26
              OUTRO_LEITE_QUE_NAO_LEITE_DO_PEITO = 28
              MINGAU_COM_LEITE = 29
              IOGURTE = 30
              LEGUMES = 31
              VEGETAL_OU_FRUTAS_COR_ALARANJADA_OU_FOLHAS_ESCURAS = 32
              VERDURA_DE_FOLHA = 33
              CARNE = 34
              FIGADO = 35
              FEIJAO = 36
              ARROZ_BATATA_INHAME_MANDIOCA_FARINHA_MACARRAO = 37
              HAMBURGUER_E_OU_EMBUTIDOS = 38
              BEBIDAS_ADOCADAS = 39
              MACARRAO_INSTANTANEO_SALGADINHOS_BISCOITOS = 40
              BISCOITO_RECHEADO_DOCES_OU_GULOSEIMAS = 41
              VALUE_MAP = {21 => "A_CRIANCA_ONTEM_TOMOU_LEITE_PEITO", 22 => "ONTEM_A_CRIANCA_COMEU_FRUTA_INTEIRA_PEDACO_AMASSADO", 23 => "SE_SIM_QUANTAS_VEZES", 24 => "ONTEM_A_CRIANCA_COMEU_COMIDA_DE_SAL", 25 => "SE_COMEU_COMIDA_DE_SAL_QUANTAS_VEZES", 26 => "SE_SIM_ESSA_COMIDA_FOI_OFERECIDA", 28 => "OUTRO_LEITE_QUE_NAO_LEITE_DO_PEITO", 29 => "MINGAU_COM_LEITE", 30 => "IOGURTE", 31 => "LEGUMES", 32 => "VEGETAL_OU_FRUTAS_COR_ALARANJADA_OU_FOLHAS_ESCURAS", 33 => "VERDURA_DE_FOLHA", 34 => "CARNE", 35 => "FIGADO", 36 => "FEIJAO", 37 => "ARROZ_BATATA_INHAME_MANDIOCA_FARINHA_MACARRAO", 38 => "HAMBURGUER_E_OU_EMBUTIDOS", 39 => "BEBIDAS_ADOCADAS", 40 => "MACARRAO_INSTANTANEO_SALGADINHOS_BISCOITOS", 41 => "BISCOITO_RECHEADO_DOCES_OU_GULOSEIMAS"}
              VALID_VALUES = Set.new([A_CRIANCA_ONTEM_TOMOU_LEITE_PEITO, ONTEM_A_CRIANCA_COMEU_FRUTA_INTEIRA_PEDACO_AMASSADO, SE_SIM_QUANTAS_VEZES, ONTEM_A_CRIANCA_COMEU_COMIDA_DE_SAL, SE_COMEU_COMIDA_DE_SAL_QUANTAS_VEZES, SE_SIM_ESSA_COMIDA_FOI_OFERECIDA, OUTRO_LEITE_QUE_NAO_LEITE_DO_PEITO, MINGAU_COM_LEITE, IOGURTE, LEGUMES, VEGETAL_OU_FRUTAS_COR_ALARANJADA_OU_FOLHAS_ESCURAS, VERDURA_DE_FOLHA, CARNE, FIGADO, FEIJAO, ARROZ_BATATA_INHAME_MANDIOCA_FARINHA_MACARRAO, HAMBURGUER_E_OU_EMBUTIDOS, BEBIDAS_ADOCADAS, MACARRAO_INSTANTANEO_SALGADINHOS_BISCOITOS, BISCOITO_RECHEADO_DOCES_OU_GULOSEIMAS]).freeze
            end

            module PerguntaCriancasComMaisDoisAnosEnumThrift
              VOCE_TEM_COSTUME_DE_REALIZAR_AS_REFEICOES_ASSISTINDO_TV_MEXENDO_NO_COMPUTADOR_E_OU_CELULAR = 11
              QUAIS_REFEICOES_VOCE_FAZ_AO_LONGO_DO_DIA = 12
              FEIJAO = 14
              FRUTAS_FRESCAS = 15
              VERDURAS_E_OU_LEGUMES = 16
              HAMBURGUER_E_OU_EMBUTIDOS = 17
              BEBIDAS_ADOCADAS = 18
              MACARRAO_INSTANTANEO_SALGADINHOS_BISCOITOS = 19
              BISCOITO_RECHEADO_DOCES_OU_GULOSEIMAS = 20
              VALUE_MAP = {11 => "VOCE_TEM_COSTUME_DE_REALIZAR_AS_REFEICOES_ASSISTINDO_TV_MEXENDO_NO_COMPUTADOR_E_OU_CELULAR", 12 => "QUAIS_REFEICOES_VOCE_FAZ_AO_LONGO_DO_DIA", 14 => "FEIJAO", 15 => "FRUTAS_FRESCAS", 16 => "VERDURAS_E_OU_LEGUMES", 17 => "HAMBURGUER_E_OU_EMBUTIDOS", 18 => "BEBIDAS_ADOCADAS", 19 => "MACARRAO_INSTANTANEO_SALGADINHOS_BISCOITOS", 20 => "BISCOITO_RECHEADO_DOCES_OU_GULOSEIMAS"}
              VALID_VALUES = Set.new([VOCE_TEM_COSTUME_DE_REALIZAR_AS_REFEICOES_ASSISTINDO_TV_MEXENDO_NO_COMPUTADOR_E_OU_CELULAR, QUAIS_REFEICOES_VOCE_FAZ_AO_LONGO_DO_DIA, FEIJAO, FRUTAS_FRESCAS, VERDURAS_E_OU_LEGUMES, HAMBURGUER_E_OU_EMBUTIDOS, BEBIDAS_ADOCADAS, MACARRAO_INSTANTANEO_SALGADINHOS_BISCOITOS, BISCOITO_RECHEADO_DOCES_OU_GULOSEIMAS]).freeze
            end

            module RespostaUnicaEscolhaEnumThrift
              SIM = 1
              NAO = 2
              NAO_SABE = 3
              UMA_VEZ = 4
              DUAS_VEZES = 5
              TRES_VEZES_OU_MAIS = 6
              EM_PEDACOS = 7
              AMASSADA = 8
              PASSADA_NA_PENEIRA = 9
              LIQUIDIFICADA = 10
              SO_O_CALDO = 11
              VALUE_MAP = {1 => "SIM", 2 => "NAO", 3 => "NAO_SABE", 4 => "UMA_VEZ", 5 => "DUAS_VEZES", 6 => "TRES_VEZES_OU_MAIS", 7 => "EM_PEDACOS", 8 => "AMASSADA", 9 => "PASSADA_NA_PENEIRA", 10 => "LIQUIDIFICADA", 11 => "SO_O_CALDO"}
              VALID_VALUES = Set.new([SIM, NAO, NAO_SABE, UMA_VEZ, DUAS_VEZES, TRES_VEZES_OU_MAIS, EM_PEDACOS, AMASSADA, PASSADA_NA_PENEIRA, LIQUIDIFICADA, SO_O_CALDO]).freeze
            end

            module RespostaMultiplaEscolhaEnumThrift
              CAFE_DA_MANHA = 12
              LANCHE_DA_MANHA = 13
              ALMOCO = 14
              LANCHE_DA_TARDE = 15
              JANTAR = 16
              CEIA = 17
              VALUE_MAP = {12 => "CAFE_DA_MANHA", 13 => "LANCHE_DA_MANHA", 14 => "ALMOCO", 15 => "LANCHE_DA_TARDE", 16 => "JANTAR", 17 => "CEIA"}
              VALID_VALUES = Set.new([CAFE_DA_MANHA, LANCHE_DA_MANHA, ALMOCO, LANCHE_DA_TARDE, JANTAR, CEIA]).freeze
            end

            class PerguntaQuestionarioCriancasMenoresSeisMesesThrift
              include ::Thrift::Struct, ::Thrift::Struct_Union
              PERGUNTA = 1
              RESPOSTAUNICAESCOLHA = 2

              FIELDS = {
                PERGUNTA => {:type => ::Thrift::Types::I32, :name => 'pergunta', :optional => true, :enum_class => ::Br::Gov::Saude::Esusab::Ras::Consumoalimentar::PerguntaCriancasMenoresSeisMesesEnumThrift},
                RESPOSTAUNICAESCOLHA => {:type => ::Thrift::Types::I32, :name => 'respostaUnicaEscolha', :optional => true, :enum_class => ::Br::Gov::Saude::Esusab::Ras::Consumoalimentar::RespostaUnicaEscolhaEnumThrift}
              }

              def struct_fields; FIELDS; end

              def validate
                unless @pergunta.nil? || ::Br::Gov::Saude::Esusab::Ras::Consumoalimentar::PerguntaCriancasMenoresSeisMesesEnumThrift::VALID_VALUES.include?(@pergunta)
                  raise ::Thrift::ProtocolException.new(::Thrift::ProtocolException::UNKNOWN, 'Invalid value of field pergunta!')
                end
                unless @respostaUnicaEscolha.nil? || ::Br::Gov::Saude::Esusab::Ras::Consumoalimentar::RespostaUnicaEscolhaEnumThrift::VALID_VALUES.include?(@respostaUnicaEscolha)
                  raise ::Thrift::ProtocolException.new(::Thrift::ProtocolException::UNKNOWN, 'Invalid value of field respostaUnicaEscolha!')
                end
              end

              ::Thrift::Struct.generate_accessors self
            end

            class PerguntaQuestionarioCriancasDeSeisVinteTresMesesThrift
              include ::Thrift::Struct, ::Thrift::Struct_Union
              PERGUNTA = 1
              RESPOSTAUNICAESCOLHA = 2

              FIELDS = {
                PERGUNTA => {:type => ::Thrift::Types::I32, :name => 'pergunta', :optional => true, :enum_class => ::Br::Gov::Saude::Esusab::Ras::Consumoalimentar::PerguntaCriancasDeSeisVinteTresMesesEnumThrift},
                RESPOSTAUNICAESCOLHA => {:type => ::Thrift::Types::I32, :name => 'respostaUnicaEscolha', :optional => true, :enum_class => ::Br::Gov::Saude::Esusab::Ras::Consumoalimentar::RespostaUnicaEscolhaEnumThrift}
              }

              def struct_fields; FIELDS; end

              def validate
                unless @pergunta.nil? || ::Br::Gov::Saude::Esusab::Ras::Consumoalimentar::PerguntaCriancasDeSeisVinteTresMesesEnumThrift::VALID_VALUES.include?(@pergunta)
                  raise ::Thrift::ProtocolException.new(::Thrift::ProtocolException::UNKNOWN, 'Invalid value of field pergunta!')
                end
                unless @respostaUnicaEscolha.nil? || ::Br::Gov::Saude::Esusab::Ras::Consumoalimentar::RespostaUnicaEscolhaEnumThrift::VALID_VALUES.include?(@respostaUnicaEscolha)
                  raise ::Thrift::ProtocolException.new(::Thrift::ProtocolException::UNKNOWN, 'Invalid value of field respostaUnicaEscolha!')
                end
              end

              ::Thrift::Struct.generate_accessors self
            end

            class PerguntaQuestionarioCriancasComMaisDoisAnosThrift
              include ::Thrift::Struct, ::Thrift::Struct_Union
              PERGUNTA = 1
              RESPOSTAUNICAESCOLHA = 2
              RESPOSTAMULTIPLAESCOLHA = 3

              FIELDS = {
                PERGUNTA => {:type => ::Thrift::Types::I32, :name => 'pergunta', :optional => true, :enum_class => ::Br::Gov::Saude::Esusab::Ras::Consumoalimentar::PerguntaCriancasComMaisDoisAnosEnumThrift},
                RESPOSTAUNICAESCOLHA => {:type => ::Thrift::Types::I32, :name => 'respostaUnicaEscolha', :optional => true, :enum_class => ::Br::Gov::Saude::Esusab::Ras::Consumoalimentar::RespostaUnicaEscolhaEnumThrift},
                RESPOSTAMULTIPLAESCOLHA => {:type => ::Thrift::Types::LIST, :name => 'respostaMultiplaEscolha', :element => {:type => ::Thrift::Types::I32, :enum_class => ::Br::Gov::Saude::Esusab::Ras::Consumoalimentar::RespostaMultiplaEscolhaEnumThrift}, :optional => true}
              }

              def struct_fields; FIELDS; end

              def validate
                unless @pergunta.nil? || ::Br::Gov::Saude::Esusab::Ras::Consumoalimentar::PerguntaCriancasComMaisDoisAnosEnumThrift::VALID_VALUES.include?(@pergunta)
                  raise ::Thrift::ProtocolException.new(::Thrift::ProtocolException::UNKNOWN, 'Invalid value of field pergunta!')
                end
                unless @respostaUnicaEscolha.nil? || ::Br::Gov::Saude::Esusab::Ras::Consumoalimentar::RespostaUnicaEscolhaEnumThrift::VALID_VALUES.include?(@respostaUnicaEscolha)
                  raise ::Thrift::ProtocolException.new(::Thrift::ProtocolException::UNKNOWN, 'Invalid value of field respostaUnicaEscolha!')
                end
              end

              ::Thrift::Struct.generate_accessors self
            end

            class FichaConsumoAlimentarThrift
              include ::Thrift::Struct, ::Thrift::Struct_Union
              HEADERTRANSPORT = 1
              CNSCIDADAO = 2
              IDENTIFICACAOUSUARIO = 3
              DATANASCIMENTO = 4
              SEXO = 5
              LOCALATENDIMENTO = 6
              PERGUNTASQUESTIONARIOCRIANCASMENORESSEISMESES = 7
              PERGUNTASQUESTIONARIOCRIANCASDESEISVINTETRESMESES = 8
              PERGUNTASQUESTIONARIOCRIANCASCOMMAISDOISANOS = 9
              UUIDFICHA = 10
              TPCDSORIGEM = 11

              FIELDS = {
                HEADERTRANSPORT => {:type => ::Thrift::Types::STRUCT, :name => 'headerTransport', :class => ::Br::Gov::Saude::Esusab::Ras::Common::UnicaLotacaoHeaderThrift, :optional => true},
                CNSCIDADAO => {:type => ::Thrift::Types::STRING, :name => 'cnsCidadao', :optional => true},
                IDENTIFICACAOUSUARIO => {:type => ::Thrift::Types::STRING, :name => 'identificacaoUsuario', :optional => true},
                DATANASCIMENTO => {:type => ::Thrift::Types::I64, :name => 'dataNascimento', :optional => true},
                SEXO => {:type => ::Thrift::Types::I64, :name => 'sexo', :optional => true},
                LOCALATENDIMENTO => {:type => ::Thrift::Types::I64, :name => 'localAtendimento', :optional => true},
                PERGUNTASQUESTIONARIOCRIANCASMENORESSEISMESES => {:type => ::Thrift::Types::LIST, :name => 'perguntasQuestionarioCriancasMenoresSeisMeses', :element => {:type => ::Thrift::Types::STRUCT, :class => ::Br::Gov::Saude::Esusab::Ras::Consumoalimentar::PerguntaQuestionarioCriancasMenoresSeisMesesThrift}, :optional => true},
                PERGUNTASQUESTIONARIOCRIANCASDESEISVINTETRESMESES => {:type => ::Thrift::Types::LIST, :name => 'perguntasQuestionarioCriancasDeSeisVinteTresMeses', :element => {:type => ::Thrift::Types::STRUCT, :class => ::Br::Gov::Saude::Esusab::Ras::Consumoalimentar::PerguntaQuestionarioCriancasDeSeisVinteTresMesesThrift}, :optional => true},
                PERGUNTASQUESTIONARIOCRIANCASCOMMAISDOISANOS => {:type => ::Thrift::Types::LIST, :name => 'perguntasQuestionarioCriancasComMaisDoisAnos', :element => {:type => ::Thrift::Types::STRUCT, :class => ::Br::Gov::Saude::Esusab::Ras::Consumoalimentar::PerguntaQuestionarioCriancasComMaisDoisAnosThrift}, :optional => true},
                UUIDFICHA => {:type => ::Thrift::Types::STRING, :name => 'uuidFicha'},
                TPCDSORIGEM => {:type => ::Thrift::Types::I32, :name => 'tpCdsOrigem', :optional => true}
              }

              def struct_fields; FIELDS; end

              def validate
                raise ::Thrift::ProtocolException.new(::Thrift::ProtocolException::UNKNOWN, 'Required field uuidFicha is unset!') unless @uuidFicha
              end

              ::Thrift::Struct.generate_accessors self
            end

          end
        end
      end
    end
  end
end
