(**
 * Autogenerated by Thrift Compiler (0.9.2)
 *
 * DO NOT EDIT UNLESS YOU ARE SURE THAT YOU KNOW WHAT YOU ARE DOING
 *)

unit br.gov.saude.esusab.ras.atividadecoletiva;

interface

uses
  Classes,
  SysUtils,
  Generics.Collections,
  Thrift,
  Thrift.Utils,
  Thrift.Collections,
  Thrift.Protocol,
  Thrift.Transport,
  br.gov.saude.esusab.ras.common;

const
  cbr_gov_saude_esusab_ras_atividadecoletiva_Option_AnsiStr_Binary = False;
  cbr_gov_saude_esusab_ras_atividadecoletiva_Option_Register_Types = False;
  cbr_gov_saude_esusab_ras_atividadecoletiva_Option_ConstPrefix    = False;
  cbr_gov_saude_esusab_ras_atividadecoletiva_Option_Events         = False;
  cbr_gov_saude_esusab_ras_atividadecoletiva_Option_XmlDoc         = False;

type
  IParticipanteRowItemThrift = interface;
  IProfissionalCboRowItemThrift = interface;
  IFichaAtividadeColetivaThrift = interface;

  IParticipanteRowItemThrift = interface(IBase)
    function GetCnsParticipante: string;
    procedure SetCnsParticipante( const Value: string);
    function GetDataNascimento: Int64;
    procedure SetDataNascimento( const Value: Int64);
    function GetAvaliacaoAlterada: Boolean;
    procedure SetAvaliacaoAlterada( const Value: Boolean);
    function GetPeso: Double;
    procedure SetPeso( const Value: Double);
    function GetAltura: Double;
    procedure SetAltura( const Value: Double);
    function GetCessouHabitoFumar: Boolean;
    procedure SetCessouHabitoFumar( const Value: Boolean);
    function GetAbandonouGrupo: Boolean;
    procedure SetAbandonouGrupo( const Value: Boolean);
    function GetSexo: Int64;
    procedure SetSexo( const Value: Int64);

    property CnsParticipante: string read GetCnsParticipante write SetCnsParticipante;
    property DataNascimento: Int64 read GetDataNascimento write SetDataNascimento;
    property AvaliacaoAlterada: Boolean read GetAvaliacaoAlterada write SetAvaliacaoAlterada;
    property Peso: Double read GetPeso write SetPeso;
    property Altura: Double read GetAltura write SetAltura;
    property CessouHabitoFumar: Boolean read GetCessouHabitoFumar write SetCessouHabitoFumar;
    property AbandonouGrupo: Boolean read GetAbandonouGrupo write SetAbandonouGrupo;
    property Sexo: Int64 read GetSexo write SetSexo;

    function Get__isset_CnsParticipante: Boolean;
    function Get__isset_DataNascimento: Boolean;
    function Get__isset_AvaliacaoAlterada: Boolean;
    function Get__isset_Peso: Boolean;
    function Get__isset_Altura: Boolean;
    function Get__isset_CessouHabitoFumar: Boolean;
    function Get__isset_AbandonouGrupo: Boolean;
    function Get__isset_Sexo: Boolean;

    property __isset_CnsParticipante: Boolean read Get__isset_CnsParticipante;
    property __isset_DataNascimento: Boolean read Get__isset_DataNascimento;
    property __isset_AvaliacaoAlterada: Boolean read Get__isset_AvaliacaoAlterada;
    property __isset_Peso: Boolean read Get__isset_Peso;
    property __isset_Altura: Boolean read Get__isset_Altura;
    property __isset_CessouHabitoFumar: Boolean read Get__isset_CessouHabitoFumar;
    property __isset_AbandonouGrupo: Boolean read Get__isset_AbandonouGrupo;
    property __isset_Sexo: Boolean read Get__isset_Sexo;
  end;

  TParticipanteRowItemThriftImpl = class(TInterfacedObject, IBase, IParticipanteRowItemThrift)
  private
    FCnsParticipante: string;
    FDataNascimento: Int64;
    FAvaliacaoAlterada: Boolean;
    FPeso: Double;
    FAltura: Double;
    FCessouHabitoFumar: Boolean;
    FAbandonouGrupo: Boolean;
    FSexo: Int64;
    
    F__isset_CnsParticipante: Boolean;
    F__isset_DataNascimento: Boolean;
    F__isset_AvaliacaoAlterada: Boolean;
    F__isset_Peso: Boolean;
    F__isset_Altura: Boolean;
    F__isset_CessouHabitoFumar: Boolean;
    F__isset_AbandonouGrupo: Boolean;
    F__isset_Sexo: Boolean;
    
    function GetCnsParticipante: string;
    procedure SetCnsParticipante( const Value: string);
    function GetDataNascimento: Int64;
    procedure SetDataNascimento( const Value: Int64);
    function GetAvaliacaoAlterada: Boolean;
    procedure SetAvaliacaoAlterada( const Value: Boolean);
    function GetPeso: Double;
    procedure SetPeso( const Value: Double);
    function GetAltura: Double;
    procedure SetAltura( const Value: Double);
    function GetCessouHabitoFumar: Boolean;
    procedure SetCessouHabitoFumar( const Value: Boolean);
    function GetAbandonouGrupo: Boolean;
    procedure SetAbandonouGrupo( const Value: Boolean);
    function GetSexo: Int64;
    procedure SetSexo( const Value: Int64);

    function Get__isset_CnsParticipante: Boolean;
    function Get__isset_DataNascimento: Boolean;
    function Get__isset_AvaliacaoAlterada: Boolean;
    function Get__isset_Peso: Boolean;
    function Get__isset_Altura: Boolean;
    function Get__isset_CessouHabitoFumar: Boolean;
    function Get__isset_AbandonouGrupo: Boolean;
    function Get__isset_Sexo: Boolean;
  public
    constructor Create;
    destructor Destroy; override;

    function ToString: string; override;

    // IBase
    procedure Read( const iprot: IProtocol);
    procedure Write( const oprot: IProtocol);

    // Properties
    property CnsParticipante: string read GetCnsParticipante write SetCnsParticipante;
    property DataNascimento: Int64 read GetDataNascimento write SetDataNascimento;
    property AvaliacaoAlterada: Boolean read GetAvaliacaoAlterada write SetAvaliacaoAlterada;
    property Peso: Double read GetPeso write SetPeso;
    property Altura: Double read GetAltura write SetAltura;
    property CessouHabitoFumar: Boolean read GetCessouHabitoFumar write SetCessouHabitoFumar;
    property AbandonouGrupo: Boolean read GetAbandonouGrupo write SetAbandonouGrupo;
    property Sexo: Int64 read GetSexo write SetSexo;

    // isset
    property __isset_CnsParticipante: Boolean read Get__isset_CnsParticipante;
    property __isset_DataNascimento: Boolean read Get__isset_DataNascimento;
    property __isset_AvaliacaoAlterada: Boolean read Get__isset_AvaliacaoAlterada;
    property __isset_Peso: Boolean read Get__isset_Peso;
    property __isset_Altura: Boolean read Get__isset_Altura;
    property __isset_CessouHabitoFumar: Boolean read Get__isset_CessouHabitoFumar;
    property __isset_AbandonouGrupo: Boolean read Get__isset_AbandonouGrupo;
    property __isset_Sexo: Boolean read Get__isset_Sexo;
  end;

  IProfissionalCboRowItemThrift = interface(IBase)
    function GetCnsProfissional: string;
    procedure SetCnsProfissional( const Value: string);
    function GetCodigoCbo2002: string;
    procedure SetCodigoCbo2002( const Value: string);

    property CnsProfissional: string read GetCnsProfissional write SetCnsProfissional;
    property CodigoCbo2002: string read GetCodigoCbo2002 write SetCodigoCbo2002;

    function Get__isset_CnsProfissional: Boolean;
    function Get__isset_CodigoCbo2002: Boolean;

    property __isset_CnsProfissional: Boolean read Get__isset_CnsProfissional;
    property __isset_CodigoCbo2002: Boolean read Get__isset_CodigoCbo2002;
  end;

  TProfissionalCboRowItemThriftImpl = class(TInterfacedObject, IBase, IProfissionalCboRowItemThrift)
  private
    FCnsProfissional: string;
    FCodigoCbo2002: string;
    
    F__isset_CnsProfissional: Boolean;
    F__isset_CodigoCbo2002: Boolean;
    
    function GetCnsProfissional: string;
    procedure SetCnsProfissional( const Value: string);
    function GetCodigoCbo2002: string;
    procedure SetCodigoCbo2002( const Value: string);

    function Get__isset_CnsProfissional: Boolean;
    function Get__isset_CodigoCbo2002: Boolean;
  public
    constructor Create;
    destructor Destroy; override;

    function ToString: string; override;

    // IBase
    procedure Read( const iprot: IProtocol);
    procedure Write( const oprot: IProtocol);

    // Properties
    property CnsProfissional: string read GetCnsProfissional write SetCnsProfissional;
    property CodigoCbo2002: string read GetCodigoCbo2002 write SetCodigoCbo2002;

    // isset
    property __isset_CnsProfissional: Boolean read Get__isset_CnsProfissional;
    property __isset_CodigoCbo2002: Boolean read Get__isset_CodigoCbo2002;
  end;

  IFichaAtividadeColetivaThrift = interface(IBase)
    function GetUuidFicha: string;
    procedure SetUuidFicha( const Value: string);
    function GetOutraLocalidade: string;
    procedure SetOutraLocalidade( const Value: string);
    function GetInep: Int64;
    procedure SetInep( const Value: Int64);
    function GetNumParticipantes: Integer;
    procedure SetNumParticipantes( const Value: Integer);
    function GetNumAvaliacoesAlteradas: Integer;
    procedure SetNumAvaliacoesAlteradas( const Value: Integer);
    function GetProfissionais: IThriftList<IProfissionalCboRowItemThrift>;
    procedure SetProfissionais( const Value: IThriftList<IProfissionalCboRowItemThrift>);
    function GetAtividadeTipo: Int64;
    procedure SetAtividadeTipo( const Value: Int64);
    function GetTemasParaReuniao: IThriftList<Int64>;
    procedure SetTemasParaReuniao( const Value: IThriftList<Int64>);
    function GetPublicoAlvo: IThriftList<Int64>;
    procedure SetPublicoAlvo( const Value: IThriftList<Int64>);
    function GetParticipantes: IThriftList<IParticipanteRowItemThrift>;
    procedure SetParticipantes( const Value: IThriftList<IParticipanteRowItemThrift>);
    function GetTbCdsOrigem: Integer;
    procedure SetTbCdsOrigem( const Value: Integer);
    function GetCnesLocalAtividade: string;
    procedure SetCnesLocalAtividade( const Value: string);
    function GetProcedimento: string;
    procedure SetProcedimento( const Value: string);
    function GetTurno: Int64;
    procedure SetTurno( const Value: Int64);
    function GetHeaderTransport: IUnicaLotacaoHeaderThrift;
    procedure SetHeaderTransport( const Value: IUnicaLotacaoHeaderThrift);
    function GetTemasParaSaude: IThriftList<Int64>;
    procedure SetTemasParaSaude( const Value: IThriftList<Int64>);
    function GetPraticasEmSaude: IThriftList<Int64>;
    procedure SetPraticasEmSaude( const Value: IThriftList<Int64>);
    function GetPseEducacao: Boolean;
    procedure SetPseEducacao( const Value: Boolean);
    function GetPseSaude: Boolean;
    procedure SetPseSaude( const Value: Boolean);

    property UuidFicha: string read GetUuidFicha write SetUuidFicha;
    property OutraLocalidade: string read GetOutraLocalidade write SetOutraLocalidade;
    property Inep: Int64 read GetInep write SetInep;
    property NumParticipantes: Integer read GetNumParticipantes write SetNumParticipantes;
    property NumAvaliacoesAlteradas: Integer read GetNumAvaliacoesAlteradas write SetNumAvaliacoesAlteradas;
    property Profissionais: IThriftList<IProfissionalCboRowItemThrift> read GetProfissionais write SetProfissionais;
    property AtividadeTipo: Int64 read GetAtividadeTipo write SetAtividadeTipo;
    property TemasParaReuniao: IThriftList<Int64> read GetTemasParaReuniao write SetTemasParaReuniao;
    property PublicoAlvo: IThriftList<Int64> read GetPublicoAlvo write SetPublicoAlvo;
    property Participantes: IThriftList<IParticipanteRowItemThrift> read GetParticipantes write SetParticipantes;
    property TbCdsOrigem: Integer read GetTbCdsOrigem write SetTbCdsOrigem;
    property CnesLocalAtividade: string read GetCnesLocalAtividade write SetCnesLocalAtividade;
    property Procedimento: string read GetProcedimento write SetProcedimento;
    property Turno: Int64 read GetTurno write SetTurno;
    property HeaderTransport: IUnicaLotacaoHeaderThrift read GetHeaderTransport write SetHeaderTransport;
    property TemasParaSaude: IThriftList<Int64> read GetTemasParaSaude write SetTemasParaSaude;
    property PraticasEmSaude: IThriftList<Int64> read GetPraticasEmSaude write SetPraticasEmSaude;
    property PseEducacao: Boolean read GetPseEducacao write SetPseEducacao;
    property PseSaude: Boolean read GetPseSaude write SetPseSaude;

    function Get__isset_OutraLocalidade: Boolean;
    function Get__isset_Inep: Boolean;
    function Get__isset_NumParticipantes: Boolean;
    function Get__isset_NumAvaliacoesAlteradas: Boolean;
    function Get__isset_Profissionais: Boolean;
    function Get__isset_AtividadeTipo: Boolean;
    function Get__isset_TemasParaReuniao: Boolean;
    function Get__isset_PublicoAlvo: Boolean;
    function Get__isset_Participantes: Boolean;
    function Get__isset_TbCdsOrigem: Boolean;
    function Get__isset_CnesLocalAtividade: Boolean;
    function Get__isset_Procedimento: Boolean;
    function Get__isset_Turno: Boolean;
    function Get__isset_HeaderTransport: Boolean;
    function Get__isset_TemasParaSaude: Boolean;
    function Get__isset_PraticasEmSaude: Boolean;
    function Get__isset_PseEducacao: Boolean;
    function Get__isset_PseSaude: Boolean;

    property __isset_OutraLocalidade: Boolean read Get__isset_OutraLocalidade;
    property __isset_Inep: Boolean read Get__isset_Inep;
    property __isset_NumParticipantes: Boolean read Get__isset_NumParticipantes;
    property __isset_NumAvaliacoesAlteradas: Boolean read Get__isset_NumAvaliacoesAlteradas;
    property __isset_Profissionais: Boolean read Get__isset_Profissionais;
    property __isset_AtividadeTipo: Boolean read Get__isset_AtividadeTipo;
    property __isset_TemasParaReuniao: Boolean read Get__isset_TemasParaReuniao;
    property __isset_PublicoAlvo: Boolean read Get__isset_PublicoAlvo;
    property __isset_Participantes: Boolean read Get__isset_Participantes;
    property __isset_TbCdsOrigem: Boolean read Get__isset_TbCdsOrigem;
    property __isset_CnesLocalAtividade: Boolean read Get__isset_CnesLocalAtividade;
    property __isset_Procedimento: Boolean read Get__isset_Procedimento;
    property __isset_Turno: Boolean read Get__isset_Turno;
    property __isset_HeaderTransport: Boolean read Get__isset_HeaderTransport;
    property __isset_TemasParaSaude: Boolean read Get__isset_TemasParaSaude;
    property __isset_PraticasEmSaude: Boolean read Get__isset_PraticasEmSaude;
    property __isset_PseEducacao: Boolean read Get__isset_PseEducacao;
    property __isset_PseSaude: Boolean read Get__isset_PseSaude;
  end;

  TFichaAtividadeColetivaThriftImpl = class(TInterfacedObject, IBase, IFichaAtividadeColetivaThrift)
  private
    FUuidFicha: string;
    FOutraLocalidade: string;
    FInep: Int64;
    FNumParticipantes: Integer;
    FNumAvaliacoesAlteradas: Integer;
    FProfissionais: IThriftList<IProfissionalCboRowItemThrift>;
    FAtividadeTipo: Int64;
    FTemasParaReuniao: IThriftList<Int64>;
    FPublicoAlvo: IThriftList<Int64>;
    FParticipantes: IThriftList<IParticipanteRowItemThrift>;
    FTbCdsOrigem: Integer;
    FCnesLocalAtividade: string;
    FProcedimento: string;
    FTurno: Int64;
    FHeaderTransport: IUnicaLotacaoHeaderThrift;
    FTemasParaSaude: IThriftList<Int64>;
    FPraticasEmSaude: IThriftList<Int64>;
    FPseEducacao: Boolean;
    FPseSaude: Boolean;
    
    F__isset_OutraLocalidade: Boolean;
    F__isset_Inep: Boolean;
    F__isset_NumParticipantes: Boolean;
    F__isset_NumAvaliacoesAlteradas: Boolean;
    F__isset_Profissionais: Boolean;
    F__isset_AtividadeTipo: Boolean;
    F__isset_TemasParaReuniao: Boolean;
    F__isset_PublicoAlvo: Boolean;
    F__isset_Participantes: Boolean;
    F__isset_TbCdsOrigem: Boolean;
    F__isset_CnesLocalAtividade: Boolean;
    F__isset_Procedimento: Boolean;
    F__isset_Turno: Boolean;
    F__isset_HeaderTransport: Boolean;
    F__isset_TemasParaSaude: Boolean;
    F__isset_PraticasEmSaude: Boolean;
    F__isset_PseEducacao: Boolean;
    F__isset_PseSaude: Boolean;
    
    function GetUuidFicha: string;
    procedure SetUuidFicha( const Value: string);
    function GetOutraLocalidade: string;
    procedure SetOutraLocalidade( const Value: string);
    function GetInep: Int64;
    procedure SetInep( const Value: Int64);
    function GetNumParticipantes: Integer;
    procedure SetNumParticipantes( const Value: Integer);
    function GetNumAvaliacoesAlteradas: Integer;
    procedure SetNumAvaliacoesAlteradas( const Value: Integer);
    function GetProfissionais: IThriftList<IProfissionalCboRowItemThrift>;
    procedure SetProfissionais( const Value: IThriftList<IProfissionalCboRowItemThrift>);
    function GetAtividadeTipo: Int64;
    procedure SetAtividadeTipo( const Value: Int64);
    function GetTemasParaReuniao: IThriftList<Int64>;
    procedure SetTemasParaReuniao( const Value: IThriftList<Int64>);
    function GetPublicoAlvo: IThriftList<Int64>;
    procedure SetPublicoAlvo( const Value: IThriftList<Int64>);
    function GetParticipantes: IThriftList<IParticipanteRowItemThrift>;
    procedure SetParticipantes( const Value: IThriftList<IParticipanteRowItemThrift>);
    function GetTbCdsOrigem: Integer;
    procedure SetTbCdsOrigem( const Value: Integer);
    function GetCnesLocalAtividade: string;
    procedure SetCnesLocalAtividade( const Value: string);
    function GetProcedimento: string;
    procedure SetProcedimento( const Value: string);
    function GetTurno: Int64;
    procedure SetTurno( const Value: Int64);
    function GetHeaderTransport: IUnicaLotacaoHeaderThrift;
    procedure SetHeaderTransport( const Value: IUnicaLotacaoHeaderThrift);
    function GetTemasParaSaude: IThriftList<Int64>;
    procedure SetTemasParaSaude( const Value: IThriftList<Int64>);
    function GetPraticasEmSaude: IThriftList<Int64>;
    procedure SetPraticasEmSaude( const Value: IThriftList<Int64>);
    function GetPseEducacao: Boolean;
    procedure SetPseEducacao( const Value: Boolean);
    function GetPseSaude: Boolean;
    procedure SetPseSaude( const Value: Boolean);

    function Get__isset_OutraLocalidade: Boolean;
    function Get__isset_Inep: Boolean;
    function Get__isset_NumParticipantes: Boolean;
    function Get__isset_NumAvaliacoesAlteradas: Boolean;
    function Get__isset_Profissionais: Boolean;
    function Get__isset_AtividadeTipo: Boolean;
    function Get__isset_TemasParaReuniao: Boolean;
    function Get__isset_PublicoAlvo: Boolean;
    function Get__isset_Participantes: Boolean;
    function Get__isset_TbCdsOrigem: Boolean;
    function Get__isset_CnesLocalAtividade: Boolean;
    function Get__isset_Procedimento: Boolean;
    function Get__isset_Turno: Boolean;
    function Get__isset_HeaderTransport: Boolean;
    function Get__isset_TemasParaSaude: Boolean;
    function Get__isset_PraticasEmSaude: Boolean;
    function Get__isset_PseEducacao: Boolean;
    function Get__isset_PseSaude: Boolean;
  public
    constructor Create;
    destructor Destroy; override;

    function ToString: string; override;

    // IBase
    procedure Read( const iprot: IProtocol);
    procedure Write( const oprot: IProtocol);

    // Properties
    property UuidFicha: string read GetUuidFicha write SetUuidFicha;
    property OutraLocalidade: string read GetOutraLocalidade write SetOutraLocalidade;
    property Inep: Int64 read GetInep write SetInep;
    property NumParticipantes: Integer read GetNumParticipantes write SetNumParticipantes;
    property NumAvaliacoesAlteradas: Integer read GetNumAvaliacoesAlteradas write SetNumAvaliacoesAlteradas;
    property Profissionais: IThriftList<IProfissionalCboRowItemThrift> read GetProfissionais write SetProfissionais;
    property AtividadeTipo: Int64 read GetAtividadeTipo write SetAtividadeTipo;
    property TemasParaReuniao: IThriftList<Int64> read GetTemasParaReuniao write SetTemasParaReuniao;
    property PublicoAlvo: IThriftList<Int64> read GetPublicoAlvo write SetPublicoAlvo;
    property Participantes: IThriftList<IParticipanteRowItemThrift> read GetParticipantes write SetParticipantes;
    property TbCdsOrigem: Integer read GetTbCdsOrigem write SetTbCdsOrigem;
    property CnesLocalAtividade: string read GetCnesLocalAtividade write SetCnesLocalAtividade;
    property Procedimento: string read GetProcedimento write SetProcedimento;
    property Turno: Int64 read GetTurno write SetTurno;
    property HeaderTransport: IUnicaLotacaoHeaderThrift read GetHeaderTransport write SetHeaderTransport;
    property TemasParaSaude: IThriftList<Int64> read GetTemasParaSaude write SetTemasParaSaude;
    property PraticasEmSaude: IThriftList<Int64> read GetPraticasEmSaude write SetPraticasEmSaude;
    property PseEducacao: Boolean read GetPseEducacao write SetPseEducacao;
    property PseSaude: Boolean read GetPseSaude write SetPseSaude;

    // isset
    property __isset_OutraLocalidade: Boolean read Get__isset_OutraLocalidade;
    property __isset_Inep: Boolean read Get__isset_Inep;
    property __isset_NumParticipantes: Boolean read Get__isset_NumParticipantes;
    property __isset_NumAvaliacoesAlteradas: Boolean read Get__isset_NumAvaliacoesAlteradas;
    property __isset_Profissionais: Boolean read Get__isset_Profissionais;
    property __isset_AtividadeTipo: Boolean read Get__isset_AtividadeTipo;
    property __isset_TemasParaReuniao: Boolean read Get__isset_TemasParaReuniao;
    property __isset_PublicoAlvo: Boolean read Get__isset_PublicoAlvo;
    property __isset_Participantes: Boolean read Get__isset_Participantes;
    property __isset_TbCdsOrigem: Boolean read Get__isset_TbCdsOrigem;
    property __isset_CnesLocalAtividade: Boolean read Get__isset_CnesLocalAtividade;
    property __isset_Procedimento: Boolean read Get__isset_Procedimento;
    property __isset_Turno: Boolean read Get__isset_Turno;
    property __isset_HeaderTransport: Boolean read Get__isset_HeaderTransport;
    property __isset_TemasParaSaude: Boolean read Get__isset_TemasParaSaude;
    property __isset_PraticasEmSaude: Boolean read Get__isset_PraticasEmSaude;
    property __isset_PseEducacao: Boolean read Get__isset_PseEducacao;
    property __isset_PseSaude: Boolean read Get__isset_PseSaude;
  end;

implementation

constructor TParticipanteRowItemThriftImpl.Create;
begin
  inherited;
end;

destructor TParticipanteRowItemThriftImpl.Destroy;
begin
  inherited;
end;

function TParticipanteRowItemThriftImpl.GetCnsParticipante: string;
begin
  Result := FCnsParticipante;
end;

procedure TParticipanteRowItemThriftImpl.SetCnsParticipante( const Value: string);
begin
  F__isset_CnsParticipante := True;
  FCnsParticipante := Value;
end;

function TParticipanteRowItemThriftImpl.Get__isset_CnsParticipante: Boolean;
begin
  Result := F__isset_CnsParticipante;
end;

function TParticipanteRowItemThriftImpl.GetDataNascimento: Int64;
begin
  Result := FDataNascimento;
end;

procedure TParticipanteRowItemThriftImpl.SetDataNascimento( const Value: Int64);
begin
  F__isset_DataNascimento := True;
  FDataNascimento := Value;
end;

function TParticipanteRowItemThriftImpl.Get__isset_DataNascimento: Boolean;
begin
  Result := F__isset_DataNascimento;
end;

function TParticipanteRowItemThriftImpl.GetAvaliacaoAlterada: Boolean;
begin
  Result := FAvaliacaoAlterada;
end;

procedure TParticipanteRowItemThriftImpl.SetAvaliacaoAlterada( const Value: Boolean);
begin
  F__isset_AvaliacaoAlterada := True;
  FAvaliacaoAlterada := Value;
end;

function TParticipanteRowItemThriftImpl.Get__isset_AvaliacaoAlterada: Boolean;
begin
  Result := F__isset_AvaliacaoAlterada;
end;

function TParticipanteRowItemThriftImpl.GetPeso: Double;
begin
  Result := FPeso;
end;

procedure TParticipanteRowItemThriftImpl.SetPeso( const Value: Double);
begin
  F__isset_Peso := True;
  FPeso := Value;
end;

function TParticipanteRowItemThriftImpl.Get__isset_Peso: Boolean;
begin
  Result := F__isset_Peso;
end;

function TParticipanteRowItemThriftImpl.GetAltura: Double;
begin
  Result := FAltura;
end;

procedure TParticipanteRowItemThriftImpl.SetAltura( const Value: Double);
begin
  F__isset_Altura := True;
  FAltura := Value;
end;

function TParticipanteRowItemThriftImpl.Get__isset_Altura: Boolean;
begin
  Result := F__isset_Altura;
end;

function TParticipanteRowItemThriftImpl.GetCessouHabitoFumar: Boolean;
begin
  Result := FCessouHabitoFumar;
end;

procedure TParticipanteRowItemThriftImpl.SetCessouHabitoFumar( const Value: Boolean);
begin
  F__isset_CessouHabitoFumar := True;
  FCessouHabitoFumar := Value;
end;

function TParticipanteRowItemThriftImpl.Get__isset_CessouHabitoFumar: Boolean;
begin
  Result := F__isset_CessouHabitoFumar;
end;

function TParticipanteRowItemThriftImpl.GetAbandonouGrupo: Boolean;
begin
  Result := FAbandonouGrupo;
end;

procedure TParticipanteRowItemThriftImpl.SetAbandonouGrupo( const Value: Boolean);
begin
  F__isset_AbandonouGrupo := True;
  FAbandonouGrupo := Value;
end;

function TParticipanteRowItemThriftImpl.Get__isset_AbandonouGrupo: Boolean;
begin
  Result := F__isset_AbandonouGrupo;
end;

function TParticipanteRowItemThriftImpl.GetSexo: Int64;
begin
  Result := FSexo;
end;

procedure TParticipanteRowItemThriftImpl.SetSexo( const Value: Int64);
begin
  F__isset_Sexo := True;
  FSexo := Value;
end;

function TParticipanteRowItemThriftImpl.Get__isset_Sexo: Boolean;
begin
  Result := F__isset_Sexo;
end;

procedure TParticipanteRowItemThriftImpl.Read( const iprot: IProtocol);
var
  field_ : IField;
  struc : IStruct;

begin
  struc := iprot.ReadStructBegin;
  try
    while (true) do
    begin
      field_ := iprot.ReadFieldBegin();
      if (field_.Type_ = TType.Stop) then
      begin
        Break;
      end;
      case field_.ID of
        1: begin
          if (field_.Type_ = TType.String_) then
          begin
            CnsParticipante := iprot.ReadString();
          end else
          begin
            TProtocolUtil.Skip(iprot, field_.Type_);
          end;
        end;
        2: begin
          if (field_.Type_ = TType.I64) then
          begin
            DataNascimento := iprot.ReadI64();
          end else
          begin
            TProtocolUtil.Skip(iprot, field_.Type_);
          end;
        end;
        3: begin
          if (field_.Type_ = TType.Bool_) then
          begin
            AvaliacaoAlterada := iprot.ReadBool();
          end else
          begin
            TProtocolUtil.Skip(iprot, field_.Type_);
          end;
        end;
        4: begin
          if (field_.Type_ = TType.Double_) then
          begin
            Peso := iprot.ReadDouble();
          end else
          begin
            TProtocolUtil.Skip(iprot, field_.Type_);
          end;
        end;
        5: begin
          if (field_.Type_ = TType.Double_) then
          begin
            Altura := iprot.ReadDouble();
          end else
          begin
            TProtocolUtil.Skip(iprot, field_.Type_);
          end;
        end;
        6: begin
          if (field_.Type_ = TType.Bool_) then
          begin
            CessouHabitoFumar := iprot.ReadBool();
          end else
          begin
            TProtocolUtil.Skip(iprot, field_.Type_);
          end;
        end;
        7: begin
          if (field_.Type_ = TType.Bool_) then
          begin
            AbandonouGrupo := iprot.ReadBool();
          end else
          begin
            TProtocolUtil.Skip(iprot, field_.Type_);
          end;
        end;
        8: begin
          if (field_.Type_ = TType.I64) then
          begin
            Sexo := iprot.ReadI64();
          end else
          begin
            TProtocolUtil.Skip(iprot, field_.Type_);
          end;
        end
        else begin
          TProtocolUtil.Skip(iprot, field_.Type_);
        end;
      end;
      iprot.ReadFieldEnd;
    end;
  finally
    iprot.ReadStructEnd;
  end;
end;

procedure TParticipanteRowItemThriftImpl.Write( const oprot: IProtocol);
var
  struc : IStruct;
  field_ : IField;
begin
  struc := TStructImpl.Create('ParticipanteRowItemThrift');
  oprot.WriteStructBegin(struc);
  field_ := TFieldImpl.Create;
  if (__isset_CnsParticipante) then
  begin
    field_.Name := 'cnsParticipante';
    field_.Type_  := TType.String_;
    field_.ID := 1;
    oprot.WriteFieldBegin(field_);
    oprot.WriteString(CnsParticipante);
    oprot.WriteFieldEnd();
  end;
  if (__isset_DataNascimento) then
  begin
    field_.Name := 'dataNascimento';
    field_.Type_  := TType.I64;
    field_.ID := 2;
    oprot.WriteFieldBegin(field_);
    oprot.WriteI64(DataNascimento);
    oprot.WriteFieldEnd();
  end;
  if (__isset_AvaliacaoAlterada) then
  begin
    field_.Name := 'avaliacaoAlterada';
    field_.Type_  := TType.Bool_;
    field_.ID := 3;
    oprot.WriteFieldBegin(field_);
    oprot.WriteBool(AvaliacaoAlterada);
    oprot.WriteFieldEnd();
  end;
  if (__isset_Peso) then
  begin
    field_.Name := 'peso';
    field_.Type_  := TType.Double_;
    field_.ID := 4;
    oprot.WriteFieldBegin(field_);
    oprot.WriteDouble(Peso);
    oprot.WriteFieldEnd();
  end;
  if (__isset_Altura) then
  begin
    field_.Name := 'altura';
    field_.Type_  := TType.Double_;
    field_.ID := 5;
    oprot.WriteFieldBegin(field_);
    oprot.WriteDouble(Altura);
    oprot.WriteFieldEnd();
  end;
  if (__isset_CessouHabitoFumar) then
  begin
    field_.Name := 'cessouHabitoFumar';
    field_.Type_  := TType.Bool_;
    field_.ID := 6;
    oprot.WriteFieldBegin(field_);
    oprot.WriteBool(CessouHabitoFumar);
    oprot.WriteFieldEnd();
  end;
  if (__isset_AbandonouGrupo) then
  begin
    field_.Name := 'abandonouGrupo';
    field_.Type_  := TType.Bool_;
    field_.ID := 7;
    oprot.WriteFieldBegin(field_);
    oprot.WriteBool(AbandonouGrupo);
    oprot.WriteFieldEnd();
  end;
  if (__isset_Sexo) then
  begin
    field_.Name := 'sexo';
    field_.Type_  := TType.I64;
    field_.ID := 8;
    oprot.WriteFieldBegin(field_);
    oprot.WriteI64(Sexo);
    oprot.WriteFieldEnd();
  end;
  oprot.WriteFieldStop();
  oprot.WriteStructEnd();
end;

function TParticipanteRowItemThriftImpl.ToString: string;
var
  _sb0 : TThriftStringBuilder;
  _first1 : Boolean;
begin
  _sb0 := TThriftStringBuilder.Create('(');
  try
    _first1 := TRUE;
    if (__isset_CnsParticipante) then begin
      if not _first1 then _sb0.Append(',');
      _first1 := FALSE;
      _sb0.Append('CnsParticipante: ');
      _sb0.Append(CnsParticipante);
    end;
    if (__isset_DataNascimento) then begin
      if not _first1 then _sb0.Append(',');
      _first1 := FALSE;
      _sb0.Append('DataNascimento: ');
      _sb0.Append(DataNascimento);
    end;
    if (__isset_AvaliacaoAlterada) then begin
      if not _first1 then _sb0.Append(',');
      _first1 := FALSE;
      _sb0.Append('AvaliacaoAlterada: ');
      _sb0.Append(AvaliacaoAlterada);
    end;
    if (__isset_Peso) then begin
      if not _first1 then _sb0.Append(',');
      _first1 := FALSE;
      _sb0.Append('Peso: ');
      _sb0.Append(Peso);
    end;
    if (__isset_Altura) then begin
      if not _first1 then _sb0.Append(',');
      _first1 := FALSE;
      _sb0.Append('Altura: ');
      _sb0.Append(Altura);
    end;
    if (__isset_CessouHabitoFumar) then begin
      if not _first1 then _sb0.Append(',');
      _first1 := FALSE;
      _sb0.Append('CessouHabitoFumar: ');
      _sb0.Append(CessouHabitoFumar);
    end;
    if (__isset_AbandonouGrupo) then begin
      if not _first1 then _sb0.Append(',');
      _first1 := FALSE;
      _sb0.Append('AbandonouGrupo: ');
      _sb0.Append(AbandonouGrupo);
    end;
    if (__isset_Sexo) then begin
      if not _first1 then _sb0.Append(',');
      _first1 := FALSE;
      _sb0.Append('Sexo: ');
      _sb0.Append(Sexo);
    end;
    _sb0.Append(')');
    Result := _sb0.ToString;
    if _first1 then {prevent warning};
  finally
    _sb0.Free;
  end;
end;

constructor TProfissionalCboRowItemThriftImpl.Create;
begin
  inherited;
end;

destructor TProfissionalCboRowItemThriftImpl.Destroy;
begin
  inherited;
end;

function TProfissionalCboRowItemThriftImpl.GetCnsProfissional: string;
begin
  Result := FCnsProfissional;
end;

procedure TProfissionalCboRowItemThriftImpl.SetCnsProfissional( const Value: string);
begin
  F__isset_CnsProfissional := True;
  FCnsProfissional := Value;
end;

function TProfissionalCboRowItemThriftImpl.Get__isset_CnsProfissional: Boolean;
begin
  Result := F__isset_CnsProfissional;
end;

function TProfissionalCboRowItemThriftImpl.GetCodigoCbo2002: string;
begin
  Result := FCodigoCbo2002;
end;

procedure TProfissionalCboRowItemThriftImpl.SetCodigoCbo2002( const Value: string);
begin
  F__isset_CodigoCbo2002 := True;
  FCodigoCbo2002 := Value;
end;

function TProfissionalCboRowItemThriftImpl.Get__isset_CodigoCbo2002: Boolean;
begin
  Result := F__isset_CodigoCbo2002;
end;

procedure TProfissionalCboRowItemThriftImpl.Read( const iprot: IProtocol);
var
  field_ : IField;
  struc : IStruct;

begin
  struc := iprot.ReadStructBegin;
  try
    while (true) do
    begin
      field_ := iprot.ReadFieldBegin();
      if (field_.Type_ = TType.Stop) then
      begin
        Break;
      end;
      case field_.ID of
        1: begin
          if (field_.Type_ = TType.String_) then
          begin
            CnsProfissional := iprot.ReadString();
          end else
          begin
            TProtocolUtil.Skip(iprot, field_.Type_);
          end;
        end;
        2: begin
          if (field_.Type_ = TType.String_) then
          begin
            CodigoCbo2002 := iprot.ReadString();
          end else
          begin
            TProtocolUtil.Skip(iprot, field_.Type_);
          end;
        end
        else begin
          TProtocolUtil.Skip(iprot, field_.Type_);
        end;
      end;
      iprot.ReadFieldEnd;
    end;
  finally
    iprot.ReadStructEnd;
  end;
end;

procedure TProfissionalCboRowItemThriftImpl.Write( const oprot: IProtocol);
var
  struc : IStruct;
  field_ : IField;
begin
  struc := TStructImpl.Create('ProfissionalCboRowItemThrift');
  oprot.WriteStructBegin(struc);
  field_ := TFieldImpl.Create;
  if (__isset_CnsProfissional) then
  begin
    field_.Name := 'cnsProfissional';
    field_.Type_  := TType.String_;
    field_.ID := 1;
    oprot.WriteFieldBegin(field_);
    oprot.WriteString(CnsProfissional);
    oprot.WriteFieldEnd();
  end;
  if (__isset_CodigoCbo2002) then
  begin
    field_.Name := 'codigoCbo2002';
    field_.Type_  := TType.String_;
    field_.ID := 2;
    oprot.WriteFieldBegin(field_);
    oprot.WriteString(CodigoCbo2002);
    oprot.WriteFieldEnd();
  end;
  oprot.WriteFieldStop();
  oprot.WriteStructEnd();
end;

function TProfissionalCboRowItemThriftImpl.ToString: string;
var
  _sb2 : TThriftStringBuilder;
  _first3 : Boolean;
begin
  _sb2 := TThriftStringBuilder.Create('(');
  try
    _first3 := TRUE;
    if (__isset_CnsProfissional) then begin
      if not _first3 then _sb2.Append(',');
      _first3 := FALSE;
      _sb2.Append('CnsProfissional: ');
      _sb2.Append(CnsProfissional);
    end;
    if (__isset_CodigoCbo2002) then begin
      if not _first3 then _sb2.Append(',');
      _first3 := FALSE;
      _sb2.Append('CodigoCbo2002: ');
      _sb2.Append(CodigoCbo2002);
    end;
    _sb2.Append(')');
    Result := _sb2.ToString;
    if _first3 then {prevent warning};
  finally
    _sb2.Free;
  end;
end;

constructor TFichaAtividadeColetivaThriftImpl.Create;
begin
  inherited;
end;

destructor TFichaAtividadeColetivaThriftImpl.Destroy;
begin
  inherited;
end;

function TFichaAtividadeColetivaThriftImpl.GetUuidFicha: string;
begin
  Result := FUuidFicha;
end;

procedure TFichaAtividadeColetivaThriftImpl.SetUuidFicha( const Value: string);
begin
  FUuidFicha := Value;
end;

function TFichaAtividadeColetivaThriftImpl.GetOutraLocalidade: string;
begin
  Result := FOutraLocalidade;
end;

procedure TFichaAtividadeColetivaThriftImpl.SetOutraLocalidade( const Value: string);
begin
  F__isset_OutraLocalidade := True;
  FOutraLocalidade := Value;
end;

function TFichaAtividadeColetivaThriftImpl.Get__isset_OutraLocalidade: Boolean;
begin
  Result := F__isset_OutraLocalidade;
end;

function TFichaAtividadeColetivaThriftImpl.GetInep: Int64;
begin
  Result := FInep;
end;

procedure TFichaAtividadeColetivaThriftImpl.SetInep( const Value: Int64);
begin
  F__isset_Inep := True;
  FInep := Value;
end;

function TFichaAtividadeColetivaThriftImpl.Get__isset_Inep: Boolean;
begin
  Result := F__isset_Inep;
end;

function TFichaAtividadeColetivaThriftImpl.GetNumParticipantes: Integer;
begin
  Result := FNumParticipantes;
end;

procedure TFichaAtividadeColetivaThriftImpl.SetNumParticipantes( const Value: Integer);
begin
  F__isset_NumParticipantes := True;
  FNumParticipantes := Value;
end;

function TFichaAtividadeColetivaThriftImpl.Get__isset_NumParticipantes: Boolean;
begin
  Result := F__isset_NumParticipantes;
end;

function TFichaAtividadeColetivaThriftImpl.GetNumAvaliacoesAlteradas: Integer;
begin
  Result := FNumAvaliacoesAlteradas;
end;

procedure TFichaAtividadeColetivaThriftImpl.SetNumAvaliacoesAlteradas( const Value: Integer);
begin
  F__isset_NumAvaliacoesAlteradas := True;
  FNumAvaliacoesAlteradas := Value;
end;

function TFichaAtividadeColetivaThriftImpl.Get__isset_NumAvaliacoesAlteradas: Boolean;
begin
  Result := F__isset_NumAvaliacoesAlteradas;
end;

function TFichaAtividadeColetivaThriftImpl.GetProfissionais: IThriftList<IProfissionalCboRowItemThrift>;
begin
  Result := FProfissionais;
end;

procedure TFichaAtividadeColetivaThriftImpl.SetProfissionais( const Value: IThriftList<IProfissionalCboRowItemThrift>);
begin
  F__isset_Profissionais := True;
  FProfissionais := Value;
end;

function TFichaAtividadeColetivaThriftImpl.Get__isset_Profissionais: Boolean;
begin
  Result := F__isset_Profissionais;
end;

function TFichaAtividadeColetivaThriftImpl.GetAtividadeTipo: Int64;
begin
  Result := FAtividadeTipo;
end;

procedure TFichaAtividadeColetivaThriftImpl.SetAtividadeTipo( const Value: Int64);
begin
  F__isset_AtividadeTipo := True;
  FAtividadeTipo := Value;
end;

function TFichaAtividadeColetivaThriftImpl.Get__isset_AtividadeTipo: Boolean;
begin
  Result := F__isset_AtividadeTipo;
end;

function TFichaAtividadeColetivaThriftImpl.GetTemasParaReuniao: IThriftList<Int64>;
begin
  Result := FTemasParaReuniao;
end;

procedure TFichaAtividadeColetivaThriftImpl.SetTemasParaReuniao( const Value: IThriftList<Int64>);
begin
  F__isset_TemasParaReuniao := True;
  FTemasParaReuniao := Value;
end;

function TFichaAtividadeColetivaThriftImpl.Get__isset_TemasParaReuniao: Boolean;
begin
  Result := F__isset_TemasParaReuniao;
end;

function TFichaAtividadeColetivaThriftImpl.GetPublicoAlvo: IThriftList<Int64>;
begin
  Result := FPublicoAlvo;
end;

procedure TFichaAtividadeColetivaThriftImpl.SetPublicoAlvo( const Value: IThriftList<Int64>);
begin
  F__isset_PublicoAlvo := True;
  FPublicoAlvo := Value;
end;

function TFichaAtividadeColetivaThriftImpl.Get__isset_PublicoAlvo: Boolean;
begin
  Result := F__isset_PublicoAlvo;
end;

function TFichaAtividadeColetivaThriftImpl.GetParticipantes: IThriftList<IParticipanteRowItemThrift>;
begin
  Result := FParticipantes;
end;

procedure TFichaAtividadeColetivaThriftImpl.SetParticipantes( const Value: IThriftList<IParticipanteRowItemThrift>);
begin
  F__isset_Participantes := True;
  FParticipantes := Value;
end;

function TFichaAtividadeColetivaThriftImpl.Get__isset_Participantes: Boolean;
begin
  Result := F__isset_Participantes;
end;

function TFichaAtividadeColetivaThriftImpl.GetTbCdsOrigem: Integer;
begin
  Result := FTbCdsOrigem;
end;

procedure TFichaAtividadeColetivaThriftImpl.SetTbCdsOrigem( const Value: Integer);
begin
  F__isset_TbCdsOrigem := True;
  FTbCdsOrigem := Value;
end;

function TFichaAtividadeColetivaThriftImpl.Get__isset_TbCdsOrigem: Boolean;
begin
  Result := F__isset_TbCdsOrigem;
end;

function TFichaAtividadeColetivaThriftImpl.GetCnesLocalAtividade: string;
begin
  Result := FCnesLocalAtividade;
end;

procedure TFichaAtividadeColetivaThriftImpl.SetCnesLocalAtividade( const Value: string);
begin
  F__isset_CnesLocalAtividade := True;
  FCnesLocalAtividade := Value;
end;

function TFichaAtividadeColetivaThriftImpl.Get__isset_CnesLocalAtividade: Boolean;
begin
  Result := F__isset_CnesLocalAtividade;
end;

function TFichaAtividadeColetivaThriftImpl.GetProcedimento: string;
begin
  Result := FProcedimento;
end;

procedure TFichaAtividadeColetivaThriftImpl.SetProcedimento( const Value: string);
begin
  F__isset_Procedimento := True;
  FProcedimento := Value;
end;

function TFichaAtividadeColetivaThriftImpl.Get__isset_Procedimento: Boolean;
begin
  Result := F__isset_Procedimento;
end;

function TFichaAtividadeColetivaThriftImpl.GetTurno: Int64;
begin
  Result := FTurno;
end;

procedure TFichaAtividadeColetivaThriftImpl.SetTurno( const Value: Int64);
begin
  F__isset_Turno := True;
  FTurno := Value;
end;

function TFichaAtividadeColetivaThriftImpl.Get__isset_Turno: Boolean;
begin
  Result := F__isset_Turno;
end;

function TFichaAtividadeColetivaThriftImpl.GetHeaderTransport: IUnicaLotacaoHeaderThrift;
begin
  Result := FHeaderTransport;
end;

procedure TFichaAtividadeColetivaThriftImpl.SetHeaderTransport( const Value: IUnicaLotacaoHeaderThrift);
begin
  F__isset_HeaderTransport := True;
  FHeaderTransport := Value;
end;

function TFichaAtividadeColetivaThriftImpl.Get__isset_HeaderTransport: Boolean;
begin
  Result := F__isset_HeaderTransport;
end;

function TFichaAtividadeColetivaThriftImpl.GetTemasParaSaude: IThriftList<Int64>;
begin
  Result := FTemasParaSaude;
end;

procedure TFichaAtividadeColetivaThriftImpl.SetTemasParaSaude( const Value: IThriftList<Int64>);
begin
  F__isset_TemasParaSaude := True;
  FTemasParaSaude := Value;
end;

function TFichaAtividadeColetivaThriftImpl.Get__isset_TemasParaSaude: Boolean;
begin
  Result := F__isset_TemasParaSaude;
end;

function TFichaAtividadeColetivaThriftImpl.GetPraticasEmSaude: IThriftList<Int64>;
begin
  Result := FPraticasEmSaude;
end;

procedure TFichaAtividadeColetivaThriftImpl.SetPraticasEmSaude( const Value: IThriftList<Int64>);
begin
  F__isset_PraticasEmSaude := True;
  FPraticasEmSaude := Value;
end;

function TFichaAtividadeColetivaThriftImpl.Get__isset_PraticasEmSaude: Boolean;
begin
  Result := F__isset_PraticasEmSaude;
end;

function TFichaAtividadeColetivaThriftImpl.GetPseEducacao: Boolean;
begin
  Result := FPseEducacao;
end;

procedure TFichaAtividadeColetivaThriftImpl.SetPseEducacao( const Value: Boolean);
begin
  F__isset_PseEducacao := True;
  FPseEducacao := Value;
end;

function TFichaAtividadeColetivaThriftImpl.Get__isset_PseEducacao: Boolean;
begin
  Result := F__isset_PseEducacao;
end;

function TFichaAtividadeColetivaThriftImpl.GetPseSaude: Boolean;
begin
  Result := FPseSaude;
end;

procedure TFichaAtividadeColetivaThriftImpl.SetPseSaude( const Value: Boolean);
begin
  F__isset_PseSaude := True;
  FPseSaude := Value;
end;

function TFichaAtividadeColetivaThriftImpl.Get__isset_PseSaude: Boolean;
begin
  Result := F__isset_PseSaude;
end;

procedure TFichaAtividadeColetivaThriftImpl.Read( const iprot: IProtocol);
var
  field_ : IField;
  struc : IStruct;
  _req_isset_UuidFicha : Boolean;
  _list4: IList;
  _i5: Integer;
  _elem6: IProfissionalCboRowItemThrift;
  _list7: IList;
  _i8: Integer;
  _elem9: Int64;
  _list10: IList;
  _i11: Integer;
  _elem12: Int64;
  _list13: IList;
  _i14: Integer;
  _elem15: IParticipanteRowItemThrift;
  _list16: IList;
  _i17: Integer;
  _elem18: Int64;
  _list19: IList;
  _i20: Integer;
  _elem21: Int64;

begin
  _req_isset_UuidFicha := FALSE;
  struc := iprot.ReadStructBegin;
  try
    while (true) do
    begin
      field_ := iprot.ReadFieldBegin();
      if (field_.Type_ = TType.Stop) then
      begin
        Break;
      end;
      case field_.ID of
        1: begin
          if (field_.Type_ = TType.String_) then
          begin
            UuidFicha := iprot.ReadString();
            _req_isset_UuidFicha := TRUE;
          end else
          begin
            TProtocolUtil.Skip(iprot, field_.Type_);
          end;
        end;
        4: begin
          if (field_.Type_ = TType.String_) then
          begin
            OutraLocalidade := iprot.ReadString();
          end else
          begin
            TProtocolUtil.Skip(iprot, field_.Type_);
          end;
        end;
        7: begin
          if (field_.Type_ = TType.I64) then
          begin
            Inep := iprot.ReadI64();
          end else
          begin
            TProtocolUtil.Skip(iprot, field_.Type_);
          end;
        end;
        11: begin
          if (field_.Type_ = TType.I32) then
          begin
            NumParticipantes := iprot.ReadI32();
          end else
          begin
            TProtocolUtil.Skip(iprot, field_.Type_);
          end;
        end;
        12: begin
          if (field_.Type_ = TType.I32) then
          begin
            NumAvaliacoesAlteradas := iprot.ReadI32();
          end else
          begin
            TProtocolUtil.Skip(iprot, field_.Type_);
          end;
        end;
        13: begin
          if (field_.Type_ = TType.List) then
          begin
            Profissionais := TThriftListImpl<IProfissionalCboRowItemThrift>.Create;
            _list4 := iprot.ReadListBegin();
            for _i5 := 0 to _list4.Count - 1 do
            begin
              _elem6 := TProfissionalCboRowItemThriftImpl.Create;
              _elem6.Read(iprot);
              Profissionais.Add(_elem6);
            end;
            iprot.ReadListEnd();
          end else
          begin
            TProtocolUtil.Skip(iprot, field_.Type_);
          end;
        end;
        14: begin
          if (field_.Type_ = TType.I64) then
          begin
            AtividadeTipo := iprot.ReadI64();
          end else
          begin
            TProtocolUtil.Skip(iprot, field_.Type_);
          end;
        end;
        15: begin
          if (field_.Type_ = TType.List) then
          begin
            TemasParaReuniao := TThriftListImpl<Int64>.Create;
            _list7 := iprot.ReadListBegin();
            for _i8 := 0 to _list7.Count - 1 do
            begin
              _elem9 := iprot.ReadI64();
              TemasParaReuniao.Add(_elem9);
            end;
            iprot.ReadListEnd();
          end else
          begin
            TProtocolUtil.Skip(iprot, field_.Type_);
          end;
        end;
        16: begin
          if (field_.Type_ = TType.List) then
          begin
            PublicoAlvo := TThriftListImpl<Int64>.Create;
            _list10 := iprot.ReadListBegin();
            for _i11 := 0 to _list10.Count - 1 do
            begin
              _elem12 := iprot.ReadI64();
              PublicoAlvo.Add(_elem12);
            end;
            iprot.ReadListEnd();
          end else
          begin
            TProtocolUtil.Skip(iprot, field_.Type_);
          end;
        end;
        18: begin
          if (field_.Type_ = TType.List) then
          begin
            Participantes := TThriftListImpl<IParticipanteRowItemThrift>.Create;
            _list13 := iprot.ReadListBegin();
            for _i14 := 0 to _list13.Count - 1 do
            begin
              _elem15 := TParticipanteRowItemThriftImpl.Create;
              _elem15.Read(iprot);
              Participantes.Add(_elem15);
            end;
            iprot.ReadListEnd();
          end else
          begin
            TProtocolUtil.Skip(iprot, field_.Type_);
          end;
        end;
        19: begin
          if (field_.Type_ = TType.I32) then
          begin
            TbCdsOrigem := iprot.ReadI32();
          end else
          begin
            TProtocolUtil.Skip(iprot, field_.Type_);
          end;
        end;
        21: begin
          if (field_.Type_ = TType.String_) then
          begin
            CnesLocalAtividade := iprot.ReadString();
          end else
          begin
            TProtocolUtil.Skip(iprot, field_.Type_);
          end;
        end;
        22: begin
          if (field_.Type_ = TType.String_) then
          begin
            Procedimento := iprot.ReadString();
          end else
          begin
            TProtocolUtil.Skip(iprot, field_.Type_);
          end;
        end;
        23: begin
          if (field_.Type_ = TType.I64) then
          begin
            Turno := iprot.ReadI64();
          end else
          begin
            TProtocolUtil.Skip(iprot, field_.Type_);
          end;
        end;
        24: begin
          if (field_.Type_ = TType.Struct) then
          begin
            HeaderTransport := TUnicaLotacaoHeaderThriftImpl.Create;
            HeaderTransport.Read(iprot);
          end else
          begin
            TProtocolUtil.Skip(iprot, field_.Type_);
          end;
        end;
        25: begin
          if (field_.Type_ = TType.List) then
          begin
            TemasParaSaude := TThriftListImpl<Int64>.Create;
            _list16 := iprot.ReadListBegin();
            for _i17 := 0 to _list16.Count - 1 do
            begin
              _elem18 := iprot.ReadI64();
              TemasParaSaude.Add(_elem18);
            end;
            iprot.ReadListEnd();
          end else
          begin
            TProtocolUtil.Skip(iprot, field_.Type_);
          end;
        end;
        26: begin
          if (field_.Type_ = TType.List) then
          begin
            PraticasEmSaude := TThriftListImpl<Int64>.Create;
            _list19 := iprot.ReadListBegin();
            for _i20 := 0 to _list19.Count - 1 do
            begin
              _elem21 := iprot.ReadI64();
              PraticasEmSaude.Add(_elem21);
            end;
            iprot.ReadListEnd();
          end else
          begin
            TProtocolUtil.Skip(iprot, field_.Type_);
          end;
        end;
        27: begin
          if (field_.Type_ = TType.Bool_) then
          begin
            PseEducacao := iprot.ReadBool();
          end else
          begin
            TProtocolUtil.Skip(iprot, field_.Type_);
          end;
        end;
        28: begin
          if (field_.Type_ = TType.Bool_) then
          begin
            PseSaude := iprot.ReadBool();
          end else
          begin
            TProtocolUtil.Skip(iprot, field_.Type_);
          end;
        end
        else begin
          TProtocolUtil.Skip(iprot, field_.Type_);
        end;
      end;
      iprot.ReadFieldEnd;
    end;
  finally
    iprot.ReadStructEnd;
  end;
  if not _req_isset_UuidFicha
  then raise TProtocolException.Create( TProtocolException.INVALID_DATA, 'UuidFicha');
end;

procedure TFichaAtividadeColetivaThriftImpl.Write( const oprot: IProtocol);
var
  struc : IStruct;
  field_ : IField;
  list_22 : IList;
  _iter23: IProfissionalCboRowItemThrift;
  list_24 : IList;
  _iter25: Int64;
  list_26 : IList;
  _iter27: Int64;
  list_28 : IList;
  _iter29: IParticipanteRowItemThrift;
  list_30 : IList;
  _iter31: Int64;
  list_32 : IList;
  _iter33: Int64;
begin
  struc := TStructImpl.Create('FichaAtividadeColetivaThrift');
  oprot.WriteStructBegin(struc);
  field_ := TFieldImpl.Create;
  // required field
  field_.Name := 'uuidFicha';
  field_.Type_  := TType.String_;
  field_.ID := 1;
  oprot.WriteFieldBegin(field_);
  oprot.WriteString(UuidFicha);
  oprot.WriteFieldEnd();
  if (__isset_OutraLocalidade) then
  begin
    field_.Name := 'outraLocalidade';
    field_.Type_  := TType.String_;
    field_.ID := 4;
    oprot.WriteFieldBegin(field_);
    oprot.WriteString(OutraLocalidade);
    oprot.WriteFieldEnd();
  end;
  if (__isset_Inep) then
  begin
    field_.Name := 'inep';
    field_.Type_  := TType.I64;
    field_.ID := 7;
    oprot.WriteFieldBegin(field_);
    oprot.WriteI64(Inep);
    oprot.WriteFieldEnd();
  end;
  if (__isset_NumParticipantes) then
  begin
    field_.Name := 'numParticipantes';
    field_.Type_  := TType.I32;
    field_.ID := 11;
    oprot.WriteFieldBegin(field_);
    oprot.WriteI32(NumParticipantes);
    oprot.WriteFieldEnd();
  end;
  if (__isset_NumAvaliacoesAlteradas) then
  begin
    field_.Name := 'numAvaliacoesAlteradas';
    field_.Type_  := TType.I32;
    field_.ID := 12;
    oprot.WriteFieldBegin(field_);
    oprot.WriteI32(NumAvaliacoesAlteradas);
    oprot.WriteFieldEnd();
  end;
  if (Profissionais <> nil) and __isset_Profissionais then
  begin
    field_.Name := 'profissionais';
    field_.Type_  := TType.List;
    field_.ID := 13;
    oprot.WriteFieldBegin(field_);
    list_22 := TListImpl.Create(TType.Struct, Profissionais.Count);
    oprot.WriteListBegin( list_22);
    for _iter23 in Profissionais do
    begin
      _iter23.Write(oprot);
    end;
    oprot.WriteListEnd();
    oprot.WriteFieldEnd();
  end;
  if (__isset_AtividadeTipo) then
  begin
    field_.Name := 'atividadeTipo';
    field_.Type_  := TType.I64;
    field_.ID := 14;
    oprot.WriteFieldBegin(field_);
    oprot.WriteI64(AtividadeTipo);
    oprot.WriteFieldEnd();
  end;
  if (TemasParaReuniao <> nil) and __isset_TemasParaReuniao then
  begin
    field_.Name := 'temasParaReuniao';
    field_.Type_  := TType.List;
    field_.ID := 15;
    oprot.WriteFieldBegin(field_);
    list_24 := TListImpl.Create(TType.I64, TemasParaReuniao.Count);
    oprot.WriteListBegin( list_24);
    for _iter25 in TemasParaReuniao do
    begin
      oprot.WriteI64(_iter25);
    end;
    oprot.WriteListEnd();
    oprot.WriteFieldEnd();
  end;
  if (PublicoAlvo <> nil) and __isset_PublicoAlvo then
  begin
    field_.Name := 'publicoAlvo';
    field_.Type_  := TType.List;
    field_.ID := 16;
    oprot.WriteFieldBegin(field_);
    list_26 := TListImpl.Create(TType.I64, PublicoAlvo.Count);
    oprot.WriteListBegin( list_26);
    for _iter27 in PublicoAlvo do
    begin
      oprot.WriteI64(_iter27);
    end;
    oprot.WriteListEnd();
    oprot.WriteFieldEnd();
  end;
  if (Participantes <> nil) and __isset_Participantes then
  begin
    field_.Name := 'participantes';
    field_.Type_  := TType.List;
    field_.ID := 18;
    oprot.WriteFieldBegin(field_);
    list_28 := TListImpl.Create(TType.Struct, Participantes.Count);
    oprot.WriteListBegin( list_28);
    for _iter29 in Participantes do
    begin
      _iter29.Write(oprot);
    end;
    oprot.WriteListEnd();
    oprot.WriteFieldEnd();
  end;
  if (__isset_TbCdsOrigem) then
  begin
    field_.Name := 'tbCdsOrigem';
    field_.Type_  := TType.I32;
    field_.ID := 19;
    oprot.WriteFieldBegin(field_);
    oprot.WriteI32(TbCdsOrigem);
    oprot.WriteFieldEnd();
  end;
  if (__isset_CnesLocalAtividade) then
  begin
    field_.Name := 'cnesLocalAtividade';
    field_.Type_  := TType.String_;
    field_.ID := 21;
    oprot.WriteFieldBegin(field_);
    oprot.WriteString(CnesLocalAtividade);
    oprot.WriteFieldEnd();
  end;
  if (__isset_Procedimento) then
  begin
    field_.Name := 'procedimento';
    field_.Type_  := TType.String_;
    field_.ID := 22;
    oprot.WriteFieldBegin(field_);
    oprot.WriteString(Procedimento);
    oprot.WriteFieldEnd();
  end;
  if (__isset_Turno) then
  begin
    field_.Name := 'turno';
    field_.Type_  := TType.I64;
    field_.ID := 23;
    oprot.WriteFieldBegin(field_);
    oprot.WriteI64(Turno);
    oprot.WriteFieldEnd();
  end;
  if (HeaderTransport <> nil) and __isset_HeaderTransport then
  begin
    field_.Name := 'headerTransport';
    field_.Type_  := TType.Struct;
    field_.ID := 24;
    oprot.WriteFieldBegin(field_);
    HeaderTransport.Write(oprot);
    oprot.WriteFieldEnd();
  end;
  if (TemasParaSaude <> nil) and __isset_TemasParaSaude then
  begin
    field_.Name := 'temasParaSaude';
    field_.Type_  := TType.List;
    field_.ID := 25;
    oprot.WriteFieldBegin(field_);
    list_30 := TListImpl.Create(TType.I64, TemasParaSaude.Count);
    oprot.WriteListBegin( list_30);
    for _iter31 in TemasParaSaude do
    begin
      oprot.WriteI64(_iter31);
    end;
    oprot.WriteListEnd();
    oprot.WriteFieldEnd();
  end;
  if (PraticasEmSaude <> nil) and __isset_PraticasEmSaude then
  begin
    field_.Name := 'praticasEmSaude';
    field_.Type_  := TType.List;
    field_.ID := 26;
    oprot.WriteFieldBegin(field_);
    list_32 := TListImpl.Create(TType.I64, PraticasEmSaude.Count);
    oprot.WriteListBegin( list_32);
    for _iter33 in PraticasEmSaude do
    begin
      oprot.WriteI64(_iter33);
    end;
    oprot.WriteListEnd();
    oprot.WriteFieldEnd();
  end;
  if (__isset_PseEducacao) then
  begin
    field_.Name := 'pseEducacao';
    field_.Type_  := TType.Bool_;
    field_.ID := 27;
    oprot.WriteFieldBegin(field_);
    oprot.WriteBool(PseEducacao);
    oprot.WriteFieldEnd();
  end;
  if (__isset_PseSaude) then
  begin
    field_.Name := 'pseSaude';
    field_.Type_  := TType.Bool_;
    field_.ID := 28;
    oprot.WriteFieldBegin(field_);
    oprot.WriteBool(PseSaude);
    oprot.WriteFieldEnd();
  end;
  oprot.WriteFieldStop();
  oprot.WriteStructEnd();
end;

function TFichaAtividadeColetivaThriftImpl.ToString: string;
var
  _sb34 : TThriftStringBuilder;
begin
  _sb34 := TThriftStringBuilder.Create('(');
  try
    _sb34.Append(', UuidFicha: ');
    _sb34.Append(UuidFicha);
    if (__isset_OutraLocalidade) then begin
      _sb34.Append(', OutraLocalidade: ');
      _sb34.Append(OutraLocalidade);
    end;
    if (__isset_Inep) then begin
      _sb34.Append(', Inep: ');
      _sb34.Append(Inep);
    end;
    if (__isset_NumParticipantes) then begin
      _sb34.Append(', NumParticipantes: ');
      _sb34.Append(NumParticipantes);
    end;
    if (__isset_NumAvaliacoesAlteradas) then begin
      _sb34.Append(', NumAvaliacoesAlteradas: ');
      _sb34.Append(NumAvaliacoesAlteradas);
    end;
    if (Profissionais <> nil) and __isset_Profissionais then begin
      _sb34.Append(', Profissionais: ');
      _sb34.Append(Profissionais);
    end;
    if (__isset_AtividadeTipo) then begin
      _sb34.Append(', AtividadeTipo: ');
      _sb34.Append(AtividadeTipo);
    end;
    if (TemasParaReuniao <> nil) and __isset_TemasParaReuniao then begin
      _sb34.Append(', TemasParaReuniao: ');
      _sb34.Append(TemasParaReuniao);
    end;
    if (PublicoAlvo <> nil) and __isset_PublicoAlvo then begin
      _sb34.Append(', PublicoAlvo: ');
      _sb34.Append(PublicoAlvo);
    end;
    if (Participantes <> nil) and __isset_Participantes then begin
      _sb34.Append(', Participantes: ');
      _sb34.Append(Participantes);
    end;
    if (__isset_TbCdsOrigem) then begin
      _sb34.Append(', TbCdsOrigem: ');
      _sb34.Append(TbCdsOrigem);
    end;
    if (__isset_CnesLocalAtividade) then begin
      _sb34.Append(', CnesLocalAtividade: ');
      _sb34.Append(CnesLocalAtividade);
    end;
    if (__isset_Procedimento) then begin
      _sb34.Append(', Procedimento: ');
      _sb34.Append(Procedimento);
    end;
    if (__isset_Turno) then begin
      _sb34.Append(', Turno: ');
      _sb34.Append(Turno);
    end;
    if (HeaderTransport <> nil) and __isset_HeaderTransport then begin
      _sb34.Append(', HeaderTransport: ');
      if (HeaderTransport = nil) then _sb34.Append('<null>') else _sb34.Append(HeaderTransport.ToString());
    end;
    if (TemasParaSaude <> nil) and __isset_TemasParaSaude then begin
      _sb34.Append(', TemasParaSaude: ');
      _sb34.Append(TemasParaSaude);
    end;
    if (PraticasEmSaude <> nil) and __isset_PraticasEmSaude then begin
      _sb34.Append(', PraticasEmSaude: ');
      _sb34.Append(PraticasEmSaude);
    end;
    if (__isset_PseEducacao) then begin
      _sb34.Append(', PseEducacao: ');
      _sb34.Append(PseEducacao);
    end;
    if (__isset_PseSaude) then begin
      _sb34.Append(', PseSaude: ');
      _sb34.Append(PseSaude);
    end;
    _sb34.Append(')');
    Result := _sb34.ToString;
  finally
    _sb34.Free;
  end;
end;


initialization

finalization


end.
