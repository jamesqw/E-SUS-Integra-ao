(**
 * Autogenerated by Thrift Compiler (0.9.2)
 *
 * DO NOT EDIT UNLESS YOU ARE SURE THAT YOU KNOW WHAT YOU ARE DOING
 *)

unit br.gov.saude.esusab.ras.consumoalimentar;

interface

uses
  Classes,
  SysUtils,
  Generics.Collections,
  Thrift,
  Thrift.Utils,
  Thrift.Collections,
  Thrift.Protocol,
  Thrift.Transport,
  br.gov.saude.esusab.ras.common;

const
  cbr_gov_saude_esusab_ras_consumoalimentar_Option_AnsiStr_Binary = False;
  cbr_gov_saude_esusab_ras_consumoalimentar_Option_Register_Types = False;
  cbr_gov_saude_esusab_ras_consumoalimentar_Option_ConstPrefix    = False;
  cbr_gov_saude_esusab_ras_consumoalimentar_Option_Events         = False;
  cbr_gov_saude_esusab_ras_consumoalimentar_Option_XmlDoc         = False;

type
  IPerguntaQuestionarioCriancasMenoresSeisMesesThrift = interface;
  IPerguntaQuestionarioCriancasDeSeisVinteTresMesesThrift = interface;
  IPerguntaQuestionarioCriancasComMaisDoisAnosThrift = interface;
  IFichaConsumoAlimentarThrift = interface;


{$SCOPEDENUMS ON}

  TPerguntaCriancasMenoresSeisMesesEnumThrift = (
    A_CRIANCA_ONTEM_TOMOU_LEITE_DO_PEITO = 1,
    MINGAU = 3,
    AGUA_CHA = 4,
    LEITE_VACA = 5,
    FORMULA_INFANTIL = 6,
    SUCO_FRUTA = 7,
    FRUTA = 8,
    COMIDA_DE_SAL = 9,
    OUTROS_ALIMENTOS_BEBIDAS = 10
  );

  TPerguntaCriancasDeSeisVinteTresMesesEnumThrift = (
    A_CRIANCA_ONTEM_TOMOU_LEITE_PEITO = 21,
    ONTEM_A_CRIANCA_COMEU_FRUTA_INTEIRA_PEDACO_AMASSADO = 22,
    SE_SIM_QUANTAS_VEZES = 23,
    ONTEM_A_CRIANCA_COMEU_COMIDA_DE_SAL = 24,
    SE_COMEU_COMIDA_DE_SAL_QUANTAS_VEZES = 25,
    SE_SIM_ESSA_COMIDA_FOI_OFERECIDA = 26,
    OUTRO_LEITE_QUE_NAO_LEITE_DO_PEITO = 28,
    MINGAU_COM_LEITE = 29,
    IOGURTE = 30,
    LEGUMES = 31,
    VEGETAL_OU_FRUTAS_COR_ALARANJADA_OU_FOLHAS_ESCURAS = 32,
    VERDURA_DE_FOLHA = 33,
    CARNE = 34,
    FIGADO = 35,
    FEIJAO = 36,
    ARROZ_BATATA_INHAME_MANDIOCA_FARINHA_MACARRAO = 37,
    HAMBURGUER_E_OU_EMBUTIDOS = 38,
    BEBIDAS_ADOCADAS = 39,
    MACARRAO_INSTANTANEO_SALGADINHOS_BISCOITOS = 40,
    BISCOITO_RECHEADO_DOCES_OU_GULOSEIMAS = 41
  );

  TPerguntaCriancasComMaisDoisAnosEnumThrift = (
    VOCE_TEM_COSTUME_DE_REALIZAR_AS_REFEICOES_ASSISTINDO_TV_MEXENDO_NO_COMPUTADOR_E_OU_CELULAR = 11,
    QUAIS_REFEICOES_VOCE_FAZ_AO_LONGO_DO_DIA = 12,
    FEIJAO = 14,
    FRUTAS_FRESCAS = 15,
    VERDURAS_E_OU_LEGUMES = 16,
    HAMBURGUER_E_OU_EMBUTIDOS = 17,
    BEBIDAS_ADOCADAS = 18,
    MACARRAO_INSTANTANEO_SALGADINHOS_BISCOITOS = 19,
    BISCOITO_RECHEADO_DOCES_OU_GULOSEIMAS = 20
  );

  TRespostaUnicaEscolhaEnumThrift = (
    SIM = 1,
    NAO = 2,
    NAO_SABE = 3,
    UMA_VEZ = 4,
    DUAS_VEZES = 5,
    TRES_VEZES_OU_MAIS = 6,
    EM_PEDACOS = 7,
    AMASSADA = 8,
    PASSADA_NA_PENEIRA = 9,
    LIQUIDIFICADA = 10,
    SO_O_CALDO = 11
  );

  TRespostaMultiplaEscolhaEnumThrift = (
    CAFE_DA_MANHA = 12,
    LANCHE_DA_MANHA = 13,
    ALMOCO = 14,
    LANCHE_DA_TARDE = 15,
    JANTAR = 16,
    CEIA = 17
  );

{$SCOPEDENUMS OFF}

  IPerguntaQuestionarioCriancasMenoresSeisMesesThrift = interface(IBase)
    function GetPergunta: TPerguntaCriancasMenoresSeisMesesEnumThrift;
    procedure SetPergunta( const Value: TPerguntaCriancasMenoresSeisMesesEnumThrift);
    function GetRespostaUnicaEscolha: TRespostaUnicaEscolhaEnumThrift;
    procedure SetRespostaUnicaEscolha( const Value: TRespostaUnicaEscolhaEnumThrift);

    property Pergunta: TPerguntaCriancasMenoresSeisMesesEnumThrift read GetPergunta write SetPergunta;
    property RespostaUnicaEscolha: TRespostaUnicaEscolhaEnumThrift read GetRespostaUnicaEscolha write SetRespostaUnicaEscolha;

    function Get__isset_Pergunta: Boolean;
    function Get__isset_RespostaUnicaEscolha: Boolean;

    property __isset_Pergunta: Boolean read Get__isset_Pergunta;
    property __isset_RespostaUnicaEscolha: Boolean read Get__isset_RespostaUnicaEscolha;
  end;

  TPerguntaQuestionarioCriancasMenoresSeisMesesThriftImpl = class(TInterfacedObject, IBase, IPerguntaQuestionarioCriancasMenoresSeisMesesThrift)
  private
    FPergunta: TPerguntaCriancasMenoresSeisMesesEnumThrift;
    FRespostaUnicaEscolha: TRespostaUnicaEscolhaEnumThrift;
    
    F__isset_Pergunta: Boolean;
    F__isset_RespostaUnicaEscolha: Boolean;
    
    function GetPergunta: TPerguntaCriancasMenoresSeisMesesEnumThrift;
    procedure SetPergunta( const Value: TPerguntaCriancasMenoresSeisMesesEnumThrift);
    function GetRespostaUnicaEscolha: TRespostaUnicaEscolhaEnumThrift;
    procedure SetRespostaUnicaEscolha( const Value: TRespostaUnicaEscolhaEnumThrift);

    function Get__isset_Pergunta: Boolean;
    function Get__isset_RespostaUnicaEscolha: Boolean;
  public
    constructor Create;
    destructor Destroy; override;

    function ToString: string; override;

    // IBase
    procedure Read( const iprot: IProtocol);
    procedure Write( const oprot: IProtocol);

    // Properties
    property Pergunta: TPerguntaCriancasMenoresSeisMesesEnumThrift read GetPergunta write SetPergunta;
    property RespostaUnicaEscolha: TRespostaUnicaEscolhaEnumThrift read GetRespostaUnicaEscolha write SetRespostaUnicaEscolha;

    // isset
    property __isset_Pergunta: Boolean read Get__isset_Pergunta;
    property __isset_RespostaUnicaEscolha: Boolean read Get__isset_RespostaUnicaEscolha;
  end;

  IPerguntaQuestionarioCriancasDeSeisVinteTresMesesThrift = interface(IBase)
    function GetPergunta: TPerguntaCriancasDeSeisVinteTresMesesEnumThrift;
    procedure SetPergunta( const Value: TPerguntaCriancasDeSeisVinteTresMesesEnumThrift);
    function GetRespostaUnicaEscolha: TRespostaUnicaEscolhaEnumThrift;
    procedure SetRespostaUnicaEscolha( const Value: TRespostaUnicaEscolhaEnumThrift);

    property Pergunta: TPerguntaCriancasDeSeisVinteTresMesesEnumThrift read GetPergunta write SetPergunta;
    property RespostaUnicaEscolha: TRespostaUnicaEscolhaEnumThrift read GetRespostaUnicaEscolha write SetRespostaUnicaEscolha;

    function Get__isset_Pergunta: Boolean;
    function Get__isset_RespostaUnicaEscolha: Boolean;

    property __isset_Pergunta: Boolean read Get__isset_Pergunta;
    property __isset_RespostaUnicaEscolha: Boolean read Get__isset_RespostaUnicaEscolha;
  end;

  TPerguntaQuestionarioCriancasDeSeisVinteTresMesesThriftImpl = class(TInterfacedObject, IBase, IPerguntaQuestionarioCriancasDeSeisVinteTresMesesThrift)
  private
    FPergunta: TPerguntaCriancasDeSeisVinteTresMesesEnumThrift;
    FRespostaUnicaEscolha: TRespostaUnicaEscolhaEnumThrift;
    
    F__isset_Pergunta: Boolean;
    F__isset_RespostaUnicaEscolha: Boolean;
    
    function GetPergunta: TPerguntaCriancasDeSeisVinteTresMesesEnumThrift;
    procedure SetPergunta( const Value: TPerguntaCriancasDeSeisVinteTresMesesEnumThrift);
    function GetRespostaUnicaEscolha: TRespostaUnicaEscolhaEnumThrift;
    procedure SetRespostaUnicaEscolha( const Value: TRespostaUnicaEscolhaEnumThrift);

    function Get__isset_Pergunta: Boolean;
    function Get__isset_RespostaUnicaEscolha: Boolean;
  public
    constructor Create;
    destructor Destroy; override;

    function ToString: string; override;

    // IBase
    procedure Read( const iprot: IProtocol);
    procedure Write( const oprot: IProtocol);

    // Properties
    property Pergunta: TPerguntaCriancasDeSeisVinteTresMesesEnumThrift read GetPergunta write SetPergunta;
    property RespostaUnicaEscolha: TRespostaUnicaEscolhaEnumThrift read GetRespostaUnicaEscolha write SetRespostaUnicaEscolha;

    // isset
    property __isset_Pergunta: Boolean read Get__isset_Pergunta;
    property __isset_RespostaUnicaEscolha: Boolean read Get__isset_RespostaUnicaEscolha;
  end;

  IPerguntaQuestionarioCriancasComMaisDoisAnosThrift = interface(IBase)
    function GetPergunta: TPerguntaCriancasComMaisDoisAnosEnumThrift;
    procedure SetPergunta( const Value: TPerguntaCriancasComMaisDoisAnosEnumThrift);
    function GetRespostaUnicaEscolha: TRespostaUnicaEscolhaEnumThrift;
    procedure SetRespostaUnicaEscolha( const Value: TRespostaUnicaEscolhaEnumThrift);
    function GetRespostaMultiplaEscolha: IThriftList<TRespostaMultiplaEscolhaEnumThrift>;
    procedure SetRespostaMultiplaEscolha( const Value: IThriftList<TRespostaMultiplaEscolhaEnumThrift>);

    property Pergunta: TPerguntaCriancasComMaisDoisAnosEnumThrift read GetPergunta write SetPergunta;
    property RespostaUnicaEscolha: TRespostaUnicaEscolhaEnumThrift read GetRespostaUnicaEscolha write SetRespostaUnicaEscolha;
    property RespostaMultiplaEscolha: IThriftList<TRespostaMultiplaEscolhaEnumThrift> read GetRespostaMultiplaEscolha write SetRespostaMultiplaEscolha;

    function Get__isset_Pergunta: Boolean;
    function Get__isset_RespostaUnicaEscolha: Boolean;
    function Get__isset_RespostaMultiplaEscolha: Boolean;

    property __isset_Pergunta: Boolean read Get__isset_Pergunta;
    property __isset_RespostaUnicaEscolha: Boolean read Get__isset_RespostaUnicaEscolha;
    property __isset_RespostaMultiplaEscolha: Boolean read Get__isset_RespostaMultiplaEscolha;
  end;

  TPerguntaQuestionarioCriancasComMaisDoisAnosThriftImpl = class(TInterfacedObject, IBase, IPerguntaQuestionarioCriancasComMaisDoisAnosThrift)
  private
    FPergunta: TPerguntaCriancasComMaisDoisAnosEnumThrift;
    FRespostaUnicaEscolha: TRespostaUnicaEscolhaEnumThrift;
    FRespostaMultiplaEscolha: IThriftList<TRespostaMultiplaEscolhaEnumThrift>;
    
    F__isset_Pergunta: Boolean;
    F__isset_RespostaUnicaEscolha: Boolean;
    F__isset_RespostaMultiplaEscolha: Boolean;
    
    function GetPergunta: TPerguntaCriancasComMaisDoisAnosEnumThrift;
    procedure SetPergunta( const Value: TPerguntaCriancasComMaisDoisAnosEnumThrift);
    function GetRespostaUnicaEscolha: TRespostaUnicaEscolhaEnumThrift;
    procedure SetRespostaUnicaEscolha( const Value: TRespostaUnicaEscolhaEnumThrift);
    function GetRespostaMultiplaEscolha: IThriftList<TRespostaMultiplaEscolhaEnumThrift>;
    procedure SetRespostaMultiplaEscolha( const Value: IThriftList<TRespostaMultiplaEscolhaEnumThrift>);

    function Get__isset_Pergunta: Boolean;
    function Get__isset_RespostaUnicaEscolha: Boolean;
    function Get__isset_RespostaMultiplaEscolha: Boolean;
  public
    constructor Create;
    destructor Destroy; override;

    function ToString: string; override;

    // IBase
    procedure Read( const iprot: IProtocol);
    procedure Write( const oprot: IProtocol);

    // Properties
    property Pergunta: TPerguntaCriancasComMaisDoisAnosEnumThrift read GetPergunta write SetPergunta;
    property RespostaUnicaEscolha: TRespostaUnicaEscolhaEnumThrift read GetRespostaUnicaEscolha write SetRespostaUnicaEscolha;
    property RespostaMultiplaEscolha: IThriftList<TRespostaMultiplaEscolhaEnumThrift> read GetRespostaMultiplaEscolha write SetRespostaMultiplaEscolha;

    // isset
    property __isset_Pergunta: Boolean read Get__isset_Pergunta;
    property __isset_RespostaUnicaEscolha: Boolean read Get__isset_RespostaUnicaEscolha;
    property __isset_RespostaMultiplaEscolha: Boolean read Get__isset_RespostaMultiplaEscolha;
  end;

  IFichaConsumoAlimentarThrift = interface(IBase)
    function GetHeaderTransport: IUnicaLotacaoHeaderThrift;
    procedure SetHeaderTransport( const Value: IUnicaLotacaoHeaderThrift);
    function GetCnsCidadao: string;
    procedure SetCnsCidadao( const Value: string);
    function GetIdentificacaoUsuario: string;
    procedure SetIdentificacaoUsuario( const Value: string);
    function GetDataNascimento: Int64;
    procedure SetDataNascimento( const Value: Int64);
    function GetSexo: Int64;
    procedure SetSexo( const Value: Int64);
    function GetLocalAtendimento: Int64;
    procedure SetLocalAtendimento( const Value: Int64);
    function GetPerguntasQuestionarioCriancasMenoresSeisMeses: IThriftList<IPerguntaQuestionarioCriancasMenoresSeisMesesThrift>;
    procedure SetPerguntasQuestionarioCriancasMenoresSeisMeses( const Value: IThriftList<IPerguntaQuestionarioCriancasMenoresSeisMesesThrift>);
    function GetPerguntasQuestionarioCriancasDeSeisVinteTresMeses: IThriftList<IPerguntaQuestionarioCriancasDeSeisVinteTresMesesThrift>;
    procedure SetPerguntasQuestionarioCriancasDeSeisVinteTresMeses( const Value: IThriftList<IPerguntaQuestionarioCriancasDeSeisVinteTresMesesThrift>);
    function GetPerguntasQuestionarioCriancasComMaisDoisAnos: IThriftList<IPerguntaQuestionarioCriancasComMaisDoisAnosThrift>;
    procedure SetPerguntasQuestionarioCriancasComMaisDoisAnos( const Value: IThriftList<IPerguntaQuestionarioCriancasComMaisDoisAnosThrift>);
    function GetUuidFicha: string;
    procedure SetUuidFicha( const Value: string);
    function GetTpCdsOrigem: Integer;
    procedure SetTpCdsOrigem( const Value: Integer);

    property HeaderTransport: IUnicaLotacaoHeaderThrift read GetHeaderTransport write SetHeaderTransport;
    property CnsCidadao: string read GetCnsCidadao write SetCnsCidadao;
    property IdentificacaoUsuario: string read GetIdentificacaoUsuario write SetIdentificacaoUsuario;
    property DataNascimento: Int64 read GetDataNascimento write SetDataNascimento;
    property Sexo: Int64 read GetSexo write SetSexo;
    property LocalAtendimento: Int64 read GetLocalAtendimento write SetLocalAtendimento;
    property PerguntasQuestionarioCriancasMenoresSeisMeses: IThriftList<IPerguntaQuestionarioCriancasMenoresSeisMesesThrift> read GetPerguntasQuestionarioCriancasMenoresSeisMeses write SetPerguntasQuestionarioCriancasMenoresSeisMeses;
    property PerguntasQuestionarioCriancasDeSeisVinteTresMeses: IThriftList<IPerguntaQuestionarioCriancasDeSeisVinteTresMesesThrift> read GetPerguntasQuestionarioCriancasDeSeisVinteTresMeses write SetPerguntasQuestionarioCriancasDeSeisVinteTresMeses;
    property PerguntasQuestionarioCriancasComMaisDoisAnos: IThriftList<IPerguntaQuestionarioCriancasComMaisDoisAnosThrift> read GetPerguntasQuestionarioCriancasComMaisDoisAnos write SetPerguntasQuestionarioCriancasComMaisDoisAnos;
    property UuidFicha: string read GetUuidFicha write SetUuidFicha;
    property TpCdsOrigem: Integer read GetTpCdsOrigem write SetTpCdsOrigem;

    function Get__isset_HeaderTransport: Boolean;
    function Get__isset_CnsCidadao: Boolean;
    function Get__isset_IdentificacaoUsuario: Boolean;
    function Get__isset_DataNascimento: Boolean;
    function Get__isset_Sexo: Boolean;
    function Get__isset_LocalAtendimento: Boolean;
    function Get__isset_PerguntasQuestionarioCriancasMenoresSeisMeses: Boolean;
    function Get__isset_PerguntasQuestionarioCriancasDeSeisVinteTresMeses: Boolean;
    function Get__isset_PerguntasQuestionarioCriancasComMaisDoisAnos: Boolean;
    function Get__isset_TpCdsOrigem: Boolean;

    property __isset_HeaderTransport: Boolean read Get__isset_HeaderTransport;
    property __isset_CnsCidadao: Boolean read Get__isset_CnsCidadao;
    property __isset_IdentificacaoUsuario: Boolean read Get__isset_IdentificacaoUsuario;
    property __isset_DataNascimento: Boolean read Get__isset_DataNascimento;
    property __isset_Sexo: Boolean read Get__isset_Sexo;
    property __isset_LocalAtendimento: Boolean read Get__isset_LocalAtendimento;
    property __isset_PerguntasQuestionarioCriancasMenoresSeisMeses: Boolean read Get__isset_PerguntasQuestionarioCriancasMenoresSeisMeses;
    property __isset_PerguntasQuestionarioCriancasDeSeisVinteTresMeses: Boolean read Get__isset_PerguntasQuestionarioCriancasDeSeisVinteTresMeses;
    property __isset_PerguntasQuestionarioCriancasComMaisDoisAnos: Boolean read Get__isset_PerguntasQuestionarioCriancasComMaisDoisAnos;
    property __isset_TpCdsOrigem: Boolean read Get__isset_TpCdsOrigem;
  end;

  TFichaConsumoAlimentarThriftImpl = class(TInterfacedObject, IBase, IFichaConsumoAlimentarThrift)
  private
    FHeaderTransport: IUnicaLotacaoHeaderThrift;
    FCnsCidadao: string;
    FIdentificacaoUsuario: string;
    FDataNascimento: Int64;
    FSexo: Int64;
    FLocalAtendimento: Int64;
    FPerguntasQuestionarioCriancasMenoresSeisMeses: IThriftList<IPerguntaQuestionarioCriancasMenoresSeisMesesThrift>;
    FPerguntasQuestionarioCriancasDeSeisVinteTresMeses: IThriftList<IPerguntaQuestionarioCriancasDeSeisVinteTresMesesThrift>;
    FPerguntasQuestionarioCriancasComMaisDoisAnos: IThriftList<IPerguntaQuestionarioCriancasComMaisDoisAnosThrift>;
    FUuidFicha: string;
    FTpCdsOrigem: Integer;
    
    F__isset_HeaderTransport: Boolean;
    F__isset_CnsCidadao: Boolean;
    F__isset_IdentificacaoUsuario: Boolean;
    F__isset_DataNascimento: Boolean;
    F__isset_Sexo: Boolean;
    F__isset_LocalAtendimento: Boolean;
    F__isset_PerguntasQuestionarioCriancasMenoresSeisMeses: Boolean;
    F__isset_PerguntasQuestionarioCriancasDeSeisVinteTresMeses: Boolean;
    F__isset_PerguntasQuestionarioCriancasComMaisDoisAnos: Boolean;
    F__isset_TpCdsOrigem: Boolean;
    
    function GetHeaderTransport: IUnicaLotacaoHeaderThrift;
    procedure SetHeaderTransport( const Value: IUnicaLotacaoHeaderThrift);
    function GetCnsCidadao: string;
    procedure SetCnsCidadao( const Value: string);
    function GetIdentificacaoUsuario: string;
    procedure SetIdentificacaoUsuario( const Value: string);
    function GetDataNascimento: Int64;
    procedure SetDataNascimento( const Value: Int64);
    function GetSexo: Int64;
    procedure SetSexo( const Value: Int64);
    function GetLocalAtendimento: Int64;
    procedure SetLocalAtendimento( const Value: Int64);
    function GetPerguntasQuestionarioCriancasMenoresSeisMeses: IThriftList<IPerguntaQuestionarioCriancasMenoresSeisMesesThrift>;
    procedure SetPerguntasQuestionarioCriancasMenoresSeisMeses( const Value: IThriftList<IPerguntaQuestionarioCriancasMenoresSeisMesesThrift>);
    function GetPerguntasQuestionarioCriancasDeSeisVinteTresMeses: IThriftList<IPerguntaQuestionarioCriancasDeSeisVinteTresMesesThrift>;
    procedure SetPerguntasQuestionarioCriancasDeSeisVinteTresMeses( const Value: IThriftList<IPerguntaQuestionarioCriancasDeSeisVinteTresMesesThrift>);
    function GetPerguntasQuestionarioCriancasComMaisDoisAnos: IThriftList<IPerguntaQuestionarioCriancasComMaisDoisAnosThrift>;
    procedure SetPerguntasQuestionarioCriancasComMaisDoisAnos( const Value: IThriftList<IPerguntaQuestionarioCriancasComMaisDoisAnosThrift>);
    function GetUuidFicha: string;
    procedure SetUuidFicha( const Value: string);
    function GetTpCdsOrigem: Integer;
    procedure SetTpCdsOrigem( const Value: Integer);

    function Get__isset_HeaderTransport: Boolean;
    function Get__isset_CnsCidadao: Boolean;
    function Get__isset_IdentificacaoUsuario: Boolean;
    function Get__isset_DataNascimento: Boolean;
    function Get__isset_Sexo: Boolean;
    function Get__isset_LocalAtendimento: Boolean;
    function Get__isset_PerguntasQuestionarioCriancasMenoresSeisMeses: Boolean;
    function Get__isset_PerguntasQuestionarioCriancasDeSeisVinteTresMeses: Boolean;
    function Get__isset_PerguntasQuestionarioCriancasComMaisDoisAnos: Boolean;
    function Get__isset_TpCdsOrigem: Boolean;
  public
    constructor Create;
    destructor Destroy; override;

    function ToString: string; override;

    // IBase
    procedure Read( const iprot: IProtocol);
    procedure Write( const oprot: IProtocol);

    // Properties
    property HeaderTransport: IUnicaLotacaoHeaderThrift read GetHeaderTransport write SetHeaderTransport;
    property CnsCidadao: string read GetCnsCidadao write SetCnsCidadao;
    property IdentificacaoUsuario: string read GetIdentificacaoUsuario write SetIdentificacaoUsuario;
    property DataNascimento: Int64 read GetDataNascimento write SetDataNascimento;
    property Sexo: Int64 read GetSexo write SetSexo;
    property LocalAtendimento: Int64 read GetLocalAtendimento write SetLocalAtendimento;
    property PerguntasQuestionarioCriancasMenoresSeisMeses: IThriftList<IPerguntaQuestionarioCriancasMenoresSeisMesesThrift> read GetPerguntasQuestionarioCriancasMenoresSeisMeses write SetPerguntasQuestionarioCriancasMenoresSeisMeses;
    property PerguntasQuestionarioCriancasDeSeisVinteTresMeses: IThriftList<IPerguntaQuestionarioCriancasDeSeisVinteTresMesesThrift> read GetPerguntasQuestionarioCriancasDeSeisVinteTresMeses write SetPerguntasQuestionarioCriancasDeSeisVinteTresMeses;
    property PerguntasQuestionarioCriancasComMaisDoisAnos: IThriftList<IPerguntaQuestionarioCriancasComMaisDoisAnosThrift> read GetPerguntasQuestionarioCriancasComMaisDoisAnos write SetPerguntasQuestionarioCriancasComMaisDoisAnos;
    property UuidFicha: string read GetUuidFicha write SetUuidFicha;
    property TpCdsOrigem: Integer read GetTpCdsOrigem write SetTpCdsOrigem;

    // isset
    property __isset_HeaderTransport: Boolean read Get__isset_HeaderTransport;
    property __isset_CnsCidadao: Boolean read Get__isset_CnsCidadao;
    property __isset_IdentificacaoUsuario: Boolean read Get__isset_IdentificacaoUsuario;
    property __isset_DataNascimento: Boolean read Get__isset_DataNascimento;
    property __isset_Sexo: Boolean read Get__isset_Sexo;
    property __isset_LocalAtendimento: Boolean read Get__isset_LocalAtendimento;
    property __isset_PerguntasQuestionarioCriancasMenoresSeisMeses: Boolean read Get__isset_PerguntasQuestionarioCriancasMenoresSeisMeses;
    property __isset_PerguntasQuestionarioCriancasDeSeisVinteTresMeses: Boolean read Get__isset_PerguntasQuestionarioCriancasDeSeisVinteTresMeses;
    property __isset_PerguntasQuestionarioCriancasComMaisDoisAnos: Boolean read Get__isset_PerguntasQuestionarioCriancasComMaisDoisAnos;
    property __isset_TpCdsOrigem: Boolean read Get__isset_TpCdsOrigem;
  end;

implementation

constructor TPerguntaQuestionarioCriancasMenoresSeisMesesThriftImpl.Create;
begin
  inherited;
end;

destructor TPerguntaQuestionarioCriancasMenoresSeisMesesThriftImpl.Destroy;
begin
  inherited;
end;

function TPerguntaQuestionarioCriancasMenoresSeisMesesThriftImpl.GetPergunta: TPerguntaCriancasMenoresSeisMesesEnumThrift;
begin
  Result := FPergunta;
end;

procedure TPerguntaQuestionarioCriancasMenoresSeisMesesThriftImpl.SetPergunta( const Value: TPerguntaCriancasMenoresSeisMesesEnumThrift);
begin
  F__isset_Pergunta := True;
  FPergunta := Value;
end;

function TPerguntaQuestionarioCriancasMenoresSeisMesesThriftImpl.Get__isset_Pergunta: Boolean;
begin
  Result := F__isset_Pergunta;
end;

function TPerguntaQuestionarioCriancasMenoresSeisMesesThriftImpl.GetRespostaUnicaEscolha: TRespostaUnicaEscolhaEnumThrift;
begin
  Result := FRespostaUnicaEscolha;
end;

procedure TPerguntaQuestionarioCriancasMenoresSeisMesesThriftImpl.SetRespostaUnicaEscolha( const Value: TRespostaUnicaEscolhaEnumThrift);
begin
  F__isset_RespostaUnicaEscolha := True;
  FRespostaUnicaEscolha := Value;
end;

function TPerguntaQuestionarioCriancasMenoresSeisMesesThriftImpl.Get__isset_RespostaUnicaEscolha: Boolean;
begin
  Result := F__isset_RespostaUnicaEscolha;
end;

procedure TPerguntaQuestionarioCriancasMenoresSeisMesesThriftImpl.Read( const iprot: IProtocol);
var
  field_ : IField;
  struc : IStruct;

begin
  struc := iprot.ReadStructBegin;
  try
    while (true) do
    begin
      field_ := iprot.ReadFieldBegin();
      if (field_.Type_ = TType.Stop) then
      begin
        Break;
      end;
      case field_.ID of
        1: begin
          if (field_.Type_ = TType.I32) then
          begin
            Pergunta := TPerguntaCriancasMenoresSeisMesesEnumThrift(iprot.ReadI32());
          end else
          begin
            TProtocolUtil.Skip(iprot, field_.Type_);
          end;
        end;
        2: begin
          if (field_.Type_ = TType.I32) then
          begin
            RespostaUnicaEscolha := TRespostaUnicaEscolhaEnumThrift(iprot.ReadI32());
          end else
          begin
            TProtocolUtil.Skip(iprot, field_.Type_);
          end;
        end
        else begin
          TProtocolUtil.Skip(iprot, field_.Type_);
        end;
      end;
      iprot.ReadFieldEnd;
    end;
  finally
    iprot.ReadStructEnd;
  end;
end;

procedure TPerguntaQuestionarioCriancasMenoresSeisMesesThriftImpl.Write( const oprot: IProtocol);
var
  struc : IStruct;
  field_ : IField;
begin
  struc := TStructImpl.Create('PerguntaQuestionarioCriancasMenoresSeisMesesThrift');
  oprot.WriteStructBegin(struc);
  field_ := TFieldImpl.Create;
  if (__isset_Pergunta) then
  begin
    field_.Name := 'pergunta';
    field_.Type_  := TType.I32;
    field_.ID := 1;
    oprot.WriteFieldBegin(field_);
    oprot.WriteI32(Integer(Pergunta));
    oprot.WriteFieldEnd();
  end;
  if (__isset_RespostaUnicaEscolha) then
  begin
    field_.Name := 'respostaUnicaEscolha';
    field_.Type_  := TType.I32;
    field_.ID := 2;
    oprot.WriteFieldBegin(field_);
    oprot.WriteI32(Integer(RespostaUnicaEscolha));
    oprot.WriteFieldEnd();
  end;
  oprot.WriteFieldStop();
  oprot.WriteStructEnd();
end;

function TPerguntaQuestionarioCriancasMenoresSeisMesesThriftImpl.ToString: string;
var
  _sb0 : TThriftStringBuilder;
  _first1 : Boolean;
begin
  _sb0 := TThriftStringBuilder.Create('(');
  try
    _first1 := TRUE;
    if (__isset_Pergunta) then begin
      if not _first1 then _sb0.Append(',');
      _first1 := FALSE;
      _sb0.Append('Pergunta: ');
      _sb0.Append(Integer(Pergunta));
    end;
    if (__isset_RespostaUnicaEscolha) then begin
      if not _first1 then _sb0.Append(',');
      _first1 := FALSE;
      _sb0.Append('RespostaUnicaEscolha: ');
      _sb0.Append(Integer(RespostaUnicaEscolha));
    end;
    _sb0.Append(')');
    Result := _sb0.ToString;
    if _first1 then {prevent warning};
  finally
    _sb0.Free;
  end;
end;

constructor TPerguntaQuestionarioCriancasDeSeisVinteTresMesesThriftImpl.Create;
begin
  inherited;
end;

destructor TPerguntaQuestionarioCriancasDeSeisVinteTresMesesThriftImpl.Destroy;
begin
  inherited;
end;

function TPerguntaQuestionarioCriancasDeSeisVinteTresMesesThriftImpl.GetPergunta: TPerguntaCriancasDeSeisVinteTresMesesEnumThrift;
begin
  Result := FPergunta;
end;

procedure TPerguntaQuestionarioCriancasDeSeisVinteTresMesesThriftImpl.SetPergunta( const Value: TPerguntaCriancasDeSeisVinteTresMesesEnumThrift);
begin
  F__isset_Pergunta := True;
  FPergunta := Value;
end;

function TPerguntaQuestionarioCriancasDeSeisVinteTresMesesThriftImpl.Get__isset_Pergunta: Boolean;
begin
  Result := F__isset_Pergunta;
end;

function TPerguntaQuestionarioCriancasDeSeisVinteTresMesesThriftImpl.GetRespostaUnicaEscolha: TRespostaUnicaEscolhaEnumThrift;
begin
  Result := FRespostaUnicaEscolha;
end;

procedure TPerguntaQuestionarioCriancasDeSeisVinteTresMesesThriftImpl.SetRespostaUnicaEscolha( const Value: TRespostaUnicaEscolhaEnumThrift);
begin
  F__isset_RespostaUnicaEscolha := True;
  FRespostaUnicaEscolha := Value;
end;

function TPerguntaQuestionarioCriancasDeSeisVinteTresMesesThriftImpl.Get__isset_RespostaUnicaEscolha: Boolean;
begin
  Result := F__isset_RespostaUnicaEscolha;
end;

procedure TPerguntaQuestionarioCriancasDeSeisVinteTresMesesThriftImpl.Read( const iprot: IProtocol);
var
  field_ : IField;
  struc : IStruct;

begin
  struc := iprot.ReadStructBegin;
  try
    while (true) do
    begin
      field_ := iprot.ReadFieldBegin();
      if (field_.Type_ = TType.Stop) then
      begin
        Break;
      end;
      case field_.ID of
        1: begin
          if (field_.Type_ = TType.I32) then
          begin
            Pergunta := TPerguntaCriancasDeSeisVinteTresMesesEnumThrift(iprot.ReadI32());
          end else
          begin
            TProtocolUtil.Skip(iprot, field_.Type_);
          end;
        end;
        2: begin
          if (field_.Type_ = TType.I32) then
          begin
            RespostaUnicaEscolha := TRespostaUnicaEscolhaEnumThrift(iprot.ReadI32());
          end else
          begin
            TProtocolUtil.Skip(iprot, field_.Type_);
          end;
        end
        else begin
          TProtocolUtil.Skip(iprot, field_.Type_);
        end;
      end;
      iprot.ReadFieldEnd;
    end;
  finally
    iprot.ReadStructEnd;
  end;
end;

procedure TPerguntaQuestionarioCriancasDeSeisVinteTresMesesThriftImpl.Write( const oprot: IProtocol);
var
  struc : IStruct;
  field_ : IField;
begin
  struc := TStructImpl.Create('PerguntaQuestionarioCriancasDeSeisVinteTresMesesThrift');
  oprot.WriteStructBegin(struc);
  field_ := TFieldImpl.Create;
  if (__isset_Pergunta) then
  begin
    field_.Name := 'pergunta';
    field_.Type_  := TType.I32;
    field_.ID := 1;
    oprot.WriteFieldBegin(field_);
    oprot.WriteI32(Integer(Pergunta));
    oprot.WriteFieldEnd();
  end;
  if (__isset_RespostaUnicaEscolha) then
  begin
    field_.Name := 'respostaUnicaEscolha';
    field_.Type_  := TType.I32;
    field_.ID := 2;
    oprot.WriteFieldBegin(field_);
    oprot.WriteI32(Integer(RespostaUnicaEscolha));
    oprot.WriteFieldEnd();
  end;
  oprot.WriteFieldStop();
  oprot.WriteStructEnd();
end;

function TPerguntaQuestionarioCriancasDeSeisVinteTresMesesThriftImpl.ToString: string;
var
  _sb2 : TThriftStringBuilder;
  _first3 : Boolean;
begin
  _sb2 := TThriftStringBuilder.Create('(');
  try
    _first3 := TRUE;
    if (__isset_Pergunta) then begin
      if not _first3 then _sb2.Append(',');
      _first3 := FALSE;
      _sb2.Append('Pergunta: ');
      _sb2.Append(Integer(Pergunta));
    end;
    if (__isset_RespostaUnicaEscolha) then begin
      if not _first3 then _sb2.Append(',');
      _first3 := FALSE;
      _sb2.Append('RespostaUnicaEscolha: ');
      _sb2.Append(Integer(RespostaUnicaEscolha));
    end;
    _sb2.Append(')');
    Result := _sb2.ToString;
    if _first3 then {prevent warning};
  finally
    _sb2.Free;
  end;
end;

constructor TPerguntaQuestionarioCriancasComMaisDoisAnosThriftImpl.Create;
begin
  inherited;
end;

destructor TPerguntaQuestionarioCriancasComMaisDoisAnosThriftImpl.Destroy;
begin
  inherited;
end;

function TPerguntaQuestionarioCriancasComMaisDoisAnosThriftImpl.GetPergunta: TPerguntaCriancasComMaisDoisAnosEnumThrift;
begin
  Result := FPergunta;
end;

procedure TPerguntaQuestionarioCriancasComMaisDoisAnosThriftImpl.SetPergunta( const Value: TPerguntaCriancasComMaisDoisAnosEnumThrift);
begin
  F__isset_Pergunta := True;
  FPergunta := Value;
end;

function TPerguntaQuestionarioCriancasComMaisDoisAnosThriftImpl.Get__isset_Pergunta: Boolean;
begin
  Result := F__isset_Pergunta;
end;

function TPerguntaQuestionarioCriancasComMaisDoisAnosThriftImpl.GetRespostaUnicaEscolha: TRespostaUnicaEscolhaEnumThrift;
begin
  Result := FRespostaUnicaEscolha;
end;

procedure TPerguntaQuestionarioCriancasComMaisDoisAnosThriftImpl.SetRespostaUnicaEscolha( const Value: TRespostaUnicaEscolhaEnumThrift);
begin
  F__isset_RespostaUnicaEscolha := True;
  FRespostaUnicaEscolha := Value;
end;

function TPerguntaQuestionarioCriancasComMaisDoisAnosThriftImpl.Get__isset_RespostaUnicaEscolha: Boolean;
begin
  Result := F__isset_RespostaUnicaEscolha;
end;

function TPerguntaQuestionarioCriancasComMaisDoisAnosThriftImpl.GetRespostaMultiplaEscolha: IThriftList<TRespostaMultiplaEscolhaEnumThrift>;
begin
  Result := FRespostaMultiplaEscolha;
end;

procedure TPerguntaQuestionarioCriancasComMaisDoisAnosThriftImpl.SetRespostaMultiplaEscolha( const Value: IThriftList<TRespostaMultiplaEscolhaEnumThrift>);
begin
  F__isset_RespostaMultiplaEscolha := True;
  FRespostaMultiplaEscolha := Value;
end;

function TPerguntaQuestionarioCriancasComMaisDoisAnosThriftImpl.Get__isset_RespostaMultiplaEscolha: Boolean;
begin
  Result := F__isset_RespostaMultiplaEscolha;
end;

procedure TPerguntaQuestionarioCriancasComMaisDoisAnosThriftImpl.Read( const iprot: IProtocol);
var
  field_ : IField;
  struc : IStruct;
  _list4: IList;
  _i5: Integer;
  _elem6: TRespostaMultiplaEscolhaEnumThrift;

begin
  struc := iprot.ReadStructBegin;
  try
    while (true) do
    begin
      field_ := iprot.ReadFieldBegin();
      if (field_.Type_ = TType.Stop) then
      begin
        Break;
      end;
      case field_.ID of
        1: begin
          if (field_.Type_ = TType.I32) then
          begin
            Pergunta := TPerguntaCriancasComMaisDoisAnosEnumThrift(iprot.ReadI32());
          end else
          begin
            TProtocolUtil.Skip(iprot, field_.Type_);
          end;
        end;
        2: begin
          if (field_.Type_ = TType.I32) then
          begin
            RespostaUnicaEscolha := TRespostaUnicaEscolhaEnumThrift(iprot.ReadI32());
          end else
          begin
            TProtocolUtil.Skip(iprot, field_.Type_);
          end;
        end;
        3: begin
          if (field_.Type_ = TType.List) then
          begin
            RespostaMultiplaEscolha := TThriftListImpl<TRespostaMultiplaEscolhaEnumThrift>.Create;
            _list4 := iprot.ReadListBegin();
            for _i5 := 0 to _list4.Count - 1 do
            begin
              _elem6 := TRespostaMultiplaEscolhaEnumThrift(iprot.ReadI32());
              RespostaMultiplaEscolha.Add(_elem6);
            end;
            iprot.ReadListEnd();
          end else
          begin
            TProtocolUtil.Skip(iprot, field_.Type_);
          end;
        end
        else begin
          TProtocolUtil.Skip(iprot, field_.Type_);
        end;
      end;
      iprot.ReadFieldEnd;
    end;
  finally
    iprot.ReadStructEnd;
  end;
end;

procedure TPerguntaQuestionarioCriancasComMaisDoisAnosThriftImpl.Write( const oprot: IProtocol);
var
  struc : IStruct;
  field_ : IField;
  list_7 : IList;
  _iter8: TRespostaMultiplaEscolhaEnumThrift;
begin
  struc := TStructImpl.Create('PerguntaQuestionarioCriancasComMaisDoisAnosThrift');
  oprot.WriteStructBegin(struc);
  field_ := TFieldImpl.Create;
  if (__isset_Pergunta) then
  begin
    field_.Name := 'pergunta';
    field_.Type_  := TType.I32;
    field_.ID := 1;
    oprot.WriteFieldBegin(field_);
    oprot.WriteI32(Integer(Pergunta));
    oprot.WriteFieldEnd();
  end;
  if (__isset_RespostaUnicaEscolha) then
  begin
    field_.Name := 'respostaUnicaEscolha';
    field_.Type_  := TType.I32;
    field_.ID := 2;
    oprot.WriteFieldBegin(field_);
    oprot.WriteI32(Integer(RespostaUnicaEscolha));
    oprot.WriteFieldEnd();
  end;
  if (RespostaMultiplaEscolha <> nil) and __isset_RespostaMultiplaEscolha then
  begin
    field_.Name := 'respostaMultiplaEscolha';
    field_.Type_  := TType.List;
    field_.ID := 3;
    oprot.WriteFieldBegin(field_);
    list_7 := TListImpl.Create(TType.I32, RespostaMultiplaEscolha.Count);
    oprot.WriteListBegin( list_7);
    for _iter8 in RespostaMultiplaEscolha do
    begin
      oprot.WriteI32(Integer(_iter8));
    end;
    oprot.WriteListEnd();
    oprot.WriteFieldEnd();
  end;
  oprot.WriteFieldStop();
  oprot.WriteStructEnd();
end;

function TPerguntaQuestionarioCriancasComMaisDoisAnosThriftImpl.ToString: string;
var
  _sb9 : TThriftStringBuilder;
  _first10 : Boolean;
begin
  _sb9 := TThriftStringBuilder.Create('(');
  try
    _first10 := TRUE;
    if (__isset_Pergunta) then begin
      if not _first10 then _sb9.Append(',');
      _first10 := FALSE;
      _sb9.Append('Pergunta: ');
      _sb9.Append(Integer(Pergunta));
    end;
    if (__isset_RespostaUnicaEscolha) then begin
      if not _first10 then _sb9.Append(',');
      _first10 := FALSE;
      _sb9.Append('RespostaUnicaEscolha: ');
      _sb9.Append(Integer(RespostaUnicaEscolha));
    end;
    if (RespostaMultiplaEscolha <> nil) and __isset_RespostaMultiplaEscolha then begin
      if not _first10 then _sb9.Append(',');
      _first10 := FALSE;
      _sb9.Append('RespostaMultiplaEscolha: ');
      _sb9.Append(RespostaMultiplaEscolha);
    end;
    _sb9.Append(')');
    Result := _sb9.ToString;
    if _first10 then {prevent warning};
  finally
    _sb9.Free;
  end;
end;

constructor TFichaConsumoAlimentarThriftImpl.Create;
begin
  inherited;
end;

destructor TFichaConsumoAlimentarThriftImpl.Destroy;
begin
  inherited;
end;

function TFichaConsumoAlimentarThriftImpl.GetHeaderTransport: IUnicaLotacaoHeaderThrift;
begin
  Result := FHeaderTransport;
end;

procedure TFichaConsumoAlimentarThriftImpl.SetHeaderTransport( const Value: IUnicaLotacaoHeaderThrift);
begin
  F__isset_HeaderTransport := True;
  FHeaderTransport := Value;
end;

function TFichaConsumoAlimentarThriftImpl.Get__isset_HeaderTransport: Boolean;
begin
  Result := F__isset_HeaderTransport;
end;

function TFichaConsumoAlimentarThriftImpl.GetCnsCidadao: string;
begin
  Result := FCnsCidadao;
end;

procedure TFichaConsumoAlimentarThriftImpl.SetCnsCidadao( const Value: string);
begin
  F__isset_CnsCidadao := True;
  FCnsCidadao := Value;
end;

function TFichaConsumoAlimentarThriftImpl.Get__isset_CnsCidadao: Boolean;
begin
  Result := F__isset_CnsCidadao;
end;

function TFichaConsumoAlimentarThriftImpl.GetIdentificacaoUsuario: string;
begin
  Result := FIdentificacaoUsuario;
end;

procedure TFichaConsumoAlimentarThriftImpl.SetIdentificacaoUsuario( const Value: string);
begin
  F__isset_IdentificacaoUsuario := True;
  FIdentificacaoUsuario := Value;
end;

function TFichaConsumoAlimentarThriftImpl.Get__isset_IdentificacaoUsuario: Boolean;
begin
  Result := F__isset_IdentificacaoUsuario;
end;

function TFichaConsumoAlimentarThriftImpl.GetDataNascimento: Int64;
begin
  Result := FDataNascimento;
end;

procedure TFichaConsumoAlimentarThriftImpl.SetDataNascimento( const Value: Int64);
begin
  F__isset_DataNascimento := True;
  FDataNascimento := Value;
end;

function TFichaConsumoAlimentarThriftImpl.Get__isset_DataNascimento: Boolean;
begin
  Result := F__isset_DataNascimento;
end;

function TFichaConsumoAlimentarThriftImpl.GetSexo: Int64;
begin
  Result := FSexo;
end;

procedure TFichaConsumoAlimentarThriftImpl.SetSexo( const Value: Int64);
begin
  F__isset_Sexo := True;
  FSexo := Value;
end;

function TFichaConsumoAlimentarThriftImpl.Get__isset_Sexo: Boolean;
begin
  Result := F__isset_Sexo;
end;

function TFichaConsumoAlimentarThriftImpl.GetLocalAtendimento: Int64;
begin
  Result := FLocalAtendimento;
end;

procedure TFichaConsumoAlimentarThriftImpl.SetLocalAtendimento( const Value: Int64);
begin
  F__isset_LocalAtendimento := True;
  FLocalAtendimento := Value;
end;

function TFichaConsumoAlimentarThriftImpl.Get__isset_LocalAtendimento: Boolean;
begin
  Result := F__isset_LocalAtendimento;
end;

function TFichaConsumoAlimentarThriftImpl.GetPerguntasQuestionarioCriancasMenoresSeisMeses: IThriftList<IPerguntaQuestionarioCriancasMenoresSeisMesesThrift>;
begin
  Result := FPerguntasQuestionarioCriancasMenoresSeisMeses;
end;

procedure TFichaConsumoAlimentarThriftImpl.SetPerguntasQuestionarioCriancasMenoresSeisMeses( const Value: IThriftList<IPerguntaQuestionarioCriancasMenoresSeisMesesThrift>);
begin
  F__isset_PerguntasQuestionarioCriancasMenoresSeisMeses := True;
  FPerguntasQuestionarioCriancasMenoresSeisMeses := Value;
end;

function TFichaConsumoAlimentarThriftImpl.Get__isset_PerguntasQuestionarioCriancasMenoresSeisMeses: Boolean;
begin
  Result := F__isset_PerguntasQuestionarioCriancasMenoresSeisMeses;
end;

function TFichaConsumoAlimentarThriftImpl.GetPerguntasQuestionarioCriancasDeSeisVinteTresMeses: IThriftList<IPerguntaQuestionarioCriancasDeSeisVinteTresMesesThrift>;
begin
  Result := FPerguntasQuestionarioCriancasDeSeisVinteTresMeses;
end;

procedure TFichaConsumoAlimentarThriftImpl.SetPerguntasQuestionarioCriancasDeSeisVinteTresMeses( const Value: IThriftList<IPerguntaQuestionarioCriancasDeSeisVinteTresMesesThrift>);
begin
  F__isset_PerguntasQuestionarioCriancasDeSeisVinteTresMeses := True;
  FPerguntasQuestionarioCriancasDeSeisVinteTresMeses := Value;
end;

function TFichaConsumoAlimentarThriftImpl.Get__isset_PerguntasQuestionarioCriancasDeSeisVinteTresMeses: Boolean;
begin
  Result := F__isset_PerguntasQuestionarioCriancasDeSeisVinteTresMeses;
end;

function TFichaConsumoAlimentarThriftImpl.GetPerguntasQuestionarioCriancasComMaisDoisAnos: IThriftList<IPerguntaQuestionarioCriancasComMaisDoisAnosThrift>;
begin
  Result := FPerguntasQuestionarioCriancasComMaisDoisAnos;
end;

procedure TFichaConsumoAlimentarThriftImpl.SetPerguntasQuestionarioCriancasComMaisDoisAnos( const Value: IThriftList<IPerguntaQuestionarioCriancasComMaisDoisAnosThrift>);
begin
  F__isset_PerguntasQuestionarioCriancasComMaisDoisAnos := True;
  FPerguntasQuestionarioCriancasComMaisDoisAnos := Value;
end;

function TFichaConsumoAlimentarThriftImpl.Get__isset_PerguntasQuestionarioCriancasComMaisDoisAnos: Boolean;
begin
  Result := F__isset_PerguntasQuestionarioCriancasComMaisDoisAnos;
end;

function TFichaConsumoAlimentarThriftImpl.GetUuidFicha: string;
begin
  Result := FUuidFicha;
end;

procedure TFichaConsumoAlimentarThriftImpl.SetUuidFicha( const Value: string);
begin
  FUuidFicha := Value;
end;

function TFichaConsumoAlimentarThriftImpl.GetTpCdsOrigem: Integer;
begin
  Result := FTpCdsOrigem;
end;

procedure TFichaConsumoAlimentarThriftImpl.SetTpCdsOrigem( const Value: Integer);
begin
  F__isset_TpCdsOrigem := True;
  FTpCdsOrigem := Value;
end;

function TFichaConsumoAlimentarThriftImpl.Get__isset_TpCdsOrigem: Boolean;
begin
  Result := F__isset_TpCdsOrigem;
end;

procedure TFichaConsumoAlimentarThriftImpl.Read( const iprot: IProtocol);
var
  field_ : IField;
  struc : IStruct;
  _req_isset_UuidFicha : Boolean;
  _list11: IList;
  _i12: Integer;
  _elem13: IPerguntaQuestionarioCriancasMenoresSeisMesesThrift;
  _list14: IList;
  _i15: Integer;
  _elem16: IPerguntaQuestionarioCriancasDeSeisVinteTresMesesThrift;
  _list17: IList;
  _i18: Integer;
  _elem19: IPerguntaQuestionarioCriancasComMaisDoisAnosThrift;

begin
  _req_isset_UuidFicha := FALSE;
  struc := iprot.ReadStructBegin;
  try
    while (true) do
    begin
      field_ := iprot.ReadFieldBegin();
      if (field_.Type_ = TType.Stop) then
      begin
        Break;
      end;
      case field_.ID of
        1: begin
          if (field_.Type_ = TType.Struct) then
          begin
            HeaderTransport := TUnicaLotacaoHeaderThriftImpl.Create;
            HeaderTransport.Read(iprot);
          end else
          begin
            TProtocolUtil.Skip(iprot, field_.Type_);
          end;
        end;
        2: begin
          if (field_.Type_ = TType.String_) then
          begin
            CnsCidadao := iprot.ReadString();
          end else
          begin
            TProtocolUtil.Skip(iprot, field_.Type_);
          end;
        end;
        3: begin
          if (field_.Type_ = TType.String_) then
          begin
            IdentificacaoUsuario := iprot.ReadString();
          end else
          begin
            TProtocolUtil.Skip(iprot, field_.Type_);
          end;
        end;
        4: begin
          if (field_.Type_ = TType.I64) then
          begin
            DataNascimento := iprot.ReadI64();
          end else
          begin
            TProtocolUtil.Skip(iprot, field_.Type_);
          end;
        end;
        5: begin
          if (field_.Type_ = TType.I64) then
          begin
            Sexo := iprot.ReadI64();
          end else
          begin
            TProtocolUtil.Skip(iprot, field_.Type_);
          end;
        end;
        6: begin
          if (field_.Type_ = TType.I64) then
          begin
            LocalAtendimento := iprot.ReadI64();
          end else
          begin
            TProtocolUtil.Skip(iprot, field_.Type_);
          end;
        end;
        7: begin
          if (field_.Type_ = TType.List) then
          begin
            PerguntasQuestionarioCriancasMenoresSeisMeses := TThriftListImpl<IPerguntaQuestionarioCriancasMenoresSeisMesesThrift>.Create;
            _list11 := iprot.ReadListBegin();
            for _i12 := 0 to _list11.Count - 1 do
            begin
              _elem13 := TPerguntaQuestionarioCriancasMenoresSeisMesesThriftImpl.Create;
              _elem13.Read(iprot);
              PerguntasQuestionarioCriancasMenoresSeisMeses.Add(_elem13);
            end;
            iprot.ReadListEnd();
          end else
          begin
            TProtocolUtil.Skip(iprot, field_.Type_);
          end;
        end;
        8: begin
          if (field_.Type_ = TType.List) then
          begin
            PerguntasQuestionarioCriancasDeSeisVinteTresMeses := TThriftListImpl<IPerguntaQuestionarioCriancasDeSeisVinteTresMesesThrift>.Create;
            _list14 := iprot.ReadListBegin();
            for _i15 := 0 to _list14.Count - 1 do
            begin
              _elem16 := TPerguntaQuestionarioCriancasDeSeisVinteTresMesesThriftImpl.Create;
              _elem16.Read(iprot);
              PerguntasQuestionarioCriancasDeSeisVinteTresMeses.Add(_elem16);
            end;
            iprot.ReadListEnd();
          end else
          begin
            TProtocolUtil.Skip(iprot, field_.Type_);
          end;
        end;
        9: begin
          if (field_.Type_ = TType.List) then
          begin
            PerguntasQuestionarioCriancasComMaisDoisAnos := TThriftListImpl<IPerguntaQuestionarioCriancasComMaisDoisAnosThrift>.Create;
            _list17 := iprot.ReadListBegin();
            for _i18 := 0 to _list17.Count - 1 do
            begin
              _elem19 := TPerguntaQuestionarioCriancasComMaisDoisAnosThriftImpl.Create;
              _elem19.Read(iprot);
              PerguntasQuestionarioCriancasComMaisDoisAnos.Add(_elem19);
            end;
            iprot.ReadListEnd();
          end else
          begin
            TProtocolUtil.Skip(iprot, field_.Type_);
          end;
        end;
        10: begin
          if (field_.Type_ = TType.String_) then
          begin
            UuidFicha := iprot.ReadString();
            _req_isset_UuidFicha := TRUE;
          end else
          begin
            TProtocolUtil.Skip(iprot, field_.Type_);
          end;
        end;
        11: begin
          if (field_.Type_ = TType.I32) then
          begin
            TpCdsOrigem := iprot.ReadI32();
          end else
          begin
            TProtocolUtil.Skip(iprot, field_.Type_);
          end;
        end
        else begin
          TProtocolUtil.Skip(iprot, field_.Type_);
        end;
      end;
      iprot.ReadFieldEnd;
    end;
  finally
    iprot.ReadStructEnd;
  end;
  if not _req_isset_UuidFicha
  then raise TProtocolException.Create( TProtocolException.INVALID_DATA, 'UuidFicha');
end;

procedure TFichaConsumoAlimentarThriftImpl.Write( const oprot: IProtocol);
var
  struc : IStruct;
  field_ : IField;
  list_20 : IList;
  _iter21: IPerguntaQuestionarioCriancasMenoresSeisMesesThrift;
  list_22 : IList;
  _iter23: IPerguntaQuestionarioCriancasDeSeisVinteTresMesesThrift;
  list_24 : IList;
  _iter25: IPerguntaQuestionarioCriancasComMaisDoisAnosThrift;
begin
  struc := TStructImpl.Create('FichaConsumoAlimentarThrift');
  oprot.WriteStructBegin(struc);
  field_ := TFieldImpl.Create;
  if (HeaderTransport <> nil) and __isset_HeaderTransport then
  begin
    field_.Name := 'headerTransport';
    field_.Type_  := TType.Struct;
    field_.ID := 1;
    oprot.WriteFieldBegin(field_);
    HeaderTransport.Write(oprot);
    oprot.WriteFieldEnd();
  end;
  if (__isset_CnsCidadao) then
  begin
    field_.Name := 'cnsCidadao';
    field_.Type_  := TType.String_;
    field_.ID := 2;
    oprot.WriteFieldBegin(field_);
    oprot.WriteString(CnsCidadao);
    oprot.WriteFieldEnd();
  end;
  if (__isset_IdentificacaoUsuario) then
  begin
    field_.Name := 'identificacaoUsuario';
    field_.Type_  := TType.String_;
    field_.ID := 3;
    oprot.WriteFieldBegin(field_);
    oprot.WriteString(IdentificacaoUsuario);
    oprot.WriteFieldEnd();
  end;
  if (__isset_DataNascimento) then
  begin
    field_.Name := 'dataNascimento';
    field_.Type_  := TType.I64;
    field_.ID := 4;
    oprot.WriteFieldBegin(field_);
    oprot.WriteI64(DataNascimento);
    oprot.WriteFieldEnd();
  end;
  if (__isset_Sexo) then
  begin
    field_.Name := 'sexo';
    field_.Type_  := TType.I64;
    field_.ID := 5;
    oprot.WriteFieldBegin(field_);
    oprot.WriteI64(Sexo);
    oprot.WriteFieldEnd();
  end;
  if (__isset_LocalAtendimento) then
  begin
    field_.Name := 'localAtendimento';
    field_.Type_  := TType.I64;
    field_.ID := 6;
    oprot.WriteFieldBegin(field_);
    oprot.WriteI64(LocalAtendimento);
    oprot.WriteFieldEnd();
  end;
  if (PerguntasQuestionarioCriancasMenoresSeisMeses <> nil) and __isset_PerguntasQuestionarioCriancasMenoresSeisMeses then
  begin
    field_.Name := 'perguntasQuestionarioCriancasMenoresSeisMeses';
    field_.Type_  := TType.List;
    field_.ID := 7;
    oprot.WriteFieldBegin(field_);
    list_20 := TListImpl.Create(TType.Struct, PerguntasQuestionarioCriancasMenoresSeisMeses.Count);
    oprot.WriteListBegin( list_20);
    for _iter21 in PerguntasQuestionarioCriancasMenoresSeisMeses do
    begin
      _iter21.Write(oprot);
    end;
    oprot.WriteListEnd();
    oprot.WriteFieldEnd();
  end;
  if (PerguntasQuestionarioCriancasDeSeisVinteTresMeses <> nil) and __isset_PerguntasQuestionarioCriancasDeSeisVinteTresMeses then
  begin
    field_.Name := 'perguntasQuestionarioCriancasDeSeisVinteTresMeses';
    field_.Type_  := TType.List;
    field_.ID := 8;
    oprot.WriteFieldBegin(field_);
    list_22 := TListImpl.Create(TType.Struct, PerguntasQuestionarioCriancasDeSeisVinteTresMeses.Count);
    oprot.WriteListBegin( list_22);
    for _iter23 in PerguntasQuestionarioCriancasDeSeisVinteTresMeses do
    begin
      _iter23.Write(oprot);
    end;
    oprot.WriteListEnd();
    oprot.WriteFieldEnd();
  end;
  if (PerguntasQuestionarioCriancasComMaisDoisAnos <> nil) and __isset_PerguntasQuestionarioCriancasComMaisDoisAnos then
  begin
    field_.Name := 'perguntasQuestionarioCriancasComMaisDoisAnos';
    field_.Type_  := TType.List;
    field_.ID := 9;
    oprot.WriteFieldBegin(field_);
    list_24 := TListImpl.Create(TType.Struct, PerguntasQuestionarioCriancasComMaisDoisAnos.Count);
    oprot.WriteListBegin( list_24);
    for _iter25 in PerguntasQuestionarioCriancasComMaisDoisAnos do
    begin
      _iter25.Write(oprot);
    end;
    oprot.WriteListEnd();
    oprot.WriteFieldEnd();
  end;
  // required field
  field_.Name := 'uuidFicha';
  field_.Type_  := TType.String_;
  field_.ID := 10;
  oprot.WriteFieldBegin(field_);
  oprot.WriteString(UuidFicha);
  oprot.WriteFieldEnd();
  if (__isset_TpCdsOrigem) then
  begin
    field_.Name := 'tpCdsOrigem';
    field_.Type_  := TType.I32;
    field_.ID := 11;
    oprot.WriteFieldBegin(field_);
    oprot.WriteI32(TpCdsOrigem);
    oprot.WriteFieldEnd();
  end;
  oprot.WriteFieldStop();
  oprot.WriteStructEnd();
end;

function TFichaConsumoAlimentarThriftImpl.ToString: string;
var
  _sb26 : TThriftStringBuilder;
  _first27 : Boolean;
begin
  _sb26 := TThriftStringBuilder.Create('(');
  try
    _first27 := TRUE;
    if (HeaderTransport <> nil) and __isset_HeaderTransport then begin
      if not _first27 then _sb26.Append(',');
      _first27 := FALSE;
      _sb26.Append('HeaderTransport: ');
      if (HeaderTransport = nil) then _sb26.Append('<null>') else _sb26.Append(HeaderTransport.ToString());
    end;
    if (__isset_CnsCidadao) then begin
      if not _first27 then _sb26.Append(',');
      _first27 := FALSE;
      _sb26.Append('CnsCidadao: ');
      _sb26.Append(CnsCidadao);
    end;
    if (__isset_IdentificacaoUsuario) then begin
      if not _first27 then _sb26.Append(',');
      _first27 := FALSE;
      _sb26.Append('IdentificacaoUsuario: ');
      _sb26.Append(IdentificacaoUsuario);
    end;
    if (__isset_DataNascimento) then begin
      if not _first27 then _sb26.Append(',');
      _first27 := FALSE;
      _sb26.Append('DataNascimento: ');
      _sb26.Append(DataNascimento);
    end;
    if (__isset_Sexo) then begin
      if not _first27 then _sb26.Append(',');
      _first27 := FALSE;
      _sb26.Append('Sexo: ');
      _sb26.Append(Sexo);
    end;
    if (__isset_LocalAtendimento) then begin
      if not _first27 then _sb26.Append(',');
      _first27 := FALSE;
      _sb26.Append('LocalAtendimento: ');
      _sb26.Append(LocalAtendimento);
    end;
    if (PerguntasQuestionarioCriancasMenoresSeisMeses <> nil) and __isset_PerguntasQuestionarioCriancasMenoresSeisMeses then begin
      if not _first27 then _sb26.Append(',');
      _first27 := FALSE;
      _sb26.Append('PerguntasQuestionarioCriancasMenoresSeisMeses: ');
      _sb26.Append(PerguntasQuestionarioCriancasMenoresSeisMeses);
    end;
    if (PerguntasQuestionarioCriancasDeSeisVinteTresMeses <> nil) and __isset_PerguntasQuestionarioCriancasDeSeisVinteTresMeses then begin
      if not _first27 then _sb26.Append(',');
      _first27 := FALSE;
      _sb26.Append('PerguntasQuestionarioCriancasDeSeisVinteTresMeses: ');
      _sb26.Append(PerguntasQuestionarioCriancasDeSeisVinteTresMeses);
    end;
    if (PerguntasQuestionarioCriancasComMaisDoisAnos <> nil) and __isset_PerguntasQuestionarioCriancasComMaisDoisAnos then begin
      if not _first27 then _sb26.Append(',');
      _first27 := FALSE;
      _sb26.Append('PerguntasQuestionarioCriancasComMaisDoisAnos: ');
      _sb26.Append(PerguntasQuestionarioCriancasComMaisDoisAnos);
    end;
    if not _first27 then _sb26.Append(',');
    _sb26.Append('UuidFicha: ');
    _sb26.Append(UuidFicha);
    if (__isset_TpCdsOrigem) then begin
      _sb26.Append(', TpCdsOrigem: ');
      _sb26.Append(TpCdsOrigem);
    end;
    _sb26.Append(')');
    Result := _sb26.ToString;
    if _first27 then {prevent warning};
  finally
    _sb26.Free;
  end;
end;


initialization

finalization


end.
