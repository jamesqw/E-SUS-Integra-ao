(**
 * Autogenerated by Thrift Compiler (0.9.2)
 *
 * DO NOT EDIT UNLESS YOU ARE SURE THAT YOU KNOW WHAT YOU ARE DOING
 *)

unit br.gov.saude.esusab.ras.visitadomiciliar;

interface

uses
  Classes,
  SysUtils,
  Generics.Collections,
  Thrift,
  Thrift.Utils,
  Thrift.Collections,
  Thrift.Protocol,
  Thrift.Transport,
  br.gov.saude.esusab.ras.common;

const
  cbr_gov_saude_esusab_ras_visitadomiciliar_Option_AnsiStr_Binary = False;
  cbr_gov_saude_esusab_ras_visitadomiciliar_Option_Register_Types = False;
  cbr_gov_saude_esusab_ras_visitadomiciliar_Option_ConstPrefix    = False;
  cbr_gov_saude_esusab_ras_visitadomiciliar_Option_Events         = False;
  cbr_gov_saude_esusab_ras_visitadomiciliar_Option_XmlDoc         = False;

type
  IFichaVisitaDomiciliarChildThrift = interface;
  IFichaVisitaDomiciliarMasterThrift = interface;

  IFichaVisitaDomiciliarChildThrift = interface(IBase)
    function GetTurno: Int64;
    procedure SetTurno( const Value: Int64);
    function GetNumProntuario: string;
    procedure SetNumProntuario( const Value: string);
    function GetCnsCidadao: string;
    procedure SetCnsCidadao( const Value: string);
    function GetDtNascimento: Int64;
    procedure SetDtNascimento( const Value: Int64);
    function GetSexo: Int64;
    procedure SetSexo( const Value: Int64);
    function GetStatusVisitaCompartilhadaOutroProfissional: Boolean;
    procedure SetStatusVisitaCompartilhadaOutroProfissional( const Value: Boolean);
    function GetMotivosVisita: IThriftList<Int64>;
    procedure SetMotivosVisita( const Value: IThriftList<Int64>);
    function GetDesfecho: Int64;
    procedure SetDesfecho( const Value: Int64);
    function GetMicroArea: string;
    procedure SetMicroArea( const Value: string);
    function GetStForaArea: Boolean;
    procedure SetStForaArea( const Value: Boolean);
    function GetTipoDeImovel: Int64;
    procedure SetTipoDeImovel( const Value: Int64);
    function GetPesoAcompanhamentoNutricional: Double;
    procedure SetPesoAcompanhamentoNutricional( const Value: Double);
    function GetAlturaAcompanhamentoNutricional: Double;
    procedure SetAlturaAcompanhamentoNutricional( const Value: Double);

    property Turno: Int64 read GetTurno write SetTurno;
    property NumProntuario: string read GetNumProntuario write SetNumProntuario;
    property CnsCidadao: string read GetCnsCidadao write SetCnsCidadao;
    property DtNascimento: Int64 read GetDtNascimento write SetDtNascimento;
    property Sexo: Int64 read GetSexo write SetSexo;
    property StatusVisitaCompartilhadaOutroProfissional: Boolean read GetStatusVisitaCompartilhadaOutroProfissional write SetStatusVisitaCompartilhadaOutroProfissional;
    property MotivosVisita: IThriftList<Int64> read GetMotivosVisita write SetMotivosVisita;
    property Desfecho: Int64 read GetDesfecho write SetDesfecho;
    property MicroArea: string read GetMicroArea write SetMicroArea;
    property StForaArea: Boolean read GetStForaArea write SetStForaArea;
    property TipoDeImovel: Int64 read GetTipoDeImovel write SetTipoDeImovel;
    property PesoAcompanhamentoNutricional: Double read GetPesoAcompanhamentoNutricional write SetPesoAcompanhamentoNutricional;
    property AlturaAcompanhamentoNutricional: Double read GetAlturaAcompanhamentoNutricional write SetAlturaAcompanhamentoNutricional;

    function Get__isset_Turno: Boolean;
    function Get__isset_NumProntuario: Boolean;
    function Get__isset_CnsCidadao: Boolean;
    function Get__isset_DtNascimento: Boolean;
    function Get__isset_Sexo: Boolean;
    function Get__isset_StatusVisitaCompartilhadaOutroProfissional: Boolean;
    function Get__isset_MotivosVisita: Boolean;
    function Get__isset_Desfecho: Boolean;
    function Get__isset_MicroArea: Boolean;
    function Get__isset_StForaArea: Boolean;
    function Get__isset_TipoDeImovel: Boolean;
    function Get__isset_PesoAcompanhamentoNutricional: Boolean;
    function Get__isset_AlturaAcompanhamentoNutricional: Boolean;

    property __isset_Turno: Boolean read Get__isset_Turno;
    property __isset_NumProntuario: Boolean read Get__isset_NumProntuario;
    property __isset_CnsCidadao: Boolean read Get__isset_CnsCidadao;
    property __isset_DtNascimento: Boolean read Get__isset_DtNascimento;
    property __isset_Sexo: Boolean read Get__isset_Sexo;
    property __isset_StatusVisitaCompartilhadaOutroProfissional: Boolean read Get__isset_StatusVisitaCompartilhadaOutroProfissional;
    property __isset_MotivosVisita: Boolean read Get__isset_MotivosVisita;
    property __isset_Desfecho: Boolean read Get__isset_Desfecho;
    property __isset_MicroArea: Boolean read Get__isset_MicroArea;
    property __isset_StForaArea: Boolean read Get__isset_StForaArea;
    property __isset_TipoDeImovel: Boolean read Get__isset_TipoDeImovel;
    property __isset_PesoAcompanhamentoNutricional: Boolean read Get__isset_PesoAcompanhamentoNutricional;
    property __isset_AlturaAcompanhamentoNutricional: Boolean read Get__isset_AlturaAcompanhamentoNutricional;
  end;

  TFichaVisitaDomiciliarChildThriftImpl = class(TInterfacedObject, IBase, IFichaVisitaDomiciliarChildThrift)
  private
    FTurno: Int64;
    FNumProntuario: string;
    FCnsCidadao: string;
    FDtNascimento: Int64;
    FSexo: Int64;
    FStatusVisitaCompartilhadaOutroProfissional: Boolean;
    FMotivosVisita: IThriftList<Int64>;
    FDesfecho: Int64;
    FMicroArea: string;
    FStForaArea: Boolean;
    FTipoDeImovel: Int64;
    FPesoAcompanhamentoNutricional: Double;
    FAlturaAcompanhamentoNutricional: Double;
    
    F__isset_Turno: Boolean;
    F__isset_NumProntuario: Boolean;
    F__isset_CnsCidadao: Boolean;
    F__isset_DtNascimento: Boolean;
    F__isset_Sexo: Boolean;
    F__isset_StatusVisitaCompartilhadaOutroProfissional: Boolean;
    F__isset_MotivosVisita: Boolean;
    F__isset_Desfecho: Boolean;
    F__isset_MicroArea: Boolean;
    F__isset_StForaArea: Boolean;
    F__isset_TipoDeImovel: Boolean;
    F__isset_PesoAcompanhamentoNutricional: Boolean;
    F__isset_AlturaAcompanhamentoNutricional: Boolean;
    
    function GetTurno: Int64;
    procedure SetTurno( const Value: Int64);
    function GetNumProntuario: string;
    procedure SetNumProntuario( const Value: string);
    function GetCnsCidadao: string;
    procedure SetCnsCidadao( const Value: string);
    function GetDtNascimento: Int64;
    procedure SetDtNascimento( const Value: Int64);
    function GetSexo: Int64;
    procedure SetSexo( const Value: Int64);
    function GetStatusVisitaCompartilhadaOutroProfissional: Boolean;
    procedure SetStatusVisitaCompartilhadaOutroProfissional( const Value: Boolean);
    function GetMotivosVisita: IThriftList<Int64>;
    procedure SetMotivosVisita( const Value: IThriftList<Int64>);
    function GetDesfecho: Int64;
    procedure SetDesfecho( const Value: Int64);
    function GetMicroArea: string;
    procedure SetMicroArea( const Value: string);
    function GetStForaArea: Boolean;
    procedure SetStForaArea( const Value: Boolean);
    function GetTipoDeImovel: Int64;
    procedure SetTipoDeImovel( const Value: Int64);
    function GetPesoAcompanhamentoNutricional: Double;
    procedure SetPesoAcompanhamentoNutricional( const Value: Double);
    function GetAlturaAcompanhamentoNutricional: Double;
    procedure SetAlturaAcompanhamentoNutricional( const Value: Double);

    function Get__isset_Turno: Boolean;
    function Get__isset_NumProntuario: Boolean;
    function Get__isset_CnsCidadao: Boolean;
    function Get__isset_DtNascimento: Boolean;
    function Get__isset_Sexo: Boolean;
    function Get__isset_StatusVisitaCompartilhadaOutroProfissional: Boolean;
    function Get__isset_MotivosVisita: Boolean;
    function Get__isset_Desfecho: Boolean;
    function Get__isset_MicroArea: Boolean;
    function Get__isset_StForaArea: Boolean;
    function Get__isset_TipoDeImovel: Boolean;
    function Get__isset_PesoAcompanhamentoNutricional: Boolean;
    function Get__isset_AlturaAcompanhamentoNutricional: Boolean;
  public
    constructor Create;
    destructor Destroy; override;

    function ToString: string; override;

    // IBase
    procedure Read( const iprot: IProtocol);
    procedure Write( const oprot: IProtocol);

    // Properties
    property Turno: Int64 read GetTurno write SetTurno;
    property NumProntuario: string read GetNumProntuario write SetNumProntuario;
    property CnsCidadao: string read GetCnsCidadao write SetCnsCidadao;
    property DtNascimento: Int64 read GetDtNascimento write SetDtNascimento;
    property Sexo: Int64 read GetSexo write SetSexo;
    property StatusVisitaCompartilhadaOutroProfissional: Boolean read GetStatusVisitaCompartilhadaOutroProfissional write SetStatusVisitaCompartilhadaOutroProfissional;
    property MotivosVisita: IThriftList<Int64> read GetMotivosVisita write SetMotivosVisita;
    property Desfecho: Int64 read GetDesfecho write SetDesfecho;
    property MicroArea: string read GetMicroArea write SetMicroArea;
    property StForaArea: Boolean read GetStForaArea write SetStForaArea;
    property TipoDeImovel: Int64 read GetTipoDeImovel write SetTipoDeImovel;
    property PesoAcompanhamentoNutricional: Double read GetPesoAcompanhamentoNutricional write SetPesoAcompanhamentoNutricional;
    property AlturaAcompanhamentoNutricional: Double read GetAlturaAcompanhamentoNutricional write SetAlturaAcompanhamentoNutricional;

    // isset
    property __isset_Turno: Boolean read Get__isset_Turno;
    property __isset_NumProntuario: Boolean read Get__isset_NumProntuario;
    property __isset_CnsCidadao: Boolean read Get__isset_CnsCidadao;
    property __isset_DtNascimento: Boolean read Get__isset_DtNascimento;
    property __isset_Sexo: Boolean read Get__isset_Sexo;
    property __isset_StatusVisitaCompartilhadaOutroProfissional: Boolean read Get__isset_StatusVisitaCompartilhadaOutroProfissional;
    property __isset_MotivosVisita: Boolean read Get__isset_MotivosVisita;
    property __isset_Desfecho: Boolean read Get__isset_Desfecho;
    property __isset_MicroArea: Boolean read Get__isset_MicroArea;
    property __isset_StForaArea: Boolean read Get__isset_StForaArea;
    property __isset_TipoDeImovel: Boolean read Get__isset_TipoDeImovel;
    property __isset_PesoAcompanhamentoNutricional: Boolean read Get__isset_PesoAcompanhamentoNutricional;
    property __isset_AlturaAcompanhamentoNutricional: Boolean read Get__isset_AlturaAcompanhamentoNutricional;
  end;

  IFichaVisitaDomiciliarMasterThrift = interface(IBase)
    function GetUuidFicha: string;
    procedure SetUuidFicha( const Value: string);
    function GetTpCdsOrigem: Integer;
    procedure SetTpCdsOrigem( const Value: Integer);
    function GetHeaderTransport: IUnicaLotacaoHeaderThrift;
    procedure SetHeaderTransport( const Value: IUnicaLotacaoHeaderThrift);
    function GetVisitasDomiciliares: IThriftList<IFichaVisitaDomiciliarChildThrift>;
    procedure SetVisitasDomiciliares( const Value: IThriftList<IFichaVisitaDomiciliarChildThrift>);

    property UuidFicha: string read GetUuidFicha write SetUuidFicha;
    property TpCdsOrigem: Integer read GetTpCdsOrigem write SetTpCdsOrigem;
    property HeaderTransport: IUnicaLotacaoHeaderThrift read GetHeaderTransport write SetHeaderTransport;
    property VisitasDomiciliares: IThriftList<IFichaVisitaDomiciliarChildThrift> read GetVisitasDomiciliares write SetVisitasDomiciliares;

    function Get__isset_TpCdsOrigem: Boolean;
    function Get__isset_HeaderTransport: Boolean;
    function Get__isset_VisitasDomiciliares: Boolean;

    property __isset_TpCdsOrigem: Boolean read Get__isset_TpCdsOrigem;
    property __isset_HeaderTransport: Boolean read Get__isset_HeaderTransport;
    property __isset_VisitasDomiciliares: Boolean read Get__isset_VisitasDomiciliares;
  end;

  TFichaVisitaDomiciliarMasterThriftImpl = class(TInterfacedObject, IBase, IFichaVisitaDomiciliarMasterThrift)
  private
    FUuidFicha: string;
    FTpCdsOrigem: Integer;
    FHeaderTransport: IUnicaLotacaoHeaderThrift;
    FVisitasDomiciliares: IThriftList<IFichaVisitaDomiciliarChildThrift>;
    
    F__isset_TpCdsOrigem: Boolean;
    F__isset_HeaderTransport: Boolean;
    F__isset_VisitasDomiciliares: Boolean;
    
    function GetUuidFicha: string;
    procedure SetUuidFicha( const Value: string);
    function GetTpCdsOrigem: Integer;
    procedure SetTpCdsOrigem( const Value: Integer);
    function GetHeaderTransport: IUnicaLotacaoHeaderThrift;
    procedure SetHeaderTransport( const Value: IUnicaLotacaoHeaderThrift);
    function GetVisitasDomiciliares: IThriftList<IFichaVisitaDomiciliarChildThrift>;
    procedure SetVisitasDomiciliares( const Value: IThriftList<IFichaVisitaDomiciliarChildThrift>);

    function Get__isset_TpCdsOrigem: Boolean;
    function Get__isset_HeaderTransport: Boolean;
    function Get__isset_VisitasDomiciliares: Boolean;
  public
    constructor Create;
    destructor Destroy; override;

    function ToString: string; override;

    // IBase
    procedure Read( const iprot: IProtocol);
    procedure Write( const oprot: IProtocol);

    // Properties
    property UuidFicha: string read GetUuidFicha write SetUuidFicha;
    property TpCdsOrigem: Integer read GetTpCdsOrigem write SetTpCdsOrigem;
    property HeaderTransport: IUnicaLotacaoHeaderThrift read GetHeaderTransport write SetHeaderTransport;
    property VisitasDomiciliares: IThriftList<IFichaVisitaDomiciliarChildThrift> read GetVisitasDomiciliares write SetVisitasDomiciliares;

    // isset
    property __isset_TpCdsOrigem: Boolean read Get__isset_TpCdsOrigem;
    property __isset_HeaderTransport: Boolean read Get__isset_HeaderTransport;
    property __isset_VisitasDomiciliares: Boolean read Get__isset_VisitasDomiciliares;
  end;

implementation

constructor TFichaVisitaDomiciliarChildThriftImpl.Create;
begin
  inherited;
end;

destructor TFichaVisitaDomiciliarChildThriftImpl.Destroy;
begin
  inherited;
end;

function TFichaVisitaDomiciliarChildThriftImpl.GetTurno: Int64;
begin
  Result := FTurno;
end;

procedure TFichaVisitaDomiciliarChildThriftImpl.SetTurno( const Value: Int64);
begin
  F__isset_Turno := True;
  FTurno := Value;
end;

function TFichaVisitaDomiciliarChildThriftImpl.Get__isset_Turno: Boolean;
begin
  Result := F__isset_Turno;
end;

function TFichaVisitaDomiciliarChildThriftImpl.GetNumProntuario: string;
begin
  Result := FNumProntuario;
end;

procedure TFichaVisitaDomiciliarChildThriftImpl.SetNumProntuario( const Value: string);
begin
  F__isset_NumProntuario := True;
  FNumProntuario := Value;
end;

function TFichaVisitaDomiciliarChildThriftImpl.Get__isset_NumProntuario: Boolean;
begin
  Result := F__isset_NumProntuario;
end;

function TFichaVisitaDomiciliarChildThriftImpl.GetCnsCidadao: string;
begin
  Result := FCnsCidadao;
end;

procedure TFichaVisitaDomiciliarChildThriftImpl.SetCnsCidadao( const Value: string);
begin
  F__isset_CnsCidadao := True;
  FCnsCidadao := Value;
end;

function TFichaVisitaDomiciliarChildThriftImpl.Get__isset_CnsCidadao: Boolean;
begin
  Result := F__isset_CnsCidadao;
end;

function TFichaVisitaDomiciliarChildThriftImpl.GetDtNascimento: Int64;
begin
  Result := FDtNascimento;
end;

procedure TFichaVisitaDomiciliarChildThriftImpl.SetDtNascimento( const Value: Int64);
begin
  F__isset_DtNascimento := True;
  FDtNascimento := Value;
end;

function TFichaVisitaDomiciliarChildThriftImpl.Get__isset_DtNascimento: Boolean;
begin
  Result := F__isset_DtNascimento;
end;

function TFichaVisitaDomiciliarChildThriftImpl.GetSexo: Int64;
begin
  Result := FSexo;
end;

procedure TFichaVisitaDomiciliarChildThriftImpl.SetSexo( const Value: Int64);
begin
  F__isset_Sexo := True;
  FSexo := Value;
end;

function TFichaVisitaDomiciliarChildThriftImpl.Get__isset_Sexo: Boolean;
begin
  Result := F__isset_Sexo;
end;

function TFichaVisitaDomiciliarChildThriftImpl.GetStatusVisitaCompartilhadaOutroProfissional: Boolean;
begin
  Result := FStatusVisitaCompartilhadaOutroProfissional;
end;

procedure TFichaVisitaDomiciliarChildThriftImpl.SetStatusVisitaCompartilhadaOutroProfissional( const Value: Boolean);
begin
  F__isset_StatusVisitaCompartilhadaOutroProfissional := True;
  FStatusVisitaCompartilhadaOutroProfissional := Value;
end;

function TFichaVisitaDomiciliarChildThriftImpl.Get__isset_StatusVisitaCompartilhadaOutroProfissional: Boolean;
begin
  Result := F__isset_StatusVisitaCompartilhadaOutroProfissional;
end;

function TFichaVisitaDomiciliarChildThriftImpl.GetMotivosVisita: IThriftList<Int64>;
begin
  Result := FMotivosVisita;
end;

procedure TFichaVisitaDomiciliarChildThriftImpl.SetMotivosVisita( const Value: IThriftList<Int64>);
begin
  F__isset_MotivosVisita := True;
  FMotivosVisita := Value;
end;

function TFichaVisitaDomiciliarChildThriftImpl.Get__isset_MotivosVisita: Boolean;
begin
  Result := F__isset_MotivosVisita;
end;

function TFichaVisitaDomiciliarChildThriftImpl.GetDesfecho: Int64;
begin
  Result := FDesfecho;
end;

procedure TFichaVisitaDomiciliarChildThriftImpl.SetDesfecho( const Value: Int64);
begin
  F__isset_Desfecho := True;
  FDesfecho := Value;
end;

function TFichaVisitaDomiciliarChildThriftImpl.Get__isset_Desfecho: Boolean;
begin
  Result := F__isset_Desfecho;
end;

function TFichaVisitaDomiciliarChildThriftImpl.GetMicroArea: string;
begin
  Result := FMicroArea;
end;

procedure TFichaVisitaDomiciliarChildThriftImpl.SetMicroArea( const Value: string);
begin
  F__isset_MicroArea := True;
  FMicroArea := Value;
end;

function TFichaVisitaDomiciliarChildThriftImpl.Get__isset_MicroArea: Boolean;
begin
  Result := F__isset_MicroArea;
end;

function TFichaVisitaDomiciliarChildThriftImpl.GetStForaArea: Boolean;
begin
  Result := FStForaArea;
end;

procedure TFichaVisitaDomiciliarChildThriftImpl.SetStForaArea( const Value: Boolean);
begin
  F__isset_StForaArea := True;
  FStForaArea := Value;
end;

function TFichaVisitaDomiciliarChildThriftImpl.Get__isset_StForaArea: Boolean;
begin
  Result := F__isset_StForaArea;
end;

function TFichaVisitaDomiciliarChildThriftImpl.GetTipoDeImovel: Int64;
begin
  Result := FTipoDeImovel;
end;

procedure TFichaVisitaDomiciliarChildThriftImpl.SetTipoDeImovel( const Value: Int64);
begin
  F__isset_TipoDeImovel := True;
  FTipoDeImovel := Value;
end;

function TFichaVisitaDomiciliarChildThriftImpl.Get__isset_TipoDeImovel: Boolean;
begin
  Result := F__isset_TipoDeImovel;
end;

function TFichaVisitaDomiciliarChildThriftImpl.GetPesoAcompanhamentoNutricional: Double;
begin
  Result := FPesoAcompanhamentoNutricional;
end;

procedure TFichaVisitaDomiciliarChildThriftImpl.SetPesoAcompanhamentoNutricional( const Value: Double);
begin
  F__isset_PesoAcompanhamentoNutricional := True;
  FPesoAcompanhamentoNutricional := Value;
end;

function TFichaVisitaDomiciliarChildThriftImpl.Get__isset_PesoAcompanhamentoNutricional: Boolean;
begin
  Result := F__isset_PesoAcompanhamentoNutricional;
end;

function TFichaVisitaDomiciliarChildThriftImpl.GetAlturaAcompanhamentoNutricional: Double;
begin
  Result := FAlturaAcompanhamentoNutricional;
end;

procedure TFichaVisitaDomiciliarChildThriftImpl.SetAlturaAcompanhamentoNutricional( const Value: Double);
begin
  F__isset_AlturaAcompanhamentoNutricional := True;
  FAlturaAcompanhamentoNutricional := Value;
end;

function TFichaVisitaDomiciliarChildThriftImpl.Get__isset_AlturaAcompanhamentoNutricional: Boolean;
begin
  Result := F__isset_AlturaAcompanhamentoNutricional;
end;

procedure TFichaVisitaDomiciliarChildThriftImpl.Read( const iprot: IProtocol);
var
  field_ : IField;
  struc : IStruct;
  _list0: IList;
  _i1: Integer;
  _elem2: Int64;

begin
  struc := iprot.ReadStructBegin;
  try
    while (true) do
    begin
      field_ := iprot.ReadFieldBegin();
      if (field_.Type_ = TType.Stop) then
      begin
        Break;
      end;
      case field_.ID of
        1: begin
          if (field_.Type_ = TType.I64) then
          begin
            Turno := iprot.ReadI64();
          end else
          begin
            TProtocolUtil.Skip(iprot, field_.Type_);
          end;
        end;
        2: begin
          if (field_.Type_ = TType.String_) then
          begin
            NumProntuario := iprot.ReadString();
          end else
          begin
            TProtocolUtil.Skip(iprot, field_.Type_);
          end;
        end;
        3: begin
          if (field_.Type_ = TType.String_) then
          begin
            CnsCidadao := iprot.ReadString();
          end else
          begin
            TProtocolUtil.Skip(iprot, field_.Type_);
          end;
        end;
        4: begin
          if (field_.Type_ = TType.I64) then
          begin
            DtNascimento := iprot.ReadI64();
          end else
          begin
            TProtocolUtil.Skip(iprot, field_.Type_);
          end;
        end;
        5: begin
          if (field_.Type_ = TType.I64) then
          begin
            Sexo := iprot.ReadI64();
          end else
          begin
            TProtocolUtil.Skip(iprot, field_.Type_);
          end;
        end;
        6: begin
          if (field_.Type_ = TType.Bool_) then
          begin
            StatusVisitaCompartilhadaOutroProfissional := iprot.ReadBool();
          end else
          begin
            TProtocolUtil.Skip(iprot, field_.Type_);
          end;
        end;
        7: begin
          if (field_.Type_ = TType.List) then
          begin
            MotivosVisita := TThriftListImpl<Int64>.Create;
            _list0 := iprot.ReadListBegin();
            for _i1 := 0 to _list0.Count - 1 do
            begin
              _elem2 := iprot.ReadI64();
              MotivosVisita.Add(_elem2);
            end;
            iprot.ReadListEnd();
          end else
          begin
            TProtocolUtil.Skip(iprot, field_.Type_);
          end;
        end;
        8: begin
          if (field_.Type_ = TType.I64) then
          begin
            Desfecho := iprot.ReadI64();
          end else
          begin
            TProtocolUtil.Skip(iprot, field_.Type_);
          end;
        end;
        9: begin
          if (field_.Type_ = TType.String_) then
          begin
            MicroArea := iprot.ReadString();
          end else
          begin
            TProtocolUtil.Skip(iprot, field_.Type_);
          end;
        end;
        10: begin
          if (field_.Type_ = TType.Bool_) then
          begin
            StForaArea := iprot.ReadBool();
          end else
          begin
            TProtocolUtil.Skip(iprot, field_.Type_);
          end;
        end;
        11: begin
          if (field_.Type_ = TType.I64) then
          begin
            TipoDeImovel := iprot.ReadI64();
          end else
          begin
            TProtocolUtil.Skip(iprot, field_.Type_);
          end;
        end;
        12: begin
          if (field_.Type_ = TType.Double_) then
          begin
            PesoAcompanhamentoNutricional := iprot.ReadDouble();
          end else
          begin
            TProtocolUtil.Skip(iprot, field_.Type_);
          end;
        end;
        13: begin
          if (field_.Type_ = TType.Double_) then
          begin
            AlturaAcompanhamentoNutricional := iprot.ReadDouble();
          end else
          begin
            TProtocolUtil.Skip(iprot, field_.Type_);
          end;
        end
        else begin
          TProtocolUtil.Skip(iprot, field_.Type_);
        end;
      end;
      iprot.ReadFieldEnd;
    end;
  finally
    iprot.ReadStructEnd;
  end;
end;

procedure TFichaVisitaDomiciliarChildThriftImpl.Write( const oprot: IProtocol);
var
  struc : IStruct;
  field_ : IField;
  list_3 : IList;
  _iter4: Int64;
begin
  struc := TStructImpl.Create('FichaVisitaDomiciliarChildThrift');
  oprot.WriteStructBegin(struc);
  field_ := TFieldImpl.Create;
  if (__isset_Turno) then
  begin
    field_.Name := 'turno';
    field_.Type_  := TType.I64;
    field_.ID := 1;
    oprot.WriteFieldBegin(field_);
    oprot.WriteI64(Turno);
    oprot.WriteFieldEnd();
  end;
  if (__isset_NumProntuario) then
  begin
    field_.Name := 'numProntuario';
    field_.Type_  := TType.String_;
    field_.ID := 2;
    oprot.WriteFieldBegin(field_);
    oprot.WriteString(NumProntuario);
    oprot.WriteFieldEnd();
  end;
  if (__isset_CnsCidadao) then
  begin
    field_.Name := 'cnsCidadao';
    field_.Type_  := TType.String_;
    field_.ID := 3;
    oprot.WriteFieldBegin(field_);
    oprot.WriteString(CnsCidadao);
    oprot.WriteFieldEnd();
  end;
  if (__isset_DtNascimento) then
  begin
    field_.Name := 'dtNascimento';
    field_.Type_  := TType.I64;
    field_.ID := 4;
    oprot.WriteFieldBegin(field_);
    oprot.WriteI64(DtNascimento);
    oprot.WriteFieldEnd();
  end;
  if (__isset_Sexo) then
  begin
    field_.Name := 'sexo';
    field_.Type_  := TType.I64;
    field_.ID := 5;
    oprot.WriteFieldBegin(field_);
    oprot.WriteI64(Sexo);
    oprot.WriteFieldEnd();
  end;
  if (__isset_StatusVisitaCompartilhadaOutroProfissional) then
  begin
    field_.Name := 'statusVisitaCompartilhadaOutroProfissional';
    field_.Type_  := TType.Bool_;
    field_.ID := 6;
    oprot.WriteFieldBegin(field_);
    oprot.WriteBool(StatusVisitaCompartilhadaOutroProfissional);
    oprot.WriteFieldEnd();
  end;
  if (MotivosVisita <> nil) and __isset_MotivosVisita then
  begin
    field_.Name := 'motivosVisita';
    field_.Type_  := TType.List;
    field_.ID := 7;
    oprot.WriteFieldBegin(field_);
    list_3 := TListImpl.Create(TType.I64, MotivosVisita.Count);
    oprot.WriteListBegin( list_3);
    for _iter4 in MotivosVisita do
    begin
      oprot.WriteI64(_iter4);
    end;
    oprot.WriteListEnd();
    oprot.WriteFieldEnd();
  end;
  if (__isset_Desfecho) then
  begin
    field_.Name := 'desfecho';
    field_.Type_  := TType.I64;
    field_.ID := 8;
    oprot.WriteFieldBegin(field_);
    oprot.WriteI64(Desfecho);
    oprot.WriteFieldEnd();
  end;
  if (__isset_MicroArea) then
  begin
    field_.Name := 'microArea';
    field_.Type_  := TType.String_;
    field_.ID := 9;
    oprot.WriteFieldBegin(field_);
    oprot.WriteString(MicroArea);
    oprot.WriteFieldEnd();
  end;
  if (__isset_StForaArea) then
  begin
    field_.Name := 'stForaArea';
    field_.Type_  := TType.Bool_;
    field_.ID := 10;
    oprot.WriteFieldBegin(field_);
    oprot.WriteBool(StForaArea);
    oprot.WriteFieldEnd();
  end;
  if (__isset_TipoDeImovel) then
  begin
    field_.Name := 'tipoDeImovel';
    field_.Type_  := TType.I64;
    field_.ID := 11;
    oprot.WriteFieldBegin(field_);
    oprot.WriteI64(TipoDeImovel);
    oprot.WriteFieldEnd();
  end;
  if (__isset_PesoAcompanhamentoNutricional) then
  begin
    field_.Name := 'pesoAcompanhamentoNutricional';
    field_.Type_  := TType.Double_;
    field_.ID := 12;
    oprot.WriteFieldBegin(field_);
    oprot.WriteDouble(PesoAcompanhamentoNutricional);
    oprot.WriteFieldEnd();
  end;
  if (__isset_AlturaAcompanhamentoNutricional) then
  begin
    field_.Name := 'alturaAcompanhamentoNutricional';
    field_.Type_  := TType.Double_;
    field_.ID := 13;
    oprot.WriteFieldBegin(field_);
    oprot.WriteDouble(AlturaAcompanhamentoNutricional);
    oprot.WriteFieldEnd();
  end;
  oprot.WriteFieldStop();
  oprot.WriteStructEnd();
end;

function TFichaVisitaDomiciliarChildThriftImpl.ToString: string;
var
  _sb5 : TThriftStringBuilder;
  _first6 : Boolean;
begin
  _sb5 := TThriftStringBuilder.Create('(');
  try
    _first6 := TRUE;
    if (__isset_Turno) then begin
      if not _first6 then _sb5.Append(',');
      _first6 := FALSE;
      _sb5.Append('Turno: ');
      _sb5.Append(Turno);
    end;
    if (__isset_NumProntuario) then begin
      if not _first6 then _sb5.Append(',');
      _first6 := FALSE;
      _sb5.Append('NumProntuario: ');
      _sb5.Append(NumProntuario);
    end;
    if (__isset_CnsCidadao) then begin
      if not _first6 then _sb5.Append(',');
      _first6 := FALSE;
      _sb5.Append('CnsCidadao: ');
      _sb5.Append(CnsCidadao);
    end;
    if (__isset_DtNascimento) then begin
      if not _first6 then _sb5.Append(',');
      _first6 := FALSE;
      _sb5.Append('DtNascimento: ');
      _sb5.Append(DtNascimento);
    end;
    if (__isset_Sexo) then begin
      if not _first6 then _sb5.Append(',');
      _first6 := FALSE;
      _sb5.Append('Sexo: ');
      _sb5.Append(Sexo);
    end;
    if (__isset_StatusVisitaCompartilhadaOutroProfissional) then begin
      if not _first6 then _sb5.Append(',');
      _first6 := FALSE;
      _sb5.Append('StatusVisitaCompartilhadaOutroProfissional: ');
      _sb5.Append(StatusVisitaCompartilhadaOutroProfissional);
    end;
    if (MotivosVisita <> nil) and __isset_MotivosVisita then begin
      if not _first6 then _sb5.Append(',');
      _first6 := FALSE;
      _sb5.Append('MotivosVisita: ');
      _sb5.Append(MotivosVisita);
    end;
    if (__isset_Desfecho) then begin
      if not _first6 then _sb5.Append(',');
      _first6 := FALSE;
      _sb5.Append('Desfecho: ');
      _sb5.Append(Desfecho);
    end;
    if (__isset_MicroArea) then begin
      if not _first6 then _sb5.Append(',');
      _first6 := FALSE;
      _sb5.Append('MicroArea: ');
      _sb5.Append(MicroArea);
    end;
    if (__isset_StForaArea) then begin
      if not _first6 then _sb5.Append(',');
      _first6 := FALSE;
      _sb5.Append('StForaArea: ');
      _sb5.Append(StForaArea);
    end;
    if (__isset_TipoDeImovel) then begin
      if not _first6 then _sb5.Append(',');
      _first6 := FALSE;
      _sb5.Append('TipoDeImovel: ');
      _sb5.Append(TipoDeImovel);
    end;
    if (__isset_PesoAcompanhamentoNutricional) then begin
      if not _first6 then _sb5.Append(',');
      _first6 := FALSE;
      _sb5.Append('PesoAcompanhamentoNutricional: ');
      _sb5.Append(PesoAcompanhamentoNutricional);
    end;
    if (__isset_AlturaAcompanhamentoNutricional) then begin
      if not _first6 then _sb5.Append(',');
      _first6 := FALSE;
      _sb5.Append('AlturaAcompanhamentoNutricional: ');
      _sb5.Append(AlturaAcompanhamentoNutricional);
    end;
    _sb5.Append(')');
    Result := _sb5.ToString;
    if _first6 then {prevent warning};
  finally
    _sb5.Free;
  end;
end;

constructor TFichaVisitaDomiciliarMasterThriftImpl.Create;
begin
  inherited;
end;

destructor TFichaVisitaDomiciliarMasterThriftImpl.Destroy;
begin
  inherited;
end;

function TFichaVisitaDomiciliarMasterThriftImpl.GetUuidFicha: string;
begin
  Result := FUuidFicha;
end;

procedure TFichaVisitaDomiciliarMasterThriftImpl.SetUuidFicha( const Value: string);
begin
  FUuidFicha := Value;
end;

function TFichaVisitaDomiciliarMasterThriftImpl.GetTpCdsOrigem: Integer;
begin
  Result := FTpCdsOrigem;
end;

procedure TFichaVisitaDomiciliarMasterThriftImpl.SetTpCdsOrigem( const Value: Integer);
begin
  F__isset_TpCdsOrigem := True;
  FTpCdsOrigem := Value;
end;

function TFichaVisitaDomiciliarMasterThriftImpl.Get__isset_TpCdsOrigem: Boolean;
begin
  Result := F__isset_TpCdsOrigem;
end;

function TFichaVisitaDomiciliarMasterThriftImpl.GetHeaderTransport: IUnicaLotacaoHeaderThrift;
begin
  Result := FHeaderTransport;
end;

procedure TFichaVisitaDomiciliarMasterThriftImpl.SetHeaderTransport( const Value: IUnicaLotacaoHeaderThrift);
begin
  F__isset_HeaderTransport := True;
  FHeaderTransport := Value;
end;

function TFichaVisitaDomiciliarMasterThriftImpl.Get__isset_HeaderTransport: Boolean;
begin
  Result := F__isset_HeaderTransport;
end;

function TFichaVisitaDomiciliarMasterThriftImpl.GetVisitasDomiciliares: IThriftList<IFichaVisitaDomiciliarChildThrift>;
begin
  Result := FVisitasDomiciliares;
end;

procedure TFichaVisitaDomiciliarMasterThriftImpl.SetVisitasDomiciliares( const Value: IThriftList<IFichaVisitaDomiciliarChildThrift>);
begin
  F__isset_VisitasDomiciliares := True;
  FVisitasDomiciliares := Value;
end;

function TFichaVisitaDomiciliarMasterThriftImpl.Get__isset_VisitasDomiciliares: Boolean;
begin
  Result := F__isset_VisitasDomiciliares;
end;

procedure TFichaVisitaDomiciliarMasterThriftImpl.Read( const iprot: IProtocol);
var
  field_ : IField;
  struc : IStruct;
  _req_isset_UuidFicha : Boolean;
  _list7: IList;
  _i8: Integer;
  _elem9: IFichaVisitaDomiciliarChildThrift;

begin
  _req_isset_UuidFicha := FALSE;
  struc := iprot.ReadStructBegin;
  try
    while (true) do
    begin
      field_ := iprot.ReadFieldBegin();
      if (field_.Type_ = TType.Stop) then
      begin
        Break;
      end;
      case field_.ID of
        1: begin
          if (field_.Type_ = TType.String_) then
          begin
            UuidFicha := iprot.ReadString();
            _req_isset_UuidFicha := TRUE;
          end else
          begin
            TProtocolUtil.Skip(iprot, field_.Type_);
          end;
        end;
        2: begin
          if (field_.Type_ = TType.I32) then
          begin
            TpCdsOrigem := iprot.ReadI32();
          end else
          begin
            TProtocolUtil.Skip(iprot, field_.Type_);
          end;
        end;
        3: begin
          if (field_.Type_ = TType.Struct) then
          begin
            HeaderTransport := TUnicaLotacaoHeaderThriftImpl.Create;
            HeaderTransport.Read(iprot);
          end else
          begin
            TProtocolUtil.Skip(iprot, field_.Type_);
          end;
        end;
        4: begin
          if (field_.Type_ = TType.List) then
          begin
            VisitasDomiciliares := TThriftListImpl<IFichaVisitaDomiciliarChildThrift>.Create;
            _list7 := iprot.ReadListBegin();
            for _i8 := 0 to _list7.Count - 1 do
            begin
              _elem9 := TFichaVisitaDomiciliarChildThriftImpl.Create;
              _elem9.Read(iprot);
              VisitasDomiciliares.Add(_elem9);
            end;
            iprot.ReadListEnd();
          end else
          begin
            TProtocolUtil.Skip(iprot, field_.Type_);
          end;
        end
        else begin
          TProtocolUtil.Skip(iprot, field_.Type_);
        end;
      end;
      iprot.ReadFieldEnd;
    end;
  finally
    iprot.ReadStructEnd;
  end;
  if not _req_isset_UuidFicha
  then raise TProtocolException.Create( TProtocolException.INVALID_DATA, 'UuidFicha');
end;

procedure TFichaVisitaDomiciliarMasterThriftImpl.Write( const oprot: IProtocol);
var
  struc : IStruct;
  field_ : IField;
  list_10 : IList;
  _iter11: IFichaVisitaDomiciliarChildThrift;
begin
  struc := TStructImpl.Create('FichaVisitaDomiciliarMasterThrift');
  oprot.WriteStructBegin(struc);
  field_ := TFieldImpl.Create;
  // required field
  field_.Name := 'uuidFicha';
  field_.Type_  := TType.String_;
  field_.ID := 1;
  oprot.WriteFieldBegin(field_);
  oprot.WriteString(UuidFicha);
  oprot.WriteFieldEnd();
  if (__isset_TpCdsOrigem) then
  begin
    field_.Name := 'tpCdsOrigem';
    field_.Type_  := TType.I32;
    field_.ID := 2;
    oprot.WriteFieldBegin(field_);
    oprot.WriteI32(TpCdsOrigem);
    oprot.WriteFieldEnd();
  end;
  if (HeaderTransport <> nil) and __isset_HeaderTransport then
  begin
    field_.Name := 'headerTransport';
    field_.Type_  := TType.Struct;
    field_.ID := 3;
    oprot.WriteFieldBegin(field_);
    HeaderTransport.Write(oprot);
    oprot.WriteFieldEnd();
  end;
  if (VisitasDomiciliares <> nil) and __isset_VisitasDomiciliares then
  begin
    field_.Name := 'visitasDomiciliares';
    field_.Type_  := TType.List;
    field_.ID := 4;
    oprot.WriteFieldBegin(field_);
    list_10 := TListImpl.Create(TType.Struct, VisitasDomiciliares.Count);
    oprot.WriteListBegin( list_10);
    for _iter11 in VisitasDomiciliares do
    begin
      _iter11.Write(oprot);
    end;
    oprot.WriteListEnd();
    oprot.WriteFieldEnd();
  end;
  oprot.WriteFieldStop();
  oprot.WriteStructEnd();
end;

function TFichaVisitaDomiciliarMasterThriftImpl.ToString: string;
var
  _sb12 : TThriftStringBuilder;
begin
  _sb12 := TThriftStringBuilder.Create('(');
  try
    _sb12.Append(', UuidFicha: ');
    _sb12.Append(UuidFicha);
    if (__isset_TpCdsOrigem) then begin
      _sb12.Append(', TpCdsOrigem: ');
      _sb12.Append(TpCdsOrigem);
    end;
    if (HeaderTransport <> nil) and __isset_HeaderTransport then begin
      _sb12.Append(', HeaderTransport: ');
      if (HeaderTransport = nil) then _sb12.Append('<null>') else _sb12.Append(HeaderTransport.ToString());
    end;
    if (VisitasDomiciliares <> nil) and __isset_VisitasDomiciliares then begin
      _sb12.Append(', VisitasDomiciliares: ');
      _sb12.Append(VisitasDomiciliares);
    end;
    _sb12.Append(')');
    Result := _sb12.ToString;
  finally
    _sb12.Free;
  end;
end;


initialization

finalization


end.
