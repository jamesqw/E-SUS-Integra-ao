/**
 * Autogenerated by Thrift Compiler (0.9.0)
 *
 * DO NOT EDIT UNLESS YOU ARE SURE THAT YOU KNOW WHAT YOU ARE DOING
 *  @generated
 */
package br.gov.saude.esus.thrift.definition.cidadao;

import org.apache.thrift.scheme.IScheme;
import org.apache.thrift.scheme.SchemeFactory;
import org.apache.thrift.scheme.StandardScheme;

import org.apache.thrift.scheme.TupleScheme;
import org.apache.thrift.protocol.TTupleProtocol;
import org.apache.thrift.protocol.TProtocolException;
import org.apache.thrift.EncodingUtils;
import org.apache.thrift.TException;
import java.util.List;
import java.util.ArrayList;
import java.util.Map;
import java.util.HashMap;
import java.util.EnumMap;
import java.util.Set;
import java.util.HashSet;
import java.util.EnumSet;
import java.util.Collections;
import java.util.BitSet;
import java.nio.ByteBuffer;
import java.util.Arrays;
import org.slf4j.Logger;
import org.slf4j.LoggerFactory;

public class CidadaoTransportThrift implements org.apache.thrift.TBase<CidadaoTransportThrift, CidadaoTransportThrift._Fields>, java.io.Serializable, Cloneable {
  private static final org.apache.thrift.protocol.TStruct STRUCT_DESC = new org.apache.thrift.protocol.TStruct("CidadaoTransportThrift");

  private static final org.apache.thrift.protocol.TField NAO_POSSUI_CNS_FIELD_DESC = new org.apache.thrift.protocol.TField("naoPossuiCns", org.apache.thrift.protocol.TType.BOOL, (short)1);
  private static final org.apache.thrift.protocol.TField CNS_FIELD_DESC = new org.apache.thrift.protocol.TField("cns", org.apache.thrift.protocol.TType.STRING, (short)2);
  private static final org.apache.thrift.protocol.TField CPF_FIELD_DESC = new org.apache.thrift.protocol.TField("cpf", org.apache.thrift.protocol.TType.STRING, (short)3);
  private static final org.apache.thrift.protocol.TField DATA_NASCIMENTO_FIELD_DESC = new org.apache.thrift.protocol.TField("dataNascimento", org.apache.thrift.protocol.TType.I64, (short)4);
  private static final org.apache.thrift.protocol.TField DESCONHECE_NOME_MAE_FIELD_DESC = new org.apache.thrift.protocol.TField("desconheceNomeMae", org.apache.thrift.protocol.TType.BOOL, (short)5);
  private static final org.apache.thrift.protocol.TField NOME_MAE_FIELD_DESC = new org.apache.thrift.protocol.TField("nomeMae", org.apache.thrift.protocol.TType.STRING, (short)6);
  private static final org.apache.thrift.protocol.TField EMAIL_FIELD_DESC = new org.apache.thrift.protocol.TField("email", org.apache.thrift.protocol.TType.STRING, (short)7);
  private static final org.apache.thrift.protocol.TField ENDERECO_FIELD_DESC = new org.apache.thrift.protocol.TField("endereco", org.apache.thrift.protocol.TType.STRUCT, (short)8);
  private static final org.apache.thrift.protocol.TField ESCOLARIDADE_ID_FIELD_DESC = new org.apache.thrift.protocol.TField("escolaridadeId", org.apache.thrift.protocol.TType.I64, (short)9);
  private static final org.apache.thrift.protocol.TField ESTADO_CIVIL_ID_FIELD_DESC = new org.apache.thrift.protocol.TField("estadoCivilId", org.apache.thrift.protocol.TType.I64, (short)10);
  private static final org.apache.thrift.protocol.TField ESTRANGEIRO_FIELD_DESC = new org.apache.thrift.protocol.TField("estrangeiro", org.apache.thrift.protocol.TType.BOOL, (short)11);
  private static final org.apache.thrift.protocol.TField ETNIA_ID_FIELD_DESC = new org.apache.thrift.protocol.TField("etniaId", org.apache.thrift.protocol.TType.I64, (short)12);
  private static final org.apache.thrift.protocol.TField FALECEU_FIELD_DESC = new org.apache.thrift.protocol.TField("faleceu", org.apache.thrift.protocol.TType.BOOL, (short)13);
  private static final org.apache.thrift.protocol.TField MUNICIPIO_NASCIMENTO_CEP_FIELD_DESC = new org.apache.thrift.protocol.TField("municipioNascimentoCep", org.apache.thrift.protocol.TType.STRING, (short)14);
  private static final org.apache.thrift.protocol.TField MUNICIPIO_NASCIMENTO_DNE_FIELD_DESC = new org.apache.thrift.protocol.TField("municipioNascimentoDne", org.apache.thrift.protocol.TType.STRING, (short)15);
  private static final org.apache.thrift.protocol.TField MUNICIPIO_NASCIMENTO_IBGE_FIELD_DESC = new org.apache.thrift.protocol.TField("municipioNascimentoIbge", org.apache.thrift.protocol.TType.STRING, (short)16);
  private static final org.apache.thrift.protocol.TField NIS_PIS_PASEP_FIELD_DESC = new org.apache.thrift.protocol.TField("nisPisPasep", org.apache.thrift.protocol.TType.STRING, (short)17);
  private static final org.apache.thrift.protocol.TField NOME_COMPLETO_FIELD_DESC = new org.apache.thrift.protocol.TField("nomeCompleto", org.apache.thrift.protocol.TType.STRING, (short)18);
  private static final org.apache.thrift.protocol.TField NOME_SOCIAL_FIELD_DESC = new org.apache.thrift.protocol.TField("nomeSocial", org.apache.thrift.protocol.TType.STRING, (short)19);
  private static final org.apache.thrift.protocol.TField NUMERO_PRONTUARIO_FIELD_DESC = new org.apache.thrift.protocol.TField("numeroProntuario", org.apache.thrift.protocol.TType.STRING, (short)20);
  private static final org.apache.thrift.protocol.TField NUMERO_PRONTUARIO_CNES_FIELD_DESC = new org.apache.thrift.protocol.TField("numeroProntuarioCnes", org.apache.thrift.protocol.TType.STRING, (short)22);
  private static final org.apache.thrift.protocol.TField RACA_COR_ID_FIELD_DESC = new org.apache.thrift.protocol.TField("racaCorId", org.apache.thrift.protocol.TType.I64, (short)23);
  private static final org.apache.thrift.protocol.TField SEXO_FIELD_DESC = new org.apache.thrift.protocol.TField("sexo", org.apache.thrift.protocol.TType.I32, (short)24);
  private static final org.apache.thrift.protocol.TField TELEFONE_CELULAR_FIELD_DESC = new org.apache.thrift.protocol.TField("telefoneCelular", org.apache.thrift.protocol.TType.STRING, (short)25);
  private static final org.apache.thrift.protocol.TField TELEFONE_CONTATO_FIELD_DESC = new org.apache.thrift.protocol.TField("telefoneContato", org.apache.thrift.protocol.TType.STRING, (short)26);
  private static final org.apache.thrift.protocol.TField TELEFONE_RESIDENCIAL_FIELD_DESC = new org.apache.thrift.protocol.TField("telefoneResidencial", org.apache.thrift.protocol.TType.STRING, (short)27);
  private static final org.apache.thrift.protocol.TField TIPO_SANGUINEO_FIELD_DESC = new org.apache.thrift.protocol.TField("tipoSanguineo", org.apache.thrift.protocol.TType.I32, (short)28);
  private static final org.apache.thrift.protocol.TField CBO_NUMERO_FIELD_DESC = new org.apache.thrift.protocol.TField("cboNumero", org.apache.thrift.protocol.TType.STRING, (short)29);

  private static final Map<Class<? extends IScheme>, SchemeFactory> schemes = new HashMap<Class<? extends IScheme>, SchemeFactory>();
  static {
    schemes.put(StandardScheme.class, new CidadaoTransportThriftStandardSchemeFactory());
    schemes.put(TupleScheme.class, new CidadaoTransportThriftTupleSchemeFactory());
  }

  private boolean naoPossuiCns; // required
  private String cns; // required
  private String cpf; // optional
  private long dataNascimento; // required
  private boolean desconheceNomeMae; // required
  private String nomeMae; // optional
  private String email; // optional
  private EnderecoTransportThrift endereco; // optional
  private long escolaridadeId; // optional
  private long estadoCivilId; // optional
  private boolean estrangeiro; // required
  private long etniaId; // optional
  private boolean faleceu; // optional
  private String municipioNascimentoCep; // required
  private String municipioNascimentoDne; // required
  private String municipioNascimentoIbge; // optional
  private String nisPisPasep; // optional
  private String nomeCompleto; // required
  private String nomeSocial; // optional
  private String numeroProntuario; // optional
  private String numeroProntuarioCnes; // optional
  private long racaCorId; // required
  private SexoThrift sexo; // required
  private String telefoneCelular; // optional
  private String telefoneContato; // optional
  private String telefoneResidencial; // optional
  private TipoSanguineoThrift tipoSanguineo; // optional
  private String cboNumero; // optional

  /** The set of fields this struct contains, along with convenience methods for finding and manipulating them. */
  public enum _Fields implements org.apache.thrift.TFieldIdEnum {
    NAO_POSSUI_CNS((short)1, "naoPossuiCns"),
    CNS((short)2, "cns"),
    CPF((short)3, "cpf"),
    DATA_NASCIMENTO((short)4, "dataNascimento"),
    DESCONHECE_NOME_MAE((short)5, "desconheceNomeMae"),
    NOME_MAE((short)6, "nomeMae"),
    EMAIL((short)7, "email"),
    ENDERECO((short)8, "endereco"),
    ESCOLARIDADE_ID((short)9, "escolaridadeId"),
    ESTADO_CIVIL_ID((short)10, "estadoCivilId"),
    ESTRANGEIRO((short)11, "estrangeiro"),
    ETNIA_ID((short)12, "etniaId"),
    FALECEU((short)13, "faleceu"),
    MUNICIPIO_NASCIMENTO_CEP((short)14, "municipioNascimentoCep"),
    MUNICIPIO_NASCIMENTO_DNE((short)15, "municipioNascimentoDne"),
    MUNICIPIO_NASCIMENTO_IBGE((short)16, "municipioNascimentoIbge"),
    NIS_PIS_PASEP((short)17, "nisPisPasep"),
    NOME_COMPLETO((short)18, "nomeCompleto"),
    NOME_SOCIAL((short)19, "nomeSocial"),
    NUMERO_PRONTUARIO((short)20, "numeroProntuario"),
    NUMERO_PRONTUARIO_CNES((short)22, "numeroProntuarioCnes"),
    RACA_COR_ID((short)23, "racaCorId"),
    /**
     * 
     * @see SexoThrift
     */
    SEXO((short)24, "sexo"),
    TELEFONE_CELULAR((short)25, "telefoneCelular"),
    TELEFONE_CONTATO((short)26, "telefoneContato"),
    TELEFONE_RESIDENCIAL((short)27, "telefoneResidencial"),
    /**
     * 
     * @see TipoSanguineoThrift
     */
    TIPO_SANGUINEO((short)28, "tipoSanguineo"),
    CBO_NUMERO((short)29, "cboNumero");

    private static final Map<String, _Fields> byName = new HashMap<String, _Fields>();

    static {
      for (_Fields field : EnumSet.allOf(_Fields.class)) {
        byName.put(field.getFieldName(), field);
      }
    }

    /**
     * Find the _Fields constant that matches fieldId, or null if its not found.
     */
    public static _Fields findByThriftId(int fieldId) {
      switch(fieldId) {
        case 1: // NAO_POSSUI_CNS
          return NAO_POSSUI_CNS;
        case 2: // CNS
          return CNS;
        case 3: // CPF
          return CPF;
        case 4: // DATA_NASCIMENTO
          return DATA_NASCIMENTO;
        case 5: // DESCONHECE_NOME_MAE
          return DESCONHECE_NOME_MAE;
        case 6: // NOME_MAE
          return NOME_MAE;
        case 7: // EMAIL
          return EMAIL;
        case 8: // ENDERECO
          return ENDERECO;
        case 9: // ESCOLARIDADE_ID
          return ESCOLARIDADE_ID;
        case 10: // ESTADO_CIVIL_ID
          return ESTADO_CIVIL_ID;
        case 11: // ESTRANGEIRO
          return ESTRANGEIRO;
        case 12: // ETNIA_ID
          return ETNIA_ID;
        case 13: // FALECEU
          return FALECEU;
        case 14: // MUNICIPIO_NASCIMENTO_CEP
          return MUNICIPIO_NASCIMENTO_CEP;
        case 15: // MUNICIPIO_NASCIMENTO_DNE
          return MUNICIPIO_NASCIMENTO_DNE;
        case 16: // MUNICIPIO_NASCIMENTO_IBGE
          return MUNICIPIO_NASCIMENTO_IBGE;
        case 17: // NIS_PIS_PASEP
          return NIS_PIS_PASEP;
        case 18: // NOME_COMPLETO
          return NOME_COMPLETO;
        case 19: // NOME_SOCIAL
          return NOME_SOCIAL;
        case 20: // NUMERO_PRONTUARIO
          return NUMERO_PRONTUARIO;
        case 22: // NUMERO_PRONTUARIO_CNES
          return NUMERO_PRONTUARIO_CNES;
        case 23: // RACA_COR_ID
          return RACA_COR_ID;
        case 24: // SEXO
          return SEXO;
        case 25: // TELEFONE_CELULAR
          return TELEFONE_CELULAR;
        case 26: // TELEFONE_CONTATO
          return TELEFONE_CONTATO;
        case 27: // TELEFONE_RESIDENCIAL
          return TELEFONE_RESIDENCIAL;
        case 28: // TIPO_SANGUINEO
          return TIPO_SANGUINEO;
        case 29: // CBO_NUMERO
          return CBO_NUMERO;
        default:
          return null;
      }
    }

    /**
     * Find the _Fields constant that matches fieldId, throwing an exception
     * if it is not found.
     */
    public static _Fields findByThriftIdOrThrow(int fieldId) {
      _Fields fields = findByThriftId(fieldId);
      if (fields == null) throw new IllegalArgumentException("Field " + fieldId + " doesn't exist!");
      return fields;
    }

    /**
     * Find the _Fields constant that matches name, or null if its not found.
     */
    public static _Fields findByName(String name) {
      return byName.get(name);
    }

    private final short _thriftId;
    private final String _fieldName;

    _Fields(short thriftId, String fieldName) {
      _thriftId = thriftId;
      _fieldName = fieldName;
    }

    public short getThriftFieldId() {
      return _thriftId;
    }

    public String getFieldName() {
      return _fieldName;
    }
  }

  // isset id assignments
  private static final int __NAOPOSSUICNS_ISSET_ID = 0;
  private static final int __DATANASCIMENTO_ISSET_ID = 1;
  private static final int __DESCONHECENOMEMAE_ISSET_ID = 2;
  private static final int __ESCOLARIDADEID_ISSET_ID = 3;
  private static final int __ESTADOCIVILID_ISSET_ID = 4;
  private static final int __ESTRANGEIRO_ISSET_ID = 5;
  private static final int __ETNIAID_ISSET_ID = 6;
  private static final int __FALECEU_ISSET_ID = 7;
  private static final int __RACACORID_ISSET_ID = 8;
  private short __isset_bitfield = 0;
  private _Fields optionals[] = {_Fields.CPF,_Fields.NOME_MAE,_Fields.EMAIL,_Fields.ENDERECO,_Fields.ESCOLARIDADE_ID,_Fields.ESTADO_CIVIL_ID,_Fields.ETNIA_ID,_Fields.FALECEU,_Fields.MUNICIPIO_NASCIMENTO_IBGE,_Fields.NIS_PIS_PASEP,_Fields.NOME_SOCIAL,_Fields.NUMERO_PRONTUARIO,_Fields.NUMERO_PRONTUARIO_CNES,_Fields.TELEFONE_CELULAR,_Fields.TELEFONE_CONTATO,_Fields.TELEFONE_RESIDENCIAL,_Fields.TIPO_SANGUINEO,_Fields.CBO_NUMERO};
  public static final Map<_Fields, org.apache.thrift.meta_data.FieldMetaData> metaDataMap;
  static {
    Map<_Fields, org.apache.thrift.meta_data.FieldMetaData> tmpMap = new EnumMap<_Fields, org.apache.thrift.meta_data.FieldMetaData>(_Fields.class);
    tmpMap.put(_Fields.NAO_POSSUI_CNS, new org.apache.thrift.meta_data.FieldMetaData("naoPossuiCns", org.apache.thrift.TFieldRequirementType.REQUIRED, 
        new org.apache.thrift.meta_data.FieldValueMetaData(org.apache.thrift.protocol.TType.BOOL)));
    tmpMap.put(_Fields.CNS, new org.apache.thrift.meta_data.FieldMetaData("cns", org.apache.thrift.TFieldRequirementType.REQUIRED, 
        new org.apache.thrift.meta_data.FieldValueMetaData(org.apache.thrift.protocol.TType.STRING)));
    tmpMap.put(_Fields.CPF, new org.apache.thrift.meta_data.FieldMetaData("cpf", org.apache.thrift.TFieldRequirementType.OPTIONAL, 
        new org.apache.thrift.meta_data.FieldValueMetaData(org.apache.thrift.protocol.TType.STRING)));
    tmpMap.put(_Fields.DATA_NASCIMENTO, new org.apache.thrift.meta_data.FieldMetaData("dataNascimento", org.apache.thrift.TFieldRequirementType.REQUIRED, 
        new org.apache.thrift.meta_data.FieldValueMetaData(org.apache.thrift.protocol.TType.I64)));
    tmpMap.put(_Fields.DESCONHECE_NOME_MAE, new org.apache.thrift.meta_data.FieldMetaData("desconheceNomeMae", org.apache.thrift.TFieldRequirementType.REQUIRED, 
        new org.apache.thrift.meta_data.FieldValueMetaData(org.apache.thrift.protocol.TType.BOOL)));
    tmpMap.put(_Fields.NOME_MAE, new org.apache.thrift.meta_data.FieldMetaData("nomeMae", org.apache.thrift.TFieldRequirementType.OPTIONAL, 
        new org.apache.thrift.meta_data.FieldValueMetaData(org.apache.thrift.protocol.TType.STRING)));
    tmpMap.put(_Fields.EMAIL, new org.apache.thrift.meta_data.FieldMetaData("email", org.apache.thrift.TFieldRequirementType.OPTIONAL, 
        new org.apache.thrift.meta_data.FieldValueMetaData(org.apache.thrift.protocol.TType.STRING)));
    tmpMap.put(_Fields.ENDERECO, new org.apache.thrift.meta_data.FieldMetaData("endereco", org.apache.thrift.TFieldRequirementType.OPTIONAL, 
        new org.apache.thrift.meta_data.StructMetaData(org.apache.thrift.protocol.TType.STRUCT, EnderecoTransportThrift.class)));
    tmpMap.put(_Fields.ESCOLARIDADE_ID, new org.apache.thrift.meta_data.FieldMetaData("escolaridadeId", org.apache.thrift.TFieldRequirementType.OPTIONAL, 
        new org.apache.thrift.meta_data.FieldValueMetaData(org.apache.thrift.protocol.TType.I64)));
    tmpMap.put(_Fields.ESTADO_CIVIL_ID, new org.apache.thrift.meta_data.FieldMetaData("estadoCivilId", org.apache.thrift.TFieldRequirementType.OPTIONAL, 
        new org.apache.thrift.meta_data.FieldValueMetaData(org.apache.thrift.protocol.TType.I64)));
    tmpMap.put(_Fields.ESTRANGEIRO, new org.apache.thrift.meta_data.FieldMetaData("estrangeiro", org.apache.thrift.TFieldRequirementType.REQUIRED, 
        new org.apache.thrift.meta_data.FieldValueMetaData(org.apache.thrift.protocol.TType.BOOL)));
    tmpMap.put(_Fields.ETNIA_ID, new org.apache.thrift.meta_data.FieldMetaData("etniaId", org.apache.thrift.TFieldRequirementType.OPTIONAL, 
        new org.apache.thrift.meta_data.FieldValueMetaData(org.apache.thrift.protocol.TType.I64)));
    tmpMap.put(_Fields.FALECEU, new org.apache.thrift.meta_data.FieldMetaData("faleceu", org.apache.thrift.TFieldRequirementType.OPTIONAL, 
        new org.apache.thrift.meta_data.FieldValueMetaData(org.apache.thrift.protocol.TType.BOOL)));
    tmpMap.put(_Fields.MUNICIPIO_NASCIMENTO_CEP, new org.apache.thrift.meta_data.FieldMetaData("municipioNascimentoCep", org.apache.thrift.TFieldRequirementType.REQUIRED, 
        new org.apache.thrift.meta_data.FieldValueMetaData(org.apache.thrift.protocol.TType.STRING)));
    tmpMap.put(_Fields.MUNICIPIO_NASCIMENTO_DNE, new org.apache.thrift.meta_data.FieldMetaData("municipioNascimentoDne", org.apache.thrift.TFieldRequirementType.REQUIRED, 
        new org.apache.thrift.meta_data.FieldValueMetaData(org.apache.thrift.protocol.TType.STRING)));
    tmpMap.put(_Fields.MUNICIPIO_NASCIMENTO_IBGE, new org.apache.thrift.meta_data.FieldMetaData("municipioNascimentoIbge", org.apache.thrift.TFieldRequirementType.OPTIONAL, 
        new org.apache.thrift.meta_data.FieldValueMetaData(org.apache.thrift.protocol.TType.STRING)));
    tmpMap.put(_Fields.NIS_PIS_PASEP, new org.apache.thrift.meta_data.FieldMetaData("nisPisPasep", org.apache.thrift.TFieldRequirementType.OPTIONAL, 
        new org.apache.thrift.meta_data.FieldValueMetaData(org.apache.thrift.protocol.TType.STRING)));
    tmpMap.put(_Fields.NOME_COMPLETO, new org.apache.thrift.meta_data.FieldMetaData("nomeCompleto", org.apache.thrift.TFieldRequirementType.REQUIRED, 
        new org.apache.thrift.meta_data.FieldValueMetaData(org.apache.thrift.protocol.TType.STRING)));
    tmpMap.put(_Fields.NOME_SOCIAL, new org.apache.thrift.meta_data.FieldMetaData("nomeSocial", org.apache.thrift.TFieldRequirementType.OPTIONAL, 
        new org.apache.thrift.meta_data.FieldValueMetaData(org.apache.thrift.protocol.TType.STRING)));
    tmpMap.put(_Fields.NUMERO_PRONTUARIO, new org.apache.thrift.meta_data.FieldMetaData("numeroProntuario", org.apache.thrift.TFieldRequirementType.OPTIONAL, 
        new org.apache.thrift.meta_data.FieldValueMetaData(org.apache.thrift.protocol.TType.STRING)));
    tmpMap.put(_Fields.NUMERO_PRONTUARIO_CNES, new org.apache.thrift.meta_data.FieldMetaData("numeroProntuarioCnes", org.apache.thrift.TFieldRequirementType.OPTIONAL, 
        new org.apache.thrift.meta_data.FieldValueMetaData(org.apache.thrift.protocol.TType.STRING)));
    tmpMap.put(_Fields.RACA_COR_ID, new org.apache.thrift.meta_data.FieldMetaData("racaCorId", org.apache.thrift.TFieldRequirementType.REQUIRED, 
        new org.apache.thrift.meta_data.FieldValueMetaData(org.apache.thrift.protocol.TType.I64)));
    tmpMap.put(_Fields.SEXO, new org.apache.thrift.meta_data.FieldMetaData("sexo", org.apache.thrift.TFieldRequirementType.REQUIRED, 
        new org.apache.thrift.meta_data.EnumMetaData(org.apache.thrift.protocol.TType.ENUM, SexoThrift.class)));
    tmpMap.put(_Fields.TELEFONE_CELULAR, new org.apache.thrift.meta_data.FieldMetaData("telefoneCelular", org.apache.thrift.TFieldRequirementType.OPTIONAL, 
        new org.apache.thrift.meta_data.FieldValueMetaData(org.apache.thrift.protocol.TType.STRING)));
    tmpMap.put(_Fields.TELEFONE_CONTATO, new org.apache.thrift.meta_data.FieldMetaData("telefoneContato", org.apache.thrift.TFieldRequirementType.OPTIONAL, 
        new org.apache.thrift.meta_data.FieldValueMetaData(org.apache.thrift.protocol.TType.STRING)));
    tmpMap.put(_Fields.TELEFONE_RESIDENCIAL, new org.apache.thrift.meta_data.FieldMetaData("telefoneResidencial", org.apache.thrift.TFieldRequirementType.OPTIONAL, 
        new org.apache.thrift.meta_data.FieldValueMetaData(org.apache.thrift.protocol.TType.STRING)));
    tmpMap.put(_Fields.TIPO_SANGUINEO, new org.apache.thrift.meta_data.FieldMetaData("tipoSanguineo", org.apache.thrift.TFieldRequirementType.OPTIONAL, 
        new org.apache.thrift.meta_data.EnumMetaData(org.apache.thrift.protocol.TType.ENUM, TipoSanguineoThrift.class)));
    tmpMap.put(_Fields.CBO_NUMERO, new org.apache.thrift.meta_data.FieldMetaData("cboNumero", org.apache.thrift.TFieldRequirementType.OPTIONAL, 
        new org.apache.thrift.meta_data.FieldValueMetaData(org.apache.thrift.protocol.TType.STRING)));
    metaDataMap = Collections.unmodifiableMap(tmpMap);
    org.apache.thrift.meta_data.FieldMetaData.addStructMetaDataMap(CidadaoTransportThrift.class, metaDataMap);
  }

  public CidadaoTransportThrift() {
  }

  public CidadaoTransportThrift(
    boolean naoPossuiCns,
    String cns,
    long dataNascimento,
    boolean desconheceNomeMae,
    boolean estrangeiro,
    String municipioNascimentoCep,
    String municipioNascimentoDne,
    String nomeCompleto,
    long racaCorId,
    SexoThrift sexo)
  {
    this();
    this.naoPossuiCns = naoPossuiCns;
    setNaoPossuiCnsIsSet(true);
    this.cns = cns;
    this.dataNascimento = dataNascimento;
    setDataNascimentoIsSet(true);
    this.desconheceNomeMae = desconheceNomeMae;
    setDesconheceNomeMaeIsSet(true);
    this.estrangeiro = estrangeiro;
    setEstrangeiroIsSet(true);
    this.municipioNascimentoCep = municipioNascimentoCep;
    this.municipioNascimentoDne = municipioNascimentoDne;
    this.nomeCompleto = nomeCompleto;
    this.racaCorId = racaCorId;
    setRacaCorIdIsSet(true);
    this.sexo = sexo;
  }

  /**
   * Performs a deep copy on <i>other</i>.
   */
  public CidadaoTransportThrift(CidadaoTransportThrift other) {
    __isset_bitfield = other.__isset_bitfield;
    this.naoPossuiCns = other.naoPossuiCns;
    if (other.isSetCns()) {
      this.cns = other.cns;
    }
    if (other.isSetCpf()) {
      this.cpf = other.cpf;
    }
    this.dataNascimento = other.dataNascimento;
    this.desconheceNomeMae = other.desconheceNomeMae;
    if (other.isSetNomeMae()) {
      this.nomeMae = other.nomeMae;
    }
    if (other.isSetEmail()) {
      this.email = other.email;
    }
    if (other.isSetEndereco()) {
      this.endereco = new EnderecoTransportThrift(other.endereco);
    }
    this.escolaridadeId = other.escolaridadeId;
    this.estadoCivilId = other.estadoCivilId;
    this.estrangeiro = other.estrangeiro;
    this.etniaId = other.etniaId;
    this.faleceu = other.faleceu;
    if (other.isSetMunicipioNascimentoCep()) {
      this.municipioNascimentoCep = other.municipioNascimentoCep;
    }
    if (other.isSetMunicipioNascimentoDne()) {
      this.municipioNascimentoDne = other.municipioNascimentoDne;
    }
    if (other.isSetMunicipioNascimentoIbge()) {
      this.municipioNascimentoIbge = other.municipioNascimentoIbge;
    }
    if (other.isSetNisPisPasep()) {
      this.nisPisPasep = other.nisPisPasep;
    }
    if (other.isSetNomeCompleto()) {
      this.nomeCompleto = other.nomeCompleto;
    }
    if (other.isSetNomeSocial()) {
      this.nomeSocial = other.nomeSocial;
    }
    if (other.isSetNumeroProntuario()) {
      this.numeroProntuario = other.numeroProntuario;
    }
    if (other.isSetNumeroProntuarioCnes()) {
      this.numeroProntuarioCnes = other.numeroProntuarioCnes;
    }
    this.racaCorId = other.racaCorId;
    if (other.isSetSexo()) {
      this.sexo = other.sexo;
    }
    if (other.isSetTelefoneCelular()) {
      this.telefoneCelular = other.telefoneCelular;
    }
    if (other.isSetTelefoneContato()) {
      this.telefoneContato = other.telefoneContato;
    }
    if (other.isSetTelefoneResidencial()) {
      this.telefoneResidencial = other.telefoneResidencial;
    }
    if (other.isSetTipoSanguineo()) {
      this.tipoSanguineo = other.tipoSanguineo;
    }
    if (other.isSetCboNumero()) {
      this.cboNumero = other.cboNumero;
    }
  }

  public CidadaoTransportThrift deepCopy() {
    return new CidadaoTransportThrift(this);
  }

  @Override
  public void clear() {
    setNaoPossuiCnsIsSet(false);
    this.naoPossuiCns = false;
    this.cns = null;
    this.cpf = null;
    setDataNascimentoIsSet(false);
    this.dataNascimento = 0;
    setDesconheceNomeMaeIsSet(false);
    this.desconheceNomeMae = false;
    this.nomeMae = null;
    this.email = null;
    this.endereco = null;
    setEscolaridadeIdIsSet(false);
    this.escolaridadeId = 0;
    setEstadoCivilIdIsSet(false);
    this.estadoCivilId = 0;
    setEstrangeiroIsSet(false);
    this.estrangeiro = false;
    setEtniaIdIsSet(false);
    this.etniaId = 0;
    setFaleceuIsSet(false);
    this.faleceu = false;
    this.municipioNascimentoCep = null;
    this.municipioNascimentoDne = null;
    this.municipioNascimentoIbge = null;
    this.nisPisPasep = null;
    this.nomeCompleto = null;
    this.nomeSocial = null;
    this.numeroProntuario = null;
    this.numeroProntuarioCnes = null;
    setRacaCorIdIsSet(false);
    this.racaCorId = 0;
    this.sexo = null;
    this.telefoneCelular = null;
    this.telefoneContato = null;
    this.telefoneResidencial = null;
    this.tipoSanguineo = null;
    this.cboNumero = null;
  }

  public boolean isNaoPossuiCns() {
    return this.naoPossuiCns;
  }

  public void setNaoPossuiCns(boolean naoPossuiCns) {
    this.naoPossuiCns = naoPossuiCns;
    setNaoPossuiCnsIsSet(true);
  }

  public void unsetNaoPossuiCns() {
    __isset_bitfield = EncodingUtils.clearBit(__isset_bitfield, __NAOPOSSUICNS_ISSET_ID);
  }

  /** Returns true if field naoPossuiCns is set (has been assigned a value) and false otherwise */
  public boolean isSetNaoPossuiCns() {
    return EncodingUtils.testBit(__isset_bitfield, __NAOPOSSUICNS_ISSET_ID);
  }

  public void setNaoPossuiCnsIsSet(boolean value) {
    __isset_bitfield = EncodingUtils.setBit(__isset_bitfield, __NAOPOSSUICNS_ISSET_ID, value);
  }

  public String getCns() {
    return this.cns;
  }

  public void setCns(String cns) {
    this.cns = cns;
  }

  public void unsetCns() {
    this.cns = null;
  }

  /** Returns true if field cns is set (has been assigned a value) and false otherwise */
  public boolean isSetCns() {
    return this.cns != null;
  }

  public void setCnsIsSet(boolean value) {
    if (!value) {
      this.cns = null;
    }
  }

  public String getCpf() {
    return this.cpf;
  }

  public void setCpf(String cpf) {
    this.cpf = cpf;
  }

  public void unsetCpf() {
    this.cpf = null;
  }

  /** Returns true if field cpf is set (has been assigned a value) and false otherwise */
  public boolean isSetCpf() {
    return this.cpf != null;
  }

  public void setCpfIsSet(boolean value) {
    if (!value) {
      this.cpf = null;
    }
  }

  public long getDataNascimento() {
    return this.dataNascimento;
  }

  public void setDataNascimento(long dataNascimento) {
    this.dataNascimento = dataNascimento;
    setDataNascimentoIsSet(true);
  }

  public void unsetDataNascimento() {
    __isset_bitfield = EncodingUtils.clearBit(__isset_bitfield, __DATANASCIMENTO_ISSET_ID);
  }

  /** Returns true if field dataNascimento is set (has been assigned a value) and false otherwise */
  public boolean isSetDataNascimento() {
    return EncodingUtils.testBit(__isset_bitfield, __DATANASCIMENTO_ISSET_ID);
  }

  public void setDataNascimentoIsSet(boolean value) {
    __isset_bitfield = EncodingUtils.setBit(__isset_bitfield, __DATANASCIMENTO_ISSET_ID, value);
  }

  public boolean isDesconheceNomeMae() {
    return this.desconheceNomeMae;
  }

  public void setDesconheceNomeMae(boolean desconheceNomeMae) {
    this.desconheceNomeMae = desconheceNomeMae;
    setDesconheceNomeMaeIsSet(true);
  }

  public void unsetDesconheceNomeMae() {
    __isset_bitfield = EncodingUtils.clearBit(__isset_bitfield, __DESCONHECENOMEMAE_ISSET_ID);
  }

  /** Returns true if field desconheceNomeMae is set (has been assigned a value) and false otherwise */
  public boolean isSetDesconheceNomeMae() {
    return EncodingUtils.testBit(__isset_bitfield, __DESCONHECENOMEMAE_ISSET_ID);
  }

  public void setDesconheceNomeMaeIsSet(boolean value) {
    __isset_bitfield = EncodingUtils.setBit(__isset_bitfield, __DESCONHECENOMEMAE_ISSET_ID, value);
  }

  public String getNomeMae() {
    return this.nomeMae;
  }

  public void setNomeMae(String nomeMae) {
    this.nomeMae = nomeMae;
  }

  public void unsetNomeMae() {
    this.nomeMae = null;
  }

  /** Returns true if field nomeMae is set (has been assigned a value) and false otherwise */
  public boolean isSetNomeMae() {
    return this.nomeMae != null;
  }

  public void setNomeMaeIsSet(boolean value) {
    if (!value) {
      this.nomeMae = null;
    }
  }

  public String getEmail() {
    return this.email;
  }

  public void setEmail(String email) {
    this.email = email;
  }

  public void unsetEmail() {
    this.email = null;
  }

  /** Returns true if field email is set (has been assigned a value) and false otherwise */
  public boolean isSetEmail() {
    return this.email != null;
  }

  public void setEmailIsSet(boolean value) {
    if (!value) {
      this.email = null;
    }
  }

  public EnderecoTransportThrift getEndereco() {
    return this.endereco;
  }

  public void setEndereco(EnderecoTransportThrift endereco) {
    this.endereco = endereco;
  }

  public void unsetEndereco() {
    this.endereco = null;
  }

  /** Returns true if field endereco is set (has been assigned a value) and false otherwise */
  public boolean isSetEndereco() {
    return this.endereco != null;
  }

  public void setEnderecoIsSet(boolean value) {
    if (!value) {
      this.endereco = null;
    }
  }

  public long getEscolaridadeId() {
    return this.escolaridadeId;
  }

  public void setEscolaridadeId(long escolaridadeId) {
    this.escolaridadeId = escolaridadeId;
    setEscolaridadeIdIsSet(true);
  }

  public void unsetEscolaridadeId() {
    __isset_bitfield = EncodingUtils.clearBit(__isset_bitfield, __ESCOLARIDADEID_ISSET_ID);
  }

  /** Returns true if field escolaridadeId is set (has been assigned a value) and false otherwise */
  public boolean isSetEscolaridadeId() {
    return EncodingUtils.testBit(__isset_bitfield, __ESCOLARIDADEID_ISSET_ID);
  }

  public void setEscolaridadeIdIsSet(boolean value) {
    __isset_bitfield = EncodingUtils.setBit(__isset_bitfield, __ESCOLARIDADEID_ISSET_ID, value);
  }

  public long getEstadoCivilId() {
    return this.estadoCivilId;
  }

  public void setEstadoCivilId(long estadoCivilId) {
    this.estadoCivilId = estadoCivilId;
    setEstadoCivilIdIsSet(true);
  }

  public void unsetEstadoCivilId() {
    __isset_bitfield = EncodingUtils.clearBit(__isset_bitfield, __ESTADOCIVILID_ISSET_ID);
  }

  /** Returns true if field estadoCivilId is set (has been assigned a value) and false otherwise */
  public boolean isSetEstadoCivilId() {
    return EncodingUtils.testBit(__isset_bitfield, __ESTADOCIVILID_ISSET_ID);
  }

  public void setEstadoCivilIdIsSet(boolean value) {
    __isset_bitfield = EncodingUtils.setBit(__isset_bitfield, __ESTADOCIVILID_ISSET_ID, value);
  }

  public boolean isEstrangeiro() {
    return this.estrangeiro;
  }

  public void setEstrangeiro(boolean estrangeiro) {
    this.estrangeiro = estrangeiro;
    setEstrangeiroIsSet(true);
  }

  public void unsetEstrangeiro() {
    __isset_bitfield = EncodingUtils.clearBit(__isset_bitfield, __ESTRANGEIRO_ISSET_ID);
  }

  /** Returns true if field estrangeiro is set (has been assigned a value) and false otherwise */
  public boolean isSetEstrangeiro() {
    return EncodingUtils.testBit(__isset_bitfield, __ESTRANGEIRO_ISSET_ID);
  }

  public void setEstrangeiroIsSet(boolean value) {
    __isset_bitfield = EncodingUtils.setBit(__isset_bitfield, __ESTRANGEIRO_ISSET_ID, value);
  }

  public long getEtniaId() {
    return this.etniaId;
  }

  public void setEtniaId(long etniaId) {
    this.etniaId = etniaId;
    setEtniaIdIsSet(true);
  }

  public void unsetEtniaId() {
    __isset_bitfield = EncodingUtils.clearBit(__isset_bitfield, __ETNIAID_ISSET_ID);
  }

  /** Returns true if field etniaId is set (has been assigned a value) and false otherwise */
  public boolean isSetEtniaId() {
    return EncodingUtils.testBit(__isset_bitfield, __ETNIAID_ISSET_ID);
  }

  public void setEtniaIdIsSet(boolean value) {
    __isset_bitfield = EncodingUtils.setBit(__isset_bitfield, __ETNIAID_ISSET_ID, value);
  }

  public boolean isFaleceu() {
    return this.faleceu;
  }

  public void setFaleceu(boolean faleceu) {
    this.faleceu = faleceu;
    setFaleceuIsSet(true);
  }

  public void unsetFaleceu() {
    __isset_bitfield = EncodingUtils.clearBit(__isset_bitfield, __FALECEU_ISSET_ID);
  }

  /** Returns true if field faleceu is set (has been assigned a value) and false otherwise */
  public boolean isSetFaleceu() {
    return EncodingUtils.testBit(__isset_bitfield, __FALECEU_ISSET_ID);
  }

  public void setFaleceuIsSet(boolean value) {
    __isset_bitfield = EncodingUtils.setBit(__isset_bitfield, __FALECEU_ISSET_ID, value);
  }

  public String getMunicipioNascimentoCep() {
    return this.municipioNascimentoCep;
  }

  public void setMunicipioNascimentoCep(String municipioNascimentoCep) {
    this.municipioNascimentoCep = municipioNascimentoCep;
  }

  public void unsetMunicipioNascimentoCep() {
    this.municipioNascimentoCep = null;
  }

  /** Returns true if field municipioNascimentoCep is set (has been assigned a value) and false otherwise */
  public boolean isSetMunicipioNascimentoCep() {
    return this.municipioNascimentoCep != null;
  }

  public void setMunicipioNascimentoCepIsSet(boolean value) {
    if (!value) {
      this.municipioNascimentoCep = null;
    }
  }

  public String getMunicipioNascimentoDne() {
    return this.municipioNascimentoDne;
  }

  public void setMunicipioNascimentoDne(String municipioNascimentoDne) {
    this.municipioNascimentoDne = municipioNascimentoDne;
  }

  public void unsetMunicipioNascimentoDne() {
    this.municipioNascimentoDne = null;
  }

  /** Returns true if field municipioNascimentoDne is set (has been assigned a value) and false otherwise */
  public boolean isSetMunicipioNascimentoDne() {
    return this.municipioNascimentoDne != null;
  }

  public void setMunicipioNascimentoDneIsSet(boolean value) {
    if (!value) {
      this.municipioNascimentoDne = null;
    }
  }

  public String getMunicipioNascimentoIbge() {
    return this.municipioNascimentoIbge;
  }

  public void setMunicipioNascimentoIbge(String municipioNascimentoIbge) {
    this.municipioNascimentoIbge = municipioNascimentoIbge;
  }

  public void unsetMunicipioNascimentoIbge() {
    this.municipioNascimentoIbge = null;
  }

  /** Returns true if field municipioNascimentoIbge is set (has been assigned a value) and false otherwise */
  public boolean isSetMunicipioNascimentoIbge() {
    return this.municipioNascimentoIbge != null;
  }

  public void setMunicipioNascimentoIbgeIsSet(boolean value) {
    if (!value) {
      this.municipioNascimentoIbge = null;
    }
  }

  public String getNisPisPasep() {
    return this.nisPisPasep;
  }

  public void setNisPisPasep(String nisPisPasep) {
    this.nisPisPasep = nisPisPasep;
  }

  public void unsetNisPisPasep() {
    this.nisPisPasep = null;
  }

  /** Returns true if field nisPisPasep is set (has been assigned a value) and false otherwise */
  public boolean isSetNisPisPasep() {
    return this.nisPisPasep != null;
  }

  public void setNisPisPasepIsSet(boolean value) {
    if (!value) {
      this.nisPisPasep = null;
    }
  }

  public String getNomeCompleto() {
    return this.nomeCompleto;
  }

  public void setNomeCompleto(String nomeCompleto) {
    this.nomeCompleto = nomeCompleto;
  }

  public void unsetNomeCompleto() {
    this.nomeCompleto = null;
  }

  /** Returns true if field nomeCompleto is set (has been assigned a value) and false otherwise */
  public boolean isSetNomeCompleto() {
    return this.nomeCompleto != null;
  }

  public void setNomeCompletoIsSet(boolean value) {
    if (!value) {
      this.nomeCompleto = null;
    }
  }

  public String getNomeSocial() {
    return this.nomeSocial;
  }

  public void setNomeSocial(String nomeSocial) {
    this.nomeSocial = nomeSocial;
  }

  public void unsetNomeSocial() {
    this.nomeSocial = null;
  }

  /** Returns true if field nomeSocial is set (has been assigned a value) and false otherwise */
  public boolean isSetNomeSocial() {
    return this.nomeSocial != null;
  }

  public void setNomeSocialIsSet(boolean value) {
    if (!value) {
      this.nomeSocial = null;
    }
  }

  public String getNumeroProntuario() {
    return this.numeroProntuario;
  }

  public void setNumeroProntuario(String numeroProntuario) {
    this.numeroProntuario = numeroProntuario;
  }

  public void unsetNumeroProntuario() {
    this.numeroProntuario = null;
  }

  /** Returns true if field numeroProntuario is set (has been assigned a value) and false otherwise */
  public boolean isSetNumeroProntuario() {
    return this.numeroProntuario != null;
  }

  public void setNumeroProntuarioIsSet(boolean value) {
    if (!value) {
      this.numeroProntuario = null;
    }
  }

  public String getNumeroProntuarioCnes() {
    return this.numeroProntuarioCnes;
  }

  public void setNumeroProntuarioCnes(String numeroProntuarioCnes) {
    this.numeroProntuarioCnes = numeroProntuarioCnes;
  }

  public void unsetNumeroProntuarioCnes() {
    this.numeroProntuarioCnes = null;
  }

  /** Returns true if field numeroProntuarioCnes is set (has been assigned a value) and false otherwise */
  public boolean isSetNumeroProntuarioCnes() {
    return this.numeroProntuarioCnes != null;
  }

  public void setNumeroProntuarioCnesIsSet(boolean value) {
    if (!value) {
      this.numeroProntuarioCnes = null;
    }
  }

  public long getRacaCorId() {
    return this.racaCorId;
  }

  public void setRacaCorId(long racaCorId) {
    this.racaCorId = racaCorId;
    setRacaCorIdIsSet(true);
  }

  public void unsetRacaCorId() {
    __isset_bitfield = EncodingUtils.clearBit(__isset_bitfield, __RACACORID_ISSET_ID);
  }

  /** Returns true if field racaCorId is set (has been assigned a value) and false otherwise */
  public boolean isSetRacaCorId() {
    return EncodingUtils.testBit(__isset_bitfield, __RACACORID_ISSET_ID);
  }

  public void setRacaCorIdIsSet(boolean value) {
    __isset_bitfield = EncodingUtils.setBit(__isset_bitfield, __RACACORID_ISSET_ID, value);
  }

  /**
   * 
   * @see SexoThrift
   */
  public SexoThrift getSexo() {
    return this.sexo;
  }

  /**
   * 
   * @see SexoThrift
   */
  public void setSexo(SexoThrift sexo) {
    this.sexo = sexo;
  }

  public void unsetSexo() {
    this.sexo = null;
  }

  /** Returns true if field sexo is set (has been assigned a value) and false otherwise */
  public boolean isSetSexo() {
    return this.sexo != null;
  }

  public void setSexoIsSet(boolean value) {
    if (!value) {
      this.sexo = null;
    }
  }

  public String getTelefoneCelular() {
    return this.telefoneCelular;
  }

  public void setTelefoneCelular(String telefoneCelular) {
    this.telefoneCelular = telefoneCelular;
  }

  public void unsetTelefoneCelular() {
    this.telefoneCelular = null;
  }

  /** Returns true if field telefoneCelular is set (has been assigned a value) and false otherwise */
  public boolean isSetTelefoneCelular() {
    return this.telefoneCelular != null;
  }

  public void setTelefoneCelularIsSet(boolean value) {
    if (!value) {
      this.telefoneCelular = null;
    }
  }

  public String getTelefoneContato() {
    return this.telefoneContato;
  }

  public void setTelefoneContato(String telefoneContato) {
    this.telefoneContato = telefoneContato;
  }

  public void unsetTelefoneContato() {
    this.telefoneContato = null;
  }

  /** Returns true if field telefoneContato is set (has been assigned a value) and false otherwise */
  public boolean isSetTelefoneContato() {
    return this.telefoneContato != null;
  }

  public void setTelefoneContatoIsSet(boolean value) {
    if (!value) {
      this.telefoneContato = null;
    }
  }

  public String getTelefoneResidencial() {
    return this.telefoneResidencial;
  }

  public void setTelefoneResidencial(String telefoneResidencial) {
    this.telefoneResidencial = telefoneResidencial;
  }

  public void unsetTelefoneResidencial() {
    this.telefoneResidencial = null;
  }

  /** Returns true if field telefoneResidencial is set (has been assigned a value) and false otherwise */
  public boolean isSetTelefoneResidencial() {
    return this.telefoneResidencial != null;
  }

  public void setTelefoneResidencialIsSet(boolean value) {
    if (!value) {
      this.telefoneResidencial = null;
    }
  }

  /**
   * 
   * @see TipoSanguineoThrift
   */
  public TipoSanguineoThrift getTipoSanguineo() {
    return this.tipoSanguineo;
  }

  /**
   * 
   * @see TipoSanguineoThrift
   */
  public void setTipoSanguineo(TipoSanguineoThrift tipoSanguineo) {
    this.tipoSanguineo = tipoSanguineo;
  }

  public void unsetTipoSanguineo() {
    this.tipoSanguineo = null;
  }

  /** Returns true if field tipoSanguineo is set (has been assigned a value) and false otherwise */
  public boolean isSetTipoSanguineo() {
    return this.tipoSanguineo != null;
  }

  public void setTipoSanguineoIsSet(boolean value) {
    if (!value) {
      this.tipoSanguineo = null;
    }
  }

  public String getCboNumero() {
    return this.cboNumero;
  }

  public void setCboNumero(String cboNumero) {
    this.cboNumero = cboNumero;
  }

  public void unsetCboNumero() {
    this.cboNumero = null;
  }

  /** Returns true if field cboNumero is set (has been assigned a value) and false otherwise */
  public boolean isSetCboNumero() {
    return this.cboNumero != null;
  }

  public void setCboNumeroIsSet(boolean value) {
    if (!value) {
      this.cboNumero = null;
    }
  }

  public void setFieldValue(_Fields field, Object value) {
    switch (field) {
    case NAO_POSSUI_CNS:
      if (value == null) {
        unsetNaoPossuiCns();
      } else {
        setNaoPossuiCns((Boolean)value);
      }
      break;

    case CNS:
      if (value == null) {
        unsetCns();
      } else {
        setCns((String)value);
      }
      break;

    case CPF:
      if (value == null) {
        unsetCpf();
      } else {
        setCpf((String)value);
      }
      break;

    case DATA_NASCIMENTO:
      if (value == null) {
        unsetDataNascimento();
      } else {
        setDataNascimento((Long)value);
      }
      break;

    case DESCONHECE_NOME_MAE:
      if (value == null) {
        unsetDesconheceNomeMae();
      } else {
        setDesconheceNomeMae((Boolean)value);
      }
      break;

    case NOME_MAE:
      if (value == null) {
        unsetNomeMae();
      } else {
        setNomeMae((String)value);
      }
      break;

    case EMAIL:
      if (value == null) {
        unsetEmail();
      } else {
        setEmail((String)value);
      }
      break;

    case ENDERECO:
      if (value == null) {
        unsetEndereco();
      } else {
        setEndereco((EnderecoTransportThrift)value);
      }
      break;

    case ESCOLARIDADE_ID:
      if (value == null) {
        unsetEscolaridadeId();
      } else {
        setEscolaridadeId((Long)value);
      }
      break;

    case ESTADO_CIVIL_ID:
      if (value == null) {
        unsetEstadoCivilId();
      } else {
        setEstadoCivilId((Long)value);
      }
      break;

    case ESTRANGEIRO:
      if (value == null) {
        unsetEstrangeiro();
      } else {
        setEstrangeiro((Boolean)value);
      }
      break;

    case ETNIA_ID:
      if (value == null) {
        unsetEtniaId();
      } else {
        setEtniaId((Long)value);
      }
      break;

    case FALECEU:
      if (value == null) {
        unsetFaleceu();
      } else {
        setFaleceu((Boolean)value);
      }
      break;

    case MUNICIPIO_NASCIMENTO_CEP:
      if (value == null) {
        unsetMunicipioNascimentoCep();
      } else {
        setMunicipioNascimentoCep((String)value);
      }
      break;

    case MUNICIPIO_NASCIMENTO_DNE:
      if (value == null) {
        unsetMunicipioNascimentoDne();
      } else {
        setMunicipioNascimentoDne((String)value);
      }
      break;

    case MUNICIPIO_NASCIMENTO_IBGE:
      if (value == null) {
        unsetMunicipioNascimentoIbge();
      } else {
        setMunicipioNascimentoIbge((String)value);
      }
      break;

    case NIS_PIS_PASEP:
      if (value == null) {
        unsetNisPisPasep();
      } else {
        setNisPisPasep((String)value);
      }
      break;

    case NOME_COMPLETO:
      if (value == null) {
        unsetNomeCompleto();
      } else {
        setNomeCompleto((String)value);
      }
      break;

    case NOME_SOCIAL:
      if (value == null) {
        unsetNomeSocial();
      } else {
        setNomeSocial((String)value);
      }
      break;

    case NUMERO_PRONTUARIO:
      if (value == null) {
        unsetNumeroProntuario();
      } else {
        setNumeroProntuario((String)value);
      }
      break;

    case NUMERO_PRONTUARIO_CNES:
      if (value == null) {
        unsetNumeroProntuarioCnes();
      } else {
        setNumeroProntuarioCnes((String)value);
      }
      break;

    case RACA_COR_ID:
      if (value == null) {
        unsetRacaCorId();
      } else {
        setRacaCorId((Long)value);
      }
      break;

    case SEXO:
      if (value == null) {
        unsetSexo();
      } else {
        setSexo((SexoThrift)value);
      }
      break;

    case TELEFONE_CELULAR:
      if (value == null) {
        unsetTelefoneCelular();
      } else {
        setTelefoneCelular((String)value);
      }
      break;

    case TELEFONE_CONTATO:
      if (value == null) {
        unsetTelefoneContato();
      } else {
        setTelefoneContato((String)value);
      }
      break;

    case TELEFONE_RESIDENCIAL:
      if (value == null) {
        unsetTelefoneResidencial();
      } else {
        setTelefoneResidencial((String)value);
      }
      break;

    case TIPO_SANGUINEO:
      if (value == null) {
        unsetTipoSanguineo();
      } else {
        setTipoSanguineo((TipoSanguineoThrift)value);
      }
      break;

    case CBO_NUMERO:
      if (value == null) {
        unsetCboNumero();
      } else {
        setCboNumero((String)value);
      }
      break;

    }
  }

  public Object getFieldValue(_Fields field) {
    switch (field) {
    case NAO_POSSUI_CNS:
      return Boolean.valueOf(isNaoPossuiCns());

    case CNS:
      return getCns();

    case CPF:
      return getCpf();

    case DATA_NASCIMENTO:
      return Long.valueOf(getDataNascimento());

    case DESCONHECE_NOME_MAE:
      return Boolean.valueOf(isDesconheceNomeMae());

    case NOME_MAE:
      return getNomeMae();

    case EMAIL:
      return getEmail();

    case ENDERECO:
      return getEndereco();

    case ESCOLARIDADE_ID:
      return Long.valueOf(getEscolaridadeId());

    case ESTADO_CIVIL_ID:
      return Long.valueOf(getEstadoCivilId());

    case ESTRANGEIRO:
      return Boolean.valueOf(isEstrangeiro());

    case ETNIA_ID:
      return Long.valueOf(getEtniaId());

    case FALECEU:
      return Boolean.valueOf(isFaleceu());

    case MUNICIPIO_NASCIMENTO_CEP:
      return getMunicipioNascimentoCep();

    case MUNICIPIO_NASCIMENTO_DNE:
      return getMunicipioNascimentoDne();

    case MUNICIPIO_NASCIMENTO_IBGE:
      return getMunicipioNascimentoIbge();

    case NIS_PIS_PASEP:
      return getNisPisPasep();

    case NOME_COMPLETO:
      return getNomeCompleto();

    case NOME_SOCIAL:
      return getNomeSocial();

    case NUMERO_PRONTUARIO:
      return getNumeroProntuario();

    case NUMERO_PRONTUARIO_CNES:
      return getNumeroProntuarioCnes();

    case RACA_COR_ID:
      return Long.valueOf(getRacaCorId());

    case SEXO:
      return getSexo();

    case TELEFONE_CELULAR:
      return getTelefoneCelular();

    case TELEFONE_CONTATO:
      return getTelefoneContato();

    case TELEFONE_RESIDENCIAL:
      return getTelefoneResidencial();

    case TIPO_SANGUINEO:
      return getTipoSanguineo();

    case CBO_NUMERO:
      return getCboNumero();

    }
    throw new IllegalStateException();
  }

  /** Returns true if field corresponding to fieldID is set (has been assigned a value) and false otherwise */
  public boolean isSet(_Fields field) {
    if (field == null) {
      throw new IllegalArgumentException();
    }

    switch (field) {
    case NAO_POSSUI_CNS:
      return isSetNaoPossuiCns();
    case CNS:
      return isSetCns();
    case CPF:
      return isSetCpf();
    case DATA_NASCIMENTO:
      return isSetDataNascimento();
    case DESCONHECE_NOME_MAE:
      return isSetDesconheceNomeMae();
    case NOME_MAE:
      return isSetNomeMae();
    case EMAIL:
      return isSetEmail();
    case ENDERECO:
      return isSetEndereco();
    case ESCOLARIDADE_ID:
      return isSetEscolaridadeId();
    case ESTADO_CIVIL_ID:
      return isSetEstadoCivilId();
    case ESTRANGEIRO:
      return isSetEstrangeiro();
    case ETNIA_ID:
      return isSetEtniaId();
    case FALECEU:
      return isSetFaleceu();
    case MUNICIPIO_NASCIMENTO_CEP:
      return isSetMunicipioNascimentoCep();
    case MUNICIPIO_NASCIMENTO_DNE:
      return isSetMunicipioNascimentoDne();
    case MUNICIPIO_NASCIMENTO_IBGE:
      return isSetMunicipioNascimentoIbge();
    case NIS_PIS_PASEP:
      return isSetNisPisPasep();
    case NOME_COMPLETO:
      return isSetNomeCompleto();
    case NOME_SOCIAL:
      return isSetNomeSocial();
    case NUMERO_PRONTUARIO:
      return isSetNumeroProntuario();
    case NUMERO_PRONTUARIO_CNES:
      return isSetNumeroProntuarioCnes();
    case RACA_COR_ID:
      return isSetRacaCorId();
    case SEXO:
      return isSetSexo();
    case TELEFONE_CELULAR:
      return isSetTelefoneCelular();
    case TELEFONE_CONTATO:
      return isSetTelefoneContato();
    case TELEFONE_RESIDENCIAL:
      return isSetTelefoneResidencial();
    case TIPO_SANGUINEO:
      return isSetTipoSanguineo();
    case CBO_NUMERO:
      return isSetCboNumero();
    }
    throw new IllegalStateException();
  }

  @Override
  public boolean equals(Object that) {
    if (that == null)
      return false;
    if (that instanceof CidadaoTransportThrift)
      return this.equals((CidadaoTransportThrift)that);
    return false;
  }

  public boolean equals(CidadaoTransportThrift that) {
    if (that == null)
      return false;

    boolean this_present_naoPossuiCns = true;
    boolean that_present_naoPossuiCns = true;
    if (this_present_naoPossuiCns || that_present_naoPossuiCns) {
      if (!(this_present_naoPossuiCns && that_present_naoPossuiCns))
        return false;
      if (this.naoPossuiCns != that.naoPossuiCns)
        return false;
    }

    boolean this_present_cns = true && this.isSetCns();
    boolean that_present_cns = true && that.isSetCns();
    if (this_present_cns || that_present_cns) {
      if (!(this_present_cns && that_present_cns))
        return false;
      if (!this.cns.equals(that.cns))
        return false;
    }

    boolean this_present_cpf = true && this.isSetCpf();
    boolean that_present_cpf = true && that.isSetCpf();
    if (this_present_cpf || that_present_cpf) {
      if (!(this_present_cpf && that_present_cpf))
        return false;
      if (!this.cpf.equals(that.cpf))
        return false;
    }

    boolean this_present_dataNascimento = true;
    boolean that_present_dataNascimento = true;
    if (this_present_dataNascimento || that_present_dataNascimento) {
      if (!(this_present_dataNascimento && that_present_dataNascimento))
        return false;
      if (this.dataNascimento != that.dataNascimento)
        return false;
    }

    boolean this_present_desconheceNomeMae = true;
    boolean that_present_desconheceNomeMae = true;
    if (this_present_desconheceNomeMae || that_present_desconheceNomeMae) {
      if (!(this_present_desconheceNomeMae && that_present_desconheceNomeMae))
        return false;
      if (this.desconheceNomeMae != that.desconheceNomeMae)
        return false;
    }

    boolean this_present_nomeMae = true && this.isSetNomeMae();
    boolean that_present_nomeMae = true && that.isSetNomeMae();
    if (this_present_nomeMae || that_present_nomeMae) {
      if (!(this_present_nomeMae && that_present_nomeMae))
        return false;
      if (!this.nomeMae.equals(that.nomeMae))
        return false;
    }

    boolean this_present_email = true && this.isSetEmail();
    boolean that_present_email = true && that.isSetEmail();
    if (this_present_email || that_present_email) {
      if (!(this_present_email && that_present_email))
        return false;
      if (!this.email.equals(that.email))
        return false;
    }

    boolean this_present_endereco = true && this.isSetEndereco();
    boolean that_present_endereco = true && that.isSetEndereco();
    if (this_present_endereco || that_present_endereco) {
      if (!(this_present_endereco && that_present_endereco))
        return false;
      if (!this.endereco.equals(that.endereco))
        return false;
    }

    boolean this_present_escolaridadeId = true && this.isSetEscolaridadeId();
    boolean that_present_escolaridadeId = true && that.isSetEscolaridadeId();
    if (this_present_escolaridadeId || that_present_escolaridadeId) {
      if (!(this_present_escolaridadeId && that_present_escolaridadeId))
        return false;
      if (this.escolaridadeId != that.escolaridadeId)
        return false;
    }

    boolean this_present_estadoCivilId = true && this.isSetEstadoCivilId();
    boolean that_present_estadoCivilId = true && that.isSetEstadoCivilId();
    if (this_present_estadoCivilId || that_present_estadoCivilId) {
      if (!(this_present_estadoCivilId && that_present_estadoCivilId))
        return false;
      if (this.estadoCivilId != that.estadoCivilId)
        return false;
    }

    boolean this_present_estrangeiro = true;
    boolean that_present_estrangeiro = true;
    if (this_present_estrangeiro || that_present_estrangeiro) {
      if (!(this_present_estrangeiro && that_present_estrangeiro))
        return false;
      if (this.estrangeiro != that.estrangeiro)
        return false;
    }

    boolean this_present_etniaId = true && this.isSetEtniaId();
    boolean that_present_etniaId = true && that.isSetEtniaId();
    if (this_present_etniaId || that_present_etniaId) {
      if (!(this_present_etniaId && that_present_etniaId))
        return false;
      if (this.etniaId != that.etniaId)
        return false;
    }

    boolean this_present_faleceu = true && this.isSetFaleceu();
    boolean that_present_faleceu = true && that.isSetFaleceu();
    if (this_present_faleceu || that_present_faleceu) {
      if (!(this_present_faleceu && that_present_faleceu))
        return false;
      if (this.faleceu != that.faleceu)
        return false;
    }

    boolean this_present_municipioNascimentoCep = true && this.isSetMunicipioNascimentoCep();
    boolean that_present_municipioNascimentoCep = true && that.isSetMunicipioNascimentoCep();
    if (this_present_municipioNascimentoCep || that_present_municipioNascimentoCep) {
      if (!(this_present_municipioNascimentoCep && that_present_municipioNascimentoCep))
        return false;
      if (!this.municipioNascimentoCep.equals(that.municipioNascimentoCep))
        return false;
    }

    boolean this_present_municipioNascimentoDne = true && this.isSetMunicipioNascimentoDne();
    boolean that_present_municipioNascimentoDne = true && that.isSetMunicipioNascimentoDne();
    if (this_present_municipioNascimentoDne || that_present_municipioNascimentoDne) {
      if (!(this_present_municipioNascimentoDne && that_present_municipioNascimentoDne))
        return false;
      if (!this.municipioNascimentoDne.equals(that.municipioNascimentoDne))
        return false;
    }

    boolean this_present_municipioNascimentoIbge = true && this.isSetMunicipioNascimentoIbge();
    boolean that_present_municipioNascimentoIbge = true && that.isSetMunicipioNascimentoIbge();
    if (this_present_municipioNascimentoIbge || that_present_municipioNascimentoIbge) {
      if (!(this_present_municipioNascimentoIbge && that_present_municipioNascimentoIbge))
        return false;
      if (!this.municipioNascimentoIbge.equals(that.municipioNascimentoIbge))
        return false;
    }

    boolean this_present_nisPisPasep = true && this.isSetNisPisPasep();
    boolean that_present_nisPisPasep = true && that.isSetNisPisPasep();
    if (this_present_nisPisPasep || that_present_nisPisPasep) {
      if (!(this_present_nisPisPasep && that_present_nisPisPasep))
        return false;
      if (!this.nisPisPasep.equals(that.nisPisPasep))
        return false;
    }

    boolean this_present_nomeCompleto = true && this.isSetNomeCompleto();
    boolean that_present_nomeCompleto = true && that.isSetNomeCompleto();
    if (this_present_nomeCompleto || that_present_nomeCompleto) {
      if (!(this_present_nomeCompleto && that_present_nomeCompleto))
        return false;
      if (!this.nomeCompleto.equals(that.nomeCompleto))
        return false;
    }

    boolean this_present_nomeSocial = true && this.isSetNomeSocial();
    boolean that_present_nomeSocial = true && that.isSetNomeSocial();
    if (this_present_nomeSocial || that_present_nomeSocial) {
      if (!(this_present_nomeSocial && that_present_nomeSocial))
        return false;
      if (!this.nomeSocial.equals(that.nomeSocial))
        return false;
    }

    boolean this_present_numeroProntuario = true && this.isSetNumeroProntuario();
    boolean that_present_numeroProntuario = true && that.isSetNumeroProntuario();
    if (this_present_numeroProntuario || that_present_numeroProntuario) {
      if (!(this_present_numeroProntuario && that_present_numeroProntuario))
        return false;
      if (!this.numeroProntuario.equals(that.numeroProntuario))
        return false;
    }

    boolean this_present_numeroProntuarioCnes = true && this.isSetNumeroProntuarioCnes();
    boolean that_present_numeroProntuarioCnes = true && that.isSetNumeroProntuarioCnes();
    if (this_present_numeroProntuarioCnes || that_present_numeroProntuarioCnes) {
      if (!(this_present_numeroProntuarioCnes && that_present_numeroProntuarioCnes))
        return false;
      if (!this.numeroProntuarioCnes.equals(that.numeroProntuarioCnes))
        return false;
    }

    boolean this_present_racaCorId = true;
    boolean that_present_racaCorId = true;
    if (this_present_racaCorId || that_present_racaCorId) {
      if (!(this_present_racaCorId && that_present_racaCorId))
        return false;
      if (this.racaCorId != that.racaCorId)
        return false;
    }

    boolean this_present_sexo = true && this.isSetSexo();
    boolean that_present_sexo = true && that.isSetSexo();
    if (this_present_sexo || that_present_sexo) {
      if (!(this_present_sexo && that_present_sexo))
        return false;
      if (!this.sexo.equals(that.sexo))
        return false;
    }

    boolean this_present_telefoneCelular = true && this.isSetTelefoneCelular();
    boolean that_present_telefoneCelular = true && that.isSetTelefoneCelular();
    if (this_present_telefoneCelular || that_present_telefoneCelular) {
      if (!(this_present_telefoneCelular && that_present_telefoneCelular))
        return false;
      if (!this.telefoneCelular.equals(that.telefoneCelular))
        return false;
    }

    boolean this_present_telefoneContato = true && this.isSetTelefoneContato();
    boolean that_present_telefoneContato = true && that.isSetTelefoneContato();
    if (this_present_telefoneContato || that_present_telefoneContato) {
      if (!(this_present_telefoneContato && that_present_telefoneContato))
        return false;
      if (!this.telefoneContato.equals(that.telefoneContato))
        return false;
    }

    boolean this_present_telefoneResidencial = true && this.isSetTelefoneResidencial();
    boolean that_present_telefoneResidencial = true && that.isSetTelefoneResidencial();
    if (this_present_telefoneResidencial || that_present_telefoneResidencial) {
      if (!(this_present_telefoneResidencial && that_present_telefoneResidencial))
        return false;
      if (!this.telefoneResidencial.equals(that.telefoneResidencial))
        return false;
    }

    boolean this_present_tipoSanguineo = true && this.isSetTipoSanguineo();
    boolean that_present_tipoSanguineo = true && that.isSetTipoSanguineo();
    if (this_present_tipoSanguineo || that_present_tipoSanguineo) {
      if (!(this_present_tipoSanguineo && that_present_tipoSanguineo))
        return false;
      if (!this.tipoSanguineo.equals(that.tipoSanguineo))
        return false;
    }

    boolean this_present_cboNumero = true && this.isSetCboNumero();
    boolean that_present_cboNumero = true && that.isSetCboNumero();
    if (this_present_cboNumero || that_present_cboNumero) {
      if (!(this_present_cboNumero && that_present_cboNumero))
        return false;
      if (!this.cboNumero.equals(that.cboNumero))
        return false;
    }

    return true;
  }

  @Override
  public int hashCode() {
    return 0;
  }

  public int compareTo(CidadaoTransportThrift other) {
    if (!getClass().equals(other.getClass())) {
      return getClass().getName().compareTo(other.getClass().getName());
    }

    int lastComparison = 0;
    CidadaoTransportThrift typedOther = (CidadaoTransportThrift)other;

    lastComparison = Boolean.valueOf(isSetNaoPossuiCns()).compareTo(typedOther.isSetNaoPossuiCns());
    if (lastComparison != 0) {
      return lastComparison;
    }
    if (isSetNaoPossuiCns()) {
      lastComparison = org.apache.thrift.TBaseHelper.compareTo(this.naoPossuiCns, typedOther.naoPossuiCns);
      if (lastComparison != 0) {
        return lastComparison;
      }
    }
    lastComparison = Boolean.valueOf(isSetCns()).compareTo(typedOther.isSetCns());
    if (lastComparison != 0) {
      return lastComparison;
    }
    if (isSetCns()) {
      lastComparison = org.apache.thrift.TBaseHelper.compareTo(this.cns, typedOther.cns);
      if (lastComparison != 0) {
        return lastComparison;
      }
    }
    lastComparison = Boolean.valueOf(isSetCpf()).compareTo(typedOther.isSetCpf());
    if (lastComparison != 0) {
      return lastComparison;
    }
    if (isSetCpf()) {
      lastComparison = org.apache.thrift.TBaseHelper.compareTo(this.cpf, typedOther.cpf);
      if (lastComparison != 0) {
        return lastComparison;
      }
    }
    lastComparison = Boolean.valueOf(isSetDataNascimento()).compareTo(typedOther.isSetDataNascimento());
    if (lastComparison != 0) {
      return lastComparison;
    }
    if (isSetDataNascimento()) {
      lastComparison = org.apache.thrift.TBaseHelper.compareTo(this.dataNascimento, typedOther.dataNascimento);
      if (lastComparison != 0) {
        return lastComparison;
      }
    }
    lastComparison = Boolean.valueOf(isSetDesconheceNomeMae()).compareTo(typedOther.isSetDesconheceNomeMae());
    if (lastComparison != 0) {
      return lastComparison;
    }
    if (isSetDesconheceNomeMae()) {
      lastComparison = org.apache.thrift.TBaseHelper.compareTo(this.desconheceNomeMae, typedOther.desconheceNomeMae);
      if (lastComparison != 0) {
        return lastComparison;
      }
    }
    lastComparison = Boolean.valueOf(isSetNomeMae()).compareTo(typedOther.isSetNomeMae());
    if (lastComparison != 0) {
      return lastComparison;
    }
    if (isSetNomeMae()) {
      lastComparison = org.apache.thrift.TBaseHelper.compareTo(this.nomeMae, typedOther.nomeMae);
      if (lastComparison != 0) {
        return lastComparison;
      }
    }
    lastComparison = Boolean.valueOf(isSetEmail()).compareTo(typedOther.isSetEmail());
    if (lastComparison != 0) {
      return lastComparison;
    }
    if (isSetEmail()) {
      lastComparison = org.apache.thrift.TBaseHelper.compareTo(this.email, typedOther.email);
      if (lastComparison != 0) {
        return lastComparison;
      }
    }
    lastComparison = Boolean.valueOf(isSetEndereco()).compareTo(typedOther.isSetEndereco());
    if (lastComparison != 0) {
      return lastComparison;
    }
    if (isSetEndereco()) {
      lastComparison = org.apache.thrift.TBaseHelper.compareTo(this.endereco, typedOther.endereco);
      if (lastComparison != 0) {
        return lastComparison;
      }
    }
    lastComparison = Boolean.valueOf(isSetEscolaridadeId()).compareTo(typedOther.isSetEscolaridadeId());
    if (lastComparison != 0) {
      return lastComparison;
    }
    if (isSetEscolaridadeId()) {
      lastComparison = org.apache.thrift.TBaseHelper.compareTo(this.escolaridadeId, typedOther.escolaridadeId);
      if (lastComparison != 0) {
        return lastComparison;
      }
    }
    lastComparison = Boolean.valueOf(isSetEstadoCivilId()).compareTo(typedOther.isSetEstadoCivilId());
    if (lastComparison != 0) {
      return lastComparison;
    }
    if (isSetEstadoCivilId()) {
      lastComparison = org.apache.thrift.TBaseHelper.compareTo(this.estadoCivilId, typedOther.estadoCivilId);
      if (lastComparison != 0) {
        return lastComparison;
      }
    }
    lastComparison = Boolean.valueOf(isSetEstrangeiro()).compareTo(typedOther.isSetEstrangeiro());
    if (lastComparison != 0) {
      return lastComparison;
    }
    if (isSetEstrangeiro()) {
      lastComparison = org.apache.thrift.TBaseHelper.compareTo(this.estrangeiro, typedOther.estrangeiro);
      if (lastComparison != 0) {
        return lastComparison;
      }
    }
    lastComparison = Boolean.valueOf(isSetEtniaId()).compareTo(typedOther.isSetEtniaId());
    if (lastComparison != 0) {
      return lastComparison;
    }
    if (isSetEtniaId()) {
      lastComparison = org.apache.thrift.TBaseHelper.compareTo(this.etniaId, typedOther.etniaId);
      if (lastComparison != 0) {
        return lastComparison;
      }
    }
    lastComparison = Boolean.valueOf(isSetFaleceu()).compareTo(typedOther.isSetFaleceu());
    if (lastComparison != 0) {
      return lastComparison;
    }
    if (isSetFaleceu()) {
      lastComparison = org.apache.thrift.TBaseHelper.compareTo(this.faleceu, typedOther.faleceu);
      if (lastComparison != 0) {
        return lastComparison;
      }
    }
    lastComparison = Boolean.valueOf(isSetMunicipioNascimentoCep()).compareTo(typedOther.isSetMunicipioNascimentoCep());
    if (lastComparison != 0) {
      return lastComparison;
    }
    if (isSetMunicipioNascimentoCep()) {
      lastComparison = org.apache.thrift.TBaseHelper.compareTo(this.municipioNascimentoCep, typedOther.municipioNascimentoCep);
      if (lastComparison != 0) {
        return lastComparison;
      }
    }
    lastComparison = Boolean.valueOf(isSetMunicipioNascimentoDne()).compareTo(typedOther.isSetMunicipioNascimentoDne());
    if (lastComparison != 0) {
      return lastComparison;
    }
    if (isSetMunicipioNascimentoDne()) {
      lastComparison = org.apache.thrift.TBaseHelper.compareTo(this.municipioNascimentoDne, typedOther.municipioNascimentoDne);
      if (lastComparison != 0) {
        return lastComparison;
      }
    }
    lastComparison = Boolean.valueOf(isSetMunicipioNascimentoIbge()).compareTo(typedOther.isSetMunicipioNascimentoIbge());
    if (lastComparison != 0) {
      return lastComparison;
    }
    if (isSetMunicipioNascimentoIbge()) {
      lastComparison = org.apache.thrift.TBaseHelper.compareTo(this.municipioNascimentoIbge, typedOther.municipioNascimentoIbge);
      if (lastComparison != 0) {
        return lastComparison;
      }
    }
    lastComparison = Boolean.valueOf(isSetNisPisPasep()).compareTo(typedOther.isSetNisPisPasep());
    if (lastComparison != 0) {
      return lastComparison;
    }
    if (isSetNisPisPasep()) {
      lastComparison = org.apache.thrift.TBaseHelper.compareTo(this.nisPisPasep, typedOther.nisPisPasep);
      if (lastComparison != 0) {
        return lastComparison;
      }
    }
    lastComparison = Boolean.valueOf(isSetNomeCompleto()).compareTo(typedOther.isSetNomeCompleto());
    if (lastComparison != 0) {
      return lastComparison;
    }
    if (isSetNomeCompleto()) {
      lastComparison = org.apache.thrift.TBaseHelper.compareTo(this.nomeCompleto, typedOther.nomeCompleto);
      if (lastComparison != 0) {
        return lastComparison;
      }
    }
    lastComparison = Boolean.valueOf(isSetNomeSocial()).compareTo(typedOther.isSetNomeSocial());
    if (lastComparison != 0) {
      return lastComparison;
    }
    if (isSetNomeSocial()) {
      lastComparison = org.apache.thrift.TBaseHelper.compareTo(this.nomeSocial, typedOther.nomeSocial);
      if (lastComparison != 0) {
        return lastComparison;
      }
    }
    lastComparison = Boolean.valueOf(isSetNumeroProntuario()).compareTo(typedOther.isSetNumeroProntuario());
    if (lastComparison != 0) {
      return lastComparison;
    }
    if (isSetNumeroProntuario()) {
      lastComparison = org.apache.thrift.TBaseHelper.compareTo(this.numeroProntuario, typedOther.numeroProntuario);
      if (lastComparison != 0) {
        return lastComparison;
      }
    }
    lastComparison = Boolean.valueOf(isSetNumeroProntuarioCnes()).compareTo(typedOther.isSetNumeroProntuarioCnes());
    if (lastComparison != 0) {
      return lastComparison;
    }
    if (isSetNumeroProntuarioCnes()) {
      lastComparison = org.apache.thrift.TBaseHelper.compareTo(this.numeroProntuarioCnes, typedOther.numeroProntuarioCnes);
      if (lastComparison != 0) {
        return lastComparison;
      }
    }
    lastComparison = Boolean.valueOf(isSetRacaCorId()).compareTo(typedOther.isSetRacaCorId());
    if (lastComparison != 0) {
      return lastComparison;
    }
    if (isSetRacaCorId()) {
      lastComparison = org.apache.thrift.TBaseHelper.compareTo(this.racaCorId, typedOther.racaCorId);
      if (lastComparison != 0) {
        return lastComparison;
      }
    }
    lastComparison = Boolean.valueOf(isSetSexo()).compareTo(typedOther.isSetSexo());
    if (lastComparison != 0) {
      return lastComparison;
    }
    if (isSetSexo()) {
      lastComparison = org.apache.thrift.TBaseHelper.compareTo(this.sexo, typedOther.sexo);
      if (lastComparison != 0) {
        return lastComparison;
      }
    }
    lastComparison = Boolean.valueOf(isSetTelefoneCelular()).compareTo(typedOther.isSetTelefoneCelular());
    if (lastComparison != 0) {
      return lastComparison;
    }
    if (isSetTelefoneCelular()) {
      lastComparison = org.apache.thrift.TBaseHelper.compareTo(this.telefoneCelular, typedOther.telefoneCelular);
      if (lastComparison != 0) {
        return lastComparison;
      }
    }
    lastComparison = Boolean.valueOf(isSetTelefoneContato()).compareTo(typedOther.isSetTelefoneContato());
    if (lastComparison != 0) {
      return lastComparison;
    }
    if (isSetTelefoneContato()) {
      lastComparison = org.apache.thrift.TBaseHelper.compareTo(this.telefoneContato, typedOther.telefoneContato);
      if (lastComparison != 0) {
        return lastComparison;
      }
    }
    lastComparison = Boolean.valueOf(isSetTelefoneResidencial()).compareTo(typedOther.isSetTelefoneResidencial());
    if (lastComparison != 0) {
      return lastComparison;
    }
    if (isSetTelefoneResidencial()) {
      lastComparison = org.apache.thrift.TBaseHelper.compareTo(this.telefoneResidencial, typedOther.telefoneResidencial);
      if (lastComparison != 0) {
        return lastComparison;
      }
    }
    lastComparison = Boolean.valueOf(isSetTipoSanguineo()).compareTo(typedOther.isSetTipoSanguineo());
    if (lastComparison != 0) {
      return lastComparison;
    }
    if (isSetTipoSanguineo()) {
      lastComparison = org.apache.thrift.TBaseHelper.compareTo(this.tipoSanguineo, typedOther.tipoSanguineo);
      if (lastComparison != 0) {
        return lastComparison;
      }
    }
    lastComparison = Boolean.valueOf(isSetCboNumero()).compareTo(typedOther.isSetCboNumero());
    if (lastComparison != 0) {
      return lastComparison;
    }
    if (isSetCboNumero()) {
      lastComparison = org.apache.thrift.TBaseHelper.compareTo(this.cboNumero, typedOther.cboNumero);
      if (lastComparison != 0) {
        return lastComparison;
      }
    }
    return 0;
  }

  public _Fields fieldForId(int fieldId) {
    return _Fields.findByThriftId(fieldId);
  }

  public void read(org.apache.thrift.protocol.TProtocol iprot) throws org.apache.thrift.TException {
    schemes.get(iprot.getScheme()).getScheme().read(iprot, this);
  }

  public void write(org.apache.thrift.protocol.TProtocol oprot) throws org.apache.thrift.TException {
    schemes.get(oprot.getScheme()).getScheme().write(oprot, this);
  }

  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder("CidadaoTransportThrift(");
    boolean first = true;

    sb.append("naoPossuiCns:");
    sb.append(this.naoPossuiCns);
    first = false;
    if (!first) sb.append(", ");
    sb.append("cns:");
    if (this.cns == null) {
      sb.append("null");
    } else {
      sb.append(this.cns);
    }
    first = false;
    if (isSetCpf()) {
      if (!first) sb.append(", ");
      sb.append("cpf:");
      if (this.cpf == null) {
        sb.append("null");
      } else {
        sb.append(this.cpf);
      }
      first = false;
    }
    if (!first) sb.append(", ");
    sb.append("dataNascimento:");
    sb.append(this.dataNascimento);
    first = false;
    if (!first) sb.append(", ");
    sb.append("desconheceNomeMae:");
    sb.append(this.desconheceNomeMae);
    first = false;
    if (isSetNomeMae()) {
      if (!first) sb.append(", ");
      sb.append("nomeMae:");
      if (this.nomeMae == null) {
        sb.append("null");
      } else {
        sb.append(this.nomeMae);
      }
      first = false;
    }
    if (isSetEmail()) {
      if (!first) sb.append(", ");
      sb.append("email:");
      if (this.email == null) {
        sb.append("null");
      } else {
        sb.append(this.email);
      }
      first = false;
    }
    if (isSetEndereco()) {
      if (!first) sb.append(", ");
      sb.append("endereco:");
      if (this.endereco == null) {
        sb.append("null");
      } else {
        sb.append(this.endereco);
      }
      first = false;
    }
    if (isSetEscolaridadeId()) {
      if (!first) sb.append(", ");
      sb.append("escolaridadeId:");
      sb.append(this.escolaridadeId);
      first = false;
    }
    if (isSetEstadoCivilId()) {
      if (!first) sb.append(", ");
      sb.append("estadoCivilId:");
      sb.append(this.estadoCivilId);
      first = false;
    }
    if (!first) sb.append(", ");
    sb.append("estrangeiro:");
    sb.append(this.estrangeiro);
    first = false;
    if (isSetEtniaId()) {
      if (!first) sb.append(", ");
      sb.append("etniaId:");
      sb.append(this.etniaId);
      first = false;
    }
    if (isSetFaleceu()) {
      if (!first) sb.append(", ");
      sb.append("faleceu:");
      sb.append(this.faleceu);
      first = false;
    }
    if (!first) sb.append(", ");
    sb.append("municipioNascimentoCep:");
    if (this.municipioNascimentoCep == null) {
      sb.append("null");
    } else {
      sb.append(this.municipioNascimentoCep);
    }
    first = false;
    if (!first) sb.append(", ");
    sb.append("municipioNascimentoDne:");
    if (this.municipioNascimentoDne == null) {
      sb.append("null");
    } else {
      sb.append(this.municipioNascimentoDne);
    }
    first = false;
    if (isSetMunicipioNascimentoIbge()) {
      if (!first) sb.append(", ");
      sb.append("municipioNascimentoIbge:");
      if (this.municipioNascimentoIbge == null) {
        sb.append("null");
      } else {
        sb.append(this.municipioNascimentoIbge);
      }
      first = false;
    }
    if (isSetNisPisPasep()) {
      if (!first) sb.append(", ");
      sb.append("nisPisPasep:");
      if (this.nisPisPasep == null) {
        sb.append("null");
      } else {
        sb.append(this.nisPisPasep);
      }
      first = false;
    }
    if (!first) sb.append(", ");
    sb.append("nomeCompleto:");
    if (this.nomeCompleto == null) {
      sb.append("null");
    } else {
      sb.append(this.nomeCompleto);
    }
    first = false;
    if (isSetNomeSocial()) {
      if (!first) sb.append(", ");
      sb.append("nomeSocial:");
      if (this.nomeSocial == null) {
        sb.append("null");
      } else {
        sb.append(this.nomeSocial);
      }
      first = false;
    }
    if (isSetNumeroProntuario()) {
      if (!first) sb.append(", ");
      sb.append("numeroProntuario:");
      if (this.numeroProntuario == null) {
        sb.append("null");
      } else {
        sb.append(this.numeroProntuario);
      }
      first = false;
    }
    if (isSetNumeroProntuarioCnes()) {
      if (!first) sb.append(", ");
      sb.append("numeroProntuarioCnes:");
      if (this.numeroProntuarioCnes == null) {
        sb.append("null");
      } else {
        sb.append(this.numeroProntuarioCnes);
      }
      first = false;
    }
    if (!first) sb.append(", ");
    sb.append("racaCorId:");
    sb.append(this.racaCorId);
    first = false;
    if (!first) sb.append(", ");
    sb.append("sexo:");
    if (this.sexo == null) {
      sb.append("null");
    } else {
      sb.append(this.sexo);
    }
    first = false;
    if (isSetTelefoneCelular()) {
      if (!first) sb.append(", ");
      sb.append("telefoneCelular:");
      if (this.telefoneCelular == null) {
        sb.append("null");
      } else {
        sb.append(this.telefoneCelular);
      }
      first = false;
    }
    if (isSetTelefoneContato()) {
      if (!first) sb.append(", ");
      sb.append("telefoneContato:");
      if (this.telefoneContato == null) {
        sb.append("null");
      } else {
        sb.append(this.telefoneContato);
      }
      first = false;
    }
    if (isSetTelefoneResidencial()) {
      if (!first) sb.append(", ");
      sb.append("telefoneResidencial:");
      if (this.telefoneResidencial == null) {
        sb.append("null");
      } else {
        sb.append(this.telefoneResidencial);
      }
      first = false;
    }
    if (isSetTipoSanguineo()) {
      if (!first) sb.append(", ");
      sb.append("tipoSanguineo:");
      if (this.tipoSanguineo == null) {
        sb.append("null");
      } else {
        sb.append(this.tipoSanguineo);
      }
      first = false;
    }
    if (isSetCboNumero()) {
      if (!first) sb.append(", ");
      sb.append("cboNumero:");
      if (this.cboNumero == null) {
        sb.append("null");
      } else {
        sb.append(this.cboNumero);
      }
      first = false;
    }
    sb.append(")");
    return sb.toString();
  }

  public void validate() throws org.apache.thrift.TException {
    // check for required fields
    if (!isSetNaoPossuiCns()) {
      throw new org.apache.thrift.protocol.TProtocolException("Required field 'naoPossuiCns' is unset! Struct:" + toString());
    }

    if (!isSetCns()) {
      throw new org.apache.thrift.protocol.TProtocolException("Required field 'cns' is unset! Struct:" + toString());
    }

    if (!isSetDataNascimento()) {
      throw new org.apache.thrift.protocol.TProtocolException("Required field 'dataNascimento' is unset! Struct:" + toString());
    }

    if (!isSetDesconheceNomeMae()) {
      throw new org.apache.thrift.protocol.TProtocolException("Required field 'desconheceNomeMae' is unset! Struct:" + toString());
    }

    if (!isSetEstrangeiro()) {
      throw new org.apache.thrift.protocol.TProtocolException("Required field 'estrangeiro' is unset! Struct:" + toString());
    }

    if (!isSetMunicipioNascimentoCep()) {
      throw new org.apache.thrift.protocol.TProtocolException("Required field 'municipioNascimentoCep' is unset! Struct:" + toString());
    }

    if (!isSetMunicipioNascimentoDne()) {
      throw new org.apache.thrift.protocol.TProtocolException("Required field 'municipioNascimentoDne' is unset! Struct:" + toString());
    }

    if (!isSetNomeCompleto()) {
      throw new org.apache.thrift.protocol.TProtocolException("Required field 'nomeCompleto' is unset! Struct:" + toString());
    }

    if (!isSetRacaCorId()) {
      throw new org.apache.thrift.protocol.TProtocolException("Required field 'racaCorId' is unset! Struct:" + toString());
    }

    if (!isSetSexo()) {
      throw new org.apache.thrift.protocol.TProtocolException("Required field 'sexo' is unset! Struct:" + toString());
    }

    // check for sub-struct validity
    if (endereco != null) {
      endereco.validate();
    }
  }

  private void writeObject(java.io.ObjectOutputStream out) throws java.io.IOException {
    try {
      write(new org.apache.thrift.protocol.TCompactProtocol(new org.apache.thrift.transport.TIOStreamTransport(out)));
    } catch (org.apache.thrift.TException te) {
      throw new java.io.IOException(te);
    }
  }

  private void readObject(java.io.ObjectInputStream in) throws java.io.IOException, ClassNotFoundException {
    try {
      // it doesn't seem like you should have to do this, but java serialization is wacky, and doesn't call the default constructor.
      __isset_bitfield = 0;
      read(new org.apache.thrift.protocol.TCompactProtocol(new org.apache.thrift.transport.TIOStreamTransport(in)));
    } catch (org.apache.thrift.TException te) {
      throw new java.io.IOException(te);
    }
  }

  private static class CidadaoTransportThriftStandardSchemeFactory implements SchemeFactory {
    public CidadaoTransportThriftStandardScheme getScheme() {
      return new CidadaoTransportThriftStandardScheme();
    }
  }

  private static class CidadaoTransportThriftStandardScheme extends StandardScheme<CidadaoTransportThrift> {

    public void read(org.apache.thrift.protocol.TProtocol iprot, CidadaoTransportThrift struct) throws org.apache.thrift.TException {
      org.apache.thrift.protocol.TField schemeField;
      iprot.readStructBegin();
      while (true)
      {
        schemeField = iprot.readFieldBegin();
        if (schemeField.type == org.apache.thrift.protocol.TType.STOP) { 
          break;
        }
        switch (schemeField.id) {
          case 1: // NAO_POSSUI_CNS
            if (schemeField.type == org.apache.thrift.protocol.TType.BOOL) {
              struct.naoPossuiCns = iprot.readBool();
              struct.setNaoPossuiCnsIsSet(true);
            } else { 
              org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
            }
            break;
          case 2: // CNS
            if (schemeField.type == org.apache.thrift.protocol.TType.STRING) {
              struct.cns = iprot.readString();
              struct.setCnsIsSet(true);
            } else { 
              org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
            }
            break;
          case 3: // CPF
            if (schemeField.type == org.apache.thrift.protocol.TType.STRING) {
              struct.cpf = iprot.readString();
              struct.setCpfIsSet(true);
            } else { 
              org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
            }
            break;
          case 4: // DATA_NASCIMENTO
            if (schemeField.type == org.apache.thrift.protocol.TType.I64) {
              struct.dataNascimento = iprot.readI64();
              struct.setDataNascimentoIsSet(true);
            } else { 
              org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
            }
            break;
          case 5: // DESCONHECE_NOME_MAE
            if (schemeField.type == org.apache.thrift.protocol.TType.BOOL) {
              struct.desconheceNomeMae = iprot.readBool();
              struct.setDesconheceNomeMaeIsSet(true);
            } else { 
              org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
            }
            break;
          case 6: // NOME_MAE
            if (schemeField.type == org.apache.thrift.protocol.TType.STRING) {
              struct.nomeMae = iprot.readString();
              struct.setNomeMaeIsSet(true);
            } else { 
              org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
            }
            break;
          case 7: // EMAIL
            if (schemeField.type == org.apache.thrift.protocol.TType.STRING) {
              struct.email = iprot.readString();
              struct.setEmailIsSet(true);
            } else { 
              org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
            }
            break;
          case 8: // ENDERECO
            if (schemeField.type == org.apache.thrift.protocol.TType.STRUCT) {
              struct.endereco = new EnderecoTransportThrift();
              struct.endereco.read(iprot);
              struct.setEnderecoIsSet(true);
            } else { 
              org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
            }
            break;
          case 9: // ESCOLARIDADE_ID
            if (schemeField.type == org.apache.thrift.protocol.TType.I64) {
              struct.escolaridadeId = iprot.readI64();
              struct.setEscolaridadeIdIsSet(true);
            } else { 
              org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
            }
            break;
          case 10: // ESTADO_CIVIL_ID
            if (schemeField.type == org.apache.thrift.protocol.TType.I64) {
              struct.estadoCivilId = iprot.readI64();
              struct.setEstadoCivilIdIsSet(true);
            } else { 
              org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
            }
            break;
          case 11: // ESTRANGEIRO
            if (schemeField.type == org.apache.thrift.protocol.TType.BOOL) {
              struct.estrangeiro = iprot.readBool();
              struct.setEstrangeiroIsSet(true);
            } else { 
              org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
            }
            break;
          case 12: // ETNIA_ID
            if (schemeField.type == org.apache.thrift.protocol.TType.I64) {
              struct.etniaId = iprot.readI64();
              struct.setEtniaIdIsSet(true);
            } else { 
              org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
            }
            break;
          case 13: // FALECEU
            if (schemeField.type == org.apache.thrift.protocol.TType.BOOL) {
              struct.faleceu = iprot.readBool();
              struct.setFaleceuIsSet(true);
            } else { 
              org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
            }
            break;
          case 14: // MUNICIPIO_NASCIMENTO_CEP
            if (schemeField.type == org.apache.thrift.protocol.TType.STRING) {
              struct.municipioNascimentoCep = iprot.readString();
              struct.setMunicipioNascimentoCepIsSet(true);
            } else { 
              org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
            }
            break;
          case 15: // MUNICIPIO_NASCIMENTO_DNE
            if (schemeField.type == org.apache.thrift.protocol.TType.STRING) {
              struct.municipioNascimentoDne = iprot.readString();
              struct.setMunicipioNascimentoDneIsSet(true);
            } else { 
              org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
            }
            break;
          case 16: // MUNICIPIO_NASCIMENTO_IBGE
            if (schemeField.type == org.apache.thrift.protocol.TType.STRING) {
              struct.municipioNascimentoIbge = iprot.readString();
              struct.setMunicipioNascimentoIbgeIsSet(true);
            } else { 
              org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
            }
            break;
          case 17: // NIS_PIS_PASEP
            if (schemeField.type == org.apache.thrift.protocol.TType.STRING) {
              struct.nisPisPasep = iprot.readString();
              struct.setNisPisPasepIsSet(true);
            } else { 
              org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
            }
            break;
          case 18: // NOME_COMPLETO
            if (schemeField.type == org.apache.thrift.protocol.TType.STRING) {
              struct.nomeCompleto = iprot.readString();
              struct.setNomeCompletoIsSet(true);
            } else { 
              org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
            }
            break;
          case 19: // NOME_SOCIAL
            if (schemeField.type == org.apache.thrift.protocol.TType.STRING) {
              struct.nomeSocial = iprot.readString();
              struct.setNomeSocialIsSet(true);
            } else { 
              org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
            }
            break;
          case 20: // NUMERO_PRONTUARIO
            if (schemeField.type == org.apache.thrift.protocol.TType.STRING) {
              struct.numeroProntuario = iprot.readString();
              struct.setNumeroProntuarioIsSet(true);
            } else { 
              org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
            }
            break;
          case 22: // NUMERO_PRONTUARIO_CNES
            if (schemeField.type == org.apache.thrift.protocol.TType.STRING) {
              struct.numeroProntuarioCnes = iprot.readString();
              struct.setNumeroProntuarioCnesIsSet(true);
            } else { 
              org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
            }
            break;
          case 23: // RACA_COR_ID
            if (schemeField.type == org.apache.thrift.protocol.TType.I64) {
              struct.racaCorId = iprot.readI64();
              struct.setRacaCorIdIsSet(true);
            } else { 
              org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
            }
            break;
          case 24: // SEXO
            if (schemeField.type == org.apache.thrift.protocol.TType.I32) {
              struct.sexo = SexoThrift.findByValue(iprot.readI32());
              struct.setSexoIsSet(true);
            } else { 
              org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
            }
            break;
          case 25: // TELEFONE_CELULAR
            if (schemeField.type == org.apache.thrift.protocol.TType.STRING) {
              struct.telefoneCelular = iprot.readString();
              struct.setTelefoneCelularIsSet(true);
            } else { 
              org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
            }
            break;
          case 26: // TELEFONE_CONTATO
            if (schemeField.type == org.apache.thrift.protocol.TType.STRING) {
              struct.telefoneContato = iprot.readString();
              struct.setTelefoneContatoIsSet(true);
            } else { 
              org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
            }
            break;
          case 27: // TELEFONE_RESIDENCIAL
            if (schemeField.type == org.apache.thrift.protocol.TType.STRING) {
              struct.telefoneResidencial = iprot.readString();
              struct.setTelefoneResidencialIsSet(true);
            } else { 
              org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
            }
            break;
          case 28: // TIPO_SANGUINEO
            if (schemeField.type == org.apache.thrift.protocol.TType.I32) {
              struct.tipoSanguineo = TipoSanguineoThrift.findByValue(iprot.readI32());
              struct.setTipoSanguineoIsSet(true);
            } else { 
              org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
            }
            break;
          case 29: // CBO_NUMERO
            if (schemeField.type == org.apache.thrift.protocol.TType.STRING) {
              struct.cboNumero = iprot.readString();
              struct.setCboNumeroIsSet(true);
            } else { 
              org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
            }
            break;
          default:
            org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
        }
        iprot.readFieldEnd();
      }
      iprot.readStructEnd();
      struct.validate();
    }

    public void write(org.apache.thrift.protocol.TProtocol oprot, CidadaoTransportThrift struct) throws org.apache.thrift.TException {
      struct.validate();

      oprot.writeStructBegin(STRUCT_DESC);
      oprot.writeFieldBegin(NAO_POSSUI_CNS_FIELD_DESC);
      oprot.writeBool(struct.naoPossuiCns);
      oprot.writeFieldEnd();
      if (struct.cns != null) {
        oprot.writeFieldBegin(CNS_FIELD_DESC);
        oprot.writeString(struct.cns);
        oprot.writeFieldEnd();
      }
      if (struct.cpf != null) {
        if (struct.isSetCpf()) {
          oprot.writeFieldBegin(CPF_FIELD_DESC);
          oprot.writeString(struct.cpf);
          oprot.writeFieldEnd();
        }
      }
      oprot.writeFieldBegin(DATA_NASCIMENTO_FIELD_DESC);
      oprot.writeI64(struct.dataNascimento);
      oprot.writeFieldEnd();
      oprot.writeFieldBegin(DESCONHECE_NOME_MAE_FIELD_DESC);
      oprot.writeBool(struct.desconheceNomeMae);
      oprot.writeFieldEnd();
      if (struct.nomeMae != null) {
        if (struct.isSetNomeMae()) {
          oprot.writeFieldBegin(NOME_MAE_FIELD_DESC);
          oprot.writeString(struct.nomeMae);
          oprot.writeFieldEnd();
        }
      }
      if (struct.email != null) {
        if (struct.isSetEmail()) {
          oprot.writeFieldBegin(EMAIL_FIELD_DESC);
          oprot.writeString(struct.email);
          oprot.writeFieldEnd();
        }
      }
      if (struct.endereco != null) {
        if (struct.isSetEndereco()) {
          oprot.writeFieldBegin(ENDERECO_FIELD_DESC);
          struct.endereco.write(oprot);
          oprot.writeFieldEnd();
        }
      }
      if (struct.isSetEscolaridadeId()) {
        oprot.writeFieldBegin(ESCOLARIDADE_ID_FIELD_DESC);
        oprot.writeI64(struct.escolaridadeId);
        oprot.writeFieldEnd();
      }
      if (struct.isSetEstadoCivilId()) {
        oprot.writeFieldBegin(ESTADO_CIVIL_ID_FIELD_DESC);
        oprot.writeI64(struct.estadoCivilId);
        oprot.writeFieldEnd();
      }
      oprot.writeFieldBegin(ESTRANGEIRO_FIELD_DESC);
      oprot.writeBool(struct.estrangeiro);
      oprot.writeFieldEnd();
      if (struct.isSetEtniaId()) {
        oprot.writeFieldBegin(ETNIA_ID_FIELD_DESC);
        oprot.writeI64(struct.etniaId);
        oprot.writeFieldEnd();
      }
      if (struct.isSetFaleceu()) {
        oprot.writeFieldBegin(FALECEU_FIELD_DESC);
        oprot.writeBool(struct.faleceu);
        oprot.writeFieldEnd();
      }
      if (struct.municipioNascimentoCep != null) {
        oprot.writeFieldBegin(MUNICIPIO_NASCIMENTO_CEP_FIELD_DESC);
        oprot.writeString(struct.municipioNascimentoCep);
        oprot.writeFieldEnd();
      }
      if (struct.municipioNascimentoDne != null) {
        oprot.writeFieldBegin(MUNICIPIO_NASCIMENTO_DNE_FIELD_DESC);
        oprot.writeString(struct.municipioNascimentoDne);
        oprot.writeFieldEnd();
      }
      if (struct.municipioNascimentoIbge != null) {
        if (struct.isSetMunicipioNascimentoIbge()) {
          oprot.writeFieldBegin(MUNICIPIO_NASCIMENTO_IBGE_FIELD_DESC);
          oprot.writeString(struct.municipioNascimentoIbge);
          oprot.writeFieldEnd();
        }
      }
      if (struct.nisPisPasep != null) {
        if (struct.isSetNisPisPasep()) {
          oprot.writeFieldBegin(NIS_PIS_PASEP_FIELD_DESC);
          oprot.writeString(struct.nisPisPasep);
          oprot.writeFieldEnd();
        }
      }
      if (struct.nomeCompleto != null) {
        oprot.writeFieldBegin(NOME_COMPLETO_FIELD_DESC);
        oprot.writeString(struct.nomeCompleto);
        oprot.writeFieldEnd();
      }
      if (struct.nomeSocial != null) {
        if (struct.isSetNomeSocial()) {
          oprot.writeFieldBegin(NOME_SOCIAL_FIELD_DESC);
          oprot.writeString(struct.nomeSocial);
          oprot.writeFieldEnd();
        }
      }
      if (struct.numeroProntuario != null) {
        if (struct.isSetNumeroProntuario()) {
          oprot.writeFieldBegin(NUMERO_PRONTUARIO_FIELD_DESC);
          oprot.writeString(struct.numeroProntuario);
          oprot.writeFieldEnd();
        }
      }
      if (struct.numeroProntuarioCnes != null) {
        if (struct.isSetNumeroProntuarioCnes()) {
          oprot.writeFieldBegin(NUMERO_PRONTUARIO_CNES_FIELD_DESC);
          oprot.writeString(struct.numeroProntuarioCnes);
          oprot.writeFieldEnd();
        }
      }
      oprot.writeFieldBegin(RACA_COR_ID_FIELD_DESC);
      oprot.writeI64(struct.racaCorId);
      oprot.writeFieldEnd();
      if (struct.sexo != null) {
        oprot.writeFieldBegin(SEXO_FIELD_DESC);
        oprot.writeI32(struct.sexo.getValue());
        oprot.writeFieldEnd();
      }
      if (struct.telefoneCelular != null) {
        if (struct.isSetTelefoneCelular()) {
          oprot.writeFieldBegin(TELEFONE_CELULAR_FIELD_DESC);
          oprot.writeString(struct.telefoneCelular);
          oprot.writeFieldEnd();
        }
      }
      if (struct.telefoneContato != null) {
        if (struct.isSetTelefoneContato()) {
          oprot.writeFieldBegin(TELEFONE_CONTATO_FIELD_DESC);
          oprot.writeString(struct.telefoneContato);
          oprot.writeFieldEnd();
        }
      }
      if (struct.telefoneResidencial != null) {
        if (struct.isSetTelefoneResidencial()) {
          oprot.writeFieldBegin(TELEFONE_RESIDENCIAL_FIELD_DESC);
          oprot.writeString(struct.telefoneResidencial);
          oprot.writeFieldEnd();
        }
      }
      if (struct.tipoSanguineo != null) {
        if (struct.isSetTipoSanguineo()) {
          oprot.writeFieldBegin(TIPO_SANGUINEO_FIELD_DESC);
          oprot.writeI32(struct.tipoSanguineo.getValue());
          oprot.writeFieldEnd();
        }
      }
      if (struct.cboNumero != null) {
        if (struct.isSetCboNumero()) {
          oprot.writeFieldBegin(CBO_NUMERO_FIELD_DESC);
          oprot.writeString(struct.cboNumero);
          oprot.writeFieldEnd();
        }
      }
      oprot.writeFieldStop();
      oprot.writeStructEnd();
    }

  }

  private static class CidadaoTransportThriftTupleSchemeFactory implements SchemeFactory {
    public CidadaoTransportThriftTupleScheme getScheme() {
      return new CidadaoTransportThriftTupleScheme();
    }
  }

  private static class CidadaoTransportThriftTupleScheme extends TupleScheme<CidadaoTransportThrift> {

    @Override
    public void write(org.apache.thrift.protocol.TProtocol prot, CidadaoTransportThrift struct) throws org.apache.thrift.TException {
      TTupleProtocol oprot = (TTupleProtocol) prot;
      oprot.writeBool(struct.naoPossuiCns);
      oprot.writeString(struct.cns);
      oprot.writeI64(struct.dataNascimento);
      oprot.writeBool(struct.desconheceNomeMae);
      oprot.writeBool(struct.estrangeiro);
      oprot.writeString(struct.municipioNascimentoCep);
      oprot.writeString(struct.municipioNascimentoDne);
      oprot.writeString(struct.nomeCompleto);
      oprot.writeI64(struct.racaCorId);
      oprot.writeI32(struct.sexo.getValue());
      BitSet optionals = new BitSet();
      if (struct.isSetCpf()) {
        optionals.set(0);
      }
      if (struct.isSetNomeMae()) {
        optionals.set(1);
      }
      if (struct.isSetEmail()) {
        optionals.set(2);
      }
      if (struct.isSetEndereco()) {
        optionals.set(3);
      }
      if (struct.isSetEscolaridadeId()) {
        optionals.set(4);
      }
      if (struct.isSetEstadoCivilId()) {
        optionals.set(5);
      }
      if (struct.isSetEtniaId()) {
        optionals.set(6);
      }
      if (struct.isSetFaleceu()) {
        optionals.set(7);
      }
      if (struct.isSetMunicipioNascimentoIbge()) {
        optionals.set(8);
      }
      if (struct.isSetNisPisPasep()) {
        optionals.set(9);
      }
      if (struct.isSetNomeSocial()) {
        optionals.set(10);
      }
      if (struct.isSetNumeroProntuario()) {
        optionals.set(11);
      }
      if (struct.isSetNumeroProntuarioCnes()) {
        optionals.set(12);
      }
      if (struct.isSetTelefoneCelular()) {
        optionals.set(13);
      }
      if (struct.isSetTelefoneContato()) {
        optionals.set(14);
      }
      if (struct.isSetTelefoneResidencial()) {
        optionals.set(15);
      }
      if (struct.isSetTipoSanguineo()) {
        optionals.set(16);
      }
      if (struct.isSetCboNumero()) {
        optionals.set(17);
      }
      oprot.writeBitSet(optionals, 18);
      if (struct.isSetCpf()) {
        oprot.writeString(struct.cpf);
      }
      if (struct.isSetNomeMae()) {
        oprot.writeString(struct.nomeMae);
      }
      if (struct.isSetEmail()) {
        oprot.writeString(struct.email);
      }
      if (struct.isSetEndereco()) {
        struct.endereco.write(oprot);
      }
      if (struct.isSetEscolaridadeId()) {
        oprot.writeI64(struct.escolaridadeId);
      }
      if (struct.isSetEstadoCivilId()) {
        oprot.writeI64(struct.estadoCivilId);
      }
      if (struct.isSetEtniaId()) {
        oprot.writeI64(struct.etniaId);
      }
      if (struct.isSetFaleceu()) {
        oprot.writeBool(struct.faleceu);
      }
      if (struct.isSetMunicipioNascimentoIbge()) {
        oprot.writeString(struct.municipioNascimentoIbge);
      }
      if (struct.isSetNisPisPasep()) {
        oprot.writeString(struct.nisPisPasep);
      }
      if (struct.isSetNomeSocial()) {
        oprot.writeString(struct.nomeSocial);
      }
      if (struct.isSetNumeroProntuario()) {
        oprot.writeString(struct.numeroProntuario);
      }
      if (struct.isSetNumeroProntuarioCnes()) {
        oprot.writeString(struct.numeroProntuarioCnes);
      }
      if (struct.isSetTelefoneCelular()) {
        oprot.writeString(struct.telefoneCelular);
      }
      if (struct.isSetTelefoneContato()) {
        oprot.writeString(struct.telefoneContato);
      }
      if (struct.isSetTelefoneResidencial()) {
        oprot.writeString(struct.telefoneResidencial);
      }
      if (struct.isSetTipoSanguineo()) {
        oprot.writeI32(struct.tipoSanguineo.getValue());
      }
      if (struct.isSetCboNumero()) {
        oprot.writeString(struct.cboNumero);
      }
    }

    @Override
    public void read(org.apache.thrift.protocol.TProtocol prot, CidadaoTransportThrift struct) throws org.apache.thrift.TException {
      TTupleProtocol iprot = (TTupleProtocol) prot;
      struct.naoPossuiCns = iprot.readBool();
      struct.setNaoPossuiCnsIsSet(true);
      struct.cns = iprot.readString();
      struct.setCnsIsSet(true);
      struct.dataNascimento = iprot.readI64();
      struct.setDataNascimentoIsSet(true);
      struct.desconheceNomeMae = iprot.readBool();
      struct.setDesconheceNomeMaeIsSet(true);
      struct.estrangeiro = iprot.readBool();
      struct.setEstrangeiroIsSet(true);
      struct.municipioNascimentoCep = iprot.readString();
      struct.setMunicipioNascimentoCepIsSet(true);
      struct.municipioNascimentoDne = iprot.readString();
      struct.setMunicipioNascimentoDneIsSet(true);
      struct.nomeCompleto = iprot.readString();
      struct.setNomeCompletoIsSet(true);
      struct.racaCorId = iprot.readI64();
      struct.setRacaCorIdIsSet(true);
      struct.sexo = SexoThrift.findByValue(iprot.readI32());
      struct.setSexoIsSet(true);
      BitSet incoming = iprot.readBitSet(18);
      if (incoming.get(0)) {
        struct.cpf = iprot.readString();
        struct.setCpfIsSet(true);
      }
      if (incoming.get(1)) {
        struct.nomeMae = iprot.readString();
        struct.setNomeMaeIsSet(true);
      }
      if (incoming.get(2)) {
        struct.email = iprot.readString();
        struct.setEmailIsSet(true);
      }
      if (incoming.get(3)) {
        struct.endereco = new EnderecoTransportThrift();
        struct.endereco.read(iprot);
        struct.setEnderecoIsSet(true);
      }
      if (incoming.get(4)) {
        struct.escolaridadeId = iprot.readI64();
        struct.setEscolaridadeIdIsSet(true);
      }
      if (incoming.get(5)) {
        struct.estadoCivilId = iprot.readI64();
        struct.setEstadoCivilIdIsSet(true);
      }
      if (incoming.get(6)) {
        struct.etniaId = iprot.readI64();
        struct.setEtniaIdIsSet(true);
      }
      if (incoming.get(7)) {
        struct.faleceu = iprot.readBool();
        struct.setFaleceuIsSet(true);
      }
      if (incoming.get(8)) {
        struct.municipioNascimentoIbge = iprot.readString();
        struct.setMunicipioNascimentoIbgeIsSet(true);
      }
      if (incoming.get(9)) {
        struct.nisPisPasep = iprot.readString();
        struct.setNisPisPasepIsSet(true);
      }
      if (incoming.get(10)) {
        struct.nomeSocial = iprot.readString();
        struct.setNomeSocialIsSet(true);
      }
      if (incoming.get(11)) {
        struct.numeroProntuario = iprot.readString();
        struct.setNumeroProntuarioIsSet(true);
      }
      if (incoming.get(12)) {
        struct.numeroProntuarioCnes = iprot.readString();
        struct.setNumeroProntuarioCnesIsSet(true);
      }
      if (incoming.get(13)) {
        struct.telefoneCelular = iprot.readString();
        struct.setTelefoneCelularIsSet(true);
      }
      if (incoming.get(14)) {
        struct.telefoneContato = iprot.readString();
        struct.setTelefoneContatoIsSet(true);
      }
      if (incoming.get(15)) {
        struct.telefoneResidencial = iprot.readString();
        struct.setTelefoneResidencialIsSet(true);
      }
      if (incoming.get(16)) {
        struct.tipoSanguineo = TipoSanguineoThrift.findByValue(iprot.readI32());
        struct.setTipoSanguineoIsSet(true);
      }
      if (incoming.get(17)) {
        struct.cboNumero = iprot.readString();
        struct.setCboNumeroIsSet(true);
      }
    }
  }

}

